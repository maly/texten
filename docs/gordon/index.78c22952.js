function $parcel$export(e, n, v, s) {
  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});
}
var $parcel$global =
typeof globalThis !== 'undefined'
  ? globalThis
  : typeof self !== 'undefined'
  ? self
  : typeof window !== 'undefined'
  ? window
  : typeof global !== 'undefined'
  ? global
  : {};
function $parcel$defineInteropFlag(a) {
  Object.defineProperty(a, '__esModule', {value: true, configurable: true});
}
var $parcel$modules = {};
var $parcel$inits = {};

var parcelRequire = $parcel$global["parcelRequire903a"];
if (parcelRequire == null) {
  parcelRequire = function(id) {
    if (id in $parcel$modules) {
      return $parcel$modules[id].exports;
    }
    if (id in $parcel$inits) {
      var init = $parcel$inits[id];
      delete $parcel$inits[id];
      var module = {id: id, exports: {}};
      $parcel$modules[id] = module;
      init.call(module.exports, module, module.exports);
      return module.exports;
    }
    var err = new Error("Cannot find module '" + id + "'");
    err.code = 'MODULE_NOT_FOUND';
    throw err;
  };

  parcelRequire.register = function register(id, init) {
    $parcel$inits[id] = init;
  };

  $parcel$global["parcelRequire903a"] = parcelRequire;
}
parcelRequire.register("gTAze", function(module, exports) {
// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var $c4ce25dee9362301$var$global = module.exports = typeof window != "undefined" && window.Math == Math ? window : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();
if (typeof __g == "number") __g = $c4ce25dee9362301$var$global; // eslint-disable-line no-undef

});

parcelRequire.register("dS4Ut", function(module, exports) {
var $a194207cef913140$var$hasOwnProperty = {}.hasOwnProperty;
module.exports = function(it, key) {
    return $a194207cef913140$var$hasOwnProperty.call(it, key);
};

});

parcelRequire.register("3y86S", function(module, exports) {

// Thank's IE8 for his funny defineProperty
module.exports = !(parcelRequire("hcpLn"))(function() {
    return Object.defineProperty({}, "a", {
        get: function() {
            return 7;
        }
    }).a != 7;
});

});
parcelRequire.register("hcpLn", function(module, exports) {
module.exports = function(exec) {
    try {
        return !!exec();
    } catch (e) {
        return true;
    }
};

});


parcelRequire.register("3B1Ky", function(module, exports) {

var $gTAze = parcelRequire("gTAze");

var $6LdXb = parcelRequire("6LdXb");

var $expki = parcelRequire("expki");

var $bRGed = parcelRequire("bRGed");

var $7vO7i = parcelRequire("7vO7i");
var $29e62f4813b6b19c$var$PROTOTYPE = "prototype";
var $29e62f4813b6b19c$var$$export = function(type, name, source) {
    var IS_FORCED = type & $29e62f4813b6b19c$var$$export.F;
    var IS_GLOBAL = type & $29e62f4813b6b19c$var$$export.G;
    var IS_STATIC = type & $29e62f4813b6b19c$var$$export.S;
    var IS_PROTO = type & $29e62f4813b6b19c$var$$export.P;
    var IS_BIND = type & $29e62f4813b6b19c$var$$export.B;
    var target = IS_GLOBAL ? $gTAze : IS_STATIC ? $gTAze[name] || ($gTAze[name] = {}) : ($gTAze[name] || {})[$29e62f4813b6b19c$var$PROTOTYPE];
    var exports = IS_GLOBAL ? $6LdXb : $6LdXb[name] || ($6LdXb[name] = {});
    var expProto = exports[$29e62f4813b6b19c$var$PROTOTYPE] || (exports[$29e62f4813b6b19c$var$PROTOTYPE] = {});
    var key, own, out, exp;
    if (IS_GLOBAL) source = name;
    for(key in source){
        // contains in native
        own = !IS_FORCED && target && target[key] !== undefined;
        // export native or passed
        out = (own ? target : source)[key];
        // bind timers to global for call from export context
        exp = IS_BIND && own ? $7vO7i(out, $gTAze) : IS_PROTO && typeof out == "function" ? $7vO7i(Function.call, out) : out;
        // extend global
        if (target) $bRGed(target, key, out, type & $29e62f4813b6b19c$var$$export.U);
        // export
        if (exports[key] != out) $expki(exports, key, exp);
        if (IS_PROTO && expProto[key] != out) expProto[key] = out;
    }
};
$gTAze.core = $6LdXb;
// type bitmap
$29e62f4813b6b19c$var$$export.F = 1; // forced
$29e62f4813b6b19c$var$$export.G = 2; // global
$29e62f4813b6b19c$var$$export.S = 4; // static
$29e62f4813b6b19c$var$$export.P = 8; // proto
$29e62f4813b6b19c$var$$export.B = 16; // bind
$29e62f4813b6b19c$var$$export.W = 32; // wrap
$29e62f4813b6b19c$var$$export.U = 64; // safe
$29e62f4813b6b19c$var$$export.R = 128; // real proto method for `library`
module.exports = $29e62f4813b6b19c$var$$export;

});
parcelRequire.register("6LdXb", function(module, exports) {
var $4ec1f4bc49ed4b5b$var$core = module.exports = {
    version: "2.6.9"
};
if (typeof __e == "number") __e = $4ec1f4bc49ed4b5b$var$core; // eslint-disable-line no-undef

});

parcelRequire.register("expki", function(module, exports) {

var $dLczm = parcelRequire("dLczm");

var $87uCM = parcelRequire("87uCM");

module.exports = (parcelRequire("3y86S")) ? function(object, key, value) {
    return $dLczm.f(object, key, $87uCM(1, value));
} : function(object, key, value) {
    object[key] = value;
    return object;
};

});
parcelRequire.register("dLczm", function(module, exports) {

$parcel$export(module.exports, "f", () => $a0496a29e0e913d2$export$2d1720544b23b823, (v) => $a0496a29e0e913d2$export$2d1720544b23b823 = v);
var $a0496a29e0e913d2$export$2d1720544b23b823;

var $euAZz = parcelRequire("euAZz");

var $gy4Qv = parcelRequire("gy4Qv");

var $dapnX = parcelRequire("dapnX");
var $a0496a29e0e913d2$var$dP = Object.defineProperty;

$a0496a29e0e913d2$export$2d1720544b23b823 = (parcelRequire("3y86S")) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
    $euAZz(O);
    P = $dapnX(P, true);
    $euAZz(Attributes);
    if ($gy4Qv) try {
        return $a0496a29e0e913d2$var$dP(O, P, Attributes);
    } catch (e) {}
    if ("get" in Attributes || "set" in Attributes) throw TypeError("Accessors not supported!");
    if ("value" in Attributes) O[P] = Attributes.value;
    return O;
};

});
parcelRequire.register("euAZz", function(module, exports) {

var $ly2vB = parcelRequire("ly2vB");
module.exports = function(it) {
    if (!$ly2vB(it)) throw TypeError(it + " is not an object!");
    return it;
};

});
parcelRequire.register("ly2vB", function(module, exports) {
module.exports = function(it) {
    return typeof it === "object" ? it !== null : typeof it === "function";
};

});


parcelRequire.register("gy4Qv", function(module, exports) {



module.exports = !(parcelRequire("3y86S")) && !(parcelRequire("hcpLn"))(function() {
    return Object.defineProperty((parcelRequire("f0jHm"))("div"), "a", {
        get: function() {
            return 7;
        }
    }).a != 7;
});

});
parcelRequire.register("f0jHm", function(module, exports) {

var $ly2vB = parcelRequire("ly2vB");

var $gTAze = parcelRequire("gTAze");
var $aec622ceacbb1958$require$document = $gTAze.document;
// typeof document.createElement is 'object' in old IE
var $aec622ceacbb1958$var$is = $ly2vB($aec622ceacbb1958$require$document) && $ly2vB($aec622ceacbb1958$require$document.createElement);
module.exports = function(it) {
    return $aec622ceacbb1958$var$is ? $aec622ceacbb1958$require$document.createElement(it) : {};
};

});


parcelRequire.register("dapnX", function(module, exports) {

var $ly2vB = parcelRequire("ly2vB");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function(it, S) {
    if (!$ly2vB(it)) return it;
    var fn, val;
    if (S && typeof (fn = it.toString) == "function" && !$ly2vB(val = fn.call(it))) return val;
    if (typeof (fn = it.valueOf) == "function" && !$ly2vB(val = fn.call(it))) return val;
    if (!S && typeof (fn = it.toString) == "function" && !$ly2vB(val = fn.call(it))) return val;
    throw TypeError("Can't convert object to primitive value");
};

});


parcelRequire.register("87uCM", function(module, exports) {
module.exports = function(bitmap, value) {
    return {
        enumerable: !(bitmap & 1),
        configurable: !(bitmap & 2),
        writable: !(bitmap & 4),
        value: value
    };
};

});


parcelRequire.register("bRGed", function(module, exports) {

var $gTAze = parcelRequire("gTAze");

var $expki = parcelRequire("expki");

var $dS4Ut = parcelRequire("dS4Ut");

var $023aaaf2013b5b08$var$SRC = (parcelRequire("dCUYV"))("src");

var $c0MED = parcelRequire("c0MED");
var $023aaaf2013b5b08$var$TO_STRING = "toString";
var $023aaaf2013b5b08$var$TPL = ("" + $c0MED).split($023aaaf2013b5b08$var$TO_STRING);

(parcelRequire("6LdXb")).inspectSource = function(it) {
    return $c0MED.call(it);
};
(module.exports = function(O, key, val, safe) {
    var isFunction = typeof val == "function";
    if (isFunction) $dS4Ut(val, "name") || $expki(val, "name", key);
    if (O[key] === val) return;
    if (isFunction) $dS4Ut(val, $023aaaf2013b5b08$var$SRC) || $expki(val, $023aaaf2013b5b08$var$SRC, O[key] ? "" + O[key] : $023aaaf2013b5b08$var$TPL.join(String(key)));
    if (O === $gTAze) O[key] = val;
    else if (!safe) {
        delete O[key];
        $expki(O, key, val);
    } else if (O[key]) O[key] = val;
    else $expki(O, key, val);
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, $023aaaf2013b5b08$var$TO_STRING, function toString() {
    return typeof this == "function" && this[$023aaaf2013b5b08$var$SRC] || $c0MED.call(this);
});

});
parcelRequire.register("dCUYV", function(module, exports) {
var $9ebb06577edb7ed4$var$id = 0;
var $9ebb06577edb7ed4$var$px = Math.random();
module.exports = function(key) {
    return "Symbol(".concat(key === undefined ? "" : key, ")_", (++$9ebb06577edb7ed4$var$id + $9ebb06577edb7ed4$var$px).toString(36));
};

});

parcelRequire.register("c0MED", function(module, exports) {

module.exports = (parcelRequire("4tRaz"))("native-function-to-string", Function.toString);

});
parcelRequire.register("4tRaz", function(module, exports) {

var $6LdXb = parcelRequire("6LdXb");

var $gTAze = parcelRequire("gTAze");
var $34331d3360428e8f$var$SHARED = "__core-js_shared__";
var $34331d3360428e8f$var$store = $gTAze[$34331d3360428e8f$var$SHARED] || ($gTAze[$34331d3360428e8f$var$SHARED] = {});

(module.exports = function(key, value) {
    return $34331d3360428e8f$var$store[key] || ($34331d3360428e8f$var$store[key] = value !== undefined ? value : {});
})("versions", []).push({
    version: $6LdXb.version,
    mode: (parcelRequire("jEzjy")) ? "pure" : "global",
    copyright: "\xa9 2019 Denis Pushkarev (zloirock.ru)"
});

});
parcelRequire.register("jEzjy", function(module, exports) {
module.exports = false;

});




parcelRequire.register("7vO7i", function(module, exports) {

var $1C6Y9 = parcelRequire("1C6Y9");
module.exports = function(fn, that, length) {
    $1C6Y9(fn);
    if (that === undefined) return fn;
    switch(length){
        case 1:
            return function(a) {
                return fn.call(that, a);
            };
        case 2:
            return function(a, b) {
                return fn.call(that, a, b);
            };
        case 3:
            return function(a, b, c) {
                return fn.call(that, a, b, c);
            };
    }
    return function() {
        return fn.apply(that, arguments);
    };
};

});
parcelRequire.register("1C6Y9", function(module, exports) {
module.exports = function(it) {
    if (typeof it != "function") throw TypeError(it + " is not a function!");
    return it;
};

});



parcelRequire.register("hMuUi", function(module, exports) {

var $dLczm = parcelRequire("dLczm");
var $cf1ee4db2ad4ea1e$require$def = $dLczm.f;

var $dS4Ut = parcelRequire("dS4Ut");

var $cf1ee4db2ad4ea1e$var$TAG = (parcelRequire("5i4Lz"))("toStringTag");
module.exports = function(it, tag, stat) {
    if (it && !$dS4Ut(it = stat ? it : it.prototype, $cf1ee4db2ad4ea1e$var$TAG)) $cf1ee4db2ad4ea1e$require$def(it, $cf1ee4db2ad4ea1e$var$TAG, {
        configurable: true,
        value: tag
    });
};

});
parcelRequire.register("5i4Lz", function(module, exports) {

var $3da254adc38ebe44$var$store = (parcelRequire("4tRaz"))("wks");

var $dCUYV = parcelRequire("dCUYV");

var $gTAze = parcelRequire("gTAze");
var $3da254adc38ebe44$require$Symbol = $gTAze.Symbol;
var $3da254adc38ebe44$var$USE_SYMBOL = typeof $3da254adc38ebe44$require$Symbol == "function";
var $3da254adc38ebe44$var$$exports = module.exports = function(name) {
    return $3da254adc38ebe44$var$store[name] || ($3da254adc38ebe44$var$store[name] = $3da254adc38ebe44$var$USE_SYMBOL && $3da254adc38ebe44$require$Symbol[name] || ($3da254adc38ebe44$var$USE_SYMBOL ? $3da254adc38ebe44$require$Symbol : $dCUYV)("Symbol." + name));
};
$3da254adc38ebe44$var$$exports.store = $3da254adc38ebe44$var$store;

});


parcelRequire.register("cX6eF", function(module, exports) {

var $gTAze = parcelRequire("gTAze");

var $6LdXb = parcelRequire("6LdXb");

var $jEzjy = parcelRequire("jEzjy");

var $cdkyH = parcelRequire("cdkyH");

var $dLczm = parcelRequire("dLczm");
var $96dfd4fb594fd18d$require$defineProperty = $dLczm.f;
module.exports = function(name) {
    var $Symbol = $6LdXb.Symbol || ($6LdXb.Symbol = $jEzjy ? {} : $gTAze.Symbol || {});
    if (name.charAt(0) != "_" && !(name in $Symbol)) $96dfd4fb594fd18d$require$defineProperty($Symbol, name, {
        value: $cdkyH.f(name)
    });
};

});
parcelRequire.register("cdkyH", function(module, exports) {

$parcel$export(module.exports, "f", () => $8e46a57642387860$export$2d1720544b23b823, (v) => $8e46a57642387860$export$2d1720544b23b823 = v);
var $8e46a57642387860$export$2d1720544b23b823;

$8e46a57642387860$export$2d1720544b23b823 = (parcelRequire("5i4Lz"));

});


parcelRequire.register("acjvS", function(module, exports) {

var $bOq6I = parcelRequire("bOq6I");
// eslint-disable-next-line no-prototype-builtins
module.exports = Object("z").propertyIsEnumerable(0) ? Object : function(it) {
    return $bOq6I(it) == "String" ? it.split("") : Object(it);
};

});
parcelRequire.register("bOq6I", function(module, exports) {
var $89989d97a0ece38e$var$toString = {}.toString;
module.exports = function(it) {
    return $89989d97a0ece38e$var$toString.call(it).slice(8, -1);
};

});


parcelRequire.register("4VU3O", function(module, exports) {

var $fHwma = parcelRequire("fHwma");

var $DZqmm = parcelRequire("DZqmm");

var $aselx = parcelRequire("aselx");
module.exports = function(IS_INCLUDES) {
    return function($this, el, fromIndex) {
        var O = $fHwma($this);
        var length = $DZqmm(O.length);
        var index = $aselx(fromIndex, length);
        var value;
        // Array#includes uses SameValueZero equality algorithm
        // eslint-disable-next-line no-self-compare
        if (IS_INCLUDES && el != el) while(length > index){
            value = O[index++];
            // eslint-disable-next-line no-self-compare
            if (value != value) return true;
        // Array#indexOf ignores holes, Array#includes - not
        }
        else for(; length > index; index++)if (IS_INCLUDES || index in O) {
            if (O[index] === el) return IS_INCLUDES || index || 0;
        }
        return !IS_INCLUDES && -1;
    };
};

});
parcelRequire.register("fHwma", function(module, exports) {

var $acjvS = parcelRequire("acjvS");

var $clUkM = parcelRequire("clUkM");
module.exports = function(it) {
    return $acjvS($clUkM(it));
};

});
parcelRequire.register("clUkM", function(module, exports) {
// 7.2.1 RequireObjectCoercible(argument)
module.exports = function(it) {
    if (it == undefined) throw TypeError("Can't call method on  " + it);
    return it;
};

});


parcelRequire.register("DZqmm", function(module, exports) {

var $fEeDR = parcelRequire("fEeDR");
var $07834a30c8370e95$var$min = Math.min;
module.exports = function(it) {
    return it > 0 ? $07834a30c8370e95$var$min($fEeDR(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};

});
parcelRequire.register("fEeDR", function(module, exports) {
// 7.1.4 ToInteger
var $b645f30bef4289d6$var$ceil = Math.ceil;
var $b645f30bef4289d6$var$floor = Math.floor;
module.exports = function(it) {
    return isNaN(it = +it) ? 0 : (it > 0 ? $b645f30bef4289d6$var$floor : $b645f30bef4289d6$var$ceil)(it);
};

});


parcelRequire.register("aselx", function(module, exports) {

var $fEeDR = parcelRequire("fEeDR");
var $79c7a5ca16bdb3d8$var$max = Math.max;
var $79c7a5ca16bdb3d8$var$min = Math.min;
module.exports = function(index, length) {
    index = $fEeDR(index);
    return index < 0 ? $79c7a5ca16bdb3d8$var$max(index + length, 0) : $79c7a5ca16bdb3d8$var$min(index, length);
};

});


parcelRequire.register("3GZtH", function(module, exports) {

var $2b04fb93d4941a3b$var$shared = (parcelRequire("4tRaz"))("keys");

var $dCUYV = parcelRequire("dCUYV");
module.exports = function(key) {
    return $2b04fb93d4941a3b$var$shared[key] || ($2b04fb93d4941a3b$var$shared[key] = $dCUYV(key));
};

});

parcelRequire.register("buqaI", function(module, exports) {
// IE 8- don't enum bug keys
module.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",");

});

parcelRequire.register("cXyZT", function(module, exports) {

$parcel$export(module.exports, "f", () => $96f624712d304848$export$2d1720544b23b823, (v) => $96f624712d304848$export$2d1720544b23b823 = v);
var $96f624712d304848$export$2d1720544b23b823;
$96f624712d304848$export$2d1720544b23b823 = ({}).propertyIsEnumerable;

});

parcelRequire.register("iLSpw", function(module, exports) {

var $bOq6I = parcelRequire("bOq6I");
module.exports = Array.isArray || function isArray(arg) {
    return $bOq6I(arg) == "Array";
};

});

parcelRequire.register("6dhUj", function(module, exports) {

var $clUkM = parcelRequire("clUkM");
module.exports = function(it) {
    return Object($clUkM(it));
};

});

parcelRequire.register("fKIsL", function(module, exports) {

var $euAZz = parcelRequire("euAZz");

var $ccsI4 = parcelRequire("ccsI4");

var $buqaI = parcelRequire("buqaI");

var $b77da44ddb565152$var$IE_PROTO = (parcelRequire("3GZtH"))("IE_PROTO");
var $b77da44ddb565152$var$Empty = function() {};
var $b77da44ddb565152$var$PROTOTYPE = "prototype";


// Create object with fake `null` prototype: use iframe Object with cleared prototype
var $b77da44ddb565152$var$createDict = function() {
    // Thrash, waste and sodomy: IE GC bug
    var iframe = (parcelRequire("f0jHm"))("iframe");
    var i = $buqaI.length;
    var lt = "<";
    var gt = ">";
    var iframeDocument;
    iframe.style.display = "none";
    (parcelRequire("76Lij")).appendChild(iframe);
    iframe.src = "javascript:"; // eslint-disable-line no-script-url
    // createDict = iframe.contentWindow.Object;
    // html.removeChild(iframe);
    iframeDocument = iframe.contentWindow.document;
    iframeDocument.open();
    iframeDocument.write(lt + "script" + gt + "document.F=Object" + lt + "/script" + gt);
    iframeDocument.close();
    $b77da44ddb565152$var$createDict = iframeDocument.F;
    while(i--)delete $b77da44ddb565152$var$createDict[$b77da44ddb565152$var$PROTOTYPE][$buqaI[i]];
    return $b77da44ddb565152$var$createDict();
};
module.exports = Object.create || function create(O, Properties) {
    var result;
    if (O !== null) {
        $b77da44ddb565152$var$Empty[$b77da44ddb565152$var$PROTOTYPE] = $euAZz(O);
        result = new $b77da44ddb565152$var$Empty();
        $b77da44ddb565152$var$Empty[$b77da44ddb565152$var$PROTOTYPE] = null;
        // add "__proto__" for Object.getPrototypeOf polyfill
        result[$b77da44ddb565152$var$IE_PROTO] = O;
    } else result = $b77da44ddb565152$var$createDict();
    return Properties === undefined ? result : $ccsI4(result, Properties);
};

});
parcelRequire.register("ccsI4", function(module, exports) {

var $dLczm = parcelRequire("dLczm");

var $euAZz = parcelRequire("euAZz");

var $isffO = parcelRequire("isffO");

module.exports = (parcelRequire("3y86S")) ? Object.defineProperties : function defineProperties(O, Properties) {
    $euAZz(O);
    var keys = $isffO(Properties);
    var length = keys.length;
    var i = 0;
    var P;
    while(length > i)$dLczm.f(O, P = keys[i++], Properties[P]);
    return O;
};

});
parcelRequire.register("isffO", function(module, exports) {

var $3iBvT = parcelRequire("3iBvT");

var $buqaI = parcelRequire("buqaI");
module.exports = Object.keys || function keys(O) {
    return $3iBvT(O, $buqaI);
};

});
parcelRequire.register("3iBvT", function(module, exports) {

var $dS4Ut = parcelRequire("dS4Ut");

var $fHwma = parcelRequire("fHwma");

var $267026edc82c8a1e$var$arrayIndexOf = (parcelRequire("4VU3O"))(false);

var $267026edc82c8a1e$var$IE_PROTO = (parcelRequire("3GZtH"))("IE_PROTO");
module.exports = function(object, names) {
    var O = $fHwma(object);
    var i = 0;
    var result = [];
    var key;
    for(key in O)if (key != $267026edc82c8a1e$var$IE_PROTO) $dS4Ut(O, key) && result.push(key);
    // Don't enum bug & hidden keys
    while(names.length > i)if ($dS4Ut(O, key = names[i++])) ~$267026edc82c8a1e$var$arrayIndexOf(result, key) || result.push(key);
    return result;
};

});



parcelRequire.register("76Lij", function(module, exports) {

var $gTAze = parcelRequire("gTAze");
var $52cdc7a068cc29e7$require$document = $gTAze.document;
module.exports = $52cdc7a068cc29e7$require$document && $52cdc7a068cc29e7$require$document.documentElement;

});


parcelRequire.register("1sHxg", function(module, exports) {

$parcel$export(module.exports, "f", () => $110a2d31f9bdcfa9$export$2d1720544b23b823, (v) => $110a2d31f9bdcfa9$export$2d1720544b23b823 = v);
var $110a2d31f9bdcfa9$export$2d1720544b23b823;

var $fHwma = parcelRequire("fHwma");

var $2WGYr = parcelRequire("2WGYr");
var $110a2d31f9bdcfa9$require$gOPN = $2WGYr.f;
var $110a2d31f9bdcfa9$var$toString = {}.toString;
var $110a2d31f9bdcfa9$var$windowNames = typeof window == "object" && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
var $110a2d31f9bdcfa9$var$getWindowNames = function(it) {
    try {
        return $110a2d31f9bdcfa9$require$gOPN(it);
    } catch (e) {
        return $110a2d31f9bdcfa9$var$windowNames.slice();
    }
};
$110a2d31f9bdcfa9$export$2d1720544b23b823 = function getOwnPropertyNames(it) {
    return $110a2d31f9bdcfa9$var$windowNames && $110a2d31f9bdcfa9$var$toString.call(it) == "[object Window]" ? $110a2d31f9bdcfa9$var$getWindowNames(it) : $110a2d31f9bdcfa9$require$gOPN($fHwma(it));
};

});
parcelRequire.register("2WGYr", function(module, exports) {

$parcel$export(module.exports, "f", () => $22525545febbca19$export$2d1720544b23b823, (v) => $22525545febbca19$export$2d1720544b23b823 = v);
var $22525545febbca19$export$2d1720544b23b823;

var $3iBvT = parcelRequire("3iBvT");

var $22525545febbca19$var$hiddenKeys = (parcelRequire("buqaI")).concat("length", "prototype");
$22525545febbca19$export$2d1720544b23b823 = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
    return $3iBvT(O, $22525545febbca19$var$hiddenKeys);
};

});


parcelRequire.register("b0Bat", function(module, exports) {

$parcel$export(module.exports, "f", () => $803c868e0c08e528$export$2d1720544b23b823, (v) => $803c868e0c08e528$export$2d1720544b23b823 = v);
var $803c868e0c08e528$export$2d1720544b23b823;

var $cXyZT = parcelRequire("cXyZT");

var $87uCM = parcelRequire("87uCM");

var $fHwma = parcelRequire("fHwma");

var $dapnX = parcelRequire("dapnX");

var $dS4Ut = parcelRequire("dS4Ut");

var $gy4Qv = parcelRequire("gy4Qv");
var $803c868e0c08e528$var$gOPD = Object.getOwnPropertyDescriptor;

$803c868e0c08e528$export$2d1720544b23b823 = (parcelRequire("3y86S")) ? $803c868e0c08e528$var$gOPD : function getOwnPropertyDescriptor(O, P) {
    O = $fHwma(O);
    P = $dapnX(P, true);
    if ($gy4Qv) try {
        return $803c868e0c08e528$var$gOPD(O, P);
    } catch (e) {}
    if ($dS4Ut(O, P)) return $87uCM(!$cXyZT.f.call(O, P), O[P]);
};

});

parcelRequire.register("eyXYC", function(module, exports) {

var $3B1Ky = parcelRequire("3B1Ky");

var $6LdXb = parcelRequire("6LdXb");

var $hcpLn = parcelRequire("hcpLn");
module.exports = function(KEY, exec) {
    var fn = ($6LdXb.Object || {})[KEY] || Object[KEY];
    var exp = {};
    exp[KEY] = exec(fn);
    $3B1Ky($3B1Ky.S + $3B1Ky.F * $hcpLn(function() {
        fn(1);
    }), "Object", exp);
};

});

parcelRequire.register("imZ0P", function(module, exports) {

var $dS4Ut = parcelRequire("dS4Ut");

var $6dhUj = parcelRequire("6dhUj");

var $d5f99bd930220d3e$var$IE_PROTO = (parcelRequire("3GZtH"))("IE_PROTO");
var $d5f99bd930220d3e$var$ObjectProto = Object.prototype;
module.exports = Object.getPrototypeOf || function(O) {
    O = $6dhUj(O);
    if ($dS4Ut(O, $d5f99bd930220d3e$var$IE_PROTO)) return O[$d5f99bd930220d3e$var$IE_PROTO];
    if (typeof O.constructor == "function" && O instanceof O.constructor) return O.constructor.prototype;
    return O instanceof Object ? $d5f99bd930220d3e$var$ObjectProto : null;
};

});

parcelRequire.register("iUG18", function(module, exports) {
"use strict";

var $3y86S = parcelRequire("3y86S");

var $isffO = parcelRequire("isffO");

var $bz7J4 = parcelRequire("bz7J4");

var $cXyZT = parcelRequire("cXyZT");

var $6dhUj = parcelRequire("6dhUj");

var $acjvS = parcelRequire("acjvS");
var $dc4e0cb5f2534a76$var$$assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$dc4e0cb5f2534a76$var$$assign || (parcelRequire("hcpLn"))(function() {
    var A = {};
    var B = {};
    // eslint-disable-next-line no-undef
    var S = Symbol();
    var K = "abcdefghijklmnopqrst";
    A[S] = 7;
    K.split("").forEach(function(k) {
        B[k] = k;
    });
    return $dc4e0cb5f2534a76$var$$assign({}, A)[S] != 7 || Object.keys($dc4e0cb5f2534a76$var$$assign({}, B)).join("") != K;
}) ? function assign(target, source) {
    var T = $6dhUj(target);
    var aLen = arguments.length;
    var index = 1;
    var getSymbols = $bz7J4.f;
    var isEnum = $cXyZT.f;
    while(aLen > index){
        var S = $acjvS(arguments[index++]);
        var keys = getSymbols ? $isffO(S).concat(getSymbols(S)) : $isffO(S);
        var length = keys.length;
        var j = 0;
        var key;
        while(length > j){
            key = keys[j++];
            if (!$3y86S || isEnum.call(S, key)) T[key] = S[key];
        }
    }
    return T;
} : $dc4e0cb5f2534a76$var$$assign;

});
parcelRequire.register("bz7J4", function(module, exports) {

$parcel$export(module.exports, "f", () => $86b8f4cd093d93d2$export$2d1720544b23b823, (v) => $86b8f4cd093d93d2$export$2d1720544b23b823 = v);
var $86b8f4cd093d93d2$export$2d1720544b23b823;
$86b8f4cd093d93d2$export$2d1720544b23b823 = Object.getOwnPropertySymbols;

});


parcelRequire.register("blUd4", function(module, exports) {
// 7.2.9 SameValue(x, y)
module.exports = Object.is || function is(x, y) {
    // eslint-disable-next-line no-self-compare
    return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
};

});

parcelRequire.register("ei7b7", function(module, exports) {

var $ly2vB = parcelRequire("ly2vB");

var $euAZz = parcelRequire("euAZz");
var $a678509432093ea2$var$check = function(O, proto) {
    $euAZz(O);
    if (!$ly2vB(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};


module.exports = {
    set: Object.setPrototypeOf || ("__proto__" in {} ? function(test, buggy, set) {
        try {
            set = (parcelRequire("7vO7i"))(Function.call, (parcelRequire("b0Bat")).f(Object.prototype, "__proto__").set, 2);
            set(test, []);
            buggy = !(test instanceof Array);
        } catch (e) {
            buggy = true;
        }
        return function setPrototypeOf(O, proto) {
            $a678509432093ea2$var$check(O, proto);
            if (buggy) O.__proto__ = proto;
            else set(O, proto);
            return O;
        };
    }({}, false) : undefined),
    check: $a678509432093ea2$var$check
};

});

parcelRequire.register("bbWc2", function(module, exports) {

var $bOq6I = parcelRequire("bOq6I");

var $825ddcbe80700730$var$TAG = (parcelRequire("5i4Lz"))("toStringTag");
// ES3 wrong here
var $825ddcbe80700730$var$ARG = $bOq6I(function() {
    return arguments;
}()) == "Arguments";
// fallback for IE11 Script Access Denied error
var $825ddcbe80700730$var$tryGet = function(it, key) {
    try {
        return it[key];
    } catch (e) {}
};
module.exports = function(it) {
    var O, T, B;
    return it === undefined ? "Undefined" : it === null ? "Null" : typeof (T = $825ddcbe80700730$var$tryGet(O = Object(it), $825ddcbe80700730$var$TAG)) == "string" ? T : $825ddcbe80700730$var$ARG ? $bOq6I(O) : (B = $bOq6I(O)) == "Object" && typeof O.callee == "function" ? "Arguments" : B;
};

});

parcelRequire.register("jAuUZ", function(module, exports) {
"use strict";

var $1C6Y9 = parcelRequire("1C6Y9");

var $ly2vB = parcelRequire("ly2vB");

var $1Ppxe = parcelRequire("1Ppxe");
var $e4295cd22754f31d$var$arraySlice = [].slice;
var $e4295cd22754f31d$var$factories = {};
var $e4295cd22754f31d$var$construct = function(F, len, args) {
    if (!(len in $e4295cd22754f31d$var$factories)) {
        for(var n = [], i = 0; i < len; i++)n[i] = "a[" + i + "]";
        // eslint-disable-next-line no-new-func
        $e4295cd22754f31d$var$factories[len] = Function("F,a", "return new F(" + n.join(",") + ")");
    }
    return $e4295cd22754f31d$var$factories[len](F, args);
};
module.exports = Function.bind || function bind(that /* , ...args */ ) {
    var fn = $1C6Y9(this);
    var partArgs = $e4295cd22754f31d$var$arraySlice.call(arguments, 1);
    var bound = function() {
        var args = partArgs.concat($e4295cd22754f31d$var$arraySlice.call(arguments));
        return this instanceof bound ? $e4295cd22754f31d$var$construct(fn, args.length, args) : $1Ppxe(fn, args, that);
    };
    if ($ly2vB(fn.prototype)) bound.prototype = fn.prototype;
    return bound;
};

});
parcelRequire.register("1Ppxe", function(module, exports) {
// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function(fn, args, that) {
    var un = that === undefined;
    switch(args.length){
        case 0:
            return un ? fn() : fn.call(that);
        case 1:
            return un ? fn(args[0]) : fn.call(that, args[0]);
        case 2:
            return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);
        case 3:
            return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);
        case 4:
            return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);
    }
    return fn.apply(that, args);
};

});


parcelRequire.register("jaCBu", function(module, exports) {

var $3B1Ky = parcelRequire("3B1Ky");

var $clUkM = parcelRequire("clUkM");

var $hcpLn = parcelRequire("hcpLn");

var $k0Gfc = parcelRequire("k0Gfc");
var $df4ce55f35d06843$var$space = "[" + $k0Gfc + "]";
var $df4ce55f35d06843$var$non = "​\x85";
var $df4ce55f35d06843$var$ltrim = RegExp("^" + $df4ce55f35d06843$var$space + $df4ce55f35d06843$var$space + "*");
var $df4ce55f35d06843$var$rtrim = RegExp($df4ce55f35d06843$var$space + $df4ce55f35d06843$var$space + "*$");
var $df4ce55f35d06843$var$exporter = function(KEY, exec, ALIAS) {
    var exp = {};
    var FORCE = $hcpLn(function() {
        return !!$k0Gfc[KEY]() || $df4ce55f35d06843$var$non[KEY]() != $df4ce55f35d06843$var$non;
    });
    var fn = exp[KEY] = FORCE ? exec($df4ce55f35d06843$var$trim) : $k0Gfc[KEY];
    if (ALIAS) exp[ALIAS] = fn;
    $3B1Ky($3B1Ky.P + $3B1Ky.F * FORCE, "String", exp);
};
// 1 -> String#trimLeft
// 2 -> String#trimRight
// 3 -> String#trim
var $df4ce55f35d06843$var$trim = $df4ce55f35d06843$var$exporter.trim = function(string, TYPE) {
    string = String($clUkM(string));
    if (TYPE & 1) string = string.replace($df4ce55f35d06843$var$ltrim, "");
    if (TYPE & 2) string = string.replace($df4ce55f35d06843$var$rtrim, "");
    return string;
};
module.exports = $df4ce55f35d06843$var$exporter;

});
parcelRequire.register("k0Gfc", function(module, exports) {
module.exports = "	\n\v\f\r \xa0 ᠎             　\u2028\u2029\uFEFF";

});


parcelRequire.register("faNmj", function(module, exports) {
"use strict";

var $fEeDR = parcelRequire("fEeDR");

var $clUkM = parcelRequire("clUkM");
module.exports = function repeat(count) {
    var str = String($clUkM(this));
    var res = "";
    var n = $fEeDR(count);
    if (n < 0 || n == Infinity) throw RangeError("Count can't be negative");
    for(; n > 0; (n >>>= 1) && (str += str))if (n & 1) res += str;
    return res;
};

});

parcelRequire.register("4yiY8", function(module, exports) {

var $ly2vB = parcelRequire("ly2vB");
var $35090d3955dfc798$var$floor = Math.floor;
module.exports = function isInteger(it) {
    return !$ly2vB(it) && isFinite(it) && $35090d3955dfc798$var$floor(it) === it;
};

});

parcelRequire.register("kg3cE", function(module, exports) {
// 20.2.2.20 Math.log1p(x)
module.exports = Math.log1p || function log1p(x) {
    return (x = +x) > -0.00000001 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
};

});

parcelRequire.register("jx2jO", function(module, exports) {
// 20.2.2.28 Math.sign(x)
module.exports = Math.sign || function sign(x) {
    // eslint-disable-next-line no-self-compare
    return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
};

});

parcelRequire.register("bgh7t", function(module, exports) {

var $jx2jO = parcelRequire("jx2jO");
var $832e77e7085d990e$var$pow = Math.pow;
var $832e77e7085d990e$var$EPSILON = $832e77e7085d990e$var$pow(2, -52);
var $832e77e7085d990e$var$EPSILON32 = $832e77e7085d990e$var$pow(2, -23);
var $832e77e7085d990e$var$MAX32 = $832e77e7085d990e$var$pow(2, 127) * (2 - $832e77e7085d990e$var$EPSILON32);
var $832e77e7085d990e$var$MIN32 = $832e77e7085d990e$var$pow(2, -126);
var $832e77e7085d990e$var$roundTiesToEven = function(n) {
    return n + 1 / $832e77e7085d990e$var$EPSILON - 1 / $832e77e7085d990e$var$EPSILON;
};
module.exports = Math.fround || function fround(x) {
    var $abs = Math.abs(x);
    var $sign = $jx2jO(x);
    var a, result;
    if ($abs < $832e77e7085d990e$var$MIN32) return $sign * $832e77e7085d990e$var$roundTiesToEven($abs / $832e77e7085d990e$var$MIN32 / $832e77e7085d990e$var$EPSILON32) * $832e77e7085d990e$var$MIN32 * $832e77e7085d990e$var$EPSILON32;
    a = (1 + $832e77e7085d990e$var$EPSILON32 / $832e77e7085d990e$var$EPSILON) * $abs;
    result = a - (a - $abs);
    // eslint-disable-next-line no-self-compare
    if (result > $832e77e7085d990e$var$MAX32 || result != result) return $sign * Infinity;
    return $sign * result;
};

});

parcelRequire.register("k69Hy", function(module, exports) {

var $fEeDR = parcelRequire("fEeDR");

var $clUkM = parcelRequire("clUkM");
// true  -> String#at
// false -> String#codePointAt
module.exports = function(TO_STRING) {
    return function(that, pos) {
        var s = String($clUkM(that));
        var i = $fEeDR(pos);
        var l = s.length;
        var a, b;
        if (i < 0 || i >= l) return TO_STRING ? "" : undefined;
        a = s.charCodeAt(i);
        return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
    };
};

});

parcelRequire.register("9eQhN", function(module, exports) {
"use strict";

var $jEzjy = parcelRequire("jEzjy");

var $3B1Ky = parcelRequire("3B1Ky");

var $bRGed = parcelRequire("bRGed");

var $expki = parcelRequire("expki");

var $6Zio4 = parcelRequire("6Zio4");

var $eDmOg = parcelRequire("eDmOg");

var $hMuUi = parcelRequire("hMuUi");

var $imZ0P = parcelRequire("imZ0P");

var $6b9dfac5d9aa7095$var$ITERATOR = (parcelRequire("5i4Lz"))("iterator");
var $6b9dfac5d9aa7095$var$BUGGY = !([].keys && "next" in [].keys()); // Safari has buggy iterators w/o `next`
var $6b9dfac5d9aa7095$var$FF_ITERATOR = "@@iterator";
var $6b9dfac5d9aa7095$var$KEYS = "keys";
var $6b9dfac5d9aa7095$var$VALUES = "values";
var $6b9dfac5d9aa7095$var$returnThis = function() {
    return this;
};
module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
    $eDmOg(Constructor, NAME, next);
    var getMethod = function(kind) {
        if (!$6b9dfac5d9aa7095$var$BUGGY && kind in proto) return proto[kind];
        switch(kind){
            case $6b9dfac5d9aa7095$var$KEYS:
                return function keys() {
                    return new Constructor(this, kind);
                };
            case $6b9dfac5d9aa7095$var$VALUES:
                return function values() {
                    return new Constructor(this, kind);
                };
        }
        return function entries() {
            return new Constructor(this, kind);
        };
    };
    var TAG = NAME + " Iterator";
    var DEF_VALUES = DEFAULT == $6b9dfac5d9aa7095$var$VALUES;
    var VALUES_BUG = false;
    var proto = Base.prototype;
    var $native = proto[$6b9dfac5d9aa7095$var$ITERATOR] || proto[$6b9dfac5d9aa7095$var$FF_ITERATOR] || DEFAULT && proto[DEFAULT];
    var $default = $native || getMethod(DEFAULT);
    var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod("entries") : undefined;
    var $anyNative = NAME == "Array" ? proto.entries || $native : $native;
    var methods, key, IteratorPrototype;
    // Fix native
    if ($anyNative) {
        IteratorPrototype = $imZ0P($anyNative.call(new Base()));
        if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
            // Set @@toStringTag to native iterators
            $hMuUi(IteratorPrototype, TAG, true);
            // fix for some old engines
            if (!$jEzjy && typeof IteratorPrototype[$6b9dfac5d9aa7095$var$ITERATOR] != "function") $expki(IteratorPrototype, $6b9dfac5d9aa7095$var$ITERATOR, $6b9dfac5d9aa7095$var$returnThis);
        }
    }
    // fix Array#{values, @@iterator}.name in V8 / FF
    if (DEF_VALUES && $native && $native.name !== $6b9dfac5d9aa7095$var$VALUES) {
        VALUES_BUG = true;
        $default = function values() {
            return $native.call(this);
        };
    }
    // Define iterator
    if ((!$jEzjy || FORCED) && ($6b9dfac5d9aa7095$var$BUGGY || VALUES_BUG || !proto[$6b9dfac5d9aa7095$var$ITERATOR])) $expki(proto, $6b9dfac5d9aa7095$var$ITERATOR, $default);
    // Plug for library
    $6Zio4[NAME] = $default;
    $6Zio4[TAG] = $6b9dfac5d9aa7095$var$returnThis;
    if (DEFAULT) {
        methods = {
            values: DEF_VALUES ? $default : getMethod($6b9dfac5d9aa7095$var$VALUES),
            keys: IS_SET ? $default : getMethod($6b9dfac5d9aa7095$var$KEYS),
            entries: $entries
        };
        if (FORCED) {
            for(key in methods)if (!(key in proto)) $bRGed(proto, key, methods[key]);
        } else $3B1Ky($3B1Ky.P + $3B1Ky.F * ($6b9dfac5d9aa7095$var$BUGGY || VALUES_BUG), NAME, methods);
    }
    return methods;
};

});
parcelRequire.register("6Zio4", function(module, exports) {
module.exports = {};

});

parcelRequire.register("eDmOg", function(module, exports) {
"use strict";

var $fKIsL = parcelRequire("fKIsL");

var $87uCM = parcelRequire("87uCM");

var $hMuUi = parcelRequire("hMuUi");
var $aa7666bfa381a56d$var$IteratorPrototype = {};


// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
(parcelRequire("expki"))($aa7666bfa381a56d$var$IteratorPrototype, (parcelRequire("5i4Lz"))("iterator"), function() {
    return this;
});
module.exports = function(Constructor, NAME, next) {
    Constructor.prototype = $fKIsL($aa7666bfa381a56d$var$IteratorPrototype, {
        next: $87uCM(1, next)
    });
    $hMuUi(Constructor, NAME + " Iterator");
};

});


parcelRequire.register("kJKVJ", function(module, exports) {

var $f18c69f3aaa6eb77$var$MATCH = (parcelRequire("5i4Lz"))("match");
module.exports = function(KEY) {
    var re = /./;
    try {
        "/./"[KEY](re);
    } catch (e) {
        try {
            re[$f18c69f3aaa6eb77$var$MATCH] = false;
            return !"/./"[KEY](re);
        } catch (f) {}
    }
    return true;
};

});

parcelRequire.register("lDyfb", function(module, exports) {

var $3B1Ky = parcelRequire("3B1Ky");

var $hcpLn = parcelRequire("hcpLn");

var $clUkM = parcelRequire("clUkM");
var $fc07cd98fd75a6e8$var$quot = /"/g;
// B.2.3.2.1 CreateHTML(string, tag, attribute, value)
var $fc07cd98fd75a6e8$var$createHTML = function(string, tag, attribute, value) {
    var S = String($clUkM(string));
    var p1 = "<" + tag;
    if (attribute !== "") p1 += " " + attribute + '="' + String(value).replace($fc07cd98fd75a6e8$var$quot, "&quot;") + '"';
    return p1 + ">" + S + "</" + tag + ">";
};
module.exports = function(NAME, exec) {
    var O = {};
    O[NAME] = exec($fc07cd98fd75a6e8$var$createHTML);
    $3B1Ky($3B1Ky.P + $3B1Ky.F * $hcpLn(function() {
        var test = ""[NAME]('"');
        return test !== test.toLowerCase() || test.split('"').length > 3;
    }), "String", O);
};

});

parcelRequire.register("kIs70", function(module, exports) {
"use strict";

var $euAZz = parcelRequire("euAZz");

var $dapnX = parcelRequire("dapnX");
var $f14db92cb5e89ada$var$NUMBER = "number";
module.exports = function(hint) {
    if (hint !== "string" && hint !== $f14db92cb5e89ada$var$NUMBER && hint !== "default") throw TypeError("Incorrect hint");
    return $dapnX($euAZz(this), hint != $f14db92cb5e89ada$var$NUMBER);
};

});

parcelRequire.register("4NkNf", function(module, exports) {

var $6Zio4 = parcelRequire("6Zio4");

var $37dbde21a8fd1235$var$ITERATOR = (parcelRequire("5i4Lz"))("iterator");
var $37dbde21a8fd1235$var$ArrayProto = Array.prototype;
module.exports = function(it) {
    return it !== undefined && ($6Zio4.Array === it || $37dbde21a8fd1235$var$ArrayProto[$37dbde21a8fd1235$var$ITERATOR] === it);
};

});

parcelRequire.register("4QM0B", function(module, exports) {

var $bbWc2 = parcelRequire("bbWc2");

var $3881424509bf0365$var$ITERATOR = (parcelRequire("5i4Lz"))("iterator");

var $6Zio4 = parcelRequire("6Zio4");

module.exports = (parcelRequire("6LdXb")).getIteratorMethod = function(it) {
    if (it != undefined) return it[$3881424509bf0365$var$ITERATOR] || it["@@iterator"] || $6Zio4[$bbWc2(it)];
};

});

parcelRequire.register("cGAqi", function(module, exports) {

var $93c5a925e268da2a$var$ITERATOR = (parcelRequire("5i4Lz"))("iterator");
var $93c5a925e268da2a$var$SAFE_CLOSING = false;
try {
    var $93c5a925e268da2a$var$riter = [
        7
    ][$93c5a925e268da2a$var$ITERATOR]();
    $93c5a925e268da2a$var$riter["return"] = function() {
        $93c5a925e268da2a$var$SAFE_CLOSING = true;
    };
    // eslint-disable-next-line no-throw-literal
    Array.from($93c5a925e268da2a$var$riter, function() {
        throw 2;
    });
} catch (e) {}
module.exports = function(exec, skipClosing) {
    if (!skipClosing && !$93c5a925e268da2a$var$SAFE_CLOSING) return false;
    var safe = false;
    try {
        var arr = [
            7
        ];
        var iter = arr[$93c5a925e268da2a$var$ITERATOR]();
        iter.next = function() {
            return {
                done: safe = true
            };
        };
        arr[$93c5a925e268da2a$var$ITERATOR] = function() {
            return iter;
        };
        exec(arr);
    } catch (e) {}
    return safe;
};

});

parcelRequire.register("cHHAW", function(module, exports) {
"use strict";

var $hcpLn = parcelRequire("hcpLn");
module.exports = function(method, arg) {
    return !!method && $hcpLn(function() {
        // eslint-disable-next-line no-useless-call
        arg ? method.call(null, function() {}, 1) : method.call(null);
    });
};

});

parcelRequire.register("9vq0S", function(module, exports) {

var $7vO7i = parcelRequire("7vO7i");

var $acjvS = parcelRequire("acjvS");

var $6dhUj = parcelRequire("6dhUj");

var $DZqmm = parcelRequire("DZqmm");

var $hTYGa = parcelRequire("hTYGa");
module.exports = function(TYPE, $create) {
    var IS_MAP = TYPE == 1;
    var IS_FILTER = TYPE == 2;
    var IS_SOME = TYPE == 3;
    var IS_EVERY = TYPE == 4;
    var IS_FIND_INDEX = TYPE == 6;
    var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
    var create = $create || $hTYGa;
    return function($this, callbackfn, that) {
        var O = $6dhUj($this);
        var self = $acjvS(O);
        var f = $7vO7i(callbackfn, that, 3);
        var length = $DZqmm(self.length);
        var index = 0;
        var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
        var val, res;
        for(; length > index; index++)if (NO_HOLES || index in self) {
            val = self[index];
            res = f(val, index, O);
            if (TYPE) {
                if (IS_MAP) result[index] = res; // map
                else if (res) switch(TYPE){
                    case 3:
                        return true; // some
                    case 5:
                        return val; // find
                    case 6:
                        return index; // findIndex
                    case 2:
                        result.push(val); // filter
                }
                else if (IS_EVERY) return false; // every
            }
        }
        return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
    };
};

});
parcelRequire.register("hTYGa", function(module, exports) {

var $cVm2q = parcelRequire("cVm2q");
module.exports = function(original, length) {
    return new ($cVm2q(original))(length);
};

});
parcelRequire.register("cVm2q", function(module, exports) {

var $ly2vB = parcelRequire("ly2vB");

var $iLSpw = parcelRequire("iLSpw");

var $968be73271d5f467$var$SPECIES = (parcelRequire("5i4Lz"))("species");
module.exports = function(original) {
    var C;
    if ($iLSpw(original)) {
        C = original.constructor;
        // cross-realm fallback
        if (typeof C == "function" && (C === Array || $iLSpw(C.prototype))) C = undefined;
        if ($ly2vB(C)) {
            C = C[$968be73271d5f467$var$SPECIES];
            if (C === null) C = undefined;
        }
    }
    return C === undefined ? Array : C;
};

});



parcelRequire.register("jak4y", function(module, exports) {
// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
"use strict";

var $6dhUj = parcelRequire("6dhUj");

var $aselx = parcelRequire("aselx");

var $DZqmm = parcelRequire("DZqmm");
module.exports = [].copyWithin || function copyWithin(target /* = 0 */ , start /* = 0, end = @length */ ) {
    var O = $6dhUj(this);
    var len = $DZqmm(O.length);
    var to = $aselx(target, len);
    var from = $aselx(start, len);
    var end = arguments.length > 2 ? arguments[2] : undefined;
    var count = Math.min((end === undefined ? len : $aselx(end, len)) - from, len - to);
    var inc = 1;
    if (from < to && to < from + count) {
        inc = -1;
        from += count - 1;
        to += count - 1;
    }
    while(count-- > 0){
        if (from in O) O[to] = O[from];
        else delete O[to];
        to += inc;
        from += inc;
    }
    return O;
};

});

parcelRequire.register("bqTbq", function(module, exports) {

// 22.1.3.31 Array.prototype[@@unscopables]
var $852cedae31fc1985$var$UNSCOPABLES = (parcelRequire("5i4Lz"))("unscopables");
var $852cedae31fc1985$var$ArrayProto = Array.prototype;

if ($852cedae31fc1985$var$ArrayProto[$852cedae31fc1985$var$UNSCOPABLES] == undefined) (parcelRequire("expki"))($852cedae31fc1985$var$ArrayProto, $852cedae31fc1985$var$UNSCOPABLES, {});
module.exports = function(key) {
    $852cedae31fc1985$var$ArrayProto[$852cedae31fc1985$var$UNSCOPABLES][key] = true;
};

});

parcelRequire.register("cSivE", function(module, exports) {
// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
"use strict";

var $6dhUj = parcelRequire("6dhUj");

var $aselx = parcelRequire("aselx");

var $DZqmm = parcelRequire("DZqmm");
module.exports = function fill(value /* , start = 0, end = @length */ ) {
    var O = $6dhUj(this);
    var length = $DZqmm(O.length);
    var aLen = arguments.length;
    var index = $aselx(aLen > 1 ? arguments[1] : undefined, length);
    var end = aLen > 2 ? arguments[2] : undefined;
    var endPos = end === undefined ? length : $aselx(end, length);
    while(endPos > index)O[index++] = value;
    return O;
};

});

parcelRequire.register("epMIB", function(module, exports) {
"use strict";

var $gTAze = parcelRequire("gTAze");

var $dLczm = parcelRequire("dLczm");

var $3y86S = parcelRequire("3y86S");

var $a7e930f2d67f4f36$var$SPECIES = (parcelRequire("5i4Lz"))("species");
module.exports = function(KEY) {
    var C = $gTAze[KEY];
    if ($3y86S && C && !C[$a7e930f2d67f4f36$var$SPECIES]) $dLczm.f(C, $a7e930f2d67f4f36$var$SPECIES, {
        configurable: true,
        get: function() {
            return this;
        }
    });
};

});

parcelRequire.register("j0YvL", function(module, exports) {
"use strict";

var $bqTbq = parcelRequire("bqTbq");

var $kTFSr = parcelRequire("kTFSr");

var $6Zio4 = parcelRequire("6Zio4");

var $fHwma = parcelRequire("fHwma");

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = (parcelRequire("9eQhN"))(Array, "Array", function(iterated, kind) {
    this._t = $fHwma(iterated); // target
    this._i = 0; // next index
    this._k = kind; // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function() {
    var O = this._t;
    var kind = this._k;
    var index = this._i++;
    if (!O || index >= O.length) {
        this._t = undefined;
        return $kTFSr(1);
    }
    if (kind == "keys") return $kTFSr(0, index);
    if (kind == "values") return $kTFSr(0, O[index]);
    return $kTFSr(0, [
        index,
        O[index]
    ]);
}, "values");
// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
$6Zio4.Arguments = $6Zio4.Array;
$bqTbq("keys");
$bqTbq("values");
$bqTbq("entries");

});
parcelRequire.register("kTFSr", function(module, exports) {
module.exports = function(done, value) {
    return {
        value: value,
        done: !!done
    };
};

});


parcelRequire.register("kiAdZ", function(module, exports) {
"use strict";

var $euAZz = parcelRequire("euAZz");
module.exports = function() {
    var that = $euAZz(this);
    var result = "";
    if (that.global) result += "g";
    if (that.ignoreCase) result += "i";
    if (that.multiline) result += "m";
    if (that.unicode) result += "u";
    if (that.sticky) result += "y";
    return result;
};

});

parcelRequire.register("2INyC", function(module, exports) {
"use strict";
parcelRequire("5GgqM");

var $bRGed = parcelRequire("bRGed");

var $expki = parcelRequire("expki");

var $hcpLn = parcelRequire("hcpLn");

var $clUkM = parcelRequire("clUkM");

var $5i4Lz = parcelRequire("5i4Lz");

var $isVBs = parcelRequire("isVBs");
var $1fb621e8f5ab46d0$var$SPECIES = $5i4Lz("species");
var $1fb621e8f5ab46d0$var$REPLACE_SUPPORTS_NAMED_GROUPS = !$hcpLn(function() {
    // #replace needs built-in support for named groups.
    // #match works fine because it just return the exec results, even if it has
    // a "grops" property.
    var re = /./;
    re.exec = function() {
        var result = [];
        result.groups = {
            a: "7"
        };
        return result;
    };
    return "".replace(re, "$<a>") !== "7";
});
var $1fb621e8f5ab46d0$var$SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = function() {
    // Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
    var re = /(?:)/;
    var originalExec = re.exec;
    re.exec = function() {
        return originalExec.apply(this, arguments);
    };
    var result = "ab".split(re);
    return result.length === 2 && result[0] === "a" && result[1] === "b";
}();
module.exports = function(KEY, length, exec) {
    var SYMBOL = $5i4Lz(KEY);
    var DELEGATES_TO_SYMBOL = !$hcpLn(function() {
        // String methods call symbol-named RegEp methods
        var O = {};
        O[SYMBOL] = function() {
            return 7;
        };
        return ""[KEY](O) != 7;
    });
    var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !$hcpLn(function() {
        // Symbol-named RegExp methods call .exec
        var execCalled = false;
        var re = /a/;
        re.exec = function() {
            execCalled = true;
            return null;
        };
        if (KEY === "split") {
            // RegExp[@@split] doesn't call the regex's exec method, but first creates
            // a new one. We need to return the patched regex when creating the new one.
            re.constructor = {};
            re.constructor[$1fb621e8f5ab46d0$var$SPECIES] = function() {
                return re;
            };
        }
        re[SYMBOL]("");
        return !execCalled;
    }) : undefined;
    if (!DELEGATES_TO_SYMBOL || !DELEGATES_TO_EXEC || KEY === "replace" && !$1fb621e8f5ab46d0$var$REPLACE_SUPPORTS_NAMED_GROUPS || KEY === "split" && !$1fb621e8f5ab46d0$var$SPLIT_WORKS_WITH_OVERWRITTEN_EXEC) {
        var nativeRegExpMethod = /./[SYMBOL];
        var fns = exec($clUkM, SYMBOL, ""[KEY], function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {
            if (regexp.exec === $isVBs) {
                if (DELEGATES_TO_SYMBOL && !forceStringMethod) // The native String method already delegates to @@method (this
                // polyfilled function), leasing to infinite recursion.
                // We avoid it by directly calling the native @@method method.
                return {
                    done: true,
                    value: nativeRegExpMethod.call(regexp, str, arg2)
                };
                return {
                    done: true,
                    value: nativeMethod.call(str, regexp, arg2)
                };
            }
            return {
                done: false
            };
        });
        var strfn = fns[0];
        var rxfn = fns[1];
        $bRGed(String.prototype, KEY, strfn);
        $expki(RegExp.prototype, SYMBOL, length == 2 ? function(string, arg) {
            return rxfn.call(string, this, arg);
        } : function(string) {
            return rxfn.call(string, this);
        });
    }
};

});
parcelRequire.register("5GgqM", function(module, exports) {
"use strict";

var $isVBs = parcelRequire("isVBs");

(parcelRequire("3B1Ky"))({
    target: "RegExp",
    proto: true,
    forced: $isVBs !== /./.exec
}, {
    exec: $isVBs
});

});
parcelRequire.register("isVBs", function(module, exports) {
"use strict";

var $kiAdZ = parcelRequire("kiAdZ");
var $d717864ff752b911$var$nativeExec = RegExp.prototype.exec;
// This always refers to the native implementation, because the
// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
// which loads this file before patching the method.
var $d717864ff752b911$var$nativeReplace = String.prototype.replace;
var $d717864ff752b911$var$patchedExec = $d717864ff752b911$var$nativeExec;
var $d717864ff752b911$var$LAST_INDEX = "lastIndex";
var $d717864ff752b911$var$UPDATES_LAST_INDEX_WRONG = function() {
    var re1 = /a/, re2 = /b*/g;
    $d717864ff752b911$var$nativeExec.call(re1, "a");
    $d717864ff752b911$var$nativeExec.call(re2, "a");
    return re1[$d717864ff752b911$var$LAST_INDEX] !== 0 || re2[$d717864ff752b911$var$LAST_INDEX] !== 0;
}();
// nonparticipating capturing group, copied from es5-shim's String#split patch.
var $d717864ff752b911$var$NPCG_INCLUDED = /()??/.exec("")[1] !== undefined;
var $d717864ff752b911$var$PATCH = $d717864ff752b911$var$UPDATES_LAST_INDEX_WRONG || $d717864ff752b911$var$NPCG_INCLUDED;
if ($d717864ff752b911$var$PATCH) $d717864ff752b911$var$patchedExec = function exec(str) {
    var re = this;
    var lastIndex, reCopy, match, i;
    if ($d717864ff752b911$var$NPCG_INCLUDED) reCopy = new RegExp("^" + re.source + "$(?!\\s)", $kiAdZ.call(re));
    if ($d717864ff752b911$var$UPDATES_LAST_INDEX_WRONG) lastIndex = re[$d717864ff752b911$var$LAST_INDEX];
    match = $d717864ff752b911$var$nativeExec.call(re, str);
    if ($d717864ff752b911$var$UPDATES_LAST_INDEX_WRONG && match) re[$d717864ff752b911$var$LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;
    if ($d717864ff752b911$var$NPCG_INCLUDED && match && match.length > 1) // Fix browsers whose `exec` methods don't consistently return `undefined`
    // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
    // eslint-disable-next-line no-loop-func
    $d717864ff752b911$var$nativeReplace.call(match[0], reCopy, function() {
        for(i = 1; i < arguments.length - 2; i++)if (arguments[i] === undefined) match[i] = undefined;
    });
    return match;
};
module.exports = $d717864ff752b911$var$patchedExec;

});



parcelRequire.register("aKF9g", function(module, exports) {

var $euAZz = parcelRequire("euAZz");

var $1C6Y9 = parcelRequire("1C6Y9");

var $7d3e1e77b515e939$var$SPECIES = (parcelRequire("5i4Lz"))("species");
module.exports = function(O, D) {
    var C = $euAZz(O).constructor;
    var S;
    return C === undefined || (S = $euAZz(C)[$7d3e1e77b515e939$var$SPECIES]) == undefined ? D : $1C6Y9(S);
};

});

parcelRequire.register("4UEtt", function(module, exports) {
module.exports = function(it, Constructor, name, forbiddenField) {
    if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) throw TypeError(name + ": incorrect invocation!");
    return it;
};

});

parcelRequire.register("8Bw9Z", function(module, exports) {

var $gTAze = parcelRequire("gTAze");

var $lmMSx = parcelRequire("lmMSx");
var $643ab9c3c2a18eb5$require$macrotask = $lmMSx.set;
var $643ab9c3c2a18eb5$var$Observer = $gTAze.MutationObserver || $gTAze.WebKitMutationObserver;
var $643ab9c3c2a18eb5$var$process = $gTAze.process;
var $643ab9c3c2a18eb5$var$Promise = $gTAze.Promise;

var $643ab9c3c2a18eb5$var$isNode = (parcelRequire("bOq6I"))($643ab9c3c2a18eb5$var$process) == "process";
module.exports = function() {
    var head, last, notify;
    var flush = function() {
        var parent, fn;
        if ($643ab9c3c2a18eb5$var$isNode && (parent = $643ab9c3c2a18eb5$var$process.domain)) parent.exit();
        while(head){
            fn = head.fn;
            head = head.next;
            try {
                fn();
            } catch (e) {
                if (head) notify();
                else last = undefined;
                throw e;
            }
        }
        last = undefined;
        if (parent) parent.enter();
    };
    // Node.js
    if ($643ab9c3c2a18eb5$var$isNode) notify = function() {
        $643ab9c3c2a18eb5$var$process.nextTick(flush);
    };
    else if ($643ab9c3c2a18eb5$var$Observer && !($gTAze.navigator && $gTAze.navigator.standalone)) {
        var toggle = true;
        var node = document.createTextNode("");
        new $643ab9c3c2a18eb5$var$Observer(flush).observe(node, {
            characterData: true
        }); // eslint-disable-line no-new
        notify = function() {
            node.data = toggle = !toggle;
        };
    // environments with maybe non-completely correct, but existent Promise
    } else if ($643ab9c3c2a18eb5$var$Promise && $643ab9c3c2a18eb5$var$Promise.resolve) {
        // Promise.resolve without an argument throws an error in LG WebOS 2
        var promise = $643ab9c3c2a18eb5$var$Promise.resolve(undefined);
        notify = function() {
            promise.then(flush);
        };
    // for other environments - macrotask based on:
    // - setImmediate
    // - MessageChannel
    // - window.postMessag
    // - onreadystatechange
    // - setTimeout
    } else notify = function() {
        // strange IE + webpack dev server bug - use .call(global)
        $643ab9c3c2a18eb5$require$macrotask.call($gTAze, flush);
    };
    return function(fn) {
        var task = {
            fn: fn,
            next: undefined
        };
        if (last) last.next = task;
        if (!head) {
            head = task;
            notify();
        }
        last = task;
    };
};

});
parcelRequire.register("lmMSx", function(module, exports) {

var $7vO7i = parcelRequire("7vO7i");

var $1Ppxe = parcelRequire("1Ppxe");

var $76Lij = parcelRequire("76Lij");

var $f0jHm = parcelRequire("f0jHm");

var $gTAze = parcelRequire("gTAze");
var $f8e19158fd0f5132$var$process = $gTAze.process;
var $f8e19158fd0f5132$var$setTask = $gTAze.setImmediate;
var $f8e19158fd0f5132$var$clearTask = $gTAze.clearImmediate;
var $f8e19158fd0f5132$var$MessageChannel = $gTAze.MessageChannel;
var $f8e19158fd0f5132$var$Dispatch = $gTAze.Dispatch;
var $f8e19158fd0f5132$var$counter = 0;
var $f8e19158fd0f5132$var$queue = {};
var $f8e19158fd0f5132$var$ONREADYSTATECHANGE = "onreadystatechange";
var $f8e19158fd0f5132$var$defer, $f8e19158fd0f5132$var$channel, $f8e19158fd0f5132$var$port;
var $f8e19158fd0f5132$var$run = function() {
    var id = +this;
    // eslint-disable-next-line no-prototype-builtins
    if ($f8e19158fd0f5132$var$queue.hasOwnProperty(id)) {
        var fn = $f8e19158fd0f5132$var$queue[id];
        delete $f8e19158fd0f5132$var$queue[id];
        fn();
    }
};
var $f8e19158fd0f5132$var$listener = function(event) {
    $f8e19158fd0f5132$var$run.call(event.data);
};

// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!$f8e19158fd0f5132$var$setTask || !$f8e19158fd0f5132$var$clearTask) {
    $f8e19158fd0f5132$var$setTask = function setImmediate(fn) {
        var args = [];
        var i = 1;
        while(arguments.length > i)args.push(arguments[i++]);
        $f8e19158fd0f5132$var$queue[++$f8e19158fd0f5132$var$counter] = function() {
            // eslint-disable-next-line no-new-func
            $1Ppxe(typeof fn == "function" ? fn : Function(fn), args);
        };
        $f8e19158fd0f5132$var$defer($f8e19158fd0f5132$var$counter);
        return $f8e19158fd0f5132$var$counter;
    };
    $f8e19158fd0f5132$var$clearTask = function clearImmediate(id) {
        delete $f8e19158fd0f5132$var$queue[id];
    };
    // Node.js 0.8-
    if ((parcelRequire("bOq6I"))($f8e19158fd0f5132$var$process) == "process") $f8e19158fd0f5132$var$defer = function(id) {
        $f8e19158fd0f5132$var$process.nextTick($7vO7i($f8e19158fd0f5132$var$run, id, 1));
    };
    else if ($f8e19158fd0f5132$var$Dispatch && $f8e19158fd0f5132$var$Dispatch.now) $f8e19158fd0f5132$var$defer = function(id) {
        $f8e19158fd0f5132$var$Dispatch.now($7vO7i($f8e19158fd0f5132$var$run, id, 1));
    };
    else if ($f8e19158fd0f5132$var$MessageChannel) {
        $f8e19158fd0f5132$var$channel = new $f8e19158fd0f5132$var$MessageChannel();
        $f8e19158fd0f5132$var$port = $f8e19158fd0f5132$var$channel.port2;
        $f8e19158fd0f5132$var$channel.port1.onmessage = $f8e19158fd0f5132$var$listener;
        $f8e19158fd0f5132$var$defer = $7vO7i($f8e19158fd0f5132$var$port.postMessage, $f8e19158fd0f5132$var$port, 1);
    // Browsers with postMessage, skip WebWorkers
    // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
    } else if ($gTAze.addEventListener && typeof postMessage == "function" && !$gTAze.importScripts) {
        $f8e19158fd0f5132$var$defer = function(id) {
            $gTAze.postMessage(id + "", "*");
        };
        $gTAze.addEventListener("message", $f8e19158fd0f5132$var$listener, false);
    // IE8-
    } else if ($f8e19158fd0f5132$var$ONREADYSTATECHANGE in $f0jHm("script")) $f8e19158fd0f5132$var$defer = function(id) {
        $76Lij.appendChild($f0jHm("script"))[$f8e19158fd0f5132$var$ONREADYSTATECHANGE] = function() {
            $76Lij.removeChild(this);
            $f8e19158fd0f5132$var$run.call(id);
        };
    };
    else $f8e19158fd0f5132$var$defer = function(id) {
        setTimeout($7vO7i($f8e19158fd0f5132$var$run, id, 1), 0);
    };
}
module.exports = {
    set: $f8e19158fd0f5132$var$setTask,
    clear: $f8e19158fd0f5132$var$clearTask
};

});


parcelRequire.register("hcrCL", function(module, exports) {

var $bRGed = parcelRequire("bRGed");
module.exports = function(target, src, safe) {
    for(var key in src)$bRGed(target, key, src[key], safe);
    return target;
};

});

parcelRequire.register("5hbU4", function(module, exports) {
"use strict";

var $gTAze = parcelRequire("gTAze");

var $3B1Ky = parcelRequire("3B1Ky");

var $bRGed = parcelRequire("bRGed");

var $hcrCL = parcelRequire("hcrCL");

var $eTnVl = parcelRequire("eTnVl");

var $bXt2A = parcelRequire("bXt2A");

var $4UEtt = parcelRequire("4UEtt");

var $ly2vB = parcelRequire("ly2vB");

var $hcpLn = parcelRequire("hcpLn");

var $cGAqi = parcelRequire("cGAqi");

var $hMuUi = parcelRequire("hMuUi");

var $f8mMC = parcelRequire("f8mMC");
module.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
    var Base = $gTAze[NAME];
    var C = Base;
    var ADDER = IS_MAP ? "set" : "add";
    var proto = C && C.prototype;
    var O = {};
    var fixMethod = function(KEY) {
        var fn = proto[KEY];
        $bRGed(proto, KEY, KEY == "delete" ? function(a) {
            return IS_WEAK && !$ly2vB(a) ? false : fn.call(this, a === 0 ? 0 : a);
        } : KEY == "has" ? function has(a) {
            return IS_WEAK && !$ly2vB(a) ? false : fn.call(this, a === 0 ? 0 : a);
        } : KEY == "get" ? function get(a) {
            return IS_WEAK && !$ly2vB(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
        } : KEY == "add" ? function add(a) {
            fn.call(this, a === 0 ? 0 : a);
            return this;
        } : function set(a, b) {
            fn.call(this, a === 0 ? 0 : a, b);
            return this;
        });
    };
    if (typeof C != "function" || !(IS_WEAK || proto.forEach && !$hcpLn(function() {
        new C().entries().next();
    }))) {
        // create collection constructor
        C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
        $hcrCL(C.prototype, methods);
        $eTnVl.NEED = true;
    } else {
        var instance = new C();
        // early implementations not supports chaining
        var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
        // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
        var THROWS_ON_PRIMITIVES = $hcpLn(function() {
            instance.has(1);
        });
        // most early implementations doesn't supports iterables, most modern - not close it correctly
        var ACCEPT_ITERABLES = $cGAqi(function(iter) {
            new C(iter);
        }); // eslint-disable-line no-new
        // for early implementations -0 and +0 not the same
        var BUGGY_ZERO = !IS_WEAK && $hcpLn(function() {
            // V8 ~ Chromium 42- fails only with 5+ elements
            var $instance = new C();
            var index = 5;
            while(index--)$instance[ADDER](index, index);
            return !$instance.has(-0);
        });
        if (!ACCEPT_ITERABLES) {
            C = wrapper(function(target, iterable) {
                $4UEtt(target, C, NAME);
                var that = $f8mMC(new Base(), target, C);
                if (iterable != undefined) $bXt2A(iterable, IS_MAP, that[ADDER], that);
                return that;
            });
            C.prototype = proto;
            proto.constructor = C;
        }
        if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
            fixMethod("delete");
            fixMethod("has");
            IS_MAP && fixMethod("get");
        }
        if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);
        // weak collections should not contains .clear method
        if (IS_WEAK && proto.clear) delete proto.clear;
    }
    $hMuUi(C, NAME);
    O[NAME] = C;
    $3B1Ky($3B1Ky.G + $3B1Ky.W + $3B1Ky.F * (C != Base), O);
    if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);
    return C;
};

});
parcelRequire.register("eTnVl", function(module, exports) {

var $ad78c28275163101$var$META = (parcelRequire("dCUYV"))("meta");

var $ly2vB = parcelRequire("ly2vB");

var $dS4Ut = parcelRequire("dS4Ut");

var $dLczm = parcelRequire("dLczm");
var $ad78c28275163101$require$setDesc = $dLczm.f;
var $ad78c28275163101$var$id = 0;
var $ad78c28275163101$var$isExtensible = Object.isExtensible || function() {
    return true;
};

var $ad78c28275163101$var$FREEZE = !(parcelRequire("hcpLn"))(function() {
    return $ad78c28275163101$var$isExtensible(Object.preventExtensions({}));
});
var $ad78c28275163101$var$setMeta = function(it) {
    $ad78c28275163101$require$setDesc(it, $ad78c28275163101$var$META, {
        value: {
            i: "O" + ++$ad78c28275163101$var$id,
            w: {} // weak collections IDs
        }
    });
};
var $ad78c28275163101$var$fastKey = function(it, create) {
    // return primitive with prefix
    if (!$ly2vB(it)) return typeof it == "symbol" ? it : (typeof it == "string" ? "S" : "P") + it;
    if (!$dS4Ut(it, $ad78c28275163101$var$META)) {
        // can't set metadata to uncaught frozen object
        if (!$ad78c28275163101$var$isExtensible(it)) return "F";
        // not necessary to add metadata
        if (!create) return "E";
        // add missing metadata
        $ad78c28275163101$var$setMeta(it);
    // return object ID
    }
    return it[$ad78c28275163101$var$META].i;
};
var $ad78c28275163101$var$getWeak = function(it, create) {
    if (!$dS4Ut(it, $ad78c28275163101$var$META)) {
        // can't set metadata to uncaught frozen object
        if (!$ad78c28275163101$var$isExtensible(it)) return true;
        // not necessary to add metadata
        if (!create) return false;
        // add missing metadata
        $ad78c28275163101$var$setMeta(it);
    // return hash weak collections IDs
    }
    return it[$ad78c28275163101$var$META].w;
};
// add metadata on freeze-family methods calling
var $ad78c28275163101$var$onFreeze = function(it) {
    if ($ad78c28275163101$var$FREEZE && $ad78c28275163101$var$meta.NEED && $ad78c28275163101$var$isExtensible(it) && !$dS4Ut(it, $ad78c28275163101$var$META)) $ad78c28275163101$var$setMeta(it);
    return it;
};
var $ad78c28275163101$var$meta = module.exports = {
    KEY: $ad78c28275163101$var$META,
    NEED: false,
    fastKey: $ad78c28275163101$var$fastKey,
    getWeak: $ad78c28275163101$var$getWeak,
    onFreeze: $ad78c28275163101$var$onFreeze
};

});

parcelRequire.register("bXt2A", function(module, exports) {

var $7vO7i = parcelRequire("7vO7i");

var $5UELR = parcelRequire("5UELR");

var $4NkNf = parcelRequire("4NkNf");

var $euAZz = parcelRequire("euAZz");

var $DZqmm = parcelRequire("DZqmm");

var $4QM0B = parcelRequire("4QM0B");
var $8b4bbb4420248520$var$BREAK = {};
var $8b4bbb4420248520$var$RETURN = {};
var $8b4bbb4420248520$var$exports = module.exports = function(iterable, entries, fn, that, ITERATOR) {
    var iterFn = ITERATOR ? function() {
        return iterable;
    } : $4QM0B(iterable);
    var f = $7vO7i(fn, that, entries ? 2 : 1);
    var index = 0;
    var length, step, iterator, result;
    if (typeof iterFn != "function") throw TypeError(iterable + " is not iterable!");
    // fast case for arrays with default iterator
    if ($4NkNf(iterFn)) for(length = $DZqmm(iterable.length); length > index; index++){
        result = entries ? f($euAZz(step = iterable[index])[0], step[1]) : f(iterable[index]);
        if (result === $8b4bbb4420248520$var$BREAK || result === $8b4bbb4420248520$var$RETURN) return result;
    }
    else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done;){
        result = $5UELR(iterator, f, step.value, entries);
        if (result === $8b4bbb4420248520$var$BREAK || result === $8b4bbb4420248520$var$RETURN) return result;
    }
};
$8b4bbb4420248520$var$exports.BREAK = $8b4bbb4420248520$var$BREAK;
$8b4bbb4420248520$var$exports.RETURN = $8b4bbb4420248520$var$RETURN;

});
parcelRequire.register("5UELR", function(module, exports) {

var $euAZz = parcelRequire("euAZz");
module.exports = function(iterator, fn, value, entries) {
    try {
        return entries ? fn($euAZz(value)[0], value[1]) : fn(value);
    // 7.4.6 IteratorClose(iterator, completion)
    } catch (e) {
        var ret = iterator["return"];
        if (ret !== undefined) $euAZz(ret.call(iterator));
        throw e;
    }
};

});


parcelRequire.register("f8mMC", function(module, exports) {

var $ly2vB = parcelRequire("ly2vB");

var $ei7b7 = parcelRequire("ei7b7");
var $b04946a0f1e759ce$require$setPrototypeOf = $ei7b7.set;
module.exports = function(that, target, C) {
    var S = target.constructor;
    var P;
    if (S !== C && typeof S == "function" && (P = S.prototype) !== C.prototype && $ly2vB(P) && $b04946a0f1e759ce$require$setPrototypeOf) $b04946a0f1e759ce$require$setPrototypeOf(that, P);
    return that;
};

});


parcelRequire.register("giGyE", function(module, exports) {
"use strict";

var $gTAze = parcelRequire("gTAze");

var $bddf56e88749aaa5$var$each = (parcelRequire("9vq0S"))(0);

var $bRGed = parcelRequire("bRGed");

var $eTnVl = parcelRequire("eTnVl");

var $iUG18 = parcelRequire("iUG18");

var $2hVF3 = parcelRequire("2hVF3");

var $ly2vB = parcelRequire("ly2vB");

var $1km44 = parcelRequire("1km44");

var $1km44 = parcelRequire("1km44");
var $bddf56e88749aaa5$var$IS_IE11 = !$gTAze.ActiveXObject && "ActiveXObject" in $gTAze;
var $bddf56e88749aaa5$var$WEAK_MAP = "WeakMap";
var $bddf56e88749aaa5$var$getWeak = $eTnVl.getWeak;
var $bddf56e88749aaa5$var$isExtensible = Object.isExtensible;
var $bddf56e88749aaa5$var$uncaughtFrozenStore = $2hVF3.ufstore;
var $bddf56e88749aaa5$var$InternalMap;
var $bddf56e88749aaa5$var$wrapper = function(get) {
    return function WeakMap() {
        return get(this, arguments.length > 0 ? arguments[0] : undefined);
    };
};
var $bddf56e88749aaa5$var$methods = {
    // 23.3.3.3 WeakMap.prototype.get(key)
    get: function get(key) {
        if ($ly2vB(key)) {
            var data = $bddf56e88749aaa5$var$getWeak(key);
            if (data === true) return $bddf56e88749aaa5$var$uncaughtFrozenStore($1km44(this, $bddf56e88749aaa5$var$WEAK_MAP)).get(key);
            return data ? data[this._i] : undefined;
        }
    },
    // 23.3.3.5 WeakMap.prototype.set(key, value)
    set: function set(key, value) {
        return $2hVF3.def($1km44(this, $bddf56e88749aaa5$var$WEAK_MAP), key, value);
    }
};

// 23.3 WeakMap Objects
var $bddf56e88749aaa5$var$$WeakMap = module.exports = (parcelRequire("5hbU4"))($bddf56e88749aaa5$var$WEAK_MAP, $bddf56e88749aaa5$var$wrapper, $bddf56e88749aaa5$var$methods, $2hVF3, true, true);
// IE11 WeakMap frozen keys fix
if ($1km44 && $bddf56e88749aaa5$var$IS_IE11) {
    $bddf56e88749aaa5$var$InternalMap = $2hVF3.getConstructor($bddf56e88749aaa5$var$wrapper, $bddf56e88749aaa5$var$WEAK_MAP);
    $iUG18($bddf56e88749aaa5$var$InternalMap.prototype, $bddf56e88749aaa5$var$methods);
    $eTnVl.NEED = true;
    $bddf56e88749aaa5$var$each([
        "delete",
        "has",
        "get",
        "set"
    ], function(key) {
        var proto = $bddf56e88749aaa5$var$$WeakMap.prototype;
        var method = proto[key];
        $bRGed(proto, key, function(a, b) {
            // store frozen objects on internal weakmap shim
            if ($ly2vB(a) && !$bddf56e88749aaa5$var$isExtensible(a)) {
                if (!this._f) this._f = new $bddf56e88749aaa5$var$InternalMap();
                var result = this._f[key](a, b);
                return key == "set" ? this : result;
            // store all the rest on native weakmap
            }
            return method.call(this, a, b);
        });
    });
}

});
parcelRequire.register("2hVF3", function(module, exports) {
"use strict";

var $hcrCL = parcelRequire("hcrCL");

var $eTnVl = parcelRequire("eTnVl");
var $1aa9e598594196f8$require$getWeak = $eTnVl.getWeak;

var $euAZz = parcelRequire("euAZz");

var $ly2vB = parcelRequire("ly2vB");

var $4UEtt = parcelRequire("4UEtt");

var $bXt2A = parcelRequire("bXt2A");

var $9vq0S = parcelRequire("9vq0S");

var $dS4Ut = parcelRequire("dS4Ut");

var $1km44 = parcelRequire("1km44");
var $1aa9e598594196f8$var$arrayFind = $9vq0S(5);
var $1aa9e598594196f8$var$arrayFindIndex = $9vq0S(6);
var $1aa9e598594196f8$var$id = 0;
// fallback for uncaught frozen keys
var $1aa9e598594196f8$var$uncaughtFrozenStore = function(that) {
    return that._l || (that._l = new $1aa9e598594196f8$var$UncaughtFrozenStore());
};
var $1aa9e598594196f8$var$UncaughtFrozenStore = function() {
    this.a = [];
};
var $1aa9e598594196f8$var$findUncaughtFrozen = function(store, key) {
    return $1aa9e598594196f8$var$arrayFind(store.a, function(it) {
        return it[0] === key;
    });
};
$1aa9e598594196f8$var$UncaughtFrozenStore.prototype = {
    get: function(key) {
        var entry = $1aa9e598594196f8$var$findUncaughtFrozen(this, key);
        if (entry) return entry[1];
    },
    has: function(key) {
        return !!$1aa9e598594196f8$var$findUncaughtFrozen(this, key);
    },
    set: function(key, value) {
        var entry = $1aa9e598594196f8$var$findUncaughtFrozen(this, key);
        if (entry) entry[1] = value;
        else this.a.push([
            key,
            value
        ]);
    },
    "delete": function(key) {
        var index = $1aa9e598594196f8$var$arrayFindIndex(this.a, function(it) {
            return it[0] === key;
        });
        if (~index) this.a.splice(index, 1);
        return !!~index;
    }
};
module.exports = {
    getConstructor: function(wrapper, NAME, IS_MAP, ADDER) {
        var C = wrapper(function(that, iterable) {
            $4UEtt(that, C, NAME, "_i");
            that._t = NAME; // collection type
            that._i = $1aa9e598594196f8$var$id++; // collection id
            that._l = undefined; // leak store for uncaught frozen objects
            if (iterable != undefined) $bXt2A(iterable, IS_MAP, that[ADDER], that);
        });
        $hcrCL(C.prototype, {
            // 23.3.3.2 WeakMap.prototype.delete(key)
            // 23.4.3.3 WeakSet.prototype.delete(value)
            "delete": function(key) {
                if (!$ly2vB(key)) return false;
                var data = $1aa9e598594196f8$require$getWeak(key);
                if (data === true) return $1aa9e598594196f8$var$uncaughtFrozenStore($1km44(this, NAME))["delete"](key);
                return data && $dS4Ut(data, this._i) && delete data[this._i];
            },
            // 23.3.3.4 WeakMap.prototype.has(key)
            // 23.4.3.4 WeakSet.prototype.has(value)
            has: function has(key) {
                if (!$ly2vB(key)) return false;
                var data = $1aa9e598594196f8$require$getWeak(key);
                if (data === true) return $1aa9e598594196f8$var$uncaughtFrozenStore($1km44(this, NAME)).has(key);
                return data && $dS4Ut(data, this._i);
            }
        });
        return C;
    },
    def: function(that, key, value) {
        var data = $1aa9e598594196f8$require$getWeak($euAZz(key), true);
        if (data === true) $1aa9e598594196f8$var$uncaughtFrozenStore(that).set(key, value);
        else data[that._i] = value;
        return that;
    },
    ufstore: $1aa9e598594196f8$var$uncaughtFrozenStore
};

});
parcelRequire.register("1km44", function(module, exports) {

var $ly2vB = parcelRequire("ly2vB");
module.exports = function(it, TYPE) {
    if (!$ly2vB(it) || it._t !== TYPE) throw TypeError("Incompatible receiver, " + TYPE + " required!");
    return it;
};

});



parcelRequire.register("cgXEb", function(module, exports) {

var $gTAze = parcelRequire("gTAze");

var $expki = parcelRequire("expki");

var $dCUYV = parcelRequire("dCUYV");
var $8ef53f5bcffabff5$var$TYPED = $dCUYV("typed_array");
var $8ef53f5bcffabff5$var$VIEW = $dCUYV("view");
var $8ef53f5bcffabff5$var$ABV = !!($gTAze.ArrayBuffer && $gTAze.DataView);
var $8ef53f5bcffabff5$var$CONSTR = $8ef53f5bcffabff5$var$ABV;
var $8ef53f5bcffabff5$var$i = 0;
var $8ef53f5bcffabff5$var$l = 9;
var $8ef53f5bcffabff5$var$Typed;
var $8ef53f5bcffabff5$var$TypedArrayConstructors = "Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array".split(",");
while($8ef53f5bcffabff5$var$i < $8ef53f5bcffabff5$var$l)if ($8ef53f5bcffabff5$var$Typed = $gTAze[$8ef53f5bcffabff5$var$TypedArrayConstructors[$8ef53f5bcffabff5$var$i++]]) {
    $expki($8ef53f5bcffabff5$var$Typed.prototype, $8ef53f5bcffabff5$var$TYPED, true);
    $expki($8ef53f5bcffabff5$var$Typed.prototype, $8ef53f5bcffabff5$var$VIEW, true);
} else $8ef53f5bcffabff5$var$CONSTR = false;
module.exports = {
    ABV: $8ef53f5bcffabff5$var$ABV,
    CONSTR: $8ef53f5bcffabff5$var$CONSTR,
    TYPED: $8ef53f5bcffabff5$var$TYPED,
    VIEW: $8ef53f5bcffabff5$var$VIEW
};

});

parcelRequire.register("bDH3n", function(module, exports) {
"use strict";

var $gTAze = parcelRequire("gTAze");

var $3y86S = parcelRequire("3y86S");

var $jEzjy = parcelRequire("jEzjy");

var $cgXEb = parcelRequire("cgXEb");

var $expki = parcelRequire("expki");

var $hcrCL = parcelRequire("hcrCL");

var $hcpLn = parcelRequire("hcpLn");

var $4UEtt = parcelRequire("4UEtt");

var $fEeDR = parcelRequire("fEeDR");

var $DZqmm = parcelRequire("DZqmm");

var $25hWG = parcelRequire("25hWG");

var $2WGYr = parcelRequire("2WGYr");
var $8794bbbb05868548$require$gOPN = $2WGYr.f;

var $dLczm = parcelRequire("dLczm");
var $8794bbbb05868548$require$dP = $dLczm.f;

var $cSivE = parcelRequire("cSivE");

var $hMuUi = parcelRequire("hMuUi");
var $8794bbbb05868548$var$ARRAY_BUFFER = "ArrayBuffer";
var $8794bbbb05868548$var$DATA_VIEW = "DataView";
var $8794bbbb05868548$var$PROTOTYPE = "prototype";
var $8794bbbb05868548$var$WRONG_LENGTH = "Wrong length!";
var $8794bbbb05868548$var$WRONG_INDEX = "Wrong index!";
var $8794bbbb05868548$var$$ArrayBuffer = $gTAze[$8794bbbb05868548$var$ARRAY_BUFFER];
var $8794bbbb05868548$var$$DataView = $gTAze[$8794bbbb05868548$var$DATA_VIEW];
var $8794bbbb05868548$var$Math = $gTAze.Math;
var $8794bbbb05868548$var$RangeError = $gTAze.RangeError;
// eslint-disable-next-line no-shadow-restricted-names
var $8794bbbb05868548$var$Infinity = $gTAze.Infinity;
var $8794bbbb05868548$var$BaseBuffer = $8794bbbb05868548$var$$ArrayBuffer;
var $8794bbbb05868548$var$abs = $8794bbbb05868548$var$Math.abs;
var $8794bbbb05868548$var$pow = $8794bbbb05868548$var$Math.pow;
var $8794bbbb05868548$var$floor = $8794bbbb05868548$var$Math.floor;
var $8794bbbb05868548$var$log = $8794bbbb05868548$var$Math.log;
var $8794bbbb05868548$var$LN2 = $8794bbbb05868548$var$Math.LN2;
var $8794bbbb05868548$var$BUFFER = "buffer";
var $8794bbbb05868548$var$BYTE_LENGTH = "byteLength";
var $8794bbbb05868548$var$BYTE_OFFSET = "byteOffset";
var $8794bbbb05868548$var$$BUFFER = $3y86S ? "_b" : $8794bbbb05868548$var$BUFFER;
var $8794bbbb05868548$var$$LENGTH = $3y86S ? "_l" : $8794bbbb05868548$var$BYTE_LENGTH;
var $8794bbbb05868548$var$$OFFSET = $3y86S ? "_o" : $8794bbbb05868548$var$BYTE_OFFSET;
// IEEE754 conversions based on https://github.com/feross/ieee754
function $8794bbbb05868548$var$packIEEE754(value, mLen, nBytes) {
    var buffer = new Array(nBytes);
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var rt = mLen === 23 ? $8794bbbb05868548$var$pow(2, -24) - $8794bbbb05868548$var$pow(2, -77) : 0;
    var i = 0;
    var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
    var e, m, c;
    value = $8794bbbb05868548$var$abs(value);
    // eslint-disable-next-line no-self-compare
    if (value != value || value === $8794bbbb05868548$var$Infinity) {
        // eslint-disable-next-line no-self-compare
        m = value != value ? 1 : 0;
        e = eMax;
    } else {
        e = $8794bbbb05868548$var$floor($8794bbbb05868548$var$log(value) / $8794bbbb05868548$var$LN2);
        if (value * (c = $8794bbbb05868548$var$pow(2, -e)) < 1) {
            e--;
            c *= 2;
        }
        if (e + eBias >= 1) value += rt / c;
        else value += rt * $8794bbbb05868548$var$pow(2, 1 - eBias);
        if (value * c >= 2) {
            e++;
            c /= 2;
        }
        if (e + eBias >= eMax) {
            m = 0;
            e = eMax;
        } else if (e + eBias >= 1) {
            m = (value * c - 1) * $8794bbbb05868548$var$pow(2, mLen);
            e = e + eBias;
        } else {
            m = value * $8794bbbb05868548$var$pow(2, eBias - 1) * $8794bbbb05868548$var$pow(2, mLen);
            e = 0;
        }
    }
    for(; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
    e = e << mLen | m;
    eLen += mLen;
    for(; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
    buffer[--i] |= s * 128;
    return buffer;
}
function $8794bbbb05868548$var$unpackIEEE754(buffer, mLen, nBytes) {
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var nBits = eLen - 7;
    var i = nBytes - 1;
    var s = buffer[i--];
    var e = s & 127;
    var m;
    s >>= 7;
    for(; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
    m = e & (1 << -nBits) - 1;
    e >>= -nBits;
    nBits += mLen;
    for(; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
    if (e === 0) e = 1 - eBias;
    else if (e === eMax) return m ? NaN : s ? -$8794bbbb05868548$var$Infinity : $8794bbbb05868548$var$Infinity;
    else {
        m = m + $8794bbbb05868548$var$pow(2, mLen);
        e = e - eBias;
    }
    return (s ? -1 : 1) * m * $8794bbbb05868548$var$pow(2, e - mLen);
}
function $8794bbbb05868548$var$unpackI32(bytes) {
    return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
}
function $8794bbbb05868548$var$packI8(it) {
    return [
        it & 0xff
    ];
}
function $8794bbbb05868548$var$packI16(it) {
    return [
        it & 0xff,
        it >> 8 & 0xff
    ];
}
function $8794bbbb05868548$var$packI32(it) {
    return [
        it & 0xff,
        it >> 8 & 0xff,
        it >> 16 & 0xff,
        it >> 24 & 0xff
    ];
}
function $8794bbbb05868548$var$packF64(it) {
    return $8794bbbb05868548$var$packIEEE754(it, 52, 8);
}
function $8794bbbb05868548$var$packF32(it) {
    return $8794bbbb05868548$var$packIEEE754(it, 23, 4);
}
function $8794bbbb05868548$var$addGetter(C, key, internal) {
    $8794bbbb05868548$require$dP(C[$8794bbbb05868548$var$PROTOTYPE], key, {
        get: function() {
            return this[internal];
        }
    });
}
function $8794bbbb05868548$var$get(view, bytes, index, isLittleEndian) {
    var numIndex = +index;
    var intIndex = $25hWG(numIndex);
    if (intIndex + bytes > view[$8794bbbb05868548$var$$LENGTH]) throw $8794bbbb05868548$var$RangeError($8794bbbb05868548$var$WRONG_INDEX);
    var store = view[$8794bbbb05868548$var$$BUFFER]._b;
    var start = intIndex + view[$8794bbbb05868548$var$$OFFSET];
    var pack = store.slice(start, start + bytes);
    return isLittleEndian ? pack : pack.reverse();
}
function $8794bbbb05868548$var$set(view, bytes, index, conversion, value, isLittleEndian) {
    var numIndex = +index;
    var intIndex = $25hWG(numIndex);
    if (intIndex + bytes > view[$8794bbbb05868548$var$$LENGTH]) throw $8794bbbb05868548$var$RangeError($8794bbbb05868548$var$WRONG_INDEX);
    var store = view[$8794bbbb05868548$var$$BUFFER]._b;
    var start = intIndex + view[$8794bbbb05868548$var$$OFFSET];
    var pack = conversion(+value);
    for(var i = 0; i < bytes; i++)store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
}
if (!$cgXEb.ABV) {
    $8794bbbb05868548$var$$ArrayBuffer = function ArrayBuffer(length) {
        $4UEtt(this, $8794bbbb05868548$var$$ArrayBuffer, $8794bbbb05868548$var$ARRAY_BUFFER);
        var byteLength = $25hWG(length);
        this._b = $cSivE.call(new Array(byteLength), 0);
        this[$8794bbbb05868548$var$$LENGTH] = byteLength;
    };
    $8794bbbb05868548$var$$DataView = function DataView(buffer, byteOffset, byteLength) {
        $4UEtt(this, $8794bbbb05868548$var$$DataView, $8794bbbb05868548$var$DATA_VIEW);
        $4UEtt(buffer, $8794bbbb05868548$var$$ArrayBuffer, $8794bbbb05868548$var$DATA_VIEW);
        var bufferLength = buffer[$8794bbbb05868548$var$$LENGTH];
        var offset = $fEeDR(byteOffset);
        if (offset < 0 || offset > bufferLength) throw $8794bbbb05868548$var$RangeError("Wrong offset!");
        byteLength = byteLength === undefined ? bufferLength - offset : $DZqmm(byteLength);
        if (offset + byteLength > bufferLength) throw $8794bbbb05868548$var$RangeError($8794bbbb05868548$var$WRONG_LENGTH);
        this[$8794bbbb05868548$var$$BUFFER] = buffer;
        this[$8794bbbb05868548$var$$OFFSET] = offset;
        this[$8794bbbb05868548$var$$LENGTH] = byteLength;
    };
    if ($3y86S) {
        $8794bbbb05868548$var$addGetter($8794bbbb05868548$var$$ArrayBuffer, $8794bbbb05868548$var$BYTE_LENGTH, "_l");
        $8794bbbb05868548$var$addGetter($8794bbbb05868548$var$$DataView, $8794bbbb05868548$var$BUFFER, "_b");
        $8794bbbb05868548$var$addGetter($8794bbbb05868548$var$$DataView, $8794bbbb05868548$var$BYTE_LENGTH, "_l");
        $8794bbbb05868548$var$addGetter($8794bbbb05868548$var$$DataView, $8794bbbb05868548$var$BYTE_OFFSET, "_o");
    }
    $hcrCL($8794bbbb05868548$var$$DataView[$8794bbbb05868548$var$PROTOTYPE], {
        getInt8: function getInt8(byteOffset) {
            return $8794bbbb05868548$var$get(this, 1, byteOffset)[0] << 24 >> 24;
        },
        getUint8: function getUint8(byteOffset) {
            return $8794bbbb05868548$var$get(this, 1, byteOffset)[0];
        },
        getInt16: function getInt16(byteOffset /* , littleEndian */ ) {
            var bytes = $8794bbbb05868548$var$get(this, 2, byteOffset, arguments[1]);
            return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
        },
        getUint16: function getUint16(byteOffset /* , littleEndian */ ) {
            var bytes = $8794bbbb05868548$var$get(this, 2, byteOffset, arguments[1]);
            return bytes[1] << 8 | bytes[0];
        },
        getInt32: function getInt32(byteOffset /* , littleEndian */ ) {
            return $8794bbbb05868548$var$unpackI32($8794bbbb05868548$var$get(this, 4, byteOffset, arguments[1]));
        },
        getUint32: function getUint32(byteOffset /* , littleEndian */ ) {
            return $8794bbbb05868548$var$unpackI32($8794bbbb05868548$var$get(this, 4, byteOffset, arguments[1])) >>> 0;
        },
        getFloat32: function getFloat32(byteOffset /* , littleEndian */ ) {
            return $8794bbbb05868548$var$unpackIEEE754($8794bbbb05868548$var$get(this, 4, byteOffset, arguments[1]), 23, 4);
        },
        getFloat64: function getFloat64(byteOffset /* , littleEndian */ ) {
            return $8794bbbb05868548$var$unpackIEEE754($8794bbbb05868548$var$get(this, 8, byteOffset, arguments[1]), 52, 8);
        },
        setInt8: function setInt8(byteOffset, value) {
            $8794bbbb05868548$var$set(this, 1, byteOffset, $8794bbbb05868548$var$packI8, value);
        },
        setUint8: function setUint8(byteOffset, value) {
            $8794bbbb05868548$var$set(this, 1, byteOffset, $8794bbbb05868548$var$packI8, value);
        },
        setInt16: function setInt16(byteOffset, value /* , littleEndian */ ) {
            $8794bbbb05868548$var$set(this, 2, byteOffset, $8794bbbb05868548$var$packI16, value, arguments[2]);
        },
        setUint16: function setUint16(byteOffset, value /* , littleEndian */ ) {
            $8794bbbb05868548$var$set(this, 2, byteOffset, $8794bbbb05868548$var$packI16, value, arguments[2]);
        },
        setInt32: function setInt32(byteOffset, value /* , littleEndian */ ) {
            $8794bbbb05868548$var$set(this, 4, byteOffset, $8794bbbb05868548$var$packI32, value, arguments[2]);
        },
        setUint32: function setUint32(byteOffset, value /* , littleEndian */ ) {
            $8794bbbb05868548$var$set(this, 4, byteOffset, $8794bbbb05868548$var$packI32, value, arguments[2]);
        },
        setFloat32: function setFloat32(byteOffset, value /* , littleEndian */ ) {
            $8794bbbb05868548$var$set(this, 4, byteOffset, $8794bbbb05868548$var$packF32, value, arguments[2]);
        },
        setFloat64: function setFloat64(byteOffset, value /* , littleEndian */ ) {
            $8794bbbb05868548$var$set(this, 8, byteOffset, $8794bbbb05868548$var$packF64, value, arguments[2]);
        }
    });
} else {
    if (!$hcpLn(function() {
        $8794bbbb05868548$var$$ArrayBuffer(1);
    }) || !$hcpLn(function() {
        new $8794bbbb05868548$var$$ArrayBuffer(-1); // eslint-disable-line no-new
    }) || $hcpLn(function() {
        new $8794bbbb05868548$var$$ArrayBuffer(); // eslint-disable-line no-new
        new $8794bbbb05868548$var$$ArrayBuffer(1.5); // eslint-disable-line no-new
        new $8794bbbb05868548$var$$ArrayBuffer(NaN); // eslint-disable-line no-new
        return $8794bbbb05868548$var$$ArrayBuffer.name != $8794bbbb05868548$var$ARRAY_BUFFER;
    })) {
        $8794bbbb05868548$var$$ArrayBuffer = function ArrayBuffer(length) {
            $4UEtt(this, $8794bbbb05868548$var$$ArrayBuffer);
            return new $8794bbbb05868548$var$BaseBuffer($25hWG(length));
        };
        var $8794bbbb05868548$var$ArrayBufferProto = $8794bbbb05868548$var$$ArrayBuffer[$8794bbbb05868548$var$PROTOTYPE] = $8794bbbb05868548$var$BaseBuffer[$8794bbbb05868548$var$PROTOTYPE];
        for(var $8794bbbb05868548$var$keys = $8794bbbb05868548$require$gOPN($8794bbbb05868548$var$BaseBuffer), $8794bbbb05868548$var$j = 0, $8794bbbb05868548$var$key; $8794bbbb05868548$var$keys.length > $8794bbbb05868548$var$j;)if (!(($8794bbbb05868548$var$key = $8794bbbb05868548$var$keys[$8794bbbb05868548$var$j++]) in $8794bbbb05868548$var$$ArrayBuffer)) $expki($8794bbbb05868548$var$$ArrayBuffer, $8794bbbb05868548$var$key, $8794bbbb05868548$var$BaseBuffer[$8794bbbb05868548$var$key]);
        if (!$jEzjy) $8794bbbb05868548$var$ArrayBufferProto.constructor = $8794bbbb05868548$var$$ArrayBuffer;
    }
    // iOS Safari 7.x bug
    var $8794bbbb05868548$var$view = new $8794bbbb05868548$var$$DataView(new $8794bbbb05868548$var$$ArrayBuffer(2));
    var $8794bbbb05868548$var$$setInt8 = $8794bbbb05868548$var$$DataView[$8794bbbb05868548$var$PROTOTYPE].setInt8;
    $8794bbbb05868548$var$view.setInt8(0, 2147483648);
    $8794bbbb05868548$var$view.setInt8(1, 2147483649);
    if ($8794bbbb05868548$var$view.getInt8(0) || !$8794bbbb05868548$var$view.getInt8(1)) $hcrCL($8794bbbb05868548$var$$DataView[$8794bbbb05868548$var$PROTOTYPE], {
        setInt8: function setInt8(byteOffset, value) {
            $8794bbbb05868548$var$$setInt8.call(this, byteOffset, value << 24 >> 24);
        },
        setUint8: function setUint8(byteOffset, value) {
            $8794bbbb05868548$var$$setInt8.call(this, byteOffset, value << 24 >> 24);
        }
    }, true);
}
$hMuUi($8794bbbb05868548$var$$ArrayBuffer, $8794bbbb05868548$var$ARRAY_BUFFER);
$hMuUi($8794bbbb05868548$var$$DataView, $8794bbbb05868548$var$DATA_VIEW);
$expki($8794bbbb05868548$var$$DataView[$8794bbbb05868548$var$PROTOTYPE], $cgXEb.VIEW, true);
module.exports[$8794bbbb05868548$var$ARRAY_BUFFER] = $8794bbbb05868548$var$$ArrayBuffer;
module.exports[$8794bbbb05868548$var$DATA_VIEW] = $8794bbbb05868548$var$$DataView;

});
parcelRequire.register("25hWG", function(module, exports) {

var $fEeDR = parcelRequire("fEeDR");

var $DZqmm = parcelRequire("DZqmm");
module.exports = function(it) {
    if (it === undefined) return 0;
    var number = $fEeDR(it);
    var length = $DZqmm(number);
    if (number !== length) throw RangeError("Wrong length!");
    return length;
};

});


parcelRequire.register("du7dW", function(module, exports) {
"use strict";







































if ((parcelRequire("3y86S"))) {
    var $9d13ae31a53d5778$var$LIBRARY = (parcelRequire("jEzjy"));
    var $9d13ae31a53d5778$var$global = (parcelRequire("gTAze"));
    var $9d13ae31a53d5778$var$fails = (parcelRequire("hcpLn"));
    var $9d13ae31a53d5778$var$$export = (parcelRequire("3B1Ky"));
    var $9d13ae31a53d5778$var$$typed = (parcelRequire("cgXEb"));
    var $9d13ae31a53d5778$var$$buffer = (parcelRequire("bDH3n"));
    var $9d13ae31a53d5778$var$ctx = (parcelRequire("7vO7i"));
    var $9d13ae31a53d5778$var$anInstance = (parcelRequire("4UEtt"));
    var $9d13ae31a53d5778$var$propertyDesc = (parcelRequire("87uCM"));
    var $9d13ae31a53d5778$var$hide = (parcelRequire("expki"));
    var $9d13ae31a53d5778$var$redefineAll = (parcelRequire("hcrCL"));
    var $9d13ae31a53d5778$var$toInteger = (parcelRequire("fEeDR"));
    var $9d13ae31a53d5778$var$toLength = (parcelRequire("DZqmm"));
    var $9d13ae31a53d5778$var$toIndex = (parcelRequire("25hWG"));
    var $9d13ae31a53d5778$var$toAbsoluteIndex = (parcelRequire("aselx"));
    var $9d13ae31a53d5778$var$toPrimitive = (parcelRequire("dapnX"));
    var $9d13ae31a53d5778$var$has = (parcelRequire("dS4Ut"));
    var $9d13ae31a53d5778$var$classof = (parcelRequire("bbWc2"));
    var $9d13ae31a53d5778$var$isObject = (parcelRequire("ly2vB"));
    var $9d13ae31a53d5778$var$toObject = (parcelRequire("6dhUj"));
    var $9d13ae31a53d5778$var$isArrayIter = (parcelRequire("4NkNf"));
    var $9d13ae31a53d5778$var$create = (parcelRequire("fKIsL"));
    var $9d13ae31a53d5778$var$getPrototypeOf = (parcelRequire("imZ0P"));
    var $9d13ae31a53d5778$var$gOPN = (parcelRequire("2WGYr")).f;
    var $9d13ae31a53d5778$var$getIterFn = (parcelRequire("4QM0B"));
    var $9d13ae31a53d5778$var$uid = (parcelRequire("dCUYV"));
    var $9d13ae31a53d5778$var$wks = (parcelRequire("5i4Lz"));
    var $9d13ae31a53d5778$var$createArrayMethod = (parcelRequire("9vq0S"));
    var $9d13ae31a53d5778$var$createArrayIncludes = (parcelRequire("4VU3O"));
    var $9d13ae31a53d5778$var$speciesConstructor = (parcelRequire("aKF9g"));
    var $9d13ae31a53d5778$var$ArrayIterators = (parcelRequire("j0YvL"));
    var $9d13ae31a53d5778$var$Iterators = (parcelRequire("6Zio4"));
    var $9d13ae31a53d5778$var$$iterDetect = (parcelRequire("cGAqi"));
    var $9d13ae31a53d5778$var$setSpecies = (parcelRequire("epMIB"));
    var $9d13ae31a53d5778$var$arrayFill = (parcelRequire("cSivE"));
    var $9d13ae31a53d5778$var$arrayCopyWithin = (parcelRequire("jak4y"));
    var $9d13ae31a53d5778$var$$DP = (parcelRequire("dLczm"));
    var $9d13ae31a53d5778$var$$GOPD = (parcelRequire("b0Bat"));
    var $9d13ae31a53d5778$var$dP = $9d13ae31a53d5778$var$$DP.f;
    var $9d13ae31a53d5778$var$gOPD = $9d13ae31a53d5778$var$$GOPD.f;
    var $9d13ae31a53d5778$var$RangeError = $9d13ae31a53d5778$var$global.RangeError;
    var $9d13ae31a53d5778$var$TypeError = $9d13ae31a53d5778$var$global.TypeError;
    var $9d13ae31a53d5778$var$Uint8Array = $9d13ae31a53d5778$var$global.Uint8Array;
    var $9d13ae31a53d5778$var$ARRAY_BUFFER = "ArrayBuffer";
    var $9d13ae31a53d5778$var$SHARED_BUFFER = "Shared" + $9d13ae31a53d5778$var$ARRAY_BUFFER;
    var $9d13ae31a53d5778$var$BYTES_PER_ELEMENT = "BYTES_PER_ELEMENT";
    var $9d13ae31a53d5778$var$PROTOTYPE = "prototype";
    var $9d13ae31a53d5778$var$ArrayProto = Array[$9d13ae31a53d5778$var$PROTOTYPE];
    var $9d13ae31a53d5778$var$$ArrayBuffer = $9d13ae31a53d5778$var$$buffer.ArrayBuffer;
    var $9d13ae31a53d5778$var$$DataView = $9d13ae31a53d5778$var$$buffer.DataView;
    var $9d13ae31a53d5778$var$arrayForEach = $9d13ae31a53d5778$var$createArrayMethod(0);
    var $9d13ae31a53d5778$var$arrayFilter = $9d13ae31a53d5778$var$createArrayMethod(2);
    var $9d13ae31a53d5778$var$arraySome = $9d13ae31a53d5778$var$createArrayMethod(3);
    var $9d13ae31a53d5778$var$arrayEvery = $9d13ae31a53d5778$var$createArrayMethod(4);
    var $9d13ae31a53d5778$var$arrayFind = $9d13ae31a53d5778$var$createArrayMethod(5);
    var $9d13ae31a53d5778$var$arrayFindIndex = $9d13ae31a53d5778$var$createArrayMethod(6);
    var $9d13ae31a53d5778$var$arrayIncludes = $9d13ae31a53d5778$var$createArrayIncludes(true);
    var $9d13ae31a53d5778$var$arrayIndexOf = $9d13ae31a53d5778$var$createArrayIncludes(false);
    var $9d13ae31a53d5778$var$arrayValues = $9d13ae31a53d5778$var$ArrayIterators.values;
    var $9d13ae31a53d5778$var$arrayKeys = $9d13ae31a53d5778$var$ArrayIterators.keys;
    var $9d13ae31a53d5778$var$arrayEntries = $9d13ae31a53d5778$var$ArrayIterators.entries;
    var $9d13ae31a53d5778$var$arrayLastIndexOf = $9d13ae31a53d5778$var$ArrayProto.lastIndexOf;
    var $9d13ae31a53d5778$var$arrayReduce = $9d13ae31a53d5778$var$ArrayProto.reduce;
    var $9d13ae31a53d5778$var$arrayReduceRight = $9d13ae31a53d5778$var$ArrayProto.reduceRight;
    var $9d13ae31a53d5778$var$arrayJoin = $9d13ae31a53d5778$var$ArrayProto.join;
    var $9d13ae31a53d5778$var$arraySort = $9d13ae31a53d5778$var$ArrayProto.sort;
    var $9d13ae31a53d5778$var$arraySlice = $9d13ae31a53d5778$var$ArrayProto.slice;
    var $9d13ae31a53d5778$var$arrayToString = $9d13ae31a53d5778$var$ArrayProto.toString;
    var $9d13ae31a53d5778$var$arrayToLocaleString = $9d13ae31a53d5778$var$ArrayProto.toLocaleString;
    var $9d13ae31a53d5778$var$ITERATOR = $9d13ae31a53d5778$var$wks("iterator");
    var $9d13ae31a53d5778$var$TAG = $9d13ae31a53d5778$var$wks("toStringTag");
    var $9d13ae31a53d5778$var$TYPED_CONSTRUCTOR = $9d13ae31a53d5778$var$uid("typed_constructor");
    var $9d13ae31a53d5778$var$DEF_CONSTRUCTOR = $9d13ae31a53d5778$var$uid("def_constructor");
    var $9d13ae31a53d5778$var$ALL_CONSTRUCTORS = $9d13ae31a53d5778$var$$typed.CONSTR;
    var $9d13ae31a53d5778$var$TYPED_ARRAY = $9d13ae31a53d5778$var$$typed.TYPED;
    var $9d13ae31a53d5778$var$VIEW = $9d13ae31a53d5778$var$$typed.VIEW;
    var $9d13ae31a53d5778$var$WRONG_LENGTH = "Wrong length!";
    var $9d13ae31a53d5778$var$$map = $9d13ae31a53d5778$var$createArrayMethod(1, function(O, length) {
        return $9d13ae31a53d5778$var$allocate($9d13ae31a53d5778$var$speciesConstructor(O, O[$9d13ae31a53d5778$var$DEF_CONSTRUCTOR]), length);
    });
    var $9d13ae31a53d5778$var$LITTLE_ENDIAN = $9d13ae31a53d5778$var$fails(function() {
        // eslint-disable-next-line no-undef
        return new $9d13ae31a53d5778$var$Uint8Array(new Uint16Array([
            1
        ]).buffer)[0] === 1;
    });
    var $9d13ae31a53d5778$var$FORCED_SET = !!$9d13ae31a53d5778$var$Uint8Array && !!$9d13ae31a53d5778$var$Uint8Array[$9d13ae31a53d5778$var$PROTOTYPE].set && $9d13ae31a53d5778$var$fails(function() {
        new $9d13ae31a53d5778$var$Uint8Array(1).set({});
    });
    var $9d13ae31a53d5778$var$toOffset = function(it, BYTES) {
        var offset = $9d13ae31a53d5778$var$toInteger(it);
        if (offset < 0 || offset % BYTES) throw $9d13ae31a53d5778$var$RangeError("Wrong offset!");
        return offset;
    };
    var $9d13ae31a53d5778$var$validate = function(it) {
        if ($9d13ae31a53d5778$var$isObject(it) && $9d13ae31a53d5778$var$TYPED_ARRAY in it) return it;
        throw $9d13ae31a53d5778$var$TypeError(it + " is not a typed array!");
    };
    var $9d13ae31a53d5778$var$allocate = function(C, length) {
        if (!($9d13ae31a53d5778$var$isObject(C) && $9d13ae31a53d5778$var$TYPED_CONSTRUCTOR in C)) throw $9d13ae31a53d5778$var$TypeError("It is not a typed array constructor!");
        return new C(length);
    };
    var $9d13ae31a53d5778$var$speciesFromList = function(O, list) {
        return $9d13ae31a53d5778$var$fromList($9d13ae31a53d5778$var$speciesConstructor(O, O[$9d13ae31a53d5778$var$DEF_CONSTRUCTOR]), list);
    };
    var $9d13ae31a53d5778$var$fromList = function(C, list) {
        var index = 0;
        var length = list.length;
        var result = $9d13ae31a53d5778$var$allocate(C, length);
        while(length > index)result[index] = list[index++];
        return result;
    };
    var $9d13ae31a53d5778$var$addGetter = function(it, key, internal) {
        $9d13ae31a53d5778$var$dP(it, key, {
            get: function() {
                return this._d[internal];
            }
        });
    };
    var $9d13ae31a53d5778$var$$from = function from(source /* , mapfn, thisArg */ ) {
        var O = $9d13ae31a53d5778$var$toObject(source);
        var aLen = arguments.length;
        var mapfn = aLen > 1 ? arguments[1] : undefined;
        var mapping = mapfn !== undefined;
        var iterFn = $9d13ae31a53d5778$var$getIterFn(O);
        var i, length, values, result, step, iterator;
        if (iterFn != undefined && !$9d13ae31a53d5778$var$isArrayIter(iterFn)) {
            for(iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++)values.push(step.value);
            O = values;
        }
        if (mapping && aLen > 2) mapfn = $9d13ae31a53d5778$var$ctx(mapfn, arguments[2], 2);
        for(i = 0, length = $9d13ae31a53d5778$var$toLength(O.length), result = $9d13ae31a53d5778$var$allocate(this, length); length > i; i++)result[i] = mapping ? mapfn(O[i], i) : O[i];
        return result;
    };
    var $9d13ae31a53d5778$var$$of = function of() {
        var index = 0;
        var length = arguments.length;
        var result = $9d13ae31a53d5778$var$allocate(this, length);
        while(length > index)result[index] = arguments[index++];
        return result;
    };
    // iOS Safari 6.x fails here
    var $9d13ae31a53d5778$var$TO_LOCALE_BUG = !!$9d13ae31a53d5778$var$Uint8Array && $9d13ae31a53d5778$var$fails(function() {
        $9d13ae31a53d5778$var$arrayToLocaleString.call(new $9d13ae31a53d5778$var$Uint8Array(1));
    });
    var $9d13ae31a53d5778$var$$toLocaleString = function toLocaleString() {
        return $9d13ae31a53d5778$var$arrayToLocaleString.apply($9d13ae31a53d5778$var$TO_LOCALE_BUG ? $9d13ae31a53d5778$var$arraySlice.call($9d13ae31a53d5778$var$validate(this)) : $9d13ae31a53d5778$var$validate(this), arguments);
    };
    var $9d13ae31a53d5778$var$proto = {
        copyWithin: function copyWithin(target, start /* , end */ ) {
            return $9d13ae31a53d5778$var$arrayCopyWithin.call($9d13ae31a53d5778$var$validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
        },
        every: function every(callbackfn /* , thisArg */ ) {
            return $9d13ae31a53d5778$var$arrayEvery($9d13ae31a53d5778$var$validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
        },
        fill: function fill(value /* , start, end */ ) {
            return $9d13ae31a53d5778$var$arrayFill.apply($9d13ae31a53d5778$var$validate(this), arguments);
        },
        filter: function filter(callbackfn /* , thisArg */ ) {
            return $9d13ae31a53d5778$var$speciesFromList(this, $9d13ae31a53d5778$var$arrayFilter($9d13ae31a53d5778$var$validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined));
        },
        find: function find(predicate /* , thisArg */ ) {
            return $9d13ae31a53d5778$var$arrayFind($9d13ae31a53d5778$var$validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
        },
        findIndex: function findIndex(predicate /* , thisArg */ ) {
            return $9d13ae31a53d5778$var$arrayFindIndex($9d13ae31a53d5778$var$validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
        },
        forEach: function forEach(callbackfn /* , thisArg */ ) {
            $9d13ae31a53d5778$var$arrayForEach($9d13ae31a53d5778$var$validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
        },
        indexOf: function indexOf(searchElement /* , fromIndex */ ) {
            return $9d13ae31a53d5778$var$arrayIndexOf($9d13ae31a53d5778$var$validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
        },
        includes: function includes(searchElement /* , fromIndex */ ) {
            return $9d13ae31a53d5778$var$arrayIncludes($9d13ae31a53d5778$var$validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
        },
        join: function join(separator) {
            return $9d13ae31a53d5778$var$arrayJoin.apply($9d13ae31a53d5778$var$validate(this), arguments);
        },
        lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */ ) {
            return $9d13ae31a53d5778$var$arrayLastIndexOf.apply($9d13ae31a53d5778$var$validate(this), arguments);
        },
        map: function map(mapfn /* , thisArg */ ) {
            return $9d13ae31a53d5778$var$$map($9d13ae31a53d5778$var$validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
        },
        reduce: function reduce(callbackfn /* , initialValue */ ) {
            return $9d13ae31a53d5778$var$arrayReduce.apply($9d13ae31a53d5778$var$validate(this), arguments);
        },
        reduceRight: function reduceRight(callbackfn /* , initialValue */ ) {
            return $9d13ae31a53d5778$var$arrayReduceRight.apply($9d13ae31a53d5778$var$validate(this), arguments);
        },
        reverse: function reverse() {
            var that = this;
            var length = $9d13ae31a53d5778$var$validate(that).length;
            var middle = Math.floor(length / 2);
            var index = 0;
            var value;
            while(index < middle){
                value = that[index];
                that[index++] = that[--length];
                that[length] = value;
            }
            return that;
        },
        some: function some(callbackfn /* , thisArg */ ) {
            return $9d13ae31a53d5778$var$arraySome($9d13ae31a53d5778$var$validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
        },
        sort: function sort(comparefn) {
            return $9d13ae31a53d5778$var$arraySort.call($9d13ae31a53d5778$var$validate(this), comparefn);
        },
        subarray: function subarray(begin, end) {
            var O = $9d13ae31a53d5778$var$validate(this);
            var length = O.length;
            var $begin = $9d13ae31a53d5778$var$toAbsoluteIndex(begin, length);
            return new ($9d13ae31a53d5778$var$speciesConstructor(O, O[$9d13ae31a53d5778$var$DEF_CONSTRUCTOR]))(O.buffer, O.byteOffset + $begin * O.BYTES_PER_ELEMENT, $9d13ae31a53d5778$var$toLength((end === undefined ? length : $9d13ae31a53d5778$var$toAbsoluteIndex(end, length)) - $begin));
        }
    };
    var $9d13ae31a53d5778$var$$slice = function slice(start, end) {
        return $9d13ae31a53d5778$var$speciesFromList(this, $9d13ae31a53d5778$var$arraySlice.call($9d13ae31a53d5778$var$validate(this), start, end));
    };
    var $9d13ae31a53d5778$var$$set = function set(arrayLike /* , offset */ ) {
        $9d13ae31a53d5778$var$validate(this);
        var offset = $9d13ae31a53d5778$var$toOffset(arguments[1], 1);
        var length = this.length;
        var src = $9d13ae31a53d5778$var$toObject(arrayLike);
        var len = $9d13ae31a53d5778$var$toLength(src.length);
        var index = 0;
        if (len + offset > length) throw $9d13ae31a53d5778$var$RangeError($9d13ae31a53d5778$var$WRONG_LENGTH);
        while(index < len)this[offset + index] = src[index++];
    };
    var $9d13ae31a53d5778$var$$iterators = {
        entries: function entries() {
            return $9d13ae31a53d5778$var$arrayEntries.call($9d13ae31a53d5778$var$validate(this));
        },
        keys: function keys() {
            return $9d13ae31a53d5778$var$arrayKeys.call($9d13ae31a53d5778$var$validate(this));
        },
        values: function values() {
            return $9d13ae31a53d5778$var$arrayValues.call($9d13ae31a53d5778$var$validate(this));
        }
    };
    var $9d13ae31a53d5778$var$isTAIndex = function(target, key) {
        return $9d13ae31a53d5778$var$isObject(target) && target[$9d13ae31a53d5778$var$TYPED_ARRAY] && typeof key != "symbol" && key in target && String(+key) == String(key);
    };
    var $9d13ae31a53d5778$var$$getDesc = function getOwnPropertyDescriptor(target, key) {
        return $9d13ae31a53d5778$var$isTAIndex(target, key = $9d13ae31a53d5778$var$toPrimitive(key, true)) ? $9d13ae31a53d5778$var$propertyDesc(2, target[key]) : $9d13ae31a53d5778$var$gOPD(target, key);
    };
    var $9d13ae31a53d5778$var$$setDesc = function defineProperty(target, key, desc) {
        if ($9d13ae31a53d5778$var$isTAIndex(target, key = $9d13ae31a53d5778$var$toPrimitive(key, true)) && $9d13ae31a53d5778$var$isObject(desc) && $9d13ae31a53d5778$var$has(desc, "value") && !$9d13ae31a53d5778$var$has(desc, "get") && !$9d13ae31a53d5778$var$has(desc, "set") && !desc.configurable && (!$9d13ae31a53d5778$var$has(desc, "writable") || desc.writable) && (!$9d13ae31a53d5778$var$has(desc, "enumerable") || desc.enumerable)) {
            target[key] = desc.value;
            return target;
        }
        return $9d13ae31a53d5778$var$dP(target, key, desc);
    };
    if (!$9d13ae31a53d5778$var$ALL_CONSTRUCTORS) {
        $9d13ae31a53d5778$var$$GOPD.f = $9d13ae31a53d5778$var$$getDesc;
        $9d13ae31a53d5778$var$$DP.f = $9d13ae31a53d5778$var$$setDesc;
    }
    $9d13ae31a53d5778$var$$export($9d13ae31a53d5778$var$$export.S + $9d13ae31a53d5778$var$$export.F * !$9d13ae31a53d5778$var$ALL_CONSTRUCTORS, "Object", {
        getOwnPropertyDescriptor: $9d13ae31a53d5778$var$$getDesc,
        defineProperty: $9d13ae31a53d5778$var$$setDesc
    });
    if ($9d13ae31a53d5778$var$fails(function() {
        $9d13ae31a53d5778$var$arrayToString.call({});
    })) $9d13ae31a53d5778$var$arrayToString = $9d13ae31a53d5778$var$arrayToLocaleString = function toString() {
        return $9d13ae31a53d5778$var$arrayJoin.call(this);
    };
    var $9d13ae31a53d5778$var$$TypedArrayPrototype$ = $9d13ae31a53d5778$var$redefineAll({}, $9d13ae31a53d5778$var$proto);
    $9d13ae31a53d5778$var$redefineAll($9d13ae31a53d5778$var$$TypedArrayPrototype$, $9d13ae31a53d5778$var$$iterators);
    $9d13ae31a53d5778$var$hide($9d13ae31a53d5778$var$$TypedArrayPrototype$, $9d13ae31a53d5778$var$ITERATOR, $9d13ae31a53d5778$var$$iterators.values);
    $9d13ae31a53d5778$var$redefineAll($9d13ae31a53d5778$var$$TypedArrayPrototype$, {
        slice: $9d13ae31a53d5778$var$$slice,
        set: $9d13ae31a53d5778$var$$set,
        constructor: function() {},
        toString: $9d13ae31a53d5778$var$arrayToString,
        toLocaleString: $9d13ae31a53d5778$var$$toLocaleString
    });
    $9d13ae31a53d5778$var$addGetter($9d13ae31a53d5778$var$$TypedArrayPrototype$, "buffer", "b");
    $9d13ae31a53d5778$var$addGetter($9d13ae31a53d5778$var$$TypedArrayPrototype$, "byteOffset", "o");
    $9d13ae31a53d5778$var$addGetter($9d13ae31a53d5778$var$$TypedArrayPrototype$, "byteLength", "l");
    $9d13ae31a53d5778$var$addGetter($9d13ae31a53d5778$var$$TypedArrayPrototype$, "length", "e");
    $9d13ae31a53d5778$var$dP($9d13ae31a53d5778$var$$TypedArrayPrototype$, $9d13ae31a53d5778$var$TAG, {
        get: function() {
            return this[$9d13ae31a53d5778$var$TYPED_ARRAY];
        }
    });
    // eslint-disable-next-line max-statements
    module.exports = function(KEY, BYTES, wrapper, CLAMPED) {
        CLAMPED = !!CLAMPED;
        var NAME = KEY + (CLAMPED ? "Clamped" : "") + "Array";
        var GETTER = "get" + KEY;
        var SETTER = "set" + KEY;
        var TypedArray = $9d13ae31a53d5778$var$global[NAME];
        var Base = TypedArray || {};
        var TAC = TypedArray && $9d13ae31a53d5778$var$getPrototypeOf(TypedArray);
        var FORCED = !TypedArray || !$9d13ae31a53d5778$var$$typed.ABV;
        var O = {};
        var TypedArrayPrototype = TypedArray && TypedArray[$9d13ae31a53d5778$var$PROTOTYPE];
        var getter = function(that, index) {
            var data = that._d;
            return data.v[GETTER](index * BYTES + data.o, $9d13ae31a53d5778$var$LITTLE_ENDIAN);
        };
        var setter = function(that, index, value) {
            var data = that._d;
            if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
            data.v[SETTER](index * BYTES + data.o, value, $9d13ae31a53d5778$var$LITTLE_ENDIAN);
        };
        var addElement = function(that, index) {
            $9d13ae31a53d5778$var$dP(that, index, {
                get: function() {
                    return getter(this, index);
                },
                set: function(value) {
                    return setter(this, index, value);
                },
                enumerable: true
            });
        };
        if (FORCED) {
            TypedArray = wrapper(function(that, data, $offset, $length) {
                $9d13ae31a53d5778$var$anInstance(that, TypedArray, NAME, "_d");
                var index = 0;
                var offset = 0;
                var buffer, byteLength, length, klass;
                if (!$9d13ae31a53d5778$var$isObject(data)) {
                    length = $9d13ae31a53d5778$var$toIndex(data);
                    byteLength = length * BYTES;
                    buffer = new $9d13ae31a53d5778$var$$ArrayBuffer(byteLength);
                } else if (data instanceof $9d13ae31a53d5778$var$$ArrayBuffer || (klass = $9d13ae31a53d5778$var$classof(data)) == $9d13ae31a53d5778$var$ARRAY_BUFFER || klass == $9d13ae31a53d5778$var$SHARED_BUFFER) {
                    buffer = data;
                    offset = $9d13ae31a53d5778$var$toOffset($offset, BYTES);
                    var $len = data.byteLength;
                    if ($length === undefined) {
                        if ($len % BYTES) throw $9d13ae31a53d5778$var$RangeError($9d13ae31a53d5778$var$WRONG_LENGTH);
                        byteLength = $len - offset;
                        if (byteLength < 0) throw $9d13ae31a53d5778$var$RangeError($9d13ae31a53d5778$var$WRONG_LENGTH);
                    } else {
                        byteLength = $9d13ae31a53d5778$var$toLength($length) * BYTES;
                        if (byteLength + offset > $len) throw $9d13ae31a53d5778$var$RangeError($9d13ae31a53d5778$var$WRONG_LENGTH);
                    }
                    length = byteLength / BYTES;
                } else if ($9d13ae31a53d5778$var$TYPED_ARRAY in data) return $9d13ae31a53d5778$var$fromList(TypedArray, data);
                else return $9d13ae31a53d5778$var$$from.call(TypedArray, data);
                $9d13ae31a53d5778$var$hide(that, "_d", {
                    b: buffer,
                    o: offset,
                    l: byteLength,
                    e: length,
                    v: new $9d13ae31a53d5778$var$$DataView(buffer)
                });
                while(index < length)addElement(that, index++);
            });
            TypedArrayPrototype = TypedArray[$9d13ae31a53d5778$var$PROTOTYPE] = $9d13ae31a53d5778$var$create($9d13ae31a53d5778$var$$TypedArrayPrototype$);
            $9d13ae31a53d5778$var$hide(TypedArrayPrototype, "constructor", TypedArray);
        } else if (!$9d13ae31a53d5778$var$fails(function() {
            TypedArray(1);
        }) || !$9d13ae31a53d5778$var$fails(function() {
            new TypedArray(-1); // eslint-disable-line no-new
        }) || !$9d13ae31a53d5778$var$$iterDetect(function(iter) {
            new TypedArray(); // eslint-disable-line no-new
            new TypedArray(null); // eslint-disable-line no-new
            new TypedArray(1.5); // eslint-disable-line no-new
            new TypedArray(iter); // eslint-disable-line no-new
        }, true)) {
            TypedArray = wrapper(function(that, data, $offset, $length) {
                $9d13ae31a53d5778$var$anInstance(that, TypedArray, NAME);
                var klass;
                // `ws` module bug, temporarily remove validation length for Uint8Array
                // https://github.com/websockets/ws/pull/645
                if (!$9d13ae31a53d5778$var$isObject(data)) return new Base($9d13ae31a53d5778$var$toIndex(data));
                if (data instanceof $9d13ae31a53d5778$var$$ArrayBuffer || (klass = $9d13ae31a53d5778$var$classof(data)) == $9d13ae31a53d5778$var$ARRAY_BUFFER || klass == $9d13ae31a53d5778$var$SHARED_BUFFER) return $length !== undefined ? new Base(data, $9d13ae31a53d5778$var$toOffset($offset, BYTES), $length) : $offset !== undefined ? new Base(data, $9d13ae31a53d5778$var$toOffset($offset, BYTES)) : new Base(data);
                if ($9d13ae31a53d5778$var$TYPED_ARRAY in data) return $9d13ae31a53d5778$var$fromList(TypedArray, data);
                return $9d13ae31a53d5778$var$$from.call(TypedArray, data);
            });
            $9d13ae31a53d5778$var$arrayForEach(TAC !== Function.prototype ? $9d13ae31a53d5778$var$gOPN(Base).concat($9d13ae31a53d5778$var$gOPN(TAC)) : $9d13ae31a53d5778$var$gOPN(Base), function(key) {
                if (!(key in TypedArray)) $9d13ae31a53d5778$var$hide(TypedArray, key, Base[key]);
            });
            TypedArray[$9d13ae31a53d5778$var$PROTOTYPE] = TypedArrayPrototype;
            if (!$9d13ae31a53d5778$var$LIBRARY) TypedArrayPrototype.constructor = TypedArray;
        }
        var $nativeIterator = TypedArrayPrototype[$9d13ae31a53d5778$var$ITERATOR];
        var CORRECT_ITER_NAME = !!$nativeIterator && ($nativeIterator.name == "values" || $nativeIterator.name == undefined);
        var $iterator = $9d13ae31a53d5778$var$$iterators.values;
        $9d13ae31a53d5778$var$hide(TypedArray, $9d13ae31a53d5778$var$TYPED_CONSTRUCTOR, true);
        $9d13ae31a53d5778$var$hide(TypedArrayPrototype, $9d13ae31a53d5778$var$TYPED_ARRAY, NAME);
        $9d13ae31a53d5778$var$hide(TypedArrayPrototype, $9d13ae31a53d5778$var$VIEW, true);
        $9d13ae31a53d5778$var$hide(TypedArrayPrototype, $9d13ae31a53d5778$var$DEF_CONSTRUCTOR, TypedArray);
        if (CLAMPED ? new TypedArray(1)[$9d13ae31a53d5778$var$TAG] != NAME : !($9d13ae31a53d5778$var$TAG in TypedArrayPrototype)) $9d13ae31a53d5778$var$dP(TypedArrayPrototype, $9d13ae31a53d5778$var$TAG, {
            get: function() {
                return NAME;
            }
        });
        O[NAME] = TypedArray;
        $9d13ae31a53d5778$var$$export($9d13ae31a53d5778$var$$export.G + $9d13ae31a53d5778$var$$export.W + $9d13ae31a53d5778$var$$export.F * (TypedArray != Base), O);
        $9d13ae31a53d5778$var$$export($9d13ae31a53d5778$var$$export.S, NAME, {
            BYTES_PER_ELEMENT: BYTES
        });
        $9d13ae31a53d5778$var$$export($9d13ae31a53d5778$var$$export.S + $9d13ae31a53d5778$var$$export.F * $9d13ae31a53d5778$var$fails(function() {
            Base.of.call(TypedArray, 1);
        }), NAME, {
            from: $9d13ae31a53d5778$var$$from,
            of: $9d13ae31a53d5778$var$$of
        });
        if (!($9d13ae31a53d5778$var$BYTES_PER_ELEMENT in TypedArrayPrototype)) $9d13ae31a53d5778$var$hide(TypedArrayPrototype, $9d13ae31a53d5778$var$BYTES_PER_ELEMENT, BYTES);
        $9d13ae31a53d5778$var$$export($9d13ae31a53d5778$var$$export.P, NAME, $9d13ae31a53d5778$var$proto);
        $9d13ae31a53d5778$var$setSpecies(NAME);
        $9d13ae31a53d5778$var$$export($9d13ae31a53d5778$var$$export.P + $9d13ae31a53d5778$var$$export.F * $9d13ae31a53d5778$var$FORCED_SET, NAME, {
            set: $9d13ae31a53d5778$var$$set
        });
        $9d13ae31a53d5778$var$$export($9d13ae31a53d5778$var$$export.P + $9d13ae31a53d5778$var$$export.F * !CORRECT_ITER_NAME, NAME, $9d13ae31a53d5778$var$$iterators);
        if (!$9d13ae31a53d5778$var$LIBRARY && TypedArrayPrototype.toString != $9d13ae31a53d5778$var$arrayToString) TypedArrayPrototype.toString = $9d13ae31a53d5778$var$arrayToString;
        $9d13ae31a53d5778$var$$export($9d13ae31a53d5778$var$$export.P + $9d13ae31a53d5778$var$$export.F * $9d13ae31a53d5778$var$fails(function() {
            new TypedArray(1).slice();
        }), NAME, {
            slice: $9d13ae31a53d5778$var$$slice
        });
        $9d13ae31a53d5778$var$$export($9d13ae31a53d5778$var$$export.P + $9d13ae31a53d5778$var$$export.F * ($9d13ae31a53d5778$var$fails(function() {
            return [
                1,
                2
            ].toLocaleString() != new TypedArray([
                1,
                2
            ]).toLocaleString();
        }) || !$9d13ae31a53d5778$var$fails(function() {
            TypedArrayPrototype.toLocaleString.call([
                1,
                2
            ]);
        })), NAME, {
            toLocaleString: $9d13ae31a53d5778$var$$toLocaleString
        });
        $9d13ae31a53d5778$var$Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
        if (!$9d13ae31a53d5778$var$LIBRARY && !CORRECT_ITER_NAME) $9d13ae31a53d5778$var$hide(TypedArrayPrototype, $9d13ae31a53d5778$var$ITERATOR, $iterator);
    };
} else module.exports = function() {};

});

parcelRequire.register("48gXI", function(module, exports) {

var $2WGYr = parcelRequire("2WGYr");

var $bz7J4 = parcelRequire("bz7J4");

var $euAZz = parcelRequire("euAZz");

var $gTAze = parcelRequire("gTAze");
var $30251115e8fec33e$require$Reflect = $gTAze.Reflect;
module.exports = $30251115e8fec33e$require$Reflect && $30251115e8fec33e$require$Reflect.ownKeys || function ownKeys(it) {
    var keys = $2WGYr.f($euAZz(it));
    var getSymbols = $bz7J4.f;
    return getSymbols ? keys.concat(getSymbols(it)) : keys;
};

});

parcelRequire.register("8obHc", function(module, exports) {

var $3y86S = parcelRequire("3y86S");

var $isffO = parcelRequire("isffO");

var $fHwma = parcelRequire("fHwma");

var $cXyZT = parcelRequire("cXyZT");
var $61b9a3247c198ac7$require$isEnum = $cXyZT.f;
module.exports = function(isEntries) {
    return function(it) {
        var O = $fHwma(it);
        var keys = $isffO(O);
        var length = keys.length;
        var i = 0;
        var result = [];
        var key;
        while(length > i){
            key = keys[i++];
            if (!$3y86S || $61b9a3247c198ac7$require$isEnum.call(O, key)) result.push(isEntries ? [
                key,
                O[key]
            ] : O[key]);
        }
        return result;
    };
};

});

parcelRequire.register("hNa3Q", function(module, exports) {
"use strict";



// Forced replacement prototype accessors methods
module.exports = (parcelRequire("jEzjy")) || !(parcelRequire("hcpLn"))(function() {
    var K = Math.random();
    // In FF throws only define methods
    // eslint-disable-next-line no-undef, no-useless-call
    __defineSetter__.call(null, K, function() {});
    delete (parcelRequire("gTAze"))[K];
});

});

parcelRequire.register("dlu6P", function(module, exports) {

var $bbWc2 = parcelRequire("bbWc2");

var $fBIyW = parcelRequire("fBIyW");
module.exports = function(NAME) {
    return function toJSON() {
        if ($bbWc2(this) != NAME) throw TypeError(NAME + "#toJSON isn't generic");
        return $fBIyW(this);
    };
};

});
parcelRequire.register("fBIyW", function(module, exports) {

var $bXt2A = parcelRequire("bXt2A");
module.exports = function(iter, ITERATOR) {
    var result = [];
    $bXt2A(iter, false, result.push, result, ITERATOR);
    return result;
};

});


parcelRequire.register("gUpXO", function(module, exports) {
"use strict";

var $3B1Ky = parcelRequire("3B1Ky");
module.exports = function(COLLECTION) {
    $3B1Ky($3B1Ky.S, COLLECTION, {
        of: function of() {
            var length = arguments.length;
            var A = new Array(length);
            while(length--)A[length] = arguments[length];
            return new this(A);
        }
    });
};

});

parcelRequire.register("274XZ", function(module, exports) {
"use strict";

var $3B1Ky = parcelRequire("3B1Ky");

var $1C6Y9 = parcelRequire("1C6Y9");

var $7vO7i = parcelRequire("7vO7i");

var $bXt2A = parcelRequire("bXt2A");
module.exports = function(COLLECTION) {
    $3B1Ky($3B1Ky.S, COLLECTION, {
        from: function from(source /* , mapFn, thisArg */ ) {
            var mapFn = arguments[1];
            var mapping, A, n, cb;
            $1C6Y9(this);
            mapping = mapFn !== undefined;
            if (mapping) $1C6Y9(mapFn);
            if (source == undefined) return new this();
            A = [];
            if (mapping) {
                n = 0;
                cb = $7vO7i(mapFn, arguments[2], 2);
                $bXt2A(source, false, function(nextItem) {
                    A.push(cb(nextItem, n++));
                });
            } else $bXt2A(source, false, A.push, A);
            return new this(A);
        }
    });
};

});

parcelRequire.register("7ARVO", function(module, exports) {
// https://rwaldron.github.io/proposal-math-extensions/
module.exports = Math.scale || function scale(x, inLow, inHigh, outLow, outHigh) {
    if (arguments.length === 0 || x != x || inLow != inLow || inHigh != inHigh || outLow != outLow || outHigh != outHigh) return NaN;
    if (x === Infinity || x === -Infinity) return x;
    return (x - inLow) * (outHigh - outLow) / (inHigh - inLow) + outLow;
};

});

parcelRequire.register("gH3rf", function(module, exports) {
module.exports = function(regExp, replace) {
    var replacer = replace === Object(replace) ? function(part) {
        return replace[part];
    } : replace;
    return function(it) {
        return String(it).replace(regExp, replacer);
    };
};

});

parcelRequire.register("67fdF", function(module, exports) {
/*! jQuery v3.6.1 | (c) OpenJS Foundation and other contributors | jquery.org/license */ !function(e, t) {
    "use strict";
    "object" == typeof module.exports ? module.exports = e.document ? t(e, !0) : function(e) {
        if (!e.document) throw new Error("jQuery requires a window with a document");
        return t(e);
    } : t(e);
}("undefined" != typeof window ? window : module.exports, function(C, e) {
    "use strict";
    var t = [], r = Object.getPrototypeOf, s = t.slice, g = t.flat ? function(e) {
        return t.flat.call(e);
    } : function(e) {
        return t.concat.apply([], e);
    }, u = t.push, i = t.indexOf, n = {}, o = n.toString, y = n.hasOwnProperty, a = y.toString, l = a.call(Object), v = {}, m = function(e) {
        return "function" == typeof e && "number" != typeof e.nodeType && "function" != typeof e.item;
    }, x = function(e) {
        return null != e && e === e.window;
    }, E = C.document, c = {
        type: !0,
        src: !0,
        nonce: !0,
        noModule: !0
    };
    function b(e, t, n) {
        var r, i, o = (n = n || E).createElement("script");
        if (o.text = e, t) for(r in c)(i = t[r] || t.getAttribute && t.getAttribute(r)) && o.setAttribute(r, i);
        n.head.appendChild(o).parentNode.removeChild(o);
    }
    function w(e) {
        return null == e ? e + "" : "object" == typeof e || "function" == typeof e ? n[o.call(e)] || "object" : typeof e;
    }
    var f = "3.6.1", S = function(e, t) {
        return new S.fn.init(e, t);
    };
    function p(e) {
        var t = !!e && "length" in e && e.length, n = w(e);
        return !m(e) && !x(e) && ("array" === n || 0 === t || "number" == typeof t && 0 < t && t - 1 in e);
    }
    S.fn = S.prototype = {
        jquery: f,
        constructor: S,
        length: 0,
        toArray: function() {
            return s.call(this);
        },
        get: function(e) {
            return null == e ? s.call(this) : e < 0 ? this[e + this.length] : this[e];
        },
        pushStack: function(e) {
            var t = S.merge(this.constructor(), e);
            return t.prevObject = this, t;
        },
        each: function(e) {
            return S.each(this, e);
        },
        map: function(n) {
            return this.pushStack(S.map(this, function(e, t) {
                return n.call(e, t, e);
            }));
        },
        slice: function() {
            return this.pushStack(s.apply(this, arguments));
        },
        first: function() {
            return this.eq(0);
        },
        last: function() {
            return this.eq(-1);
        },
        even: function() {
            return this.pushStack(S.grep(this, function(e, t) {
                return (t + 1) % 2;
            }));
        },
        odd: function() {
            return this.pushStack(S.grep(this, function(e, t) {
                return t % 2;
            }));
        },
        eq: function(e) {
            var t = this.length, n = +e + (e < 0 ? t : 0);
            return this.pushStack(0 <= n && n < t ? [
                this[n]
            ] : []);
        },
        end: function() {
            return this.prevObject || this.constructor();
        },
        push: u,
        sort: t.sort,
        splice: t.splice
    }, S.extend = S.fn.extend = function() {
        var e, t, n, r, i, o, a = arguments[0] || {}, s = 1, u = arguments.length, l = !1;
        for("boolean" == typeof a && (l = a, a = arguments[s] || {}, s++), "object" == typeof a || m(a) || (a = {}), s === u && (a = this, s--); s < u; s++)if (null != (e = arguments[s])) for(t in e)r = e[t], "__proto__" !== t && a !== r && (l && r && (S.isPlainObject(r) || (i = Array.isArray(r))) ? (n = a[t], o = i && !Array.isArray(n) ? [] : i || S.isPlainObject(n) ? n : {}, i = !1, a[t] = S.extend(l, o, r)) : void 0 !== r && (a[t] = r));
        return a;
    }, S.extend({
        expando: "jQuery" + (f + Math.random()).replace(/\D/g, ""),
        isReady: !0,
        error: function(e) {
            throw new Error(e);
        },
        noop: function() {},
        isPlainObject: function(e) {
            var t, n;
            return !(!e || "[object Object]" !== o.call(e)) && (!(t = r(e)) || "function" == typeof (n = y.call(t, "constructor") && t.constructor) && a.call(n) === l);
        },
        isEmptyObject: function(e) {
            var t;
            for(t in e)return !1;
            return !0;
        },
        globalEval: function(e, t, n) {
            b(e, {
                nonce: t && t.nonce
            }, n);
        },
        each: function(e, t) {
            var n, r = 0;
            if (p(e)) {
                for(n = e.length; r < n; r++)if (!1 === t.call(e[r], r, e[r])) break;
            } else for(r in e)if (!1 === t.call(e[r], r, e[r])) break;
            return e;
        },
        makeArray: function(e, t) {
            var n = t || [];
            return null != e && (p(Object(e)) ? S.merge(n, "string" == typeof e ? [
                e
            ] : e) : u.call(n, e)), n;
        },
        inArray: function(e, t, n) {
            return null == t ? -1 : i.call(t, e, n);
        },
        merge: function(e, t) {
            for(var n = +t.length, r = 0, i = e.length; r < n; r++)e[i++] = t[r];
            return e.length = i, e;
        },
        grep: function(e, t, n) {
            for(var r = [], i = 0, o = e.length, a = !n; i < o; i++)!t(e[i], i) !== a && r.push(e[i]);
            return r;
        },
        map: function(e, t, n) {
            var r, i, o = 0, a = [];
            if (p(e)) for(r = e.length; o < r; o++)null != (i = t(e[o], o, n)) && a.push(i);
            else for(o in e)null != (i = t(e[o], o, n)) && a.push(i);
            return g(a);
        },
        guid: 1,
        support: v
    }), "function" == typeof Symbol && (S.fn[Symbol.iterator] = t[Symbol.iterator]), S.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(e, t) {
        n["[object " + t + "]"] = t.toLowerCase();
    });
    var d = function(n) {
        var e, d, b, o, i, h, f, g, w, u, l, T, C, a, E, y, s, c, v, S = "sizzle" + 1 * new Date, p = n.document, k = 0, r = 0, m = ue(), x = ue(), A = ue(), N = ue(), j = function(e, t) {
            return e === t && (l = !0), 0;
        }, D = {}.hasOwnProperty, t = [], q = t.pop, L = t.push, H = t.push, O = t.slice, P = function(e, t) {
            for(var n = 0, r = e.length; n < r; n++)if (e[n] === t) return n;
            return -1;
        }, R = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", M = "[\\x20\\t\\r\\n\\f]", I = "(?:\\\\[\\da-fA-F]{1,6}" + M + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+", W = "\\[" + M + "*(" + I + ")(?:" + M + "*([*^$|!~]?=)" + M + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + I + "))|)" + M + "*\\]", F = ":(" + I + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + W + ")*)|.*)\\)|)", $ = new RegExp(M + "+", "g"), B = new RegExp("^" + M + "+|((?:^|[^\\\\])(?:\\\\.)*)" + M + "+$", "g"), _ = new RegExp("^" + M + "*," + M + "*"), z = new RegExp("^" + M + "*([>+~]|" + M + ")" + M + "*"), U = new RegExp(M + "|>"), X = new RegExp(F), V = new RegExp("^" + I + "$"), G = {
            ID: new RegExp("^#(" + I + ")"),
            CLASS: new RegExp("^\\.(" + I + ")"),
            TAG: new RegExp("^(" + I + "|[*])"),
            ATTR: new RegExp("^" + W),
            PSEUDO: new RegExp("^" + F),
            CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + M + "*(even|odd|(([+-]|)(\\d*)n|)" + M + "*(?:([+-]|)" + M + "*(\\d+)|))" + M + "*\\)|)", "i"),
            bool: new RegExp("^(?:" + R + ")$", "i"),
            needsContext: new RegExp("^" + M + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + M + "*((?:-\\d)?\\d*)" + M + "*\\)|)(?=[^-]|$)", "i")
        }, Y = /HTML$/i, Q = /^(?:input|select|textarea|button)$/i, J = /^h\d$/i, K = /^[^{]+\{\s*\[native \w/, Z = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, ee = /[+~]/, te = new RegExp("\\\\[\\da-fA-F]{1,6}" + M + "?|\\\\([^\\r\\n\\f])", "g"), ne = function(e, t) {
            var n = "0x" + e.slice(1) - 65536;
            return t || (n < 0 ? String.fromCharCode(n + 65536) : String.fromCharCode(n >> 10 | 55296, 1023 & n | 56320));
        }, re = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g, ie = function(e, t) {
            return t ? "\0" === e ? "�" : e.slice(0, -1) + "\\" + e.charCodeAt(e.length - 1).toString(16) + " " : "\\" + e;
        }, oe = function() {
            T();
        }, ae = be(function(e) {
            return !0 === e.disabled && "fieldset" === e.nodeName.toLowerCase();
        }, {
            dir: "parentNode",
            next: "legend"
        });
        try {
            H.apply(t = O.call(p.childNodes), p.childNodes), t[p.childNodes.length].nodeType;
        } catch (e1) {
            H = {
                apply: t.length ? function(e, t) {
                    L.apply(e, O.call(t));
                } : function(e, t) {
                    var n = e.length, r = 0;
                    while(e[n++] = t[r++]);
                    e.length = n - 1;
                }
            };
        }
        function se(t, e, n, r) {
            var i, o, a, s, u, l, c, f = e && e.ownerDocument, p = e ? e.nodeType : 9;
            if (n = n || [], "string" != typeof t || !t || 1 !== p && 9 !== p && 11 !== p) return n;
            if (!r && (T(e), e = e || C, E)) {
                if (11 !== p && (u = Z.exec(t))) {
                    if (i = u[1]) {
                        if (9 === p) {
                            if (!(a = e.getElementById(i))) return n;
                            if (a.id === i) return n.push(a), n;
                        } else if (f && (a = f.getElementById(i)) && v(e, a) && a.id === i) return n.push(a), n;
                    } else {
                        if (u[2]) return H.apply(n, e.getElementsByTagName(t)), n;
                        if ((i = u[3]) && d.getElementsByClassName && e.getElementsByClassName) return H.apply(n, e.getElementsByClassName(i)), n;
                    }
                }
                if (d.qsa && !N[t + " "] && (!y || !y.test(t)) && (1 !== p || "object" !== e.nodeName.toLowerCase())) {
                    if (c = t, f = e, 1 === p && (U.test(t) || z.test(t))) {
                        (f = ee.test(t) && ve(e.parentNode) || e) === e && d.scope || ((s = e.getAttribute("id")) ? s = s.replace(re, ie) : e.setAttribute("id", s = S)), o = (l = h(t)).length;
                        while(o--)l[o] = (s ? "#" + s : ":scope") + " " + xe(l[o]);
                        c = l.join(",");
                    }
                    try {
                        return H.apply(n, f.querySelectorAll(c)), n;
                    } catch (e1) {
                        N(t, !0);
                    } finally{
                        s === S && e.removeAttribute("id");
                    }
                }
            }
            return g(t.replace(B, "$1"), e, n, r);
        }
        function ue() {
            var r = [];
            return function e(t, n) {
                return r.push(t + " ") > b.cacheLength && delete e[r.shift()], e[t + " "] = n;
            };
        }
        function le(e) {
            return e[S] = !0, e;
        }
        function ce(e) {
            var t = C.createElement("fieldset");
            try {
                return !!e(t);
            } catch (e1) {
                return !1;
            } finally{
                t.parentNode && t.parentNode.removeChild(t), t = null;
            }
        }
        function fe(e, t) {
            var n = e.split("|"), r = n.length;
            while(r--)b.attrHandle[n[r]] = t;
        }
        function pe(e, t) {
            var n = t && e, r = n && 1 === e.nodeType && 1 === t.nodeType && e.sourceIndex - t.sourceIndex;
            if (r) return r;
            if (n) {
                while(n = n.nextSibling)if (n === t) return -1;
            }
            return e ? 1 : -1;
        }
        function de(t) {
            return function(e) {
                return "input" === e.nodeName.toLowerCase() && e.type === t;
            };
        }
        function he(n) {
            return function(e) {
                var t = e.nodeName.toLowerCase();
                return ("input" === t || "button" === t) && e.type === n;
            };
        }
        function ge(t) {
            return function(e) {
                return "form" in e ? e.parentNode && !1 === e.disabled ? "label" in e ? "label" in e.parentNode ? e.parentNode.disabled === t : e.disabled === t : e.isDisabled === t || e.isDisabled !== !t && ae(e) === t : e.disabled === t : "label" in e && e.disabled === t;
            };
        }
        function ye(a) {
            return le(function(o) {
                return o = +o, le(function(e, t) {
                    var n, r = a([], e.length, o), i = r.length;
                    while(i--)e[n = r[i]] && (e[n] = !(t[n] = e[n]));
                });
            });
        }
        function ve(e) {
            return e && "undefined" != typeof e.getElementsByTagName && e;
        }
        for(e in d = se.support = {}, i = se.isXML = function(e) {
            var t = e && e.namespaceURI, n = e && (e.ownerDocument || e).documentElement;
            return !Y.test(t || n && n.nodeName || "HTML");
        }, T = se.setDocument = function(e) {
            var t, n, r = e ? e.ownerDocument || e : p;
            return r != C && 9 === r.nodeType && r.documentElement && (a = (C = r).documentElement, E = !i(C), p != C && (n = C.defaultView) && n.top !== n && (n.addEventListener ? n.addEventListener("unload", oe, !1) : n.attachEvent && n.attachEvent("onunload", oe)), d.scope = ce(function(e) {
                return a.appendChild(e).appendChild(C.createElement("div")), "undefined" != typeof e.querySelectorAll && !e.querySelectorAll(":scope fieldset div").length;
            }), d.attributes = ce(function(e) {
                return e.className = "i", !e.getAttribute("className");
            }), d.getElementsByTagName = ce(function(e) {
                return e.appendChild(C.createComment("")), !e.getElementsByTagName("*").length;
            }), d.getElementsByClassName = K.test(C.getElementsByClassName), d.getById = ce(function(e) {
                return a.appendChild(e).id = S, !C.getElementsByName || !C.getElementsByName(S).length;
            }), d.getById ? (b.filter.ID = function(e) {
                var t = e.replace(te, ne);
                return function(e) {
                    return e.getAttribute("id") === t;
                };
            }, b.find.ID = function(e, t) {
                if ("undefined" != typeof t.getElementById && E) {
                    var n = t.getElementById(e);
                    return n ? [
                        n
                    ] : [];
                }
            }) : (b.filter.ID = function(e) {
                var n = e.replace(te, ne);
                return function(e) {
                    var t = "undefined" != typeof e.getAttributeNode && e.getAttributeNode("id");
                    return t && t.value === n;
                };
            }, b.find.ID = function(e, t) {
                if ("undefined" != typeof t.getElementById && E) {
                    var n, r, i, o = t.getElementById(e);
                    if (o) {
                        if ((n = o.getAttributeNode("id")) && n.value === e) return [
                            o
                        ];
                        i = t.getElementsByName(e), r = 0;
                        while(o = i[r++])if ((n = o.getAttributeNode("id")) && n.value === e) return [
                            o
                        ];
                    }
                    return [];
                }
            }), b.find.TAG = d.getElementsByTagName ? function(e, t) {
                return "undefined" != typeof t.getElementsByTagName ? t.getElementsByTagName(e) : d.qsa ? t.querySelectorAll(e) : void 0;
            } : function(e, t) {
                var n, r = [], i = 0, o = t.getElementsByTagName(e);
                if ("*" === e) {
                    while(n = o[i++])1 === n.nodeType && r.push(n);
                    return r;
                }
                return o;
            }, b.find.CLASS = d.getElementsByClassName && function(e, t) {
                if ("undefined" != typeof t.getElementsByClassName && E) return t.getElementsByClassName(e);
            }, s = [], y = [], (d.qsa = K.test(C.querySelectorAll)) && (ce(function(e) {
                var t;
                a.appendChild(e).innerHTML = "<a id='" + S + "'></a><select id='" + S + "-\r\\' msallowcapture=''><option selected=''></option></select>", e.querySelectorAll("[msallowcapture^='']").length && y.push("[*^$]=" + M + "*(?:''|\"\")"), e.querySelectorAll("[selected]").length || y.push("\\[" + M + "*(?:value|" + R + ")"), e.querySelectorAll("[id~=" + S + "-]").length || y.push("~="), (t = C.createElement("input")).setAttribute("name", ""), e.appendChild(t), e.querySelectorAll("[name='']").length || y.push("\\[" + M + "*name" + M + "*=" + M + "*(?:''|\"\")"), e.querySelectorAll(":checked").length || y.push(":checked"), e.querySelectorAll("a#" + S + "+*").length || y.push(".#.+[+~]"), e.querySelectorAll("\\\f"), y.push("[\\r\\n\\f]");
            }), ce(function(e) {
                e.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
                var t = C.createElement("input");
                t.setAttribute("type", "hidden"), e.appendChild(t).setAttribute("name", "D"), e.querySelectorAll("[name=d]").length && y.push("name" + M + "*[*^$|!~]?="), 2 !== e.querySelectorAll(":enabled").length && y.push(":enabled", ":disabled"), a.appendChild(e).disabled = !0, 2 !== e.querySelectorAll(":disabled").length && y.push(":enabled", ":disabled"), e.querySelectorAll("*,:x"), y.push(",.*:");
            })), (d.matchesSelector = K.test(c = a.matches || a.webkitMatchesSelector || a.mozMatchesSelector || a.oMatchesSelector || a.msMatchesSelector)) && ce(function(e) {
                d.disconnectedMatch = c.call(e, "*"), c.call(e, "[s!='']:x"), s.push("!=", F);
            }), y = y.length && new RegExp(y.join("|")), s = s.length && new RegExp(s.join("|")), t = K.test(a.compareDocumentPosition), v = t || K.test(a.contains) ? function(e, t) {
                var n = 9 === e.nodeType ? e.documentElement : e, r = t && t.parentNode;
                return e === r || !(!r || 1 !== r.nodeType || !(n.contains ? n.contains(r) : e.compareDocumentPosition && 16 & e.compareDocumentPosition(r)));
            } : function(e, t) {
                if (t) {
                    while(t = t.parentNode)if (t === e) return !0;
                }
                return !1;
            }, j = t ? function(e, t) {
                if (e === t) return l = !0, 0;
                var n = !e.compareDocumentPosition - !t.compareDocumentPosition;
                return n || (1 & (n = (e.ownerDocument || e) == (t.ownerDocument || t) ? e.compareDocumentPosition(t) : 1) || !d.sortDetached && t.compareDocumentPosition(e) === n ? e == C || e.ownerDocument == p && v(p, e) ? -1 : t == C || t.ownerDocument == p && v(p, t) ? 1 : u ? P(u, e) - P(u, t) : 0 : 4 & n ? -1 : 1);
            } : function(e, t) {
                if (e === t) return l = !0, 0;
                var n, r = 0, i = e.parentNode, o = t.parentNode, a = [
                    e
                ], s = [
                    t
                ];
                if (!i || !o) return e == C ? -1 : t == C ? 1 : i ? -1 : o ? 1 : u ? P(u, e) - P(u, t) : 0;
                if (i === o) return pe(e, t);
                n = e;
                while(n = n.parentNode)a.unshift(n);
                n = t;
                while(n = n.parentNode)s.unshift(n);
                while(a[r] === s[r])r++;
                return r ? pe(a[r], s[r]) : a[r] == p ? -1 : s[r] == p ? 1 : 0;
            }), C;
        }, se.matches = function(e, t) {
            return se(e, null, null, t);
        }, se.matchesSelector = function(e, t) {
            if (T(e), d.matchesSelector && E && !N[t + " "] && (!s || !s.test(t)) && (!y || !y.test(t))) try {
                var n = c.call(e, t);
                if (n || d.disconnectedMatch || e.document && 11 !== e.document.nodeType) return n;
            } catch (e1) {
                N(t, !0);
            }
            return 0 < se(t, C, null, [
                e
            ]).length;
        }, se.contains = function(e, t) {
            return (e.ownerDocument || e) != C && T(e), v(e, t);
        }, se.attr = function(e, t) {
            (e.ownerDocument || e) != C && T(e);
            var n = b.attrHandle[t.toLowerCase()], r = n && D.call(b.attrHandle, t.toLowerCase()) ? n(e, t, !E) : void 0;
            return void 0 !== r ? r : d.attributes || !E ? e.getAttribute(t) : (r = e.getAttributeNode(t)) && r.specified ? r.value : null;
        }, se.escape = function(e) {
            return (e + "").replace(re, ie);
        }, se.error = function(e) {
            throw new Error("Syntax error, unrecognized expression: " + e);
        }, se.uniqueSort = function(e) {
            var t, n = [], r = 0, i = 0;
            if (l = !d.detectDuplicates, u = !d.sortStable && e.slice(0), e.sort(j), l) {
                while(t = e[i++])t === e[i] && (r = n.push(i));
                while(r--)e.splice(n[r], 1);
            }
            return u = null, e;
        }, o = se.getText = function(e) {
            var t, n = "", r = 0, i = e.nodeType;
            if (i) {
                if (1 === i || 9 === i || 11 === i) {
                    if ("string" == typeof e.textContent) return e.textContent;
                    for(e = e.firstChild; e; e = e.nextSibling)n += o(e);
                } else if (3 === i || 4 === i) return e.nodeValue;
            } else while(t = e[r++])n += o(t);
            return n;
        }, (b = se.selectors = {
            cacheLength: 50,
            createPseudo: le,
            match: G,
            attrHandle: {},
            find: {},
            relative: {
                ">": {
                    dir: "parentNode",
                    first: !0
                },
                " ": {
                    dir: "parentNode"
                },
                "+": {
                    dir: "previousSibling",
                    first: !0
                },
                "~": {
                    dir: "previousSibling"
                }
            },
            preFilter: {
                ATTR: function(e) {
                    return e[1] = e[1].replace(te, ne), e[3] = (e[3] || e[4] || e[5] || "").replace(te, ne), "~=" === e[2] && (e[3] = " " + e[3] + " "), e.slice(0, 4);
                },
                CHILD: function(e) {
                    return e[1] = e[1].toLowerCase(), "nth" === e[1].slice(0, 3) ? (e[3] || se.error(e[0]), e[4] = +(e[4] ? e[5] + (e[6] || 1) : 2 * ("even" === e[3] || "odd" === e[3])), e[5] = +(e[7] + e[8] || "odd" === e[3])) : e[3] && se.error(e[0]), e;
                },
                PSEUDO: function(e) {
                    var t, n = !e[6] && e[2];
                    return G.CHILD.test(e[0]) ? null : (e[3] ? e[2] = e[4] || e[5] || "" : n && X.test(n) && (t = h(n, !0)) && (t = n.indexOf(")", n.length - t) - n.length) && (e[0] = e[0].slice(0, t), e[2] = n.slice(0, t)), e.slice(0, 3));
                }
            },
            filter: {
                TAG: function(e) {
                    var t = e.replace(te, ne).toLowerCase();
                    return "*" === e ? function() {
                        return !0;
                    } : function(e) {
                        return e.nodeName && e.nodeName.toLowerCase() === t;
                    };
                },
                CLASS: function(e) {
                    var t = m[e + " "];
                    return t || (t = new RegExp("(^|" + M + ")" + e + "(" + M + "|$)"), m(e, function(e) {
                        return t.test("string" == typeof e.className && e.className || "undefined" != typeof e.getAttribute && e.getAttribute("class") || "");
                    }));
                },
                ATTR: function(n, r, i) {
                    return function(e) {
                        var t = se.attr(e, n);
                        return null == t ? "!=" === r : !r || (t += "", "=" === r ? t === i : "!=" === r ? t !== i : "^=" === r ? i && 0 === t.indexOf(i) : "*=" === r ? i && -1 < t.indexOf(i) : "$=" === r ? i && t.slice(-i.length) === i : "~=" === r ? -1 < (" " + t.replace($, " ") + " ").indexOf(i) : "|=" === r && (t === i || t.slice(0, i.length + 1) === i + "-"));
                    };
                },
                CHILD: function(h, e, t, g, y) {
                    var v = "nth" !== h.slice(0, 3), m = "last" !== h.slice(-4), x = "of-type" === e;
                    return 1 === g && 0 === y ? function(e) {
                        return !!e.parentNode;
                    } : function(e, t, n) {
                        var r, i, o, a, s, u, l = v !== m ? "nextSibling" : "previousSibling", c = e.parentNode, f = x && e.nodeName.toLowerCase(), p = !n && !x, d = !1;
                        if (c) {
                            if (v) {
                                while(l){
                                    a = e;
                                    while(a = a[l])if (x ? a.nodeName.toLowerCase() === f : 1 === a.nodeType) return !1;
                                    u = l = "only" === h && !u && "nextSibling";
                                }
                                return !0;
                            }
                            if (u = [
                                m ? c.firstChild : c.lastChild
                            ], m && p) {
                                d = (s = (r = (i = (o = (a = c)[S] || (a[S] = {}))[a.uniqueID] || (o[a.uniqueID] = {}))[h] || [])[0] === k && r[1]) && r[2], a = s && c.childNodes[s];
                                while(a = ++s && a && a[l] || (d = s = 0) || u.pop())if (1 === a.nodeType && ++d && a === e) {
                                    i[h] = [
                                        k,
                                        s,
                                        d
                                    ];
                                    break;
                                }
                            } else if (p && (d = s = (r = (i = (o = (a = e)[S] || (a[S] = {}))[a.uniqueID] || (o[a.uniqueID] = {}))[h] || [])[0] === k && r[1]), !1 === d) {
                                while(a = ++s && a && a[l] || (d = s = 0) || u.pop())if ((x ? a.nodeName.toLowerCase() === f : 1 === a.nodeType) && ++d && (p && ((i = (o = a[S] || (a[S] = {}))[a.uniqueID] || (o[a.uniqueID] = {}))[h] = [
                                    k,
                                    d
                                ]), a === e)) break;
                            }
                            return (d -= y) === g || d % g == 0 && 0 <= d / g;
                        }
                    };
                },
                PSEUDO: function(e, o) {
                    var t, a = b.pseudos[e] || b.setFilters[e.toLowerCase()] || se.error("unsupported pseudo: " + e);
                    return a[S] ? a(o) : 1 < a.length ? (t = [
                        e,
                        e,
                        "",
                        o
                    ], b.setFilters.hasOwnProperty(e.toLowerCase()) ? le(function(e, t) {
                        var n, r = a(e, o), i = r.length;
                        while(i--)e[n = P(e, r[i])] = !(t[n] = r[i]);
                    }) : function(e) {
                        return a(e, 0, t);
                    }) : a;
                }
            },
            pseudos: {
                not: le(function(e) {
                    var r = [], i = [], s = f(e.replace(B, "$1"));
                    return s[S] ? le(function(e, t, n, r) {
                        var i, o = s(e, null, r, []), a = e.length;
                        while(a--)(i = o[a]) && (e[a] = !(t[a] = i));
                    }) : function(e, t, n) {
                        return r[0] = e, s(r, null, n, i), r[0] = null, !i.pop();
                    };
                }),
                has: le(function(t) {
                    return function(e) {
                        return 0 < se(t, e).length;
                    };
                }),
                contains: le(function(t) {
                    return t = t.replace(te, ne), function(e) {
                        return -1 < (e.textContent || o(e)).indexOf(t);
                    };
                }),
                lang: le(function(n) {
                    return V.test(n || "") || se.error("unsupported lang: " + n), n = n.replace(te, ne).toLowerCase(), function(e) {
                        var t;
                        do {
                            if (t = E ? e.lang : e.getAttribute("xml:lang") || e.getAttribute("lang")) return (t = t.toLowerCase()) === n || 0 === t.indexOf(n + "-");
                        }while ((e = e.parentNode) && 1 === e.nodeType);
                        return !1;
                    };
                }),
                target: function(e) {
                    var t = n.location && n.location.hash;
                    return t && t.slice(1) === e.id;
                },
                root: function(e) {
                    return e === a;
                },
                focus: function(e) {
                    return e === C.activeElement && (!C.hasFocus || C.hasFocus()) && !!(e.type || e.href || ~e.tabIndex);
                },
                enabled: ge(!1),
                disabled: ge(!0),
                checked: function(e) {
                    var t = e.nodeName.toLowerCase();
                    return "input" === t && !!e.checked || "option" === t && !!e.selected;
                },
                selected: function(e) {
                    return e.parentNode && e.parentNode.selectedIndex, !0 === e.selected;
                },
                empty: function(e) {
                    for(e = e.firstChild; e; e = e.nextSibling)if (e.nodeType < 6) return !1;
                    return !0;
                },
                parent: function(e) {
                    return !b.pseudos.empty(e);
                },
                header: function(e) {
                    return J.test(e.nodeName);
                },
                input: function(e) {
                    return Q.test(e.nodeName);
                },
                button: function(e) {
                    var t = e.nodeName.toLowerCase();
                    return "input" === t && "button" === e.type || "button" === t;
                },
                text: function(e) {
                    var t;
                    return "input" === e.nodeName.toLowerCase() && "text" === e.type && (null == (t = e.getAttribute("type")) || "text" === t.toLowerCase());
                },
                first: ye(function() {
                    return [
                        0
                    ];
                }),
                last: ye(function(e, t) {
                    return [
                        t - 1
                    ];
                }),
                eq: ye(function(e, t, n) {
                    return [
                        n < 0 ? n + t : n
                    ];
                }),
                even: ye(function(e, t) {
                    for(var n = 0; n < t; n += 2)e.push(n);
                    return e;
                }),
                odd: ye(function(e, t) {
                    for(var n = 1; n < t; n += 2)e.push(n);
                    return e;
                }),
                lt: ye(function(e, t, n) {
                    for(var r = n < 0 ? n + t : t < n ? t : n; 0 <= --r;)e.push(r);
                    return e;
                }),
                gt: ye(function(e, t, n) {
                    for(var r = n < 0 ? n + t : n; ++r < t;)e.push(r);
                    return e;
                })
            }
        }).pseudos.nth = b.pseudos.eq, {
            radio: !0,
            checkbox: !0,
            file: !0,
            password: !0,
            image: !0
        })b.pseudos[e] = de(e);
        for(e in {
            submit: !0,
            reset: !0
        })b.pseudos[e] = he(e);
        function me() {}
        function xe(e) {
            for(var t = 0, n = e.length, r = ""; t < n; t++)r += e[t].value;
            return r;
        }
        function be(s, e, t) {
            var u = e.dir, l = e.next, c = l || u, f = t && "parentNode" === c, p = r++;
            return e.first ? function(e, t, n) {
                while(e = e[u])if (1 === e.nodeType || f) return s(e, t, n);
                return !1;
            } : function(e, t, n) {
                var r, i, o, a = [
                    k,
                    p
                ];
                if (n) {
                    while(e = e[u])if ((1 === e.nodeType || f) && s(e, t, n)) return !0;
                } else while(e = e[u])if (1 === e.nodeType || f) {
                    if (i = (o = e[S] || (e[S] = {}))[e.uniqueID] || (o[e.uniqueID] = {}), l && l === e.nodeName.toLowerCase()) e = e[u] || e;
                    else {
                        if ((r = i[c]) && r[0] === k && r[1] === p) return a[2] = r[2];
                        if ((i[c] = a)[2] = s(e, t, n)) return !0;
                    }
                }
                return !1;
            };
        }
        function we(i) {
            return 1 < i.length ? function(e, t, n) {
                var r = i.length;
                while(r--)if (!i[r](e, t, n)) return !1;
                return !0;
            } : i[0];
        }
        function Te(e, t, n, r, i) {
            for(var o, a = [], s = 0, u = e.length, l = null != t; s < u; s++)(o = e[s]) && (n && !n(o, r, i) || (a.push(o), l && t.push(s)));
            return a;
        }
        function Ce(d, h, g, y, v, e) {
            return y && !y[S] && (y = Ce(y)), v && !v[S] && (v = Ce(v, e)), le(function(e, t, n, r) {
                var i, o, a, s = [], u = [], l = t.length, c = e || function(e, t, n) {
                    for(var r = 0, i = t.length; r < i; r++)se(e, t[r], n);
                    return n;
                }(h || "*", n.nodeType ? [
                    n
                ] : n, []), f = !d || !e && h ? c : Te(c, s, d, n, r), p = g ? v || (e ? d : l || y) ? [] : t : f;
                if (g && g(f, p, n, r), y) {
                    i = Te(p, u), y(i, [], n, r), o = i.length;
                    while(o--)(a = i[o]) && (p[u[o]] = !(f[u[o]] = a));
                }
                if (e) {
                    if (v || d) {
                        if (v) {
                            i = [], o = p.length;
                            while(o--)(a = p[o]) && i.push(f[o] = a);
                            v(null, p = [], i, r);
                        }
                        o = p.length;
                        while(o--)(a = p[o]) && -1 < (i = v ? P(e, a) : s[o]) && (e[i] = !(t[i] = a));
                    }
                } else p = Te(p === t ? p.splice(l, p.length) : p), v ? v(null, t, p, r) : H.apply(t, p);
            });
        }
        function Ee(e) {
            for(var i, t, n, r = e.length, o = b.relative[e[0].type], a = o || b.relative[" "], s = o ? 1 : 0, u = be(function(e) {
                return e === i;
            }, a, !0), l = be(function(e) {
                return -1 < P(i, e);
            }, a, !0), c = [
                function(e, t, n) {
                    var r = !o && (n || t !== w) || ((i = t).nodeType ? u(e, t, n) : l(e, t, n));
                    return i = null, r;
                }
            ]; s < r; s++)if (t = b.relative[e[s].type]) c = [
                be(we(c), t)
            ];
            else {
                if ((t = b.filter[e[s].type].apply(null, e[s].matches))[S]) {
                    for(n = ++s; n < r; n++)if (b.relative[e[n].type]) break;
                    return Ce(1 < s && we(c), 1 < s && xe(e.slice(0, s - 1).concat({
                        value: " " === e[s - 2].type ? "*" : ""
                    })).replace(B, "$1"), t, s < n && Ee(e.slice(s, n)), n < r && Ee(e = e.slice(n)), n < r && xe(e));
                }
                c.push(t);
            }
            return we(c);
        }
        return me.prototype = b.filters = b.pseudos, b.setFilters = new me, h = se.tokenize = function(e, t) {
            var n, r, i, o, a, s, u, l = x[e + " "];
            if (l) return t ? 0 : l.slice(0);
            a = e, s = [], u = b.preFilter;
            while(a){
                for(o in n && !(r = _.exec(a)) || (r && (a = a.slice(r[0].length) || a), s.push(i = [])), n = !1, (r = z.exec(a)) && (n = r.shift(), i.push({
                    value: n,
                    type: r[0].replace(B, " ")
                }), a = a.slice(n.length)), b.filter)!(r = G[o].exec(a)) || u[o] && !(r = u[o](r)) || (n = r.shift(), i.push({
                    value: n,
                    type: o,
                    matches: r
                }), a = a.slice(n.length));
                if (!n) break;
            }
            return t ? a.length : a ? se.error(e) : x(e, s).slice(0);
        }, f = se.compile = function(e, t) {
            var n, y, v, m, x, r, i = [], o = [], a = A[e + " "];
            if (!a) {
                t || (t = h(e)), n = t.length;
                while(n--)(a = Ee(t[n]))[S] ? i.push(a) : o.push(a);
                (a = A(e, (y = o, m = 0 < (v = i).length, x = 0 < y.length, r = function(e, t, n, r, i) {
                    var o, a, s, u = 0, l = "0", c = e && [], f = [], p = w, d = e || x && b.find.TAG("*", i), h = k += null == p ? 1 : Math.random() || .1, g = d.length;
                    for(i && (w = t == C || t || i); l !== g && null != (o = d[l]); l++){
                        if (x && o) {
                            a = 0, t || o.ownerDocument == C || (T(o), n = !E);
                            while(s = y[a++])if (s(o, t || C, n)) {
                                r.push(o);
                                break;
                            }
                            i && (k = h);
                        }
                        m && ((o = !s && o) && u--, e && c.push(o));
                    }
                    if (u += l, m && l !== u) {
                        a = 0;
                        while(s = v[a++])s(c, f, t, n);
                        if (e) {
                            if (0 < u) while(l--)c[l] || f[l] || (f[l] = q.call(r));
                            f = Te(f);
                        }
                        H.apply(r, f), i && !e && 0 < f.length && 1 < u + v.length && se.uniqueSort(r);
                    }
                    return i && (k = h, w = p), c;
                }, m ? le(r) : r))).selector = e;
            }
            return a;
        }, g = se.select = function(e, t, n, r) {
            var i, o, a, s, u, l = "function" == typeof e && e, c = !r && h(e = l.selector || e);
            if (n = n || [], 1 === c.length) {
                if (2 < (o = c[0] = c[0].slice(0)).length && "ID" === (a = o[0]).type && 9 === t.nodeType && E && b.relative[o[1].type]) {
                    if (!(t = (b.find.ID(a.matches[0].replace(te, ne), t) || [])[0])) return n;
                    l && (t = t.parentNode), e = e.slice(o.shift().value.length);
                }
                i = G.needsContext.test(e) ? 0 : o.length;
                while(i--){
                    if (a = o[i], b.relative[s = a.type]) break;
                    if ((u = b.find[s]) && (r = u(a.matches[0].replace(te, ne), ee.test(o[0].type) && ve(t.parentNode) || t))) {
                        if (o.splice(i, 1), !(e = r.length && xe(o))) return H.apply(n, r), n;
                        break;
                    }
                }
            }
            return (l || f(e, c))(r, t, !E, n, !t || ee.test(e) && ve(t.parentNode) || t), n;
        }, d.sortStable = S.split("").sort(j).join("") === S, d.detectDuplicates = !!l, T(), d.sortDetached = ce(function(e) {
            return 1 & e.compareDocumentPosition(C.createElement("fieldset"));
        }), ce(function(e) {
            return e.innerHTML = "<a href='#'></a>", "#" === e.firstChild.getAttribute("href");
        }) || fe("type|href|height|width", function(e, t, n) {
            if (!n) return e.getAttribute(t, "type" === t.toLowerCase() ? 1 : 2);
        }), d.attributes && ce(function(e) {
            return e.innerHTML = "<input/>", e.firstChild.setAttribute("value", ""), "" === e.firstChild.getAttribute("value");
        }) || fe("value", function(e, t, n) {
            if (!n && "input" === e.nodeName.toLowerCase()) return e.defaultValue;
        }), ce(function(e) {
            return null == e.getAttribute("disabled");
        }) || fe(R, function(e, t, n) {
            var r;
            if (!n) return !0 === e[t] ? t.toLowerCase() : (r = e.getAttributeNode(t)) && r.specified ? r.value : null;
        }), se;
    }(C);
    S.find = d, S.expr = d.selectors, S.expr[":"] = S.expr.pseudos, S.uniqueSort = S.unique = d.uniqueSort, S.text = d.getText, S.isXMLDoc = d.isXML, S.contains = d.contains, S.escapeSelector = d.escape;
    var h = function(e, t, n) {
        var r = [], i = void 0 !== n;
        while((e = e[t]) && 9 !== e.nodeType)if (1 === e.nodeType) {
            if (i && S(e).is(n)) break;
            r.push(e);
        }
        return r;
    }, T = function(e, t) {
        for(var n = []; e; e = e.nextSibling)1 === e.nodeType && e !== t && n.push(e);
        return n;
    }, k = S.expr.match.needsContext;
    function A(e, t) {
        return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase();
    }
    var N = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
    function j(e, n, r) {
        return m(n) ? S.grep(e, function(e, t) {
            return !!n.call(e, t, e) !== r;
        }) : n.nodeType ? S.grep(e, function(e) {
            return e === n !== r;
        }) : "string" != typeof n ? S.grep(e, function(e) {
            return -1 < i.call(n, e) !== r;
        }) : S.filter(n, e, r);
    }
    S.filter = function(e, t, n) {
        var r = t[0];
        return n && (e = ":not(" + e + ")"), 1 === t.length && 1 === r.nodeType ? S.find.matchesSelector(r, e) ? [
            r
        ] : [] : S.find.matches(e, S.grep(t, function(e) {
            return 1 === e.nodeType;
        }));
    }, S.fn.extend({
        find: function(e) {
            var t, n, r = this.length, i = this;
            if ("string" != typeof e) return this.pushStack(S(e).filter(function() {
                for(t = 0; t < r; t++)if (S.contains(i[t], this)) return !0;
            }));
            for(n = this.pushStack([]), t = 0; t < r; t++)S.find(e, i[t], n);
            return 1 < r ? S.uniqueSort(n) : n;
        },
        filter: function(e) {
            return this.pushStack(j(this, e || [], !1));
        },
        not: function(e) {
            return this.pushStack(j(this, e || [], !0));
        },
        is: function(e) {
            return !!j(this, "string" == typeof e && k.test(e) ? S(e) : e || [], !1).length;
        }
    });
    var D, q = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;
    (S.fn.init = function(e, t, n) {
        var r, i;
        if (!e) return this;
        if (n = n || D, "string" == typeof e) {
            if (!(r = "<" === e[0] && ">" === e[e.length - 1] && 3 <= e.length ? [
                null,
                e,
                null
            ] : q.exec(e)) || !r[1] && t) return !t || t.jquery ? (t || n).find(e) : this.constructor(t).find(e);
            if (r[1]) {
                if (t = t instanceof S ? t[0] : t, S.merge(this, S.parseHTML(r[1], t && t.nodeType ? t.ownerDocument || t : E, !0)), N.test(r[1]) && S.isPlainObject(t)) for(r in t)m(this[r]) ? this[r](t[r]) : this.attr(r, t[r]);
                return this;
            }
            return (i = E.getElementById(r[2])) && (this[0] = i, this.length = 1), this;
        }
        return e.nodeType ? (this[0] = e, this.length = 1, this) : m(e) ? void 0 !== n.ready ? n.ready(e) : e(S) : S.makeArray(e, this);
    }).prototype = S.fn, D = S(E);
    var L = /^(?:parents|prev(?:Until|All))/, H = {
        children: !0,
        contents: !0,
        next: !0,
        prev: !0
    };
    function O(e, t) {
        while((e = e[t]) && 1 !== e.nodeType);
        return e;
    }
    S.fn.extend({
        has: function(e) {
            var t = S(e, this), n = t.length;
            return this.filter(function() {
                for(var e = 0; e < n; e++)if (S.contains(this, t[e])) return !0;
            });
        },
        closest: function(e, t) {
            var n, r = 0, i = this.length, o = [], a = "string" != typeof e && S(e);
            if (!k.test(e)) {
                for(; r < i; r++)for(n = this[r]; n && n !== t; n = n.parentNode)if (n.nodeType < 11 && (a ? -1 < a.index(n) : 1 === n.nodeType && S.find.matchesSelector(n, e))) {
                    o.push(n);
                    break;
                }
            }
            return this.pushStack(1 < o.length ? S.uniqueSort(o) : o);
        },
        index: function(e) {
            return e ? "string" == typeof e ? i.call(S(e), this[0]) : i.call(this, e.jquery ? e[0] : e) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
        },
        add: function(e, t) {
            return this.pushStack(S.uniqueSort(S.merge(this.get(), S(e, t))));
        },
        addBack: function(e) {
            return this.add(null == e ? this.prevObject : this.prevObject.filter(e));
        }
    }), S.each({
        parent: function(e) {
            var t = e.parentNode;
            return t && 11 !== t.nodeType ? t : null;
        },
        parents: function(e) {
            return h(e, "parentNode");
        },
        parentsUntil: function(e, t, n) {
            return h(e, "parentNode", n);
        },
        next: function(e) {
            return O(e, "nextSibling");
        },
        prev: function(e) {
            return O(e, "previousSibling");
        },
        nextAll: function(e) {
            return h(e, "nextSibling");
        },
        prevAll: function(e) {
            return h(e, "previousSibling");
        },
        nextUntil: function(e, t, n) {
            return h(e, "nextSibling", n);
        },
        prevUntil: function(e, t, n) {
            return h(e, "previousSibling", n);
        },
        siblings: function(e) {
            return T((e.parentNode || {}).firstChild, e);
        },
        children: function(e) {
            return T(e.firstChild);
        },
        contents: function(e) {
            return null != e.contentDocument && r(e.contentDocument) ? e.contentDocument : (A(e, "template") && (e = e.content || e), S.merge([], e.childNodes));
        }
    }, function(r, i) {
        S.fn[r] = function(e, t) {
            var n = S.map(this, i, e);
            return "Until" !== r.slice(-5) && (t = e), t && "string" == typeof t && (n = S.filter(t, n)), 1 < this.length && (H[r] || S.uniqueSort(n), L.test(r) && n.reverse()), this.pushStack(n);
        };
    });
    var P = /[^\x20\t\r\n\f]+/g;
    function R(e) {
        return e;
    }
    function M(e) {
        throw e;
    }
    function I(e, t, n, r) {
        var i;
        try {
            e && m(i = e.promise) ? i.call(e).done(t).fail(n) : e && m(i = e.then) ? i.call(e, t, n) : t.apply(void 0, [
                e
            ].slice(r));
        } catch (e1) {
            n.apply(void 0, [
                e1
            ]);
        }
    }
    S.Callbacks = function(r) {
        var e, n;
        r = "string" == typeof r ? (e = r, n = {}, S.each(e.match(P) || [], function(e, t) {
            n[t] = !0;
        }), n) : S.extend({}, r);
        var i, t, o, a, s = [], u = [], l = -1, c = function() {
            for(a = a || r.once, o = i = !0; u.length; l = -1){
                t = u.shift();
                while(++l < s.length)!1 === s[l].apply(t[0], t[1]) && r.stopOnFalse && (l = s.length, t = !1);
            }
            r.memory || (t = !1), i = !1, a && (s = t ? [] : "");
        }, f = {
            add: function() {
                return s && (t && !i && (l = s.length - 1, u.push(t)), function n(e) {
                    S.each(e, function(e, t) {
                        m(t) ? r.unique && f.has(t) || s.push(t) : t && t.length && "string" !== w(t) && n(t);
                    });
                }(arguments), t && !i && c()), this;
            },
            remove: function() {
                return S.each(arguments, function(e, t) {
                    var n;
                    while(-1 < (n = S.inArray(t, s, n)))s.splice(n, 1), n <= l && l--;
                }), this;
            },
            has: function(e) {
                return e ? -1 < S.inArray(e, s) : 0 < s.length;
            },
            empty: function() {
                return s && (s = []), this;
            },
            disable: function() {
                return a = u = [], s = t = "", this;
            },
            disabled: function() {
                return !s;
            },
            lock: function() {
                return a = u = [], t || i || (s = t = ""), this;
            },
            locked: function() {
                return !!a;
            },
            fireWith: function(e, t) {
                return a || (t = [
                    e,
                    (t = t || []).slice ? t.slice() : t
                ], u.push(t), i || c()), this;
            },
            fire: function() {
                return f.fireWith(this, arguments), this;
            },
            fired: function() {
                return !!o;
            }
        };
        return f;
    }, S.extend({
        Deferred: function(e) {
            var o = [
                [
                    "notify",
                    "progress",
                    S.Callbacks("memory"),
                    S.Callbacks("memory"),
                    2
                ],
                [
                    "resolve",
                    "done",
                    S.Callbacks("once memory"),
                    S.Callbacks("once memory"),
                    0,
                    "resolved"
                ],
                [
                    "reject",
                    "fail",
                    S.Callbacks("once memory"),
                    S.Callbacks("once memory"),
                    1,
                    "rejected"
                ]
            ], i = "pending", a = {
                state: function() {
                    return i;
                },
                always: function() {
                    return s.done(arguments).fail(arguments), this;
                },
                "catch": function(e) {
                    return a.then(null, e);
                },
                pipe: function() {
                    var i = arguments;
                    return S.Deferred(function(r) {
                        S.each(o, function(e, t) {
                            var n = m(i[t[4]]) && i[t[4]];
                            s[t[1]](function() {
                                var e = n && n.apply(this, arguments);
                                e && m(e.promise) ? e.promise().progress(r.notify).done(r.resolve).fail(r.reject) : r[t[0] + "With"](this, n ? [
                                    e
                                ] : arguments);
                            });
                        }), i = null;
                    }).promise();
                },
                then: function(t, n, r) {
                    var u = 0;
                    function l(i, o, a, s) {
                        return function() {
                            var n = this, r = arguments, e = function() {
                                var e, t;
                                if (!(i < u)) {
                                    if ((e = a.apply(n, r)) === o.promise()) throw new TypeError("Thenable self-resolution");
                                    t = e && ("object" == typeof e || "function" == typeof e) && e.then, m(t) ? s ? t.call(e, l(u, o, R, s), l(u, o, M, s)) : (u++, t.call(e, l(u, o, R, s), l(u, o, M, s), l(u, o, R, o.notifyWith))) : (a !== R && (n = void 0, r = [
                                        e
                                    ]), (s || o.resolveWith)(n, r));
                                }
                            }, t = s ? e : function() {
                                try {
                                    e();
                                } catch (e1) {
                                    S.Deferred.exceptionHook && S.Deferred.exceptionHook(e1, t.stackTrace), u <= i + 1 && (a !== M && (n = void 0, r = [
                                        e1
                                    ]), o.rejectWith(n, r));
                                }
                            };
                            i ? t() : (S.Deferred.getStackHook && (t.stackTrace = S.Deferred.getStackHook()), C.setTimeout(t));
                        };
                    }
                    return S.Deferred(function(e) {
                        o[0][3].add(l(0, e, m(r) ? r : R, e.notifyWith)), o[1][3].add(l(0, e, m(t) ? t : R)), o[2][3].add(l(0, e, m(n) ? n : M));
                    }).promise();
                },
                promise: function(e) {
                    return null != e ? S.extend(e, a) : a;
                }
            }, s = {};
            return S.each(o, function(e, t) {
                var n = t[2], r = t[5];
                a[t[1]] = n.add, r && n.add(function() {
                    i = r;
                }, o[3 - e][2].disable, o[3 - e][3].disable, o[0][2].lock, o[0][3].lock), n.add(t[3].fire), s[t[0]] = function() {
                    return s[t[0] + "With"](this === s ? void 0 : this, arguments), this;
                }, s[t[0] + "With"] = n.fireWith;
            }), a.promise(s), e && e.call(s, s), s;
        },
        when: function(e) {
            var n = arguments.length, t = n, r = Array(t), i = s.call(arguments), o = S.Deferred(), a = function(t) {
                return function(e) {
                    r[t] = this, i[t] = 1 < arguments.length ? s.call(arguments) : e, --n || o.resolveWith(r, i);
                };
            };
            if (n <= 1 && (I(e, o.done(a(t)).resolve, o.reject, !n), "pending" === o.state() || m(i[t] && i[t].then))) return o.then();
            while(t--)I(i[t], a(t), o.reject);
            return o.promise();
        }
    });
    var W = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
    S.Deferred.exceptionHook = function(e, t) {
        C.console && C.console.warn && e && W.test(e.name) && C.console.warn("jQuery.Deferred exception: " + e.message, e.stack, t);
    }, S.readyException = function(e) {
        C.setTimeout(function() {
            throw e;
        });
    };
    var F = S.Deferred();
    function $() {
        E.removeEventListener("DOMContentLoaded", $), C.removeEventListener("load", $), S.ready();
    }
    S.fn.ready = function(e) {
        return F.then(e)["catch"](function(e) {
            S.readyException(e);
        }), this;
    }, S.extend({
        isReady: !1,
        readyWait: 1,
        ready: function(e) {
            (!0 === e ? --S.readyWait : S.isReady) || (S.isReady = !0) !== e && 0 < --S.readyWait || F.resolveWith(E, [
                S
            ]);
        }
    }), S.ready.then = F.then, "complete" === E.readyState || "loading" !== E.readyState && !E.documentElement.doScroll ? C.setTimeout(S.ready) : (E.addEventListener("DOMContentLoaded", $), C.addEventListener("load", $));
    var B = function(e, t, n, r, i, o, a) {
        var s = 0, u = e.length, l = null == n;
        if ("object" === w(n)) for(s in i = !0, n)B(e, t, s, n[s], !0, o, a);
        else if (void 0 !== r && (i = !0, m(r) || (a = !0), l && (a ? (t.call(e, r), t = null) : (l = t, t = function(e, t, n) {
            return l.call(S(e), n);
        })), t)) for(; s < u; s++)t(e[s], n, a ? r : r.call(e[s], s, t(e[s], n)));
        return i ? e : l ? t.call(e) : u ? t(e[0], n) : o;
    }, _ = /^-ms-/, z = /-([a-z])/g;
    function U(e, t) {
        return t.toUpperCase();
    }
    function X(e) {
        return e.replace(_, "ms-").replace(z, U);
    }
    var V = function(e) {
        return 1 === e.nodeType || 9 === e.nodeType || !+e.nodeType;
    };
    function G() {
        this.expando = S.expando + G.uid++;
    }
    G.uid = 1, G.prototype = {
        cache: function(e) {
            var t = e[this.expando];
            return t || (t = {}, V(e) && (e.nodeType ? e[this.expando] = t : Object.defineProperty(e, this.expando, {
                value: t,
                configurable: !0
            }))), t;
        },
        set: function(e, t, n) {
            var r, i = this.cache(e);
            if ("string" == typeof t) i[X(t)] = n;
            else for(r in t)i[X(r)] = t[r];
            return i;
        },
        get: function(e, t) {
            return void 0 === t ? this.cache(e) : e[this.expando] && e[this.expando][X(t)];
        },
        access: function(e, t, n) {
            return void 0 === t || t && "string" == typeof t && void 0 === n ? this.get(e, t) : (this.set(e, t, n), void 0 !== n ? n : t);
        },
        remove: function(e, t) {
            var n, r = e[this.expando];
            if (void 0 !== r) {
                if (void 0 !== t) {
                    n = (t = Array.isArray(t) ? t.map(X) : (t = X(t)) in r ? [
                        t
                    ] : t.match(P) || []).length;
                    while(n--)delete r[t[n]];
                }
                (void 0 === t || S.isEmptyObject(r)) && (e.nodeType ? e[this.expando] = void 0 : delete e[this.expando]);
            }
        },
        hasData: function(e) {
            var t = e[this.expando];
            return void 0 !== t && !S.isEmptyObject(t);
        }
    };
    var Y = new G, Q = new G, J = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/, K = /[A-Z]/g;
    function Z(e, t, n) {
        var r, i;
        if (void 0 === n && 1 === e.nodeType) {
            if (r = "data-" + t.replace(K, "-$&").toLowerCase(), "string" == typeof (n = e.getAttribute(r))) {
                try {
                    n = "true" === (i = n) || "false" !== i && ("null" === i ? null : i === +i + "" ? +i : J.test(i) ? JSON.parse(i) : i);
                } catch (e1) {}
                Q.set(e, t, n);
            } else n = void 0;
        }
        return n;
    }
    S.extend({
        hasData: function(e) {
            return Q.hasData(e) || Y.hasData(e);
        },
        data: function(e, t, n) {
            return Q.access(e, t, n);
        },
        removeData: function(e, t) {
            Q.remove(e, t);
        },
        _data: function(e, t, n) {
            return Y.access(e, t, n);
        },
        _removeData: function(e, t) {
            Y.remove(e, t);
        }
    }), S.fn.extend({
        data: function(n, e) {
            var t, r, i, o = this[0], a = o && o.attributes;
            if (void 0 === n) {
                if (this.length && (i = Q.get(o), 1 === o.nodeType && !Y.get(o, "hasDataAttrs"))) {
                    t = a.length;
                    while(t--)a[t] && 0 === (r = a[t].name).indexOf("data-") && (r = X(r.slice(5)), Z(o, r, i[r]));
                    Y.set(o, "hasDataAttrs", !0);
                }
                return i;
            }
            return "object" == typeof n ? this.each(function() {
                Q.set(this, n);
            }) : B(this, function(e) {
                var t;
                if (o && void 0 === e) return void 0 !== (t = Q.get(o, n)) ? t : void 0 !== (t = Z(o, n)) ? t : void 0;
                this.each(function() {
                    Q.set(this, n, e);
                });
            }, null, e, 1 < arguments.length, null, !0);
        },
        removeData: function(e) {
            return this.each(function() {
                Q.remove(this, e);
            });
        }
    }), S.extend({
        queue: function(e, t, n) {
            var r;
            if (e) return t = (t || "fx") + "queue", r = Y.get(e, t), n && (!r || Array.isArray(n) ? r = Y.access(e, t, S.makeArray(n)) : r.push(n)), r || [];
        },
        dequeue: function(e, t) {
            t = t || "fx";
            var n = S.queue(e, t), r = n.length, i = n.shift(), o = S._queueHooks(e, t);
            "inprogress" === i && (i = n.shift(), r--), i && ("fx" === t && n.unshift("inprogress"), delete o.stop, i.call(e, function() {
                S.dequeue(e, t);
            }, o)), !r && o && o.empty.fire();
        },
        _queueHooks: function(e, t) {
            var n = t + "queueHooks";
            return Y.get(e, n) || Y.access(e, n, {
                empty: S.Callbacks("once memory").add(function() {
                    Y.remove(e, [
                        t + "queue",
                        n
                    ]);
                })
            });
        }
    }), S.fn.extend({
        queue: function(t, n) {
            var e = 2;
            return "string" != typeof t && (n = t, t = "fx", e--), arguments.length < e ? S.queue(this[0], t) : void 0 === n ? this : this.each(function() {
                var e = S.queue(this, t, n);
                S._queueHooks(this, t), "fx" === t && "inprogress" !== e[0] && S.dequeue(this, t);
            });
        },
        dequeue: function(e) {
            return this.each(function() {
                S.dequeue(this, e);
            });
        },
        clearQueue: function(e) {
            return this.queue(e || "fx", []);
        },
        promise: function(e, t) {
            var n, r = 1, i = S.Deferred(), o = this, a = this.length, s = function() {
                --r || i.resolveWith(o, [
                    o
                ]);
            };
            "string" != typeof e && (t = e, e = void 0), e = e || "fx";
            while(a--)(n = Y.get(o[a], e + "queueHooks")) && n.empty && (r++, n.empty.add(s));
            return s(), i.promise(t);
        }
    });
    var ee = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source, te = new RegExp("^(?:([+-])=|)(" + ee + ")([a-z%]*)$", "i"), ne = [
        "Top",
        "Right",
        "Bottom",
        "Left"
    ], re = E.documentElement, ie = function(e) {
        return S.contains(e.ownerDocument, e);
    }, oe = {
        composed: !0
    };
    re.getRootNode && (ie = function(e) {
        return S.contains(e.ownerDocument, e) || e.getRootNode(oe) === e.ownerDocument;
    });
    var ae = function(e, t) {
        return "none" === (e = t || e).style.display || "" === e.style.display && ie(e) && "none" === S.css(e, "display");
    };
    function se(e, t, n, r) {
        var i, o, a = 20, s = r ? function() {
            return r.cur();
        } : function() {
            return S.css(e, t, "");
        }, u = s(), l = n && n[3] || (S.cssNumber[t] ? "" : "px"), c = e.nodeType && (S.cssNumber[t] || "px" !== l && +u) && te.exec(S.css(e, t));
        if (c && c[3] !== l) {
            u /= 2, l = l || c[3], c = +u || 1;
            while(a--)S.style(e, t, c + l), (1 - o) * (1 - (o = s() / u || .5)) <= 0 && (a = 0), c /= o;
            c *= 2, S.style(e, t, c + l), n = n || [];
        }
        return n && (c = +c || +u || 0, i = n[1] ? c + (n[1] + 1) * n[2] : +n[2], r && (r.unit = l, r.start = c, r.end = i)), i;
    }
    var ue = {};
    function le(e, t) {
        for(var n, r, i, o, a, s, u, l = [], c = 0, f = e.length; c < f; c++)(r = e[c]).style && (n = r.style.display, t ? ("none" === n && (l[c] = Y.get(r, "display") || null, l[c] || (r.style.display = "")), "" === r.style.display && ae(r) && (l[c] = (u = a = o = void 0, a = (i = r).ownerDocument, s = i.nodeName, (u = ue[s]) || (o = a.body.appendChild(a.createElement(s)), u = S.css(o, "display"), o.parentNode.removeChild(o), "none" === u && (u = "block"), ue[s] = u)))) : "none" !== n && (l[c] = "none", Y.set(r, "display", n)));
        for(c = 0; c < f; c++)null != l[c] && (e[c].style.display = l[c]);
        return e;
    }
    S.fn.extend({
        show: function() {
            return le(this, !0);
        },
        hide: function() {
            return le(this);
        },
        toggle: function(e) {
            return "boolean" == typeof e ? e ? this.show() : this.hide() : this.each(function() {
                ae(this) ? S(this).show() : S(this).hide();
            });
        }
    });
    var ce, fe, pe = /^(?:checkbox|radio)$/i, de = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i, he = /^$|^module$|\/(?:java|ecma)script/i;
    ce = E.createDocumentFragment().appendChild(E.createElement("div")), (fe = E.createElement("input")).setAttribute("type", "radio"), fe.setAttribute("checked", "checked"), fe.setAttribute("name", "t"), ce.appendChild(fe), v.checkClone = ce.cloneNode(!0).cloneNode(!0).lastChild.checked, ce.innerHTML = "<textarea>x</textarea>", v.noCloneChecked = !!ce.cloneNode(!0).lastChild.defaultValue, ce.innerHTML = "<option></option>", v.option = !!ce.lastChild;
    var ge = {
        thead: [
            1,
            "<table>",
            "</table>"
        ],
        col: [
            2,
            "<table><colgroup>",
            "</colgroup></table>"
        ],
        tr: [
            2,
            "<table><tbody>",
            "</tbody></table>"
        ],
        td: [
            3,
            "<table><tbody><tr>",
            "</tr></tbody></table>"
        ],
        _default: [
            0,
            "",
            ""
        ]
    };
    function ye(e, t) {
        var n;
        return n = "undefined" != typeof e.getElementsByTagName ? e.getElementsByTagName(t || "*") : "undefined" != typeof e.querySelectorAll ? e.querySelectorAll(t || "*") : [], void 0 === t || t && A(e, t) ? S.merge([
            e
        ], n) : n;
    }
    function ve(e, t) {
        for(var n = 0, r = e.length; n < r; n++)Y.set(e[n], "globalEval", !t || Y.get(t[n], "globalEval"));
    }
    ge.tbody = ge.tfoot = ge.colgroup = ge.caption = ge.thead, ge.th = ge.td, v.option || (ge.optgroup = ge.option = [
        1,
        "<select multiple='multiple'>",
        "</select>"
    ]);
    var me = /<|&#?\w+;/;
    function xe(e, t, n, r, i) {
        for(var o, a, s, u, l, c, f = t.createDocumentFragment(), p = [], d = 0, h = e.length; d < h; d++)if ((o = e[d]) || 0 === o) {
            if ("object" === w(o)) S.merge(p, o.nodeType ? [
                o
            ] : o);
            else if (me.test(o)) {
                a = a || f.appendChild(t.createElement("div")), s = (de.exec(o) || [
                    "",
                    ""
                ])[1].toLowerCase(), u = ge[s] || ge._default, a.innerHTML = u[1] + S.htmlPrefilter(o) + u[2], c = u[0];
                while(c--)a = a.lastChild;
                S.merge(p, a.childNodes), (a = f.firstChild).textContent = "";
            } else p.push(t.createTextNode(o));
        }
        f.textContent = "", d = 0;
        while(o = p[d++])if (r && -1 < S.inArray(o, r)) i && i.push(o);
        else if (l = ie(o), a = ye(f.appendChild(o), "script"), l && ve(a), n) {
            c = 0;
            while(o = a[c++])he.test(o.type || "") && n.push(o);
        }
        return f;
    }
    var be = /^([^.]*)(?:\.(.+)|)/;
    function we() {
        return !0;
    }
    function Te() {
        return !1;
    }
    function Ce(e, t) {
        return e === function() {
            try {
                return E.activeElement;
            } catch (e) {}
        }() == ("focus" === t);
    }
    function Ee(e, t, n, r, i, o) {
        var a, s;
        if ("object" == typeof t) {
            for(s in "string" != typeof n && (r = r || n, n = void 0), t)Ee(e, s, n, r, t[s], o);
            return e;
        }
        if (null == r && null == i ? (i = n, r = n = void 0) : null == i && ("string" == typeof n ? (i = r, r = void 0) : (i = r, r = n, n = void 0)), !1 === i) i = Te;
        else if (!i) return e;
        return 1 === o && (a = i, (i = function(e) {
            return S().off(e), a.apply(this, arguments);
        }).guid = a.guid || (a.guid = S.guid++)), e.each(function() {
            S.event.add(this, t, i, r, n);
        });
    }
    function Se(e, i, o) {
        o ? (Y.set(e, i, !1), S.event.add(e, i, {
            namespace: !1,
            handler: function(e) {
                var t, n, r = Y.get(this, i);
                if (1 & e.isTrigger && this[i]) {
                    if (r.length) (S.event.special[i] || {}).delegateType && e.stopPropagation();
                    else if (r = s.call(arguments), Y.set(this, i, r), t = o(this, i), this[i](), r !== (n = Y.get(this, i)) || t ? Y.set(this, i, !1) : n = {}, r !== n) return e.stopImmediatePropagation(), e.preventDefault(), n && n.value;
                } else r.length && (Y.set(this, i, {
                    value: S.event.trigger(S.extend(r[0], S.Event.prototype), r.slice(1), this)
                }), e.stopImmediatePropagation());
            }
        })) : void 0 === Y.get(e, i) && S.event.add(e, i, we);
    }
    S.event = {
        global: {},
        add: function(t, e, n, r, i) {
            var o, a, s, u, l, c, f, p, d, h, g, y = Y.get(t);
            if (V(t)) {
                n.handler && (n = (o = n).handler, i = o.selector), i && S.find.matchesSelector(re, i), n.guid || (n.guid = S.guid++), (u = y.events) || (u = y.events = Object.create(null)), (a = y.handle) || (a = y.handle = function(e) {
                    return "undefined" != typeof S && S.event.triggered !== e.type ? S.event.dispatch.apply(t, arguments) : void 0;
                }), l = (e = (e || "").match(P) || [
                    ""
                ]).length;
                while(l--)d = g = (s = be.exec(e[l]) || [])[1], h = (s[2] || "").split(".").sort(), d && (f = S.event.special[d] || {}, d = (i ? f.delegateType : f.bindType) || d, f = S.event.special[d] || {}, c = S.extend({
                    type: d,
                    origType: g,
                    data: r,
                    handler: n,
                    guid: n.guid,
                    selector: i,
                    needsContext: i && S.expr.match.needsContext.test(i),
                    namespace: h.join(".")
                }, o), (p = u[d]) || ((p = u[d] = []).delegateCount = 0, f.setup && !1 !== f.setup.call(t, r, h, a) || t.addEventListener && t.addEventListener(d, a)), f.add && (f.add.call(t, c), c.handler.guid || (c.handler.guid = n.guid)), i ? p.splice(p.delegateCount++, 0, c) : p.push(c), S.event.global[d] = !0);
            }
        },
        remove: function(e, t, n, r, i) {
            var o, a, s, u, l, c, f, p, d, h, g, y = Y.hasData(e) && Y.get(e);
            if (y && (u = y.events)) {
                l = (t = (t || "").match(P) || [
                    ""
                ]).length;
                while(l--)if (d = g = (s = be.exec(t[l]) || [])[1], h = (s[2] || "").split(".").sort(), d) {
                    f = S.event.special[d] || {}, p = u[d = (r ? f.delegateType : f.bindType) || d] || [], s = s[2] && new RegExp("(^|\\.)" + h.join("\\.(?:.*\\.|)") + "(\\.|$)"), a = o = p.length;
                    while(o--)c = p[o], !i && g !== c.origType || n && n.guid !== c.guid || s && !s.test(c.namespace) || r && r !== c.selector && ("**" !== r || !c.selector) || (p.splice(o, 1), c.selector && p.delegateCount--, f.remove && f.remove.call(e, c));
                    a && !p.length && (f.teardown && !1 !== f.teardown.call(e, h, y.handle) || S.removeEvent(e, d, y.handle), delete u[d]);
                } else for(d in u)S.event.remove(e, d + t[l], n, r, !0);
                S.isEmptyObject(u) && Y.remove(e, "handle events");
            }
        },
        dispatch: function(e) {
            var t, n, r, i, o, a, s = new Array(arguments.length), u = S.event.fix(e), l = (Y.get(this, "events") || Object.create(null))[u.type] || [], c = S.event.special[u.type] || {};
            for(s[0] = u, t = 1; t < arguments.length; t++)s[t] = arguments[t];
            if (u.delegateTarget = this, !c.preDispatch || !1 !== c.preDispatch.call(this, u)) {
                a = S.event.handlers.call(this, u, l), t = 0;
                while((i = a[t++]) && !u.isPropagationStopped()){
                    u.currentTarget = i.elem, n = 0;
                    while((o = i.handlers[n++]) && !u.isImmediatePropagationStopped())u.rnamespace && !1 !== o.namespace && !u.rnamespace.test(o.namespace) || (u.handleObj = o, u.data = o.data, void 0 !== (r = ((S.event.special[o.origType] || {}).handle || o.handler).apply(i.elem, s)) && !1 === (u.result = r) && (u.preventDefault(), u.stopPropagation()));
                }
                return c.postDispatch && c.postDispatch.call(this, u), u.result;
            }
        },
        handlers: function(e, t) {
            var n, r, i, o, a, s = [], u = t.delegateCount, l = e.target;
            if (u && l.nodeType && !("click" === e.type && 1 <= e.button)) {
                for(; l !== this; l = l.parentNode || this)if (1 === l.nodeType && ("click" !== e.type || !0 !== l.disabled)) {
                    for(o = [], a = {}, n = 0; n < u; n++)void 0 === a[i = (r = t[n]).selector + " "] && (a[i] = r.needsContext ? -1 < S(i, this).index(l) : S.find(i, this, null, [
                        l
                    ]).length), a[i] && o.push(r);
                    o.length && s.push({
                        elem: l,
                        handlers: o
                    });
                }
            }
            return l = this, u < t.length && s.push({
                elem: l,
                handlers: t.slice(u)
            }), s;
        },
        addProp: function(t, e) {
            Object.defineProperty(S.Event.prototype, t, {
                enumerable: !0,
                configurable: !0,
                get: m(e) ? function() {
                    if (this.originalEvent) return e(this.originalEvent);
                } : function() {
                    if (this.originalEvent) return this.originalEvent[t];
                },
                set: function(e) {
                    Object.defineProperty(this, t, {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: e
                    });
                }
            });
        },
        fix: function(e) {
            return e[S.expando] ? e : new S.Event(e);
        },
        special: {
            load: {
                noBubble: !0
            },
            click: {
                setup: function(e) {
                    var t = this || e;
                    return pe.test(t.type) && t.click && A(t, "input") && Se(t, "click", we), !1;
                },
                trigger: function(e) {
                    var t = this || e;
                    return pe.test(t.type) && t.click && A(t, "input") && Se(t, "click"), !0;
                },
                _default: function(e) {
                    var t = e.target;
                    return pe.test(t.type) && t.click && A(t, "input") && Y.get(t, "click") || A(t, "a");
                }
            },
            beforeunload: {
                postDispatch: function(e) {
                    void 0 !== e.result && e.originalEvent && (e.originalEvent.returnValue = e.result);
                }
            }
        }
    }, S.removeEvent = function(e, t, n) {
        e.removeEventListener && e.removeEventListener(t, n);
    }, S.Event = function(e, t) {
        if (!(this instanceof S.Event)) return new S.Event(e, t);
        e && e.type ? (this.originalEvent = e, this.type = e.type, this.isDefaultPrevented = e.defaultPrevented || void 0 === e.defaultPrevented && !1 === e.returnValue ? we : Te, this.target = e.target && 3 === e.target.nodeType ? e.target.parentNode : e.target, this.currentTarget = e.currentTarget, this.relatedTarget = e.relatedTarget) : this.type = e, t && S.extend(this, t), this.timeStamp = e && e.timeStamp || Date.now(), this[S.expando] = !0;
    }, S.Event.prototype = {
        constructor: S.Event,
        isDefaultPrevented: Te,
        isPropagationStopped: Te,
        isImmediatePropagationStopped: Te,
        isSimulated: !1,
        preventDefault: function() {
            var e = this.originalEvent;
            this.isDefaultPrevented = we, e && !this.isSimulated && e.preventDefault();
        },
        stopPropagation: function() {
            var e = this.originalEvent;
            this.isPropagationStopped = we, e && !this.isSimulated && e.stopPropagation();
        },
        stopImmediatePropagation: function() {
            var e = this.originalEvent;
            this.isImmediatePropagationStopped = we, e && !this.isSimulated && e.stopImmediatePropagation(), this.stopPropagation();
        }
    }, S.each({
        altKey: !0,
        bubbles: !0,
        cancelable: !0,
        changedTouches: !0,
        ctrlKey: !0,
        detail: !0,
        eventPhase: !0,
        metaKey: !0,
        pageX: !0,
        pageY: !0,
        shiftKey: !0,
        view: !0,
        "char": !0,
        code: !0,
        charCode: !0,
        key: !0,
        keyCode: !0,
        button: !0,
        buttons: !0,
        clientX: !0,
        clientY: !0,
        offsetX: !0,
        offsetY: !0,
        pointerId: !0,
        pointerType: !0,
        screenX: !0,
        screenY: !0,
        targetTouches: !0,
        toElement: !0,
        touches: !0,
        which: !0
    }, S.event.addProp), S.each({
        focus: "focusin",
        blur: "focusout"
    }, function(t, e) {
        S.event.special[t] = {
            setup: function() {
                return Se(this, t, Ce), !1;
            },
            trigger: function() {
                return Se(this, t), !0;
            },
            _default: function(e) {
                return Y.get(e.target, t);
            },
            delegateType: e
        };
    }), S.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout",
        pointerenter: "pointerover",
        pointerleave: "pointerout"
    }, function(e, i) {
        S.event.special[e] = {
            delegateType: i,
            bindType: i,
            handle: function(e) {
                var t, n = e.relatedTarget, r = e.handleObj;
                return n && (n === this || S.contains(this, n)) || (e.type = r.origType, t = r.handler.apply(this, arguments), e.type = i), t;
            }
        };
    }), S.fn.extend({
        on: function(e, t, n, r) {
            return Ee(this, e, t, n, r);
        },
        one: function(e, t, n, r) {
            return Ee(this, e, t, n, r, 1);
        },
        off: function(e, t, n) {
            var r, i;
            if (e && e.preventDefault && e.handleObj) return r = e.handleObj, S(e.delegateTarget).off(r.namespace ? r.origType + "." + r.namespace : r.origType, r.selector, r.handler), this;
            if ("object" == typeof e) {
                for(i in e)this.off(i, t, e[i]);
                return this;
            }
            return !1 !== t && "function" != typeof t || (n = t, t = void 0), !1 === n && (n = Te), this.each(function() {
                S.event.remove(this, e, n, t);
            });
        }
    });
    var ke = /<script|<style|<link/i, Ae = /checked\s*(?:[^=]|=\s*.checked.)/i, Ne = /^\s*<!\[CDATA\[|\]\]>\s*$/g;
    function je(e, t) {
        return A(e, "table") && A(11 !== t.nodeType ? t : t.firstChild, "tr") && S(e).children("tbody")[0] || e;
    }
    function De(e) {
        return e.type = (null !== e.getAttribute("type")) + "/" + e.type, e;
    }
    function qe(e) {
        return "true/" === (e.type || "").slice(0, 5) ? e.type = e.type.slice(5) : e.removeAttribute("type"), e;
    }
    function Le(e, t) {
        var n, r, i, o, a, s;
        if (1 === t.nodeType) {
            if (Y.hasData(e) && (s = Y.get(e).events)) for(i in Y.remove(t, "handle events"), s)for(n = 0, r = s[i].length; n < r; n++)S.event.add(t, i, s[i][n]);
            Q.hasData(e) && (o = Q.access(e), a = S.extend({}, o), Q.set(t, a));
        }
    }
    function He(n, r, i, o) {
        r = g(r);
        var e, t, a, s, u, l, c = 0, f = n.length, p = f - 1, d = r[0], h = m(d);
        if (h || 1 < f && "string" == typeof d && !v.checkClone && Ae.test(d)) return n.each(function(e) {
            var t = n.eq(e);
            h && (r[0] = d.call(this, e, t.html())), He(t, r, i, o);
        });
        if (f && (t = (e = xe(r, n[0].ownerDocument, !1, n, o)).firstChild, 1 === e.childNodes.length && (e = t), t || o)) {
            for(s = (a = S.map(ye(e, "script"), De)).length; c < f; c++)u = e, c !== p && (u = S.clone(u, !0, !0), s && S.merge(a, ye(u, "script"))), i.call(n[c], u, c);
            if (s) for(l = a[a.length - 1].ownerDocument, S.map(a, qe), c = 0; c < s; c++)u = a[c], he.test(u.type || "") && !Y.access(u, "globalEval") && S.contains(l, u) && (u.src && "module" !== (u.type || "").toLowerCase() ? S._evalUrl && !u.noModule && S._evalUrl(u.src, {
                nonce: u.nonce || u.getAttribute("nonce")
            }, l) : b(u.textContent.replace(Ne, ""), u, l));
        }
        return n;
    }
    function Oe(e, t, n) {
        for(var r, i = t ? S.filter(t, e) : e, o = 0; null != (r = i[o]); o++)n || 1 !== r.nodeType || S.cleanData(ye(r)), r.parentNode && (n && ie(r) && ve(ye(r, "script")), r.parentNode.removeChild(r));
        return e;
    }
    S.extend({
        htmlPrefilter: function(e) {
            return e;
        },
        clone: function(e, t, n) {
            var r, i, o, a, s, u, l, c = e.cloneNode(!0), f = ie(e);
            if (!(v.noCloneChecked || 1 !== e.nodeType && 11 !== e.nodeType || S.isXMLDoc(e))) for(a = ye(c), r = 0, i = (o = ye(e)).length; r < i; r++)s = o[r], u = a[r], "input" === (l = u.nodeName.toLowerCase()) && pe.test(s.type) ? u.checked = s.checked : "input" !== l && "textarea" !== l || (u.defaultValue = s.defaultValue);
            if (t) {
                if (n) for(o = o || ye(e), a = a || ye(c), r = 0, i = o.length; r < i; r++)Le(o[r], a[r]);
                else Le(e, c);
            }
            return 0 < (a = ye(c, "script")).length && ve(a, !f && ye(e, "script")), c;
        },
        cleanData: function(e) {
            for(var t, n, r, i = S.event.special, o = 0; void 0 !== (n = e[o]); o++)if (V(n)) {
                if (t = n[Y.expando]) {
                    if (t.events) for(r in t.events)i[r] ? S.event.remove(n, r) : S.removeEvent(n, r, t.handle);
                    n[Y.expando] = void 0;
                }
                n[Q.expando] && (n[Q.expando] = void 0);
            }
        }
    }), S.fn.extend({
        detach: function(e) {
            return Oe(this, e, !0);
        },
        remove: function(e) {
            return Oe(this, e);
        },
        text: function(e) {
            return B(this, function(e) {
                return void 0 === e ? S.text(this) : this.empty().each(function() {
                    1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (this.textContent = e);
                });
            }, null, e, arguments.length);
        },
        append: function() {
            return He(this, arguments, function(e) {
                1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || je(this, e).appendChild(e);
            });
        },
        prepend: function() {
            return He(this, arguments, function(e) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var t = je(this, e);
                    t.insertBefore(e, t.firstChild);
                }
            });
        },
        before: function() {
            return He(this, arguments, function(e) {
                this.parentNode && this.parentNode.insertBefore(e, this);
            });
        },
        after: function() {
            return He(this, arguments, function(e) {
                this.parentNode && this.parentNode.insertBefore(e, this.nextSibling);
            });
        },
        empty: function() {
            for(var e, t = 0; null != (e = this[t]); t++)1 === e.nodeType && (S.cleanData(ye(e, !1)), e.textContent = "");
            return this;
        },
        clone: function(e, t) {
            return e = null != e && e, t = null == t ? e : t, this.map(function() {
                return S.clone(this, e, t);
            });
        },
        html: function(e) {
            return B(this, function(e) {
                var t = this[0] || {}, n = 0, r = this.length;
                if (void 0 === e && 1 === t.nodeType) return t.innerHTML;
                if ("string" == typeof e && !ke.test(e) && !ge[(de.exec(e) || [
                    "",
                    ""
                ])[1].toLowerCase()]) {
                    e = S.htmlPrefilter(e);
                    try {
                        for(; n < r; n++)1 === (t = this[n] || {}).nodeType && (S.cleanData(ye(t, !1)), t.innerHTML = e);
                        t = 0;
                    } catch (e1) {}
                }
                t && this.empty().append(e);
            }, null, e, arguments.length);
        },
        replaceWith: function() {
            var n = [];
            return He(this, arguments, function(e) {
                var t = this.parentNode;
                S.inArray(this, n) < 0 && (S.cleanData(ye(this)), t && t.replaceChild(e, this));
            }, n);
        }
    }), S.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(e, a) {
        S.fn[e] = function(e) {
            for(var t, n = [], r = S(e), i = r.length - 1, o = 0; o <= i; o++)t = o === i ? this : this.clone(!0), S(r[o])[a](t), u.apply(n, t.get());
            return this.pushStack(n);
        };
    });
    var Pe = new RegExp("^(" + ee + ")(?!px)[a-z%]+$", "i"), Re = /^--/, Me = function(e) {
        var t = e.ownerDocument.defaultView;
        return t && t.opener || (t = C), t.getComputedStyle(e);
    }, Ie = function(e, t, n) {
        var r, i, o = {};
        for(i in t)o[i] = e.style[i], e.style[i] = t[i];
        for(i in r = n.call(e), t)e.style[i] = o[i];
        return r;
    }, We = new RegExp(ne.join("|"), "i"), Fe = "[\\x20\\t\\r\\n\\f]", $e = new RegExp("^" + Fe + "+|((?:^|[^\\\\])(?:\\\\.)*)" + Fe + "+$", "g");
    function Be(e, t, n) {
        var r, i, o, a, s = Re.test(t), u = e.style;
        return (n = n || Me(e)) && (a = n.getPropertyValue(t) || n[t], s && (a = a.replace($e, "$1")), "" !== a || ie(e) || (a = S.style(e, t)), !v.pixelBoxStyles() && Pe.test(a) && We.test(t) && (r = u.width, i = u.minWidth, o = u.maxWidth, u.minWidth = u.maxWidth = u.width = a, a = n.width, u.width = r, u.minWidth = i, u.maxWidth = o)), void 0 !== a ? a + "" : a;
    }
    function _e(e, t) {
        return {
            get: function() {
                if (!e()) return (this.get = t).apply(this, arguments);
                delete this.get;
            }
        };
    }
    !function() {
        function e() {
            if (l) {
                u.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0", l.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%", re.appendChild(u).appendChild(l);
                var e = C.getComputedStyle(l);
                n = "1%" !== e.top, s = 12 === t(e.marginLeft), l.style.right = "60%", o = 36 === t(e.right), r = 36 === t(e.width), l.style.position = "absolute", i = 12 === t(l.offsetWidth / 3), re.removeChild(u), l = null;
            }
        }
        function t(e) {
            return Math.round(parseFloat(e));
        }
        var n, r, i, o, a, s, u = E.createElement("div"), l = E.createElement("div");
        l.style && (l.style.backgroundClip = "content-box", l.cloneNode(!0).style.backgroundClip = "", v.clearCloneStyle = "content-box" === l.style.backgroundClip, S.extend(v, {
            boxSizingReliable: function() {
                return e(), r;
            },
            pixelBoxStyles: function() {
                return e(), o;
            },
            pixelPosition: function() {
                return e(), n;
            },
            reliableMarginLeft: function() {
                return e(), s;
            },
            scrollboxSize: function() {
                return e(), i;
            },
            reliableTrDimensions: function() {
                var e, t, n, r;
                return null == a && (e = E.createElement("table"), t = E.createElement("tr"), n = E.createElement("div"), e.style.cssText = "position:absolute;left:-11111px;border-collapse:separate", t.style.cssText = "border:1px solid", t.style.height = "1px", n.style.height = "9px", n.style.display = "block", re.appendChild(e).appendChild(t).appendChild(n), r = C.getComputedStyle(t), a = parseInt(r.height, 10) + parseInt(r.borderTopWidth, 10) + parseInt(r.borderBottomWidth, 10) === t.offsetHeight, re.removeChild(e)), a;
            }
        }));
    }();
    var ze = [
        "Webkit",
        "Moz",
        "ms"
    ], Ue = E.createElement("div").style, Xe = {};
    function Ve(e) {
        var t = S.cssProps[e] || Xe[e];
        return t || (e in Ue ? e : Xe[e] = function(e) {
            var t = e[0].toUpperCase() + e.slice(1), n = ze.length;
            while(n--)if ((e = ze[n] + t) in Ue) return e;
        }(e) || e);
    }
    var Ge = /^(none|table(?!-c[ea]).+)/, Ye = {
        position: "absolute",
        visibility: "hidden",
        display: "block"
    }, Qe = {
        letterSpacing: "0",
        fontWeight: "400"
    };
    function Je(e, t, n) {
        var r = te.exec(t);
        return r ? Math.max(0, r[2] - (n || 0)) + (r[3] || "px") : t;
    }
    function Ke(e, t, n, r, i, o) {
        var a = "width" === t ? 1 : 0, s = 0, u = 0;
        if (n === (r ? "border" : "content")) return 0;
        for(; a < 4; a += 2)"margin" === n && (u += S.css(e, n + ne[a], !0, i)), r ? ("content" === n && (u -= S.css(e, "padding" + ne[a], !0, i)), "margin" !== n && (u -= S.css(e, "border" + ne[a] + "Width", !0, i))) : (u += S.css(e, "padding" + ne[a], !0, i), "padding" !== n ? u += S.css(e, "border" + ne[a] + "Width", !0, i) : s += S.css(e, "border" + ne[a] + "Width", !0, i));
        return !r && 0 <= o && (u += Math.max(0, Math.ceil(e["offset" + t[0].toUpperCase() + t.slice(1)] - o - u - s - .5)) || 0), u;
    }
    function Ze(e, t, n) {
        var r = Me(e), i = (!v.boxSizingReliable() || n) && "border-box" === S.css(e, "boxSizing", !1, r), o = i, a = Be(e, t, r), s = "offset" + t[0].toUpperCase() + t.slice(1);
        if (Pe.test(a)) {
            if (!n) return a;
            a = "auto";
        }
        return (!v.boxSizingReliable() && i || !v.reliableTrDimensions() && A(e, "tr") || "auto" === a || !parseFloat(a) && "inline" === S.css(e, "display", !1, r)) && e.getClientRects().length && (i = "border-box" === S.css(e, "boxSizing", !1, r), (o = s in e) && (a = e[s])), (a = parseFloat(a) || 0) + Ke(e, t, n || (i ? "border" : "content"), o, r, a) + "px";
    }
    function et(e, t, n, r, i) {
        return new et.prototype.init(e, t, n, r, i);
    }
    S.extend({
        cssHooks: {
            opacity: {
                get: function(e, t) {
                    if (t) {
                        var n = Be(e, "opacity");
                        return "" === n ? "1" : n;
                    }
                }
            }
        },
        cssNumber: {
            animationIterationCount: !0,
            columnCount: !0,
            fillOpacity: !0,
            flexGrow: !0,
            flexShrink: !0,
            fontWeight: !0,
            gridArea: !0,
            gridColumn: !0,
            gridColumnEnd: !0,
            gridColumnStart: !0,
            gridRow: !0,
            gridRowEnd: !0,
            gridRowStart: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: {},
        style: function(e, t, n, r) {
            if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) {
                var i, o, a, s = X(t), u = Re.test(t), l = e.style;
                if (u || (t = Ve(s)), a = S.cssHooks[t] || S.cssHooks[s], void 0 === n) return a && "get" in a && void 0 !== (i = a.get(e, !1, r)) ? i : l[t];
                "string" === (o = typeof n) && (i = te.exec(n)) && i[1] && (n = se(e, t, i), o = "number"), null != n && n == n && ("number" !== o || u || (n += i && i[3] || (S.cssNumber[s] ? "" : "px")), v.clearCloneStyle || "" !== n || 0 !== t.indexOf("background") || (l[t] = "inherit"), a && "set" in a && void 0 === (n = a.set(e, n, r)) || (u ? l.setProperty(t, n) : l[t] = n));
            }
        },
        css: function(e, t, n, r) {
            var i, o, a, s = X(t);
            return Re.test(t) || (t = Ve(s)), (a = S.cssHooks[t] || S.cssHooks[s]) && "get" in a && (i = a.get(e, !0, n)), void 0 === i && (i = Be(e, t, r)), "normal" === i && t in Qe && (i = Qe[t]), "" === n || n ? (o = parseFloat(i), !0 === n || isFinite(o) ? o || 0 : i) : i;
        }
    }), S.each([
        "height",
        "width"
    ], function(e, u) {
        S.cssHooks[u] = {
            get: function(e, t, n) {
                if (t) return !Ge.test(S.css(e, "display")) || e.getClientRects().length && e.getBoundingClientRect().width ? Ze(e, u, n) : Ie(e, Ye, function() {
                    return Ze(e, u, n);
                });
            },
            set: function(e, t, n) {
                var r, i = Me(e), o = !v.scrollboxSize() && "absolute" === i.position, a = (o || n) && "border-box" === S.css(e, "boxSizing", !1, i), s = n ? Ke(e, u, n, a, i) : 0;
                return a && o && (s -= Math.ceil(e["offset" + u[0].toUpperCase() + u.slice(1)] - parseFloat(i[u]) - Ke(e, u, "border", !1, i) - .5)), s && (r = te.exec(t)) && "px" !== (r[3] || "px") && (e.style[u] = t, t = S.css(e, u)), Je(0, t, s);
            }
        };
    }), S.cssHooks.marginLeft = _e(v.reliableMarginLeft, function(e, t) {
        if (t) return (parseFloat(Be(e, "marginLeft")) || e.getBoundingClientRect().left - Ie(e, {
            marginLeft: 0
        }, function() {
            return e.getBoundingClientRect().left;
        })) + "px";
    }), S.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(i, o) {
        S.cssHooks[i + o] = {
            expand: function(e) {
                for(var t = 0, n = {}, r = "string" == typeof e ? e.split(" ") : [
                    e
                ]; t < 4; t++)n[i + ne[t] + o] = r[t] || r[t - 2] || r[0];
                return n;
            }
        }, "margin" !== i && (S.cssHooks[i + o].set = Je);
    }), S.fn.extend({
        css: function(e, t) {
            return B(this, function(e, t, n) {
                var r, i, o = {}, a = 0;
                if (Array.isArray(t)) {
                    for(r = Me(e), i = t.length; a < i; a++)o[t[a]] = S.css(e, t[a], !1, r);
                    return o;
                }
                return void 0 !== n ? S.style(e, t, n) : S.css(e, t);
            }, e, t, 1 < arguments.length);
        }
    }), ((S.Tween = et).prototype = {
        constructor: et,
        init: function(e, t, n, r, i, o) {
            this.elem = e, this.prop = n, this.easing = i || S.easing._default, this.options = t, this.start = this.now = this.cur(), this.end = r, this.unit = o || (S.cssNumber[n] ? "" : "px");
        },
        cur: function() {
            var e = et.propHooks[this.prop];
            return e && e.get ? e.get(this) : et.propHooks._default.get(this);
        },
        run: function(e) {
            var t, n = et.propHooks[this.prop];
            return this.options.duration ? this.pos = t = S.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration) : this.pos = t = e, this.now = (this.end - this.start) * t + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), n && n.set ? n.set(this) : et.propHooks._default.set(this), this;
        }
    }).init.prototype = et.prototype, (et.propHooks = {
        _default: {
            get: function(e) {
                var t;
                return 1 !== e.elem.nodeType || null != e.elem[e.prop] && null == e.elem.style[e.prop] ? e.elem[e.prop] : (t = S.css(e.elem, e.prop, "")) && "auto" !== t ? t : 0;
            },
            set: function(e) {
                S.fx.step[e.prop] ? S.fx.step[e.prop](e) : 1 !== e.elem.nodeType || !S.cssHooks[e.prop] && null == e.elem.style[Ve(e.prop)] ? e.elem[e.prop] = e.now : S.style(e.elem, e.prop, e.now + e.unit);
            }
        }
    }).scrollTop = et.propHooks.scrollLeft = {
        set: function(e) {
            e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now);
        }
    }, S.easing = {
        linear: function(e) {
            return e;
        },
        swing: function(e) {
            return .5 - Math.cos(e * Math.PI) / 2;
        },
        _default: "swing"
    }, S.fx = et.prototype.init, S.fx.step = {};
    var tt, nt, rt, it, ot = /^(?:toggle|show|hide)$/, at = /queueHooks$/;
    function st() {
        nt && (!1 === E.hidden && C.requestAnimationFrame ? C.requestAnimationFrame(st) : C.setTimeout(st, S.fx.interval), S.fx.tick());
    }
    function ut() {
        return C.setTimeout(function() {
            tt = void 0;
        }), tt = Date.now();
    }
    function lt(e, t) {
        var n, r = 0, i = {
            height: e
        };
        for(t = t ? 1 : 0; r < 4; r += 2 - t)i["margin" + (n = ne[r])] = i["padding" + n] = e;
        return t && (i.opacity = i.width = e), i;
    }
    function ct(e, t, n) {
        for(var r, i = (ft.tweeners[t] || []).concat(ft.tweeners["*"]), o = 0, a = i.length; o < a; o++)if (r = i[o].call(n, t, e)) return r;
    }
    function ft(o, e, t) {
        var n, a, r = 0, i = ft.prefilters.length, s = S.Deferred().always(function() {
            delete u.elem;
        }), u = function() {
            if (a) return !1;
            for(var e = tt || ut(), t = Math.max(0, l.startTime + l.duration - e), n = 1 - (t / l.duration || 0), r = 0, i = l.tweens.length; r < i; r++)l.tweens[r].run(n);
            return s.notifyWith(o, [
                l,
                n,
                t
            ]), n < 1 && i ? t : (i || s.notifyWith(o, [
                l,
                1,
                0
            ]), s.resolveWith(o, [
                l
            ]), !1);
        }, l = s.promise({
            elem: o,
            props: S.extend({}, e),
            opts: S.extend(!0, {
                specialEasing: {},
                easing: S.easing._default
            }, t),
            originalProperties: e,
            originalOptions: t,
            startTime: tt || ut(),
            duration: t.duration,
            tweens: [],
            createTween: function(e, t) {
                var n = S.Tween(o, l.opts, e, t, l.opts.specialEasing[e] || l.opts.easing);
                return l.tweens.push(n), n;
            },
            stop: function(e) {
                var t = 0, n = e ? l.tweens.length : 0;
                if (a) return this;
                for(a = !0; t < n; t++)l.tweens[t].run(1);
                return e ? (s.notifyWith(o, [
                    l,
                    1,
                    0
                ]), s.resolveWith(o, [
                    l,
                    e
                ])) : s.rejectWith(o, [
                    l,
                    e
                ]), this;
            }
        }), c = l.props;
        for(!function(e, t) {
            var n, r, i, o, a;
            for(n in e)if (i = t[r = X(n)], o = e[n], Array.isArray(o) && (i = o[1], o = e[n] = o[0]), n !== r && (e[r] = o, delete e[n]), (a = S.cssHooks[r]) && ("expand" in a)) for(n in o = a.expand(o), delete e[r], o)(n in e) || (e[n] = o[n], t[n] = i);
            else t[r] = i;
        }(c, l.opts.specialEasing); r < i; r++)if (n = ft.prefilters[r].call(l, o, c, l.opts)) return m(n.stop) && (S._queueHooks(l.elem, l.opts.queue).stop = n.stop.bind(n)), n;
        return S.map(c, ct, l), m(l.opts.start) && l.opts.start.call(o, l), l.progress(l.opts.progress).done(l.opts.done, l.opts.complete).fail(l.opts.fail).always(l.opts.always), S.fx.timer(S.extend(u, {
            elem: o,
            anim: l,
            queue: l.opts.queue
        })), l;
    }
    S.Animation = S.extend(ft, {
        tweeners: {
            "*": [
                function(e, t) {
                    var n = this.createTween(e, t);
                    return se(n.elem, e, te.exec(t), n), n;
                }
            ]
        },
        tweener: function(e, t) {
            m(e) ? (t = e, e = [
                "*"
            ]) : e = e.match(P);
            for(var n, r = 0, i = e.length; r < i; r++)n = e[r], ft.tweeners[n] = ft.tweeners[n] || [], ft.tweeners[n].unshift(t);
        },
        prefilters: [
            function(e, t, n) {
                var r, i, o, a, s, u, l, c, f = "width" in t || "height" in t, p = this, d = {}, h = e.style, g = e.nodeType && ae(e), y = Y.get(e, "fxshow");
                for(r in n.queue || (null == (a = S._queueHooks(e, "fx")).unqueued && (a.unqueued = 0, s = a.empty.fire, a.empty.fire = function() {
                    a.unqueued || s();
                }), a.unqueued++, p.always(function() {
                    p.always(function() {
                        a.unqueued--, S.queue(e, "fx").length || a.empty.fire();
                    });
                })), t)if (i = t[r], ot.test(i)) {
                    if (delete t[r], o = o || "toggle" === i, i === (g ? "hide" : "show")) {
                        if ("show" !== i || !y || void 0 === y[r]) continue;
                        g = !0;
                    }
                    d[r] = y && y[r] || S.style(e, r);
                }
                if ((u = !S.isEmptyObject(t)) || !S.isEmptyObject(d)) for(r in f && 1 === e.nodeType && (n.overflow = [
                    h.overflow,
                    h.overflowX,
                    h.overflowY
                ], null == (l = y && y.display) && (l = Y.get(e, "display")), "none" === (c = S.css(e, "display")) && (l ? c = l : (le([
                    e
                ], !0), l = e.style.display || l, c = S.css(e, "display"), le([
                    e
                ]))), ("inline" === c || "inline-block" === c && null != l) && "none" === S.css(e, "float") && (u || (p.done(function() {
                    h.display = l;
                }), null == l && (c = h.display, l = "none" === c ? "" : c)), h.display = "inline-block")), n.overflow && (h.overflow = "hidden", p.always(function() {
                    h.overflow = n.overflow[0], h.overflowX = n.overflow[1], h.overflowY = n.overflow[2];
                })), u = !1, d)u || (y ? "hidden" in y && (g = y.hidden) : y = Y.access(e, "fxshow", {
                    display: l
                }), o && (y.hidden = !g), g && le([
                    e
                ], !0), p.done(function() {
                    for(r in g || le([
                        e
                    ]), Y.remove(e, "fxshow"), d)S.style(e, r, d[r]);
                })), u = ct(g ? y[r] : 0, r, p), r in y || (y[r] = u.start, g && (u.end = u.start, u.start = 0));
            }
        ],
        prefilter: function(e, t) {
            t ? ft.prefilters.unshift(e) : ft.prefilters.push(e);
        }
    }), S.speed = function(e, t, n) {
        var r = e && "object" == typeof e ? S.extend({}, e) : {
            complete: n || !n && t || m(e) && e,
            duration: e,
            easing: n && t || t && !m(t) && t
        };
        return S.fx.off ? r.duration = 0 : "number" != typeof r.duration && (r.duration in S.fx.speeds ? r.duration = S.fx.speeds[r.duration] : r.duration = S.fx.speeds._default), null != r.queue && !0 !== r.queue || (r.queue = "fx"), r.old = r.complete, r.complete = function() {
            m(r.old) && r.old.call(this), r.queue && S.dequeue(this, r.queue);
        }, r;
    }, S.fn.extend({
        fadeTo: function(e, t, n, r) {
            return this.filter(ae).css("opacity", 0).show().end().animate({
                opacity: t
            }, e, n, r);
        },
        animate: function(t, e, n, r) {
            var i = S.isEmptyObject(t), o = S.speed(e, n, r), a = function() {
                var e = ft(this, S.extend({}, t), o);
                (i || Y.get(this, "finish")) && e.stop(!0);
            };
            return a.finish = a, i || !1 === o.queue ? this.each(a) : this.queue(o.queue, a);
        },
        stop: function(i, e, o) {
            var a = function(e) {
                var t = e.stop;
                delete e.stop, t(o);
            };
            return "string" != typeof i && (o = e, e = i, i = void 0), e && this.queue(i || "fx", []), this.each(function() {
                var e = !0, t = null != i && i + "queueHooks", n = S.timers, r = Y.get(this);
                if (t) r[t] && r[t].stop && a(r[t]);
                else for(t in r)r[t] && r[t].stop && at.test(t) && a(r[t]);
                for(t = n.length; t--;)n[t].elem !== this || null != i && n[t].queue !== i || (n[t].anim.stop(o), e = !1, n.splice(t, 1));
                !e && o || S.dequeue(this, i);
            });
        },
        finish: function(a) {
            return !1 !== a && (a = a || "fx"), this.each(function() {
                var e, t = Y.get(this), n = t[a + "queue"], r = t[a + "queueHooks"], i = S.timers, o = n ? n.length : 0;
                for(t.finish = !0, S.queue(this, a, []), r && r.stop && r.stop.call(this, !0), e = i.length; e--;)i[e].elem === this && i[e].queue === a && (i[e].anim.stop(!0), i.splice(e, 1));
                for(e = 0; e < o; e++)n[e] && n[e].finish && n[e].finish.call(this);
                delete t.finish;
            });
        }
    }), S.each([
        "toggle",
        "show",
        "hide"
    ], function(e, r) {
        var i = S.fn[r];
        S.fn[r] = function(e, t, n) {
            return null == e || "boolean" == typeof e ? i.apply(this, arguments) : this.animate(lt(r, !0), e, t, n);
        };
    }), S.each({
        slideDown: lt("show"),
        slideUp: lt("hide"),
        slideToggle: lt("toggle"),
        fadeIn: {
            opacity: "show"
        },
        fadeOut: {
            opacity: "hide"
        },
        fadeToggle: {
            opacity: "toggle"
        }
    }, function(e, r) {
        S.fn[e] = function(e, t, n) {
            return this.animate(r, e, t, n);
        };
    }), S.timers = [], S.fx.tick = function() {
        var e, t = 0, n = S.timers;
        for(tt = Date.now(); t < n.length; t++)(e = n[t])() || n[t] !== e || n.splice(t--, 1);
        n.length || S.fx.stop(), tt = void 0;
    }, S.fx.timer = function(e) {
        S.timers.push(e), S.fx.start();
    }, S.fx.interval = 13, S.fx.start = function() {
        nt || (nt = !0, st());
    }, S.fx.stop = function() {
        nt = null;
    }, S.fx.speeds = {
        slow: 600,
        fast: 200,
        _default: 400
    }, S.fn.delay = function(r, e) {
        return r = S.fx && S.fx.speeds[r] || r, e = e || "fx", this.queue(e, function(e, t) {
            var n = C.setTimeout(e, r);
            t.stop = function() {
                C.clearTimeout(n);
            };
        });
    }, rt = E.createElement("input"), it = E.createElement("select").appendChild(E.createElement("option")), rt.type = "checkbox", v.checkOn = "" !== rt.value, v.optSelected = it.selected, (rt = E.createElement("input")).value = "t", rt.type = "radio", v.radioValue = "t" === rt.value;
    var pt, dt = S.expr.attrHandle;
    S.fn.extend({
        attr: function(e, t) {
            return B(this, S.attr, e, t, 1 < arguments.length);
        },
        removeAttr: function(e) {
            return this.each(function() {
                S.removeAttr(this, e);
            });
        }
    }), S.extend({
        attr: function(e, t, n) {
            var r, i, o = e.nodeType;
            if (3 !== o && 8 !== o && 2 !== o) return "undefined" == typeof e.getAttribute ? S.prop(e, t, n) : (1 === o && S.isXMLDoc(e) || (i = S.attrHooks[t.toLowerCase()] || (S.expr.match.bool.test(t) ? pt : void 0)), void 0 !== n ? null === n ? void S.removeAttr(e, t) : i && "set" in i && void 0 !== (r = i.set(e, n, t)) ? r : (e.setAttribute(t, n + ""), n) : i && "get" in i && null !== (r = i.get(e, t)) ? r : null == (r = S.find.attr(e, t)) ? void 0 : r);
        },
        attrHooks: {
            type: {
                set: function(e, t) {
                    if (!v.radioValue && "radio" === t && A(e, "input")) {
                        var n = e.value;
                        return e.setAttribute("type", t), n && (e.value = n), t;
                    }
                }
            }
        },
        removeAttr: function(e, t) {
            var n, r = 0, i = t && t.match(P);
            if (i && 1 === e.nodeType) while(n = i[r++])e.removeAttribute(n);
        }
    }), pt = {
        set: function(e, t, n) {
            return !1 === t ? S.removeAttr(e, n) : e.setAttribute(n, n), n;
        }
    }, S.each(S.expr.match.bool.source.match(/\w+/g), function(e, t) {
        var a = dt[t] || S.find.attr;
        dt[t] = function(e, t, n) {
            var r, i, o = t.toLowerCase();
            return n || (i = dt[o], dt[o] = r, r = null != a(e, t, n) ? o : null, dt[o] = i), r;
        };
    });
    var ht = /^(?:input|select|textarea|button)$/i, gt = /^(?:a|area)$/i;
    function yt(e) {
        return (e.match(P) || []).join(" ");
    }
    function vt(e) {
        return e.getAttribute && e.getAttribute("class") || "";
    }
    function mt(e) {
        return Array.isArray(e) ? e : "string" == typeof e && e.match(P) || [];
    }
    S.fn.extend({
        prop: function(e, t) {
            return B(this, S.prop, e, t, 1 < arguments.length);
        },
        removeProp: function(e) {
            return this.each(function() {
                delete this[S.propFix[e] || e];
            });
        }
    }), S.extend({
        prop: function(e, t, n) {
            var r, i, o = e.nodeType;
            if (3 !== o && 8 !== o && 2 !== o) return 1 === o && S.isXMLDoc(e) || (t = S.propFix[t] || t, i = S.propHooks[t]), void 0 !== n ? i && "set" in i && void 0 !== (r = i.set(e, n, t)) ? r : e[t] = n : i && "get" in i && null !== (r = i.get(e, t)) ? r : e[t];
        },
        propHooks: {
            tabIndex: {
                get: function(e) {
                    var t = S.find.attr(e, "tabindex");
                    return t ? parseInt(t, 10) : ht.test(e.nodeName) || gt.test(e.nodeName) && e.href ? 0 : -1;
                }
            }
        },
        propFix: {
            "for": "htmlFor",
            "class": "className"
        }
    }), v.optSelected || (S.propHooks.selected = {
        get: function(e) {
            var t = e.parentNode;
            return t && t.parentNode && t.parentNode.selectedIndex, null;
        },
        set: function(e) {
            var t = e.parentNode;
            t && (t.selectedIndex, t.parentNode && t.parentNode.selectedIndex);
        }
    }), S.each([
        "tabIndex",
        "readOnly",
        "maxLength",
        "cellSpacing",
        "cellPadding",
        "rowSpan",
        "colSpan",
        "useMap",
        "frameBorder",
        "contentEditable"
    ], function() {
        S.propFix[this.toLowerCase()] = this;
    }), S.fn.extend({
        addClass: function(t) {
            var e, n, r, i, o, a;
            return m(t) ? this.each(function(e) {
                S(this).addClass(t.call(this, e, vt(this)));
            }) : (e = mt(t)).length ? this.each(function() {
                if (r = vt(this), n = 1 === this.nodeType && " " + yt(r) + " ") {
                    for(o = 0; o < e.length; o++)i = e[o], n.indexOf(" " + i + " ") < 0 && (n += i + " ");
                    a = yt(n), r !== a && this.setAttribute("class", a);
                }
            }) : this;
        },
        removeClass: function(t) {
            var e, n, r, i, o, a;
            return m(t) ? this.each(function(e) {
                S(this).removeClass(t.call(this, e, vt(this)));
            }) : arguments.length ? (e = mt(t)).length ? this.each(function() {
                if (r = vt(this), n = 1 === this.nodeType && " " + yt(r) + " ") {
                    for(o = 0; o < e.length; o++){
                        i = e[o];
                        while(-1 < n.indexOf(" " + i + " "))n = n.replace(" " + i + " ", " ");
                    }
                    a = yt(n), r !== a && this.setAttribute("class", a);
                }
            }) : this : this.attr("class", "");
        },
        toggleClass: function(t, n) {
            var e, r, i, o, a = typeof t, s = "string" === a || Array.isArray(t);
            return m(t) ? this.each(function(e) {
                S(this).toggleClass(t.call(this, e, vt(this), n), n);
            }) : "boolean" == typeof n && s ? n ? this.addClass(t) : this.removeClass(t) : (e = mt(t), this.each(function() {
                if (s) for(o = S(this), i = 0; i < e.length; i++)r = e[i], o.hasClass(r) ? o.removeClass(r) : o.addClass(r);
                else void 0 !== t && "boolean" !== a || ((r = vt(this)) && Y.set(this, "__className__", r), this.setAttribute && this.setAttribute("class", r || !1 === t ? "" : Y.get(this, "__className__") || ""));
            }));
        },
        hasClass: function(e) {
            var t, n, r = 0;
            t = " " + e + " ";
            while(n = this[r++])if (1 === n.nodeType && -1 < (" " + yt(vt(n)) + " ").indexOf(t)) return !0;
            return !1;
        }
    });
    var xt = /\r/g;
    S.fn.extend({
        val: function(n) {
            var r, e, i, t = this[0];
            return arguments.length ? (i = m(n), this.each(function(e) {
                var t;
                1 === this.nodeType && (null == (t = i ? n.call(this, e, S(this).val()) : n) ? t = "" : "number" == typeof t ? t += "" : Array.isArray(t) && (t = S.map(t, function(e) {
                    return null == e ? "" : e + "";
                })), (r = S.valHooks[this.type] || S.valHooks[this.nodeName.toLowerCase()]) && "set" in r && void 0 !== r.set(this, t, "value") || (this.value = t));
            })) : t ? (r = S.valHooks[t.type] || S.valHooks[t.nodeName.toLowerCase()]) && "get" in r && void 0 !== (e = r.get(t, "value")) ? e : "string" == typeof (e = t.value) ? e.replace(xt, "") : null == e ? "" : e : void 0;
        }
    }), S.extend({
        valHooks: {
            option: {
                get: function(e) {
                    var t = S.find.attr(e, "value");
                    return null != t ? t : yt(S.text(e));
                }
            },
            select: {
                get: function(e) {
                    var t, n, r, i = e.options, o = e.selectedIndex, a = "select-one" === e.type, s = a ? null : [], u = a ? o + 1 : i.length;
                    for(r = o < 0 ? u : a ? o : 0; r < u; r++)if (((n = i[r]).selected || r === o) && !n.disabled && (!n.parentNode.disabled || !A(n.parentNode, "optgroup"))) {
                        if (t = S(n).val(), a) return t;
                        s.push(t);
                    }
                    return s;
                },
                set: function(e, t) {
                    var n, r, i = e.options, o = S.makeArray(t), a = i.length;
                    while(a--)((r = i[a]).selected = -1 < S.inArray(S.valHooks.option.get(r), o)) && (n = !0);
                    return n || (e.selectedIndex = -1), o;
                }
            }
        }
    }), S.each([
        "radio",
        "checkbox"
    ], function() {
        S.valHooks[this] = {
            set: function(e, t) {
                if (Array.isArray(t)) return e.checked = -1 < S.inArray(S(e).val(), t);
            }
        }, v.checkOn || (S.valHooks[this].get = function(e) {
            return null === e.getAttribute("value") ? "on" : e.value;
        });
    }), v.focusin = "onfocusin" in C;
    var bt = /^(?:focusinfocus|focusoutblur)$/, wt = function(e) {
        e.stopPropagation();
    };
    S.extend(S.event, {
        trigger: function(e, t, n, r) {
            var i, o, a, s, u, l, c, f, p = [
                n || E
            ], d = y.call(e, "type") ? e.type : e, h = y.call(e, "namespace") ? e.namespace.split(".") : [];
            if (o = f = a = n = n || E, 3 !== n.nodeType && 8 !== n.nodeType && !bt.test(d + S.event.triggered) && (-1 < d.indexOf(".") && (d = (h = d.split(".")).shift(), h.sort()), u = d.indexOf(":") < 0 && "on" + d, (e = e[S.expando] ? e : new S.Event(d, "object" == typeof e && e)).isTrigger = r ? 2 : 3, e.namespace = h.join("."), e.rnamespace = e.namespace ? new RegExp("(^|\\.)" + h.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, e.result = void 0, e.target || (e.target = n), t = null == t ? [
                e
            ] : S.makeArray(t, [
                e
            ]), c = S.event.special[d] || {}, r || !c.trigger || !1 !== c.trigger.apply(n, t))) {
                if (!r && !c.noBubble && !x(n)) {
                    for(s = c.delegateType || d, bt.test(s + d) || (o = o.parentNode); o; o = o.parentNode)p.push(o), a = o;
                    a === (n.ownerDocument || E) && p.push(a.defaultView || a.parentWindow || C);
                }
                i = 0;
                while((o = p[i++]) && !e.isPropagationStopped())f = o, e.type = 1 < i ? s : c.bindType || d, (l = (Y.get(o, "events") || Object.create(null))[e.type] && Y.get(o, "handle")) && l.apply(o, t), (l = u && o[u]) && l.apply && V(o) && (e.result = l.apply(o, t), !1 === e.result && e.preventDefault());
                return e.type = d, r || e.isDefaultPrevented() || c._default && !1 !== c._default.apply(p.pop(), t) || !V(n) || u && m(n[d]) && !x(n) && ((a = n[u]) && (n[u] = null), S.event.triggered = d, e.isPropagationStopped() && f.addEventListener(d, wt), n[d](), e.isPropagationStopped() && f.removeEventListener(d, wt), S.event.triggered = void 0, a && (n[u] = a)), e.result;
            }
        },
        simulate: function(e, t, n) {
            var r = S.extend(new S.Event, n, {
                type: e,
                isSimulated: !0
            });
            S.event.trigger(r, null, t);
        }
    }), S.fn.extend({
        trigger: function(e, t) {
            return this.each(function() {
                S.event.trigger(e, t, this);
            });
        },
        triggerHandler: function(e, t) {
            var n = this[0];
            if (n) return S.event.trigger(e, t, n, !0);
        }
    }), v.focusin || S.each({
        focus: "focusin",
        blur: "focusout"
    }, function(n, r) {
        var i = function(e) {
            S.event.simulate(r, e.target, S.event.fix(e));
        };
        S.event.special[r] = {
            setup: function() {
                var e = this.ownerDocument || this.document || this, t = Y.access(e, r);
                t || e.addEventListener(n, i, !0), Y.access(e, r, (t || 0) + 1);
            },
            teardown: function() {
                var e = this.ownerDocument || this.document || this, t = Y.access(e, r) - 1;
                t ? Y.access(e, r, t) : (e.removeEventListener(n, i, !0), Y.remove(e, r));
            }
        };
    });
    var Tt = C.location, Ct = {
        guid: Date.now()
    }, Et = /\?/;
    S.parseXML = function(e) {
        var t, n;
        if (!e || "string" != typeof e) return null;
        try {
            t = (new C.DOMParser).parseFromString(e, "text/xml");
        } catch (e1) {}
        return n = t && t.getElementsByTagName("parsererror")[0], t && !n || S.error("Invalid XML: " + (n ? S.map(n.childNodes, function(e) {
            return e.textContent;
        }).join("\n") : e)), t;
    };
    var St = /\[\]$/, kt = /\r?\n/g, At = /^(?:submit|button|image|reset|file)$/i, Nt = /^(?:input|select|textarea|keygen)/i;
    function jt(n, e, r, i) {
        var t;
        if (Array.isArray(e)) S.each(e, function(e, t) {
            r || St.test(n) ? i(n, t) : jt(n + "[" + ("object" == typeof t && null != t ? e : "") + "]", t, r, i);
        });
        else if (r || "object" !== w(e)) i(n, e);
        else for(t in e)jt(n + "[" + t + "]", e[t], r, i);
    }
    S.param = function(e, t) {
        var n, r = [], i = function(e, t) {
            var n = m(t) ? t() : t;
            r[r.length] = encodeURIComponent(e) + "=" + encodeURIComponent(null == n ? "" : n);
        };
        if (null == e) return "";
        if (Array.isArray(e) || e.jquery && !S.isPlainObject(e)) S.each(e, function() {
            i(this.name, this.value);
        });
        else for(n in e)jt(n, e[n], t, i);
        return r.join("&");
    }, S.fn.extend({
        serialize: function() {
            return S.param(this.serializeArray());
        },
        serializeArray: function() {
            return this.map(function() {
                var e = S.prop(this, "elements");
                return e ? S.makeArray(e) : this;
            }).filter(function() {
                var e = this.type;
                return this.name && !S(this).is(":disabled") && Nt.test(this.nodeName) && !At.test(e) && (this.checked || !pe.test(e));
            }).map(function(e, t) {
                var n = S(this).val();
                return null == n ? null : Array.isArray(n) ? S.map(n, function(e) {
                    return {
                        name: t.name,
                        value: e.replace(kt, "\r\n")
                    };
                }) : {
                    name: t.name,
                    value: n.replace(kt, "\r\n")
                };
            }).get();
        }
    });
    var Dt = /%20/g, qt = /#.*$/, Lt = /([?&])_=[^&]*/, Ht = /^(.*?):[ \t]*([^\r\n]*)$/gm, Ot = /^(?:GET|HEAD)$/, Pt = /^\/\//, Rt = {}, Mt = {}, It = "*/".concat("*"), Wt = E.createElement("a");
    function Ft(o) {
        return function(e, t) {
            "string" != typeof e && (t = e, e = "*");
            var n, r = 0, i = e.toLowerCase().match(P) || [];
            if (m(t)) while(n = i[r++])"+" === n[0] ? (n = n.slice(1) || "*", (o[n] = o[n] || []).unshift(t)) : (o[n] = o[n] || []).push(t);
        };
    }
    function $t(t, i, o, a) {
        var s = {}, u = t === Mt;
        function l(e) {
            var r;
            return s[e] = !0, S.each(t[e] || [], function(e, t) {
                var n = t(i, o, a);
                return "string" != typeof n || u || s[n] ? u ? !(r = n) : void 0 : (i.dataTypes.unshift(n), l(n), !1);
            }), r;
        }
        return l(i.dataTypes[0]) || !s["*"] && l("*");
    }
    function Bt(e, t) {
        var n, r, i = S.ajaxSettings.flatOptions || {};
        for(n in t)void 0 !== t[n] && ((i[n] ? e : r || (r = {}))[n] = t[n]);
        return r && S.extend(!0, e, r), e;
    }
    Wt.href = Tt.href, S.extend({
        active: 0,
        lastModified: {},
        etag: {},
        ajaxSettings: {
            url: Tt.href,
            type: "GET",
            isLocal: /^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Tt.protocol),
            global: !0,
            processData: !0,
            async: !0,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            accepts: {
                "*": It,
                text: "text/plain",
                html: "text/html",
                xml: "application/xml, text/xml",
                json: "application/json, text/javascript"
            },
            contents: {
                xml: /\bxml\b/,
                html: /\bhtml/,
                json: /\bjson\b/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText",
                json: "responseJSON"
            },
            converters: {
                "* text": String,
                "text html": !0,
                "text json": JSON.parse,
                "text xml": S.parseXML
            },
            flatOptions: {
                url: !0,
                context: !0
            }
        },
        ajaxSetup: function(e, t) {
            return t ? Bt(Bt(e, S.ajaxSettings), t) : Bt(S.ajaxSettings, e);
        },
        ajaxPrefilter: Ft(Rt),
        ajaxTransport: Ft(Mt),
        ajax: function(e, t) {
            "object" == typeof e && (t = e, e = void 0), t = t || {};
            var c, f, p, n, d, r, h, g, i, o, y = S.ajaxSetup({}, t), v = y.context || y, m = y.context && (v.nodeType || v.jquery) ? S(v) : S.event, x = S.Deferred(), b = S.Callbacks("once memory"), w = y.statusCode || {}, a = {}, s = {}, u = "canceled", T = {
                readyState: 0,
                getResponseHeader: function(e) {
                    var t;
                    if (h) {
                        if (!n) {
                            n = {};
                            while(t = Ht.exec(p))n[t[1].toLowerCase() + " "] = (n[t[1].toLowerCase() + " "] || []).concat(t[2]);
                        }
                        t = n[e.toLowerCase() + " "];
                    }
                    return null == t ? null : t.join(", ");
                },
                getAllResponseHeaders: function() {
                    return h ? p : null;
                },
                setRequestHeader: function(e, t) {
                    return null == h && (e = s[e.toLowerCase()] = s[e.toLowerCase()] || e, a[e] = t), this;
                },
                overrideMimeType: function(e) {
                    return null == h && (y.mimeType = e), this;
                },
                statusCode: function(e) {
                    var t;
                    if (e) {
                        if (h) T.always(e[T.status]);
                        else for(t in e)w[t] = [
                            w[t],
                            e[t]
                        ];
                    }
                    return this;
                },
                abort: function(e) {
                    var t = e || u;
                    return c && c.abort(t), l(0, t), this;
                }
            };
            if (x.promise(T), y.url = ((e || y.url || Tt.href) + "").replace(Pt, Tt.protocol + "//"), y.type = t.method || t.type || y.method || y.type, y.dataTypes = (y.dataType || "*").toLowerCase().match(P) || [
                ""
            ], null == y.crossDomain) {
                r = E.createElement("a");
                try {
                    r.href = y.url, r.href = r.href, y.crossDomain = Wt.protocol + "//" + Wt.host != r.protocol + "//" + r.host;
                } catch (e1) {
                    y.crossDomain = !0;
                }
            }
            if (y.data && y.processData && "string" != typeof y.data && (y.data = S.param(y.data, y.traditional)), $t(Rt, y, t, T), h) return T;
            for(i in (g = S.event && y.global) && 0 == S.active++ && S.event.trigger("ajaxStart"), y.type = y.type.toUpperCase(), y.hasContent = !Ot.test(y.type), f = y.url.replace(qt, ""), y.hasContent ? y.data && y.processData && 0 === (y.contentType || "").indexOf("application/x-www-form-urlencoded") && (y.data = y.data.replace(Dt, "+")) : (o = y.url.slice(f.length), y.data && (y.processData || "string" == typeof y.data) && (f += (Et.test(f) ? "&" : "?") + y.data, delete y.data), !1 === y.cache && (f = f.replace(Lt, "$1"), o = (Et.test(f) ? "&" : "?") + "_=" + Ct.guid++ + o), y.url = f + o), y.ifModified && (S.lastModified[f] && T.setRequestHeader("If-Modified-Since", S.lastModified[f]), S.etag[f] && T.setRequestHeader("If-None-Match", S.etag[f])), (y.data && y.hasContent && !1 !== y.contentType || t.contentType) && T.setRequestHeader("Content-Type", y.contentType), T.setRequestHeader("Accept", y.dataTypes[0] && y.accepts[y.dataTypes[0]] ? y.accepts[y.dataTypes[0]] + ("*" !== y.dataTypes[0] ? ", " + It + "; q=0.01" : "") : y.accepts["*"]), y.headers)T.setRequestHeader(i, y.headers[i]);
            if (y.beforeSend && (!1 === y.beforeSend.call(v, T, y) || h)) return T.abort();
            if (u = "abort", b.add(y.complete), T.done(y.success), T.fail(y.error), c = $t(Mt, y, t, T)) {
                if (T.readyState = 1, g && m.trigger("ajaxSend", [
                    T,
                    y
                ]), h) return T;
                y.async && 0 < y.timeout && (d = C.setTimeout(function() {
                    T.abort("timeout");
                }, y.timeout));
                try {
                    h = !1, c.send(a, l);
                } catch (e2) {
                    if (h) throw e2;
                    l(-1, e2);
                }
            } else l(-1, "No Transport");
            function l(e, t, n, r) {
                var i, o, a, s, u, l = t;
                h || (h = !0, d && C.clearTimeout(d), c = void 0, p = r || "", T.readyState = 0 < e ? 4 : 0, i = 200 <= e && e < 300 || 304 === e, n && (s = function(e, t, n) {
                    var r, i, o, a, s = e.contents, u = e.dataTypes;
                    while("*" === u[0])u.shift(), void 0 === r && (r = e.mimeType || t.getResponseHeader("Content-Type"));
                    if (r) {
                        for(i in s)if (s[i] && s[i].test(r)) {
                            u.unshift(i);
                            break;
                        }
                    }
                    if (u[0] in n) o = u[0];
                    else {
                        for(i in n){
                            if (!u[0] || e.converters[i + " " + u[0]]) {
                                o = i;
                                break;
                            }
                            a || (a = i);
                        }
                        o = o || a;
                    }
                    if (o) return o !== u[0] && u.unshift(o), n[o];
                }(y, T, n)), !i && -1 < S.inArray("script", y.dataTypes) && S.inArray("json", y.dataTypes) < 0 && (y.converters["text script"] = function() {}), s = function(e, t, n, r) {
                    var i, o, a, s, u, l = {}, c = e.dataTypes.slice();
                    if (c[1]) for(a in e.converters)l[a.toLowerCase()] = e.converters[a];
                    o = c.shift();
                    while(o)if (e.responseFields[o] && (n[e.responseFields[o]] = t), !u && r && e.dataFilter && (t = e.dataFilter(t, e.dataType)), u = o, o = c.shift()) {
                        if ("*" === o) o = u;
                        else if ("*" !== u && u !== o) {
                            if (!(a = l[u + " " + o] || l["* " + o])) {
                                for(i in l)if ((s = i.split(" "))[1] === o && (a = l[u + " " + s[0]] || l["* " + s[0]])) {
                                    !0 === a ? a = l[i] : !0 !== l[i] && (o = s[0], c.unshift(s[1]));
                                    break;
                                }
                            }
                            if (!0 !== a) {
                                if (a && e["throws"]) t = a(t);
                                else try {
                                    t = a(t);
                                } catch (e1) {
                                    return {
                                        state: "parsererror",
                                        error: a ? e1 : "No conversion from " + u + " to " + o
                                    };
                                }
                            }
                        }
                    }
                    return {
                        state: "success",
                        data: t
                    };
                }(y, s, T, i), i ? (y.ifModified && ((u = T.getResponseHeader("Last-Modified")) && (S.lastModified[f] = u), (u = T.getResponseHeader("etag")) && (S.etag[f] = u)), 204 === e || "HEAD" === y.type ? l = "nocontent" : 304 === e ? l = "notmodified" : (l = s.state, o = s.data, i = !(a = s.error))) : (a = l, !e && l || (l = "error", e < 0 && (e = 0))), T.status = e, T.statusText = (t || l) + "", i ? x.resolveWith(v, [
                    o,
                    l,
                    T
                ]) : x.rejectWith(v, [
                    T,
                    l,
                    a
                ]), T.statusCode(w), w = void 0, g && m.trigger(i ? "ajaxSuccess" : "ajaxError", [
                    T,
                    y,
                    i ? o : a
                ]), b.fireWith(v, [
                    T,
                    l
                ]), g && (m.trigger("ajaxComplete", [
                    T,
                    y
                ]), --S.active || S.event.trigger("ajaxStop")));
            }
            return T;
        },
        getJSON: function(e, t, n) {
            return S.get(e, t, n, "json");
        },
        getScript: function(e, t) {
            return S.get(e, void 0, t, "script");
        }
    }), S.each([
        "get",
        "post"
    ], function(e, i) {
        S[i] = function(e, t, n, r) {
            return m(t) && (r = r || n, n = t, t = void 0), S.ajax(S.extend({
                url: e,
                type: i,
                dataType: r,
                data: t,
                success: n
            }, S.isPlainObject(e) && e));
        };
    }), S.ajaxPrefilter(function(e) {
        var t;
        for(t in e.headers)"content-type" === t.toLowerCase() && (e.contentType = e.headers[t] || "");
    }), S._evalUrl = function(e, t, n) {
        return S.ajax({
            url: e,
            type: "GET",
            dataType: "script",
            cache: !0,
            async: !1,
            global: !1,
            converters: {
                "text script": function() {}
            },
            dataFilter: function(e) {
                S.globalEval(e, t, n);
            }
        });
    }, S.fn.extend({
        wrapAll: function(e) {
            var t;
            return this[0] && (m(e) && (e = e.call(this[0])), t = S(e, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && t.insertBefore(this[0]), t.map(function() {
                var e = this;
                while(e.firstElementChild)e = e.firstElementChild;
                return e;
            }).append(this)), this;
        },
        wrapInner: function(n) {
            return m(n) ? this.each(function(e) {
                S(this).wrapInner(n.call(this, e));
            }) : this.each(function() {
                var e = S(this), t = e.contents();
                t.length ? t.wrapAll(n) : e.append(n);
            });
        },
        wrap: function(t) {
            var n = m(t);
            return this.each(function(e) {
                S(this).wrapAll(n ? t.call(this, e) : t);
            });
        },
        unwrap: function(e) {
            return this.parent(e).not("body").each(function() {
                S(this).replaceWith(this.childNodes);
            }), this;
        }
    }), S.expr.pseudos.hidden = function(e) {
        return !S.expr.pseudos.visible(e);
    }, S.expr.pseudos.visible = function(e) {
        return !!(e.offsetWidth || e.offsetHeight || e.getClientRects().length);
    }, S.ajaxSettings.xhr = function() {
        try {
            return new C.XMLHttpRequest;
        } catch (e) {}
    };
    var _t = {
        0: 200,
        1223: 204
    }, zt = S.ajaxSettings.xhr();
    v.cors = !!zt && "withCredentials" in zt, v.ajax = zt = !!zt, S.ajaxTransport(function(i) {
        var o, a;
        if (v.cors || zt && !i.crossDomain) return {
            send: function(e, t) {
                var n, r = i.xhr();
                if (r.open(i.type, i.url, i.async, i.username, i.password), i.xhrFields) for(n in i.xhrFields)r[n] = i.xhrFields[n];
                for(n in i.mimeType && r.overrideMimeType && r.overrideMimeType(i.mimeType), i.crossDomain || e["X-Requested-With"] || (e["X-Requested-With"] = "XMLHttpRequest"), e)r.setRequestHeader(n, e[n]);
                o = function(e) {
                    return function() {
                        o && (o = a = r.onload = r.onerror = r.onabort = r.ontimeout = r.onreadystatechange = null, "abort" === e ? r.abort() : "error" === e ? "number" != typeof r.status ? t(0, "error") : t(r.status, r.statusText) : t(_t[r.status] || r.status, r.statusText, "text" !== (r.responseType || "text") || "string" != typeof r.responseText ? {
                            binary: r.response
                        } : {
                            text: r.responseText
                        }, r.getAllResponseHeaders()));
                    };
                }, r.onload = o(), a = r.onerror = r.ontimeout = o("error"), void 0 !== r.onabort ? r.onabort = a : r.onreadystatechange = function() {
                    4 === r.readyState && C.setTimeout(function() {
                        o && a();
                    });
                }, o = o("abort");
                try {
                    r.send(i.hasContent && i.data || null);
                } catch (e1) {
                    if (o) throw e1;
                }
            },
            abort: function() {
                o && o();
            }
        };
    }), S.ajaxPrefilter(function(e) {
        e.crossDomain && (e.contents.script = !1);
    }), S.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /\b(?:java|ecma)script\b/
        },
        converters: {
            "text script": function(e) {
                return S.globalEval(e), e;
            }
        }
    }), S.ajaxPrefilter("script", function(e) {
        void 0 === e.cache && (e.cache = !1), e.crossDomain && (e.type = "GET");
    }), S.ajaxTransport("script", function(n) {
        var r, i;
        if (n.crossDomain || n.scriptAttrs) return {
            send: function(e, t) {
                r = S("<script>").attr(n.scriptAttrs || {}).prop({
                    charset: n.scriptCharset,
                    src: n.url
                }).on("load error", i = function(e) {
                    r.remove(), i = null, e && t("error" === e.type ? 404 : 200, e.type);
                }), E.head.appendChild(r[0]);
            },
            abort: function() {
                i && i();
            }
        };
    });
    var Ut, Xt = [], Vt = /(=)\?(?=&|$)|\?\?/;
    S.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            var e = Xt.pop() || S.expando + "_" + Ct.guid++;
            return this[e] = !0, e;
        }
    }), S.ajaxPrefilter("json jsonp", function(e, t, n) {
        var r, i, o, a = !1 !== e.jsonp && (Vt.test(e.url) ? "url" : "string" == typeof e.data && 0 === (e.contentType || "").indexOf("application/x-www-form-urlencoded") && Vt.test(e.data) && "data");
        if (a || "jsonp" === e.dataTypes[0]) return r = e.jsonpCallback = m(e.jsonpCallback) ? e.jsonpCallback() : e.jsonpCallback, a ? e[a] = e[a].replace(Vt, "$1" + r) : !1 !== e.jsonp && (e.url += (Et.test(e.url) ? "&" : "?") + e.jsonp + "=" + r), e.converters["script json"] = function() {
            return o || S.error(r + " was not called"), o[0];
        }, e.dataTypes[0] = "json", i = C[r], C[r] = function() {
            o = arguments;
        }, n.always(function() {
            void 0 === i ? S(C).removeProp(r) : C[r] = i, e[r] && (e.jsonpCallback = t.jsonpCallback, Xt.push(r)), o && m(i) && i(o[0]), o = i = void 0;
        }), "script";
    }), v.createHTMLDocument = ((Ut = E.implementation.createHTMLDocument("").body).innerHTML = "<form></form><form></form>", 2 === Ut.childNodes.length), S.parseHTML = function(e, t, n) {
        var r, i, o;
        return "string" != typeof e ? [] : ("boolean" == typeof t && (n = t, t = !1), t || (v.createHTMLDocument ? ((r = (t = E.implementation.createHTMLDocument("")).createElement("base")).href = E.location.href, t.head.appendChild(r)) : t = E), o = !n && [], (i = N.exec(e)) ? [
            t.createElement(i[1])
        ] : (i = xe([
            e
        ], t, o), o && o.length && S(o).remove(), S.merge([], i.childNodes)));
    }, S.fn.load = function(e, t, n) {
        var r, i, o, a = this, s = e.indexOf(" ");
        return -1 < s && (r = yt(e.slice(s)), e = e.slice(0, s)), m(t) ? (n = t, t = void 0) : t && "object" == typeof t && (i = "POST"), 0 < a.length && S.ajax({
            url: e,
            type: i || "GET",
            dataType: "html",
            data: t
        }).done(function(e) {
            o = arguments, a.html(r ? S("<div>").append(S.parseHTML(e)).find(r) : e);
        }).always(n && function(e, t) {
            a.each(function() {
                n.apply(this, o || [
                    e.responseText,
                    t,
                    e
                ]);
            });
        }), this;
    }, S.expr.pseudos.animated = function(t) {
        return S.grep(S.timers, function(e) {
            return t === e.elem;
        }).length;
    }, S.offset = {
        setOffset: function(e, t, n) {
            var r, i, o, a, s, u, l = S.css(e, "position"), c = S(e), f = {};
            "static" === l && (e.style.position = "relative"), s = c.offset(), o = S.css(e, "top"), u = S.css(e, "left"), ("absolute" === l || "fixed" === l) && -1 < (o + u).indexOf("auto") ? (a = (r = c.position()).top, i = r.left) : (a = parseFloat(o) || 0, i = parseFloat(u) || 0), m(t) && (t = t.call(e, n, S.extend({}, s))), null != t.top && (f.top = t.top - s.top + a), null != t.left && (f.left = t.left - s.left + i), "using" in t ? t.using.call(e, f) : c.css(f);
        }
    }, S.fn.extend({
        offset: function(t) {
            if (arguments.length) return void 0 === t ? this : this.each(function(e) {
                S.offset.setOffset(this, t, e);
            });
            var e, n, r = this[0];
            return r ? r.getClientRects().length ? (e = r.getBoundingClientRect(), n = r.ownerDocument.defaultView, {
                top: e.top + n.pageYOffset,
                left: e.left + n.pageXOffset
            }) : {
                top: 0,
                left: 0
            } : void 0;
        },
        position: function() {
            if (this[0]) {
                var e, t, n, r = this[0], i = {
                    top: 0,
                    left: 0
                };
                if ("fixed" === S.css(r, "position")) t = r.getBoundingClientRect();
                else {
                    t = this.offset(), n = r.ownerDocument, e = r.offsetParent || n.documentElement;
                    while(e && (e === n.body || e === n.documentElement) && "static" === S.css(e, "position"))e = e.parentNode;
                    e && e !== r && 1 === e.nodeType && ((i = S(e).offset()).top += S.css(e, "borderTopWidth", !0), i.left += S.css(e, "borderLeftWidth", !0));
                }
                return {
                    top: t.top - i.top - S.css(r, "marginTop", !0),
                    left: t.left - i.left - S.css(r, "marginLeft", !0)
                };
            }
        },
        offsetParent: function() {
            return this.map(function() {
                var e = this.offsetParent;
                while(e && "static" === S.css(e, "position"))e = e.offsetParent;
                return e || re;
            });
        }
    }), S.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function(t, i) {
        var o = "pageYOffset" === i;
        S.fn[t] = function(e) {
            return B(this, function(e, t, n) {
                var r;
                if (x(e) ? r = e : 9 === e.nodeType && (r = e.defaultView), void 0 === n) return r ? r[i] : e[t];
                r ? r.scrollTo(o ? r.pageXOffset : n, o ? n : r.pageYOffset) : e[t] = n;
            }, t, e, arguments.length);
        };
    }), S.each([
        "top",
        "left"
    ], function(e, n) {
        S.cssHooks[n] = _e(v.pixelPosition, function(e, t) {
            if (t) return t = Be(e, n), Pe.test(t) ? S(e).position()[n] + "px" : t;
        });
    }), S.each({
        Height: "height",
        Width: "width"
    }, function(a, s) {
        S.each({
            padding: "inner" + a,
            content: s,
            "": "outer" + a
        }, function(r, o) {
            S.fn[o] = function(e, t) {
                var n = arguments.length && (r || "boolean" != typeof e), i = r || (!0 === e || !0 === t ? "margin" : "border");
                return B(this, function(e, t, n) {
                    var r;
                    return x(e) ? 0 === o.indexOf("outer") ? e["inner" + a] : e.document.documentElement["client" + a] : 9 === e.nodeType ? (r = e.documentElement, Math.max(e.body["scroll" + a], r["scroll" + a], e.body["offset" + a], r["offset" + a], r["client" + a])) : void 0 === n ? S.css(e, t, i) : S.style(e, t, n, i);
                }, s, n ? e : void 0, n);
            };
        });
    }), S.each([
        "ajaxStart",
        "ajaxStop",
        "ajaxComplete",
        "ajaxError",
        "ajaxSuccess",
        "ajaxSend"
    ], function(e, t) {
        S.fn[t] = function(e) {
            return this.on(t, e);
        };
    }), S.fn.extend({
        bind: function(e, t, n) {
            return this.on(e, null, t, n);
        },
        unbind: function(e, t) {
            return this.off(e, null, t);
        },
        delegate: function(e, t, n, r) {
            return this.on(t, e, n, r);
        },
        undelegate: function(e, t, n) {
            return 1 === arguments.length ? this.off(e, "**") : this.off(t, e || "**", n);
        },
        hover: function(e, t) {
            return this.mouseenter(e).mouseleave(t || e);
        }
    }), S.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function(e, n) {
        S.fn[n] = function(e, t) {
            return 0 < arguments.length ? this.on(n, null, e, t) : this.trigger(n);
        };
    });
    var Gt = /^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;
    S.proxy = function(e, t) {
        var n, r, i;
        if ("string" == typeof t && (n = e[t], t = e, e = n), m(e)) return r = s.call(arguments, 2), (i = function() {
            return e.apply(t || this, r.concat(s.call(arguments)));
        }).guid = e.guid = e.guid || S.guid++, i;
    }, S.holdReady = function(e) {
        e ? S.readyWait++ : S.ready(!0);
    }, S.isArray = Array.isArray, S.parseJSON = JSON.parse, S.nodeName = A, S.isFunction = m, S.isWindow = x, S.camelCase = X, S.type = w, S.now = Date.now, S.isNumeric = function(e) {
        var t = S.type(e);
        return ("number" === t || "string" === t) && !isNaN(e - parseFloat(e));
    }, S.trim = function(e) {
        return null == e ? "" : (e + "").replace(Gt, "$1");
    }, "function" == typeof define && define.amd && define("jquery", [], function() {
        return S;
    });
    var Yt = C.jQuery, Qt = C.$;
    return S.noConflict = function(e) {
        return C.$ === S && (C.$ = Qt), e && C.jQuery === S && (C.jQuery = Yt), S;
    }, "undefined" == typeof e && (C.jQuery = C.$ = S), S;
});

});

parcelRequire.register("fxHk2", function(module, exports) {
/*!
 * jQuery JavaScript Library v3.6.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2022-08-26T17:52Z
 */ (function(global, factory) {
    "use strict";
    if (typeof module.exports === "object") // For CommonJS and CommonJS-like environments where a proper `window`
    // is present, execute the factory and get jQuery.
    // For environments that do not have a `window` with a `document`
    // (such as Node.js), expose a factory as module.exports.
    // This accentuates the need for the creation of a real `window`.
    // e.g. var jQuery = require("jquery")(window);
    // See ticket trac-14549 for more info.
    module.exports = global.document ? factory(global, true) : function(w) {
        if (!w.document) throw new Error("jQuery requires a window with a document");
        return factory(w);
    };
    else factory(global);
// Pass this if window is not defined yet
})(typeof window !== "undefined" ? window : module.exports, function(window1, noGlobal) {
    // Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
    // throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
    // arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
    // enough that all such attempts are guarded in a try block.
    "use strict";
    var arr = [];
    var getProto = Object.getPrototypeOf;
    var slice = arr.slice;
    var flat = arr.flat ? function(array) {
        return arr.flat.call(array);
    } : function(array) {
        return arr.concat.apply([], array);
    };
    var push = arr.push;
    var indexOf = arr.indexOf;
    var class2type = {};
    var toString = class2type.toString;
    var hasOwn = class2type.hasOwnProperty;
    var fnToString = hasOwn.toString;
    var ObjectFunctionString = fnToString.call(Object);
    var support = {};
    var isFunction = function isFunction(obj) {
        // Support: Chrome <=57, Firefox <=52
        // In some browsers, typeof returns "function" for HTML <object> elements
        // (i.e., `typeof document.createElement( "object" ) === "function"`).
        // We don't want to classify *any* DOM node as a function.
        // Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5
        // Plus for old WebKit, typeof returns "function" for HTML collections
        // (e.g., `typeof document.getElementsByTagName("div") === "function"`). (gh-4756)
        return typeof obj === "function" && typeof obj.nodeType !== "number" && typeof obj.item !== "function";
    };
    var isWindow = function isWindow(obj) {
        return obj != null && obj === obj.window;
    };
    var document = window1.document;
    var preservedScriptAttributes = {
        type: true,
        src: true,
        nonce: true,
        noModule: true
    };
    function DOMEval(code, node, doc) {
        doc = doc || document;
        var i, val, script = doc.createElement("script");
        script.text = code;
        if (node) for(i in preservedScriptAttributes){
            // Support: Firefox 64+, Edge 18+
            // Some browsers don't support the "nonce" property on scripts.
            // On the other hand, just using `getAttribute` is not enough as
            // the `nonce` attribute is reset to an empty string whenever it
            // becomes browsing-context connected.
            // See https://github.com/whatwg/html/issues/2369
            // See https://html.spec.whatwg.org/#nonce-attributes
            // The `node.getAttribute` check was added for the sake of
            // `jQuery.globalEval` so that it can fake a nonce-containing node
            // via an object.
            val = node[i] || node.getAttribute && node.getAttribute(i);
            if (val) script.setAttribute(i, val);
        }
        doc.head.appendChild(script).parentNode.removeChild(script);
    }
    function toType(obj) {
        if (obj == null) return obj + "";
        // Support: Android <=2.3 only (functionish RegExp)
        return typeof obj === "object" || typeof obj === "function" ? class2type[toString.call(obj)] || "object" : typeof obj;
    }
    /* global Symbol */ // Defining this global in .eslintrc.json would create a danger of using the global
    // unguarded in another place, it seems safer to define global only for this module
    var version = "3.6.1", // Define a local copy of jQuery
    jQuery = function(selector, context) {
        // The jQuery object is actually just the init constructor 'enhanced'
        // Need init if jQuery is called (just allow error to be thrown if not included)
        return new jQuery.fn.init(selector, context);
    };
    jQuery.fn = jQuery.prototype = {
        // The current version of jQuery being used
        jquery: version,
        constructor: jQuery,
        // The default length of a jQuery object is 0
        length: 0,
        toArray: function() {
            return slice.call(this);
        },
        // Get the Nth element in the matched element set OR
        // Get the whole matched element set as a clean array
        get: function(num) {
            // Return all the elements in a clean array
            if (num == null) return slice.call(this);
            // Return just the one element from the set
            return num < 0 ? this[num + this.length] : this[num];
        },
        // Take an array of elements and push it onto the stack
        // (returning the new matched element set)
        pushStack: function(elems) {
            // Build a new jQuery matched element set
            var ret = jQuery.merge(this.constructor(), elems);
            // Add the old object onto the stack (as a reference)
            ret.prevObject = this;
            // Return the newly-formed element set
            return ret;
        },
        // Execute a callback for every element in the matched set.
        each: function(callback) {
            return jQuery.each(this, callback);
        },
        map: function(callback) {
            return this.pushStack(jQuery.map(this, function(elem, i) {
                return callback.call(elem, i, elem);
            }));
        },
        slice: function() {
            return this.pushStack(slice.apply(this, arguments));
        },
        first: function() {
            return this.eq(0);
        },
        last: function() {
            return this.eq(-1);
        },
        even: function() {
            return this.pushStack(jQuery.grep(this, function(_elem, i) {
                return (i + 1) % 2;
            }));
        },
        odd: function() {
            return this.pushStack(jQuery.grep(this, function(_elem, i) {
                return i % 2;
            }));
        },
        eq: function(i) {
            var len = this.length, j = +i + (i < 0 ? len : 0);
            return this.pushStack(j >= 0 && j < len ? [
                this[j]
            ] : []);
        },
        end: function() {
            return this.prevObject || this.constructor();
        },
        // For internal use only.
        // Behaves like an Array's method, not like a jQuery method.
        push: push,
        sort: arr.sort,
        splice: arr.splice
    };
    jQuery.extend = jQuery.fn.extend = function() {
        var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;
        // Handle a deep copy situation
        if (typeof target === "boolean") {
            deep = target;
            // Skip the boolean and the target
            target = arguments[i] || {};
            i++;
        }
        // Handle case when target is a string or something (possible in deep copy)
        if (typeof target !== "object" && !isFunction(target)) target = {};
        // Extend jQuery itself if only one argument is passed
        if (i === length) {
            target = this;
            i--;
        }
        for(; i < length; i++){
            // Only deal with non-null/undefined values
            if ((options = arguments[i]) != null) // Extend the base object
            for(name in options){
                copy = options[name];
                // Prevent Object.prototype pollution
                // Prevent never-ending loop
                if (name === "__proto__" || target === copy) continue;
                // Recurse if we're merging plain objects or arrays
                if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {
                    src = target[name];
                    // Ensure proper type for the source value
                    if (copyIsArray && !Array.isArray(src)) clone = [];
                    else if (!copyIsArray && !jQuery.isPlainObject(src)) clone = {};
                    else clone = src;
                    copyIsArray = false;
                    // Never move original objects, clone them
                    target[name] = jQuery.extend(deep, clone, copy);
                // Don't bring in undefined values
                } else if (copy !== undefined) target[name] = copy;
            }
        }
        // Return the modified object
        return target;
    };
    jQuery.extend({
        // Unique for each copy of jQuery on the page
        expando: "jQuery" + (version + Math.random()).replace(/\D/g, ""),
        // Assume jQuery is ready without the ready module
        isReady: true,
        error: function(msg) {
            throw new Error(msg);
        },
        noop: function() {},
        isPlainObject: function(obj) {
            var proto, Ctor;
            // Detect obvious negatives
            // Use toString instead of jQuery.type to catch host objects
            if (!obj || toString.call(obj) !== "[object Object]") return false;
            proto = getProto(obj);
            // Objects with no prototype (e.g., `Object.create( null )`) are plain
            if (!proto) return true;
            // Objects with prototype are plain iff they were constructed by a global Object function
            Ctor = hasOwn.call(proto, "constructor") && proto.constructor;
            return typeof Ctor === "function" && fnToString.call(Ctor) === ObjectFunctionString;
        },
        isEmptyObject: function(obj) {
            var name;
            for(name in obj)return false;
            return true;
        },
        // Evaluates a script in a provided context; falls back to the global one
        // if not specified.
        globalEval: function(code, options, doc) {
            DOMEval(code, {
                nonce: options && options.nonce
            }, doc);
        },
        each: function(obj, callback) {
            var length, i = 0;
            if (isArrayLike(obj)) {
                length = obj.length;
                for(; i < length; i++){
                    if (callback.call(obj[i], i, obj[i]) === false) break;
                }
            } else for(i in obj){
                if (callback.call(obj[i], i, obj[i]) === false) break;
            }
            return obj;
        },
        // results is for internal usage only
        makeArray: function(arr, results) {
            var ret = results || [];
            if (arr != null) {
                if (isArrayLike(Object(arr))) jQuery.merge(ret, typeof arr === "string" ? [
                    arr
                ] : arr);
                else push.call(ret, arr);
            }
            return ret;
        },
        inArray: function(elem, arr, i) {
            return arr == null ? -1 : indexOf.call(arr, elem, i);
        },
        // Support: Android <=4.0 only, PhantomJS 1 only
        // push.apply(_, arraylike) throws on ancient WebKit
        merge: function(first, second) {
            var len = +second.length, j = 0, i = first.length;
            for(; j < len; j++)first[i++] = second[j];
            first.length = i;
            return first;
        },
        grep: function(elems, callback, invert) {
            var callbackInverse, matches = [], i = 0, length = elems.length, callbackExpect = !invert;
            // Go through the array, only saving the items
            // that pass the validator function
            for(; i < length; i++){
                callbackInverse = !callback(elems[i], i);
                if (callbackInverse !== callbackExpect) matches.push(elems[i]);
            }
            return matches;
        },
        // arg is for internal usage only
        map: function(elems, callback, arg) {
            var length, value, i = 0, ret = [];
            // Go through the array, translating each of the items to their new values
            if (isArrayLike(elems)) {
                length = elems.length;
                for(; i < length; i++){
                    value = callback(elems[i], i, arg);
                    if (value != null) ret.push(value);
                }
            // Go through every key on the object,
            } else for(i in elems){
                value = callback(elems[i], i, arg);
                if (value != null) ret.push(value);
            }
            // Flatten any nested arrays
            return flat(ret);
        },
        // A global GUID counter for objects
        guid: 1,
        // jQuery.support is not used in Core but other projects attach their
        // properties to it so it needs to exist.
        support: support
    });
    if (typeof Symbol === "function") jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];
    // Populate the class2type map
    jQuery.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(_i, name) {
        class2type["[object " + name + "]"] = name.toLowerCase();
    });
    function isArrayLike(obj) {
        // Support: real iOS 8.2 only (not reproducible in simulator)
        // `in` check used to prevent JIT error (gh-2145)
        // hasOwn isn't used here due to false negatives
        // regarding Nodelist length in IE
        var length = !!obj && "length" in obj && obj.length, type = toType(obj);
        if (isFunction(obj) || isWindow(obj)) return false;
        return type === "array" || length === 0 || typeof length === "number" && length > 0 && length - 1 in obj;
    }
    var Sizzle = /*!
 * Sizzle CSS Selector Engine v2.3.6
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://js.foundation/
 *
 * Date: 2021-02-16
 */ function(window1) {
        var i, support, Expr, getText, isXML, tokenize, compile, select, outermostContext, sortInput, hasDuplicate, // Local document vars
        setDocument, document, docElem, documentIsHTML, rbuggyQSA, rbuggyMatches, matches, contains, // Instance-specific data
        expando = "sizzle" + 1 * new Date(), preferredDoc = window1.document, dirruns = 0, done = 0, classCache = createCache(), tokenCache = createCache(), compilerCache = createCache(), nonnativeSelectorCache = createCache(), sortOrder = function(a, b) {
            if (a === b) hasDuplicate = true;
            return 0;
        }, // Instance methods
        hasOwn = {}.hasOwnProperty, arr = [], pop = arr.pop, pushNative = arr.push, push = arr.push, slice = arr.slice, // Use a stripped-down indexOf as it's faster than native
        // https://jsperf.com/thor-indexof-vs-for/5
        indexOf = function(list, elem) {
            var i = 0, len = list.length;
            for(; i < len; i++){
                if (list[i] === elem) return i;
            }
            return -1;
        }, booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", // Regular expressions
        // http://www.w3.org/TR/css3-selectors/#whitespace
        whitespace = "[\\x20\\t\\r\\n\\f]", // https://www.w3.org/TR/css-syntax-3/#ident-token-diagram
        identifier = "(?:\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+", // Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
        attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace + // Operator (capture 2)
        "*([*^$|!~]?=)" + whitespace + // "Attribute values must be CSS identifiers [capture 5]
        // or strings [capture 3 or capture 4]"
        "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace + "*\\]", pseudos = ":(" + identifier + ")(?:\\((" + // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
        // 1. quoted (capture 3; capture 4 or capture 5)
        "('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" + // 2. simple (capture 6)
        "((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" + // 3. anything else (capture 2)
        ".*" + ")\\)|)", // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
        rwhitespace = new RegExp(whitespace + "+", "g"), rtrim = new RegExp("^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g"), rcomma = new RegExp("^" + whitespace + "*," + whitespace + "*"), rcombinators = new RegExp("^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*"), rdescend = new RegExp(whitespace + "|>"), rpseudo = new RegExp(pseudos), ridentifier = new RegExp("^" + identifier + "$"), matchExpr = {
            "ID": new RegExp("^#(" + identifier + ")"),
            "CLASS": new RegExp("^\\.(" + identifier + ")"),
            "TAG": new RegExp("^(" + identifier + "|[*])"),
            "ATTR": new RegExp("^" + attributes),
            "PSEUDO": new RegExp("^" + pseudos),
            "CHILD": new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i"),
            "bool": new RegExp("^(?:" + booleans + ")$", "i"),
            // For use in libraries implementing .is()
            // We use this for POS matching in `select`
            "needsContext": new RegExp("^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i")
        }, rhtml = /HTML$/i, rinputs = /^(?:input|select|textarea|button)$/i, rheader = /^h\d$/i, rnative = /^[^{]+\{\s*\[native \w/, // Easily-parseable/retrievable ID or TAG or CLASS selectors
        rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, rsibling = /[+~]/, // CSS escapes
        // http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
        runescape = new RegExp("\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\([^\\r\\n\\f])", "g"), funescape = function(escape, nonHex) {
            var high = "0x" + escape.slice(1) - 0x10000;
            return nonHex ? // Strip the backslash prefix from a non-hex escape sequence
            nonHex : // Replace a hexadecimal escape sequence with the encoded Unicode code point
            // Support: IE <=11+
            // For values outside the Basic Multilingual Plane (BMP), manually construct a
            // surrogate pair
            high < 0 ? String.fromCharCode(high + 0x10000) : String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00);
        }, // CSS string/identifier serialization
        // https://drafts.csswg.org/cssom/#common-serializing-idioms
        rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g, fcssescape = function(ch, asCodePoint) {
            if (asCodePoint) {
                // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
                if (ch === "\0") return "�";
                // Control characters and (dependent upon position) numbers get escaped as code points
                return ch.slice(0, -1) + "\\" + ch.charCodeAt(ch.length - 1).toString(16) + " ";
            }
            // Other potentially-special ASCII characters get backslash-escaped
            return "\\" + ch;
        }, // Used for iframes
        // See setDocument()
        // Removing the function wrapper causes a "Permission Denied"
        // error in IE
        unloadHandler = function() {
            setDocument();
        }, inDisabledFieldset = addCombinator(function(elem) {
            return elem.disabled === true && elem.nodeName.toLowerCase() === "fieldset";
        }, {
            dir: "parentNode",
            next: "legend"
        });
        // Optimize for push.apply( _, NodeList )
        try {
            push.apply(arr = slice.call(preferredDoc.childNodes), preferredDoc.childNodes);
            // Support: Android<4.0
            // Detect silently failing push.apply
            // eslint-disable-next-line no-unused-expressions
            arr[preferredDoc.childNodes.length].nodeType;
        } catch (e) {
            push = {
                apply: arr.length ? // Leverage slice if possible
                function(target, els) {
                    pushNative.apply(target, slice.call(els));
                } : // Support: IE<9
                // Otherwise append directly
                function(target, els) {
                    var j = target.length, i = 0;
                    // Can't trust NodeList.length
                    while(target[j++] = els[i++]);
                    target.length = j - 1;
                }
            };
        }
        function Sizzle(selector, context, results, seed) {
            var m, i, elem, nid, match, groups, newSelector, newContext = context && context.ownerDocument, // nodeType defaults to 9, since context defaults to document
            nodeType = context ? context.nodeType : 9;
            results = results || [];
            // Return early from calls with invalid selector or context
            if (typeof selector !== "string" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) return results;
            // Try to shortcut find operations (as opposed to filters) in HTML documents
            if (!seed) {
                setDocument(context);
                context = context || document;
                if (documentIsHTML) {
                    // If the selector is sufficiently simple, try using a "get*By*" DOM method
                    // (excepting DocumentFragment context, where the methods don't exist)
                    if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {
                        // ID selector
                        if (m = match[1]) {
                            // Document context
                            if (nodeType === 9) {
                                if (elem = context.getElementById(m)) // Support: IE, Opera, Webkit
                                // TODO: identify versions
                                // getElementById can match elements by name instead of ID
                                {
                                    if (elem.id === m) {
                                        results.push(elem);
                                        return results;
                                    }
                                } else return results;
                            // Element context
                            } else // Support: IE, Opera, Webkit
                            // TODO: identify versions
                            // getElementById can match elements by name instead of ID
                            if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m) {
                                results.push(elem);
                                return results;
                            }
                        // Type selector
                        } else if (match[2]) {
                            push.apply(results, context.getElementsByTagName(selector));
                            return results;
                        // Class selector
                        } else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {
                            push.apply(results, context.getElementsByClassName(m));
                            return results;
                        }
                    }
                    // Take advantage of querySelectorAll
                    if (support.qsa && !nonnativeSelectorCache[selector + " "] && (!rbuggyQSA || !rbuggyQSA.test(selector)) && (nodeType !== 1 || context.nodeName.toLowerCase() !== "object")) {
                        newSelector = selector;
                        newContext = context;
                        // qSA considers elements outside a scoping root when evaluating child or
                        // descendant combinators, which is not what we want.
                        // In such cases, we work around the behavior by prefixing every selector in the
                        // list with an ID selector referencing the scope context.
                        // The technique has to be used as well when a leading combinator is used
                        // as such selectors are not recognized by querySelectorAll.
                        // Thanks to Andrew Dupont for this technique.
                        if (nodeType === 1 && (rdescend.test(selector) || rcombinators.test(selector))) {
                            // Expand context for sibling selectors
                            newContext = rsibling.test(selector) && testContext(context.parentNode) || context;
                            // We can use :scope instead of the ID hack if the browser
                            // supports it & if we're not changing the context.
                            if (newContext !== context || !support.scope) {
                                // Capture the context ID, setting it first if necessary
                                if (nid = context.getAttribute("id")) nid = nid.replace(rcssescape, fcssescape);
                                else context.setAttribute("id", nid = expando);
                            }
                            // Prefix every selector in the list
                            groups = tokenize(selector);
                            i = groups.length;
                            while(i--)groups[i] = (nid ? "#" + nid : ":scope") + " " + toSelector(groups[i]);
                            newSelector = groups.join(",");
                        }
                        try {
                            push.apply(results, newContext.querySelectorAll(newSelector));
                            return results;
                        } catch (qsaError) {
                            nonnativeSelectorCache(selector, true);
                        } finally{
                            if (nid === expando) context.removeAttribute("id");
                        }
                    }
                }
            }
            // All others
            return select(selector.replace(rtrim, "$1"), context, results, seed);
        }
        /**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */ function createCache() {
            var keys = [];
            function cache(key, value) {
                // Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
                if (keys.push(key + " ") > Expr.cacheLength) // Only keep the most recent entries
                delete cache[keys.shift()];
                return cache[key + " "] = value;
            }
            return cache;
        }
        /**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */ function markFunction(fn) {
            fn[expando] = true;
            return fn;
        }
        /**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */ function assert(fn) {
            var el = document.createElement("fieldset");
            try {
                return !!fn(el);
            } catch (e) {
                return false;
            } finally{
                // Remove from its parent by default
                if (el.parentNode) el.parentNode.removeChild(el);
                // release memory in IE
                el = null;
            }
        }
        /**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */ function addHandle(attrs, handler) {
            var arr = attrs.split("|"), i = arr.length;
            while(i--)Expr.attrHandle[arr[i]] = handler;
        }
        /**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */ function siblingCheck(a, b) {
            var cur = b && a, diff = cur && a.nodeType === 1 && b.nodeType === 1 && a.sourceIndex - b.sourceIndex;
            // Use IE sourceIndex if available on both nodes
            if (diff) return diff;
            // Check if b follows a
            if (cur) while(cur = cur.nextSibling){
                if (cur === b) return -1;
            }
            return a ? 1 : -1;
        }
        /**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */ function createInputPseudo(type) {
            return function(elem) {
                var name = elem.nodeName.toLowerCase();
                return name === "input" && elem.type === type;
            };
        }
        /**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */ function createButtonPseudo(type) {
            return function(elem) {
                var name = elem.nodeName.toLowerCase();
                return (name === "input" || name === "button") && elem.type === type;
            };
        }
        /**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */ function createDisabledPseudo(disabled) {
            // Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
            return function(elem) {
                // Only certain elements can match :enabled or :disabled
                // https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
                // https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
                if ("form" in elem) {
                    // Check for inherited disabledness on relevant non-disabled elements:
                    // * listed form-associated elements in a disabled fieldset
                    //   https://html.spec.whatwg.org/multipage/forms.html#category-listed
                    //   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
                    // * option elements in a disabled optgroup
                    //   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
                    // All such elements have a "form" property.
                    if (elem.parentNode && elem.disabled === false) {
                        // Option elements defer to a parent optgroup if present
                        if ("label" in elem) {
                            if ("label" in elem.parentNode) return elem.parentNode.disabled === disabled;
                            else return elem.disabled === disabled;
                        }
                        // Support: IE 6 - 11
                        // Use the isDisabled shortcut property to check for disabled fieldset ancestors
                        return elem.isDisabled === disabled || // Where there is no isDisabled, check manually
                        /* jshint -W018 */ elem.isDisabled !== !disabled && inDisabledFieldset(elem) === disabled;
                    }
                    return elem.disabled === disabled;
                // Try to winnow out elements that can't be disabled before trusting the disabled property.
                // Some victims get caught in our net (label, legend, menu, track), but it shouldn't
                // even exist on them, let alone have a boolean value.
                } else if ("label" in elem) return elem.disabled === disabled;
                // Remaining elements are neither :enabled nor :disabled
                return false;
            };
        }
        /**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */ function createPositionalPseudo(fn) {
            return markFunction(function(argument) {
                argument = +argument;
                return markFunction(function(seed, matches) {
                    var j, matchIndexes = fn([], seed.length, argument), i = matchIndexes.length;
                    // Match elements found at the specified indexes
                    while(i--)if (seed[j = matchIndexes[i]]) seed[j] = !(matches[j] = seed[j]);
                });
            });
        }
        /**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */ function testContext(context) {
            return context && typeof context.getElementsByTagName !== "undefined" && context;
        }
        // Expose support vars for convenience
        support = Sizzle.support = {};
        /**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */ isXML = Sizzle.isXML = function(elem) {
            var namespace = elem && elem.namespaceURI, docElem = elem && (elem.ownerDocument || elem).documentElement;
            // Support: IE <=8
            // Assume HTML when documentElement doesn't yet exist, such as inside loading iframes
            // https://bugs.jquery.com/ticket/4833
            return !rhtml.test(namespace || docElem && docElem.nodeName || "HTML");
        };
        /**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */ setDocument = Sizzle.setDocument = function(node) {
            var hasCompare, subWindow, doc = node ? node.ownerDocument || node : preferredDoc;
            // Return early if doc is invalid or already selected
            // Support: IE 11+, Edge 17 - 18+
            // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
            // two documents; shallow comparisons work.
            // eslint-disable-next-line eqeqeq
            if (doc == document || doc.nodeType !== 9 || !doc.documentElement) return document;
            // Update global variables
            document = doc;
            docElem = document.documentElement;
            documentIsHTML = !isXML(document);
            // Support: IE 9 - 11+, Edge 12 - 18+
            // Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
            // Support: IE 11+, Edge 17 - 18+
            // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
            // two documents; shallow comparisons work.
            // eslint-disable-next-line eqeqeq
            if (preferredDoc != document && (subWindow = document.defaultView) && subWindow.top !== subWindow) {
                // Support: IE 11, Edge
                if (subWindow.addEventListener) subWindow.addEventListener("unload", unloadHandler, false);
                else if (subWindow.attachEvent) subWindow.attachEvent("onunload", unloadHandler);
            }
            // Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,
            // Safari 4 - 5 only, Opera <=11.6 - 12.x only
            // IE/Edge & older browsers don't support the :scope pseudo-class.
            // Support: Safari 6.0 only
            // Safari 6.0 supports :scope but it's an alias of :root there.
            support.scope = assert(function(el) {
                docElem.appendChild(el).appendChild(document.createElement("div"));
                return typeof el.querySelectorAll !== "undefined" && !el.querySelectorAll(":scope fieldset div").length;
            });
            /* Attributes
	---------------------------------------------------------------------- */ // Support: IE<8
            // Verify that getAttribute really returns attributes and not properties
            // (excepting IE8 booleans)
            support.attributes = assert(function(el) {
                el.className = "i";
                return !el.getAttribute("className");
            });
            /* getElement(s)By*
	---------------------------------------------------------------------- */ // Check if getElementsByTagName("*") returns only elements
            support.getElementsByTagName = assert(function(el) {
                el.appendChild(document.createComment(""));
                return !el.getElementsByTagName("*").length;
            });
            // Support: IE<9
            support.getElementsByClassName = rnative.test(document.getElementsByClassName);
            // Support: IE<10
            // Check if getElementById returns elements by name
            // The broken getElementById methods don't pick up programmatically-set names,
            // so use a roundabout getElementsByName test
            support.getById = assert(function(el) {
                docElem.appendChild(el).id = expando;
                return !document.getElementsByName || !document.getElementsByName(expando).length;
            });
            // ID filter and find
            if (support.getById) {
                Expr.filter["ID"] = function(id) {
                    var attrId = id.replace(runescape, funescape);
                    return function(elem) {
                        return elem.getAttribute("id") === attrId;
                    };
                };
                Expr.find["ID"] = function(id, context) {
                    if (typeof context.getElementById !== "undefined" && documentIsHTML) {
                        var elem = context.getElementById(id);
                        return elem ? [
                            elem
                        ] : [];
                    }
                };
            } else {
                Expr.filter["ID"] = function(id) {
                    var attrId = id.replace(runescape, funescape);
                    return function(elem) {
                        var node = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");
                        return node && node.value === attrId;
                    };
                };
                // Support: IE 6 - 7 only
                // getElementById is not reliable as a find shortcut
                Expr.find["ID"] = function(id, context) {
                    if (typeof context.getElementById !== "undefined" && documentIsHTML) {
                        var node, i, elems, elem = context.getElementById(id);
                        if (elem) {
                            // Verify the id attribute
                            node = elem.getAttributeNode("id");
                            if (node && node.value === id) return [
                                elem
                            ];
                            // Fall back on getElementsByName
                            elems = context.getElementsByName(id);
                            i = 0;
                            while(elem = elems[i++]){
                                node = elem.getAttributeNode("id");
                                if (node && node.value === id) return [
                                    elem
                                ];
                            }
                        }
                        return [];
                    }
                };
            }
            // Tag
            Expr.find["TAG"] = support.getElementsByTagName ? function(tag, context) {
                if (typeof context.getElementsByTagName !== "undefined") return context.getElementsByTagName(tag);
                else if (support.qsa) return context.querySelectorAll(tag);
            } : function(tag, context) {
                var elem, tmp = [], i = 0, // By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
                results = context.getElementsByTagName(tag);
                // Filter out possible comments
                if (tag === "*") {
                    while(elem = results[i++])if (elem.nodeType === 1) tmp.push(elem);
                    return tmp;
                }
                return results;
            };
            // Class
            Expr.find["CLASS"] = support.getElementsByClassName && function(className, context) {
                if (typeof context.getElementsByClassName !== "undefined" && documentIsHTML) return context.getElementsByClassName(className);
            };
            /* QSA/matchesSelector
	---------------------------------------------------------------------- */ // QSA and matchesSelector support
            // matchesSelector(:active) reports false when true (IE9/Opera 11.5)
            rbuggyMatches = [];
            // qSa(:focus) reports false when true (Chrome 21)
            // We allow this because of a bug in IE8/9 that throws an error
            // whenever `document.activeElement` is accessed on an iframe
            // So, we allow :focus to pass through QSA all the time to avoid the IE error
            // See https://bugs.jquery.com/ticket/13378
            rbuggyQSA = [];
            if (support.qsa = rnative.test(document.querySelectorAll)) {
                // Build QSA regex
                // Regex strategy adopted from Diego Perini
                assert(function(el) {
                    var input;
                    // Select is set to empty string on purpose
                    // This is to test IE's treatment of not explicitly
                    // setting a boolean content attribute,
                    // since its presence should be enough
                    // https://bugs.jquery.com/ticket/12359
                    docElem.appendChild(el).innerHTML = "<a id='" + expando + "'></a>" + "<select id='" + expando + "-\r\\' msallowcapture=''>" + "<option selected=''></option></select>";
                    // Support: IE8, Opera 11-12.16
                    // Nothing should be selected when empty strings follow ^= or $= or *=
                    // The test attribute must be unknown in Opera but "safe" for WinRT
                    // https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
                    if (el.querySelectorAll("[msallowcapture^='']").length) rbuggyQSA.push("[*^$]=" + whitespace + "*(?:''|\"\")");
                    // Support: IE8
                    // Boolean attributes and "value" are not treated correctly
                    if (!el.querySelectorAll("[selected]").length) rbuggyQSA.push("\\[" + whitespace + "*(?:value|" + booleans + ")");
                    // Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
                    if (!el.querySelectorAll("[id~=" + expando + "-]").length) rbuggyQSA.push("~=");
                    // Support: IE 11+, Edge 15 - 18+
                    // IE 11/Edge don't find elements on a `[name='']` query in some cases.
                    // Adding a temporary attribute to the document before the selection works
                    // around the issue.
                    // Interestingly, IE 10 & older don't seem to have the issue.
                    input = document.createElement("input");
                    input.setAttribute("name", "");
                    el.appendChild(input);
                    if (!el.querySelectorAll("[name='']").length) rbuggyQSA.push("\\[" + whitespace + "*name" + whitespace + "*=" + whitespace + "*(?:''|\"\")");
                    // Webkit/Opera - :checked should return selected option elements
                    // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
                    // IE8 throws error here and will not see later tests
                    if (!el.querySelectorAll(":checked").length) rbuggyQSA.push(":checked");
                    // Support: Safari 8+, iOS 8+
                    // https://bugs.webkit.org/show_bug.cgi?id=136851
                    // In-page `selector#id sibling-combinator selector` fails
                    if (!el.querySelectorAll("a#" + expando + "+*").length) rbuggyQSA.push(".#.+[+~]");
                    // Support: Firefox <=3.6 - 5 only
                    // Old Firefox doesn't throw on a badly-escaped identifier.
                    el.querySelectorAll("\\\f");
                    rbuggyQSA.push("[\\r\\n\\f]");
                });
                assert(function(el) {
                    el.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
                    // Support: Windows 8 Native Apps
                    // The type and name attributes are restricted during .innerHTML assignment
                    var input = document.createElement("input");
                    input.setAttribute("type", "hidden");
                    el.appendChild(input).setAttribute("name", "D");
                    // Support: IE8
                    // Enforce case-sensitivity of name attribute
                    if (el.querySelectorAll("[name=d]").length) rbuggyQSA.push("name" + whitespace + "*[*^$|!~]?=");
                    // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
                    // IE8 throws error here and will not see later tests
                    if (el.querySelectorAll(":enabled").length !== 2) rbuggyQSA.push(":enabled", ":disabled");
                    // Support: IE9-11+
                    // IE's :disabled selector does not pick up the children of disabled fieldsets
                    docElem.appendChild(el).disabled = true;
                    if (el.querySelectorAll(":disabled").length !== 2) rbuggyQSA.push(":enabled", ":disabled");
                    // Support: Opera 10 - 11 only
                    // Opera 10-11 does not throw on post-comma invalid pseudos
                    el.querySelectorAll("*,:x");
                    rbuggyQSA.push(",.*:");
                });
            }
            if (support.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) assert(function(el) {
                // Check to see if it's possible to do matchesSelector
                // on a disconnected node (IE 9)
                support.disconnectedMatch = matches.call(el, "*");
                // This should fail with an exception
                // Gecko does not error, returns false instead
                matches.call(el, "[s!='']:x");
                rbuggyMatches.push("!=", pseudos);
            });
            rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join("|"));
            rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join("|"));
            /* Contains
	---------------------------------------------------------------------- */ hasCompare = rnative.test(docElem.compareDocumentPosition);
            // Element contains another
            // Purposefully self-exclusive
            // As in, an element does not contain itself
            contains = hasCompare || rnative.test(docElem.contains) ? function(a, b) {
                var adown = a.nodeType === 9 ? a.documentElement : a, bup = b && b.parentNode;
                return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));
            } : function(a, b) {
                if (b) while(b = b.parentNode){
                    if (b === a) return true;
                }
                return false;
            };
            /* Sorting
	---------------------------------------------------------------------- */ // Document order sorting
            sortOrder = hasCompare ? function(a, b) {
                // Flag for duplicate removal
                if (a === b) {
                    hasDuplicate = true;
                    return 0;
                }
                // Sort on method existence if only one input has compareDocumentPosition
                var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
                if (compare) return compare;
                // Calculate position if both inputs belong to the same document
                // Support: IE 11+, Edge 17 - 18+
                // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
                // two documents; shallow comparisons work.
                // eslint-disable-next-line eqeqeq
                compare = (a.ownerDocument || a) == (b.ownerDocument || b) ? a.compareDocumentPosition(b) : // Otherwise we know they are disconnected
                1;
                // Disconnected nodes
                if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare) {
                    // Choose the first element that is related to our preferred document
                    // Support: IE 11+, Edge 17 - 18+
                    // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
                    // two documents; shallow comparisons work.
                    // eslint-disable-next-line eqeqeq
                    if (a == document || a.ownerDocument == preferredDoc && contains(preferredDoc, a)) return -1;
                    // Support: IE 11+, Edge 17 - 18+
                    // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
                    // two documents; shallow comparisons work.
                    // eslint-disable-next-line eqeqeq
                    if (b == document || b.ownerDocument == preferredDoc && contains(preferredDoc, b)) return 1;
                    // Maintain original order
                    return sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;
                }
                return compare & 4 ? -1 : 1;
            } : function(a, b) {
                // Exit early if the nodes are identical
                if (a === b) {
                    hasDuplicate = true;
                    return 0;
                }
                var cur, i = 0, aup = a.parentNode, bup = b.parentNode, ap = [
                    a
                ], bp = [
                    b
                ];
                // Parentless nodes are either documents or disconnected
                if (!aup || !bup) // Support: IE 11+, Edge 17 - 18+
                // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
                // two documents; shallow comparisons work.
                /* eslint-disable eqeqeq */ return a == document ? -1 : b == document ? 1 : /* eslint-enable eqeqeq */ aup ? -1 : bup ? 1 : sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;
                else if (aup === bup) return siblingCheck(a, b);
                // Otherwise we need full lists of their ancestors for comparison
                cur = a;
                while(cur = cur.parentNode)ap.unshift(cur);
                cur = b;
                while(cur = cur.parentNode)bp.unshift(cur);
                // Walk down the tree looking for a discrepancy
                while(ap[i] === bp[i])i++;
                return i ? // Do a sibling check if the nodes have a common ancestor
                siblingCheck(ap[i], bp[i]) : // Otherwise nodes in our document sort first
                // Support: IE 11+, Edge 17 - 18+
                // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
                // two documents; shallow comparisons work.
                /* eslint-disable eqeqeq */ ap[i] == preferredDoc ? -1 : bp[i] == preferredDoc ? 1 : /* eslint-enable eqeqeq */ 0;
            };
            return document;
        };
        Sizzle.matches = function(expr, elements) {
            return Sizzle(expr, null, null, elements);
        };
        Sizzle.matchesSelector = function(elem, expr) {
            setDocument(elem);
            if (support.matchesSelector && documentIsHTML && !nonnativeSelectorCache[expr + " "] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) try {
                var ret = matches.call(elem, expr);
                // IE 9's matchesSelector returns false on disconnected nodes
                if (ret || support.disconnectedMatch || // As well, disconnected nodes are said to be in a document
                // fragment in IE 9
                elem.document && elem.document.nodeType !== 11) return ret;
            } catch (e) {
                nonnativeSelectorCache(expr, true);
            }
            return Sizzle(expr, document, null, [
                elem
            ]).length > 0;
        };
        Sizzle.contains = function(context, elem) {
            // Set document vars if needed
            // Support: IE 11+, Edge 17 - 18+
            // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
            // two documents; shallow comparisons work.
            // eslint-disable-next-line eqeqeq
            if ((context.ownerDocument || context) != document) setDocument(context);
            return contains(context, elem);
        };
        Sizzle.attr = function(elem, name) {
            // Set document vars if needed
            // Support: IE 11+, Edge 17 - 18+
            // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
            // two documents; shallow comparisons work.
            // eslint-disable-next-line eqeqeq
            if ((elem.ownerDocument || elem) != document) setDocument(elem);
            var fn = Expr.attrHandle[name.toLowerCase()], // Don't get fooled by Object.prototype properties (jQuery #13807)
            val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;
            return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
        };
        Sizzle.escape = function(sel) {
            return (sel + "").replace(rcssescape, fcssescape);
        };
        Sizzle.error = function(msg) {
            throw new Error("Syntax error, unrecognized expression: " + msg);
        };
        /**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */ Sizzle.uniqueSort = function(results) {
            var elem, duplicates = [], j = 0, i = 0;
            // Unless we *know* we can detect duplicates, assume their presence
            hasDuplicate = !support.detectDuplicates;
            sortInput = !support.sortStable && results.slice(0);
            results.sort(sortOrder);
            if (hasDuplicate) {
                while(elem = results[i++])if (elem === results[i]) j = duplicates.push(i);
                while(j--)results.splice(duplicates[j], 1);
            }
            // Clear input after sorting to release objects
            // See https://github.com/jquery/sizzle/pull/225
            sortInput = null;
            return results;
        };
        /**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */ getText = Sizzle.getText = function(elem) {
            var node, ret = "", i = 0, nodeType = elem.nodeType;
            if (!nodeType) // If no nodeType, this is expected to be an array
            while(node = elem[i++])// Do not traverse comment nodes
            ret += getText(node);
            else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {
                // Use textContent for elements
                // innerText usage removed for consistency of new lines (jQuery #11153)
                if (typeof elem.textContent === "string") return elem.textContent;
                else // Traverse its children
                for(elem = elem.firstChild; elem; elem = elem.nextSibling)ret += getText(elem);
            } else if (nodeType === 3 || nodeType === 4) return elem.nodeValue;
            // Do not include comment or processing instruction nodes
            return ret;
        };
        Expr = Sizzle.selectors = {
            // Can be adjusted by the user
            cacheLength: 50,
            createPseudo: markFunction,
            match: matchExpr,
            attrHandle: {},
            find: {},
            relative: {
                ">": {
                    dir: "parentNode",
                    first: true
                },
                " ": {
                    dir: "parentNode"
                },
                "+": {
                    dir: "previousSibling",
                    first: true
                },
                "~": {
                    dir: "previousSibling"
                }
            },
            preFilter: {
                "ATTR": function(match) {
                    match[1] = match[1].replace(runescape, funescape);
                    // Move the given value to match[3] whether quoted or unquoted
                    match[3] = (match[3] || match[4] || match[5] || "").replace(runescape, funescape);
                    if (match[2] === "~=") match[3] = " " + match[3] + " ";
                    return match.slice(0, 4);
                },
                "CHILD": function(match) {
                    /* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/ match[1] = match[1].toLowerCase();
                    if (match[1].slice(0, 3) === "nth") {
                        // nth-* requires argument
                        if (!match[3]) Sizzle.error(match[0]);
                        // numeric x and y parameters for Expr.filter.CHILD
                        // remember that false/true cast respectively to 0/1
                        match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === "even" || match[3] === "odd"));
                        match[5] = +(match[7] + match[8] || match[3] === "odd");
                    // other types prohibit arguments
                    } else if (match[3]) Sizzle.error(match[0]);
                    return match;
                },
                "PSEUDO": function(match) {
                    var excess, unquoted = !match[6] && match[2];
                    if (matchExpr["CHILD"].test(match[0])) return null;
                    // Accept quoted arguments as-is
                    if (match[3]) match[2] = match[4] || match[5] || "";
                    else if (unquoted && rpseudo.test(unquoted) && (excess = tokenize(unquoted, true)) && (excess = unquoted.indexOf(")", unquoted.length - excess) - unquoted.length)) {
                        // excess is a negative index
                        match[0] = match[0].slice(0, excess);
                        match[2] = unquoted.slice(0, excess);
                    }
                    // Return only captures needed by the pseudo filter method (type and argument)
                    return match.slice(0, 3);
                }
            },
            filter: {
                "TAG": function(nodeNameSelector) {
                    var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();
                    return nodeNameSelector === "*" ? function() {
                        return true;
                    } : function(elem) {
                        return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
                    };
                },
                "CLASS": function(className) {
                    var pattern = classCache[className + " "];
                    return pattern || (pattern = new RegExp("(^|" + whitespace + ")" + className + "(" + whitespace + "|$)"), classCache(className, function(elem) {
                        return pattern.test(typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "");
                    }));
                },
                "ATTR": function(name, operator, check) {
                    return function(elem) {
                        var result = Sizzle.attr(elem, name);
                        if (result == null) return operator === "!=";
                        if (!operator) return true;
                        result += "";
                        /* eslint-disable max-len */ return operator === "=" ? result === check : operator === "!=" ? result !== check : operator === "^=" ? check && result.indexOf(check) === 0 : operator === "*=" ? check && result.indexOf(check) > -1 : operator === "$=" ? check && result.slice(-check.length) === check : operator === "~=" ? (" " + result.replace(rwhitespace, " ") + " ").indexOf(check) > -1 : operator === "|=" ? result === check || result.slice(0, check.length + 1) === check + "-" : false;
                    /* eslint-enable max-len */ };
                },
                "CHILD": function(type, what, _argument, first, last) {
                    var simple = type.slice(0, 3) !== "nth", forward = type.slice(-4) !== "last", ofType = what === "of-type";
                    return first === 1 && last === 0 ? // Shortcut for :nth-*(n)
                    function(elem) {
                        return !!elem.parentNode;
                    } : function(elem, _context, xml) {
                        var cache, uniqueCache, outerCache, node, nodeIndex, start, dir = simple !== forward ? "nextSibling" : "previousSibling", parent = elem.parentNode, name = ofType && elem.nodeName.toLowerCase(), useCache = !xml && !ofType, diff = false;
                        if (parent) {
                            // :(first|last|only)-(child|of-type)
                            if (simple) {
                                while(dir){
                                    node = elem;
                                    while(node = node[dir]){
                                        if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) return false;
                                    }
                                    // Reverse direction for :only-* (if we haven't yet done so)
                                    start = dir = type === "only" && !start && "nextSibling";
                                }
                                return true;
                            }
                            start = [
                                forward ? parent.firstChild : parent.lastChild
                            ];
                            // non-xml :nth-child(...) stores cache data on `parent`
                            if (forward && useCache) {
                                // Seek `elem` from a previously-cached index
                                // ...in a gzip-friendly way
                                node = parent;
                                outerCache = node[expando] || (node[expando] = {});
                                // Support: IE <9 only
                                // Defend against cloned attroperties (jQuery gh-1709)
                                uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                                cache = uniqueCache[type] || [];
                                nodeIndex = cache[0] === dirruns && cache[1];
                                diff = nodeIndex && cache[2];
                                node = nodeIndex && parent.childNodes[nodeIndex];
                                while(node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop())// When found, cache indexes on `parent` and break
                                if (node.nodeType === 1 && ++diff && node === elem) {
                                    uniqueCache[type] = [
                                        dirruns,
                                        nodeIndex,
                                        diff
                                    ];
                                    break;
                                }
                            } else {
                                // Use previously-cached element index if available
                                if (useCache) {
                                    // ...in a gzip-friendly way
                                    node = elem;
                                    outerCache = node[expando] || (node[expando] = {});
                                    // Support: IE <9 only
                                    // Defend against cloned attroperties (jQuery gh-1709)
                                    uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                                    cache = uniqueCache[type] || [];
                                    nodeIndex = cache[0] === dirruns && cache[1];
                                    diff = nodeIndex;
                                }
                                // xml :nth-child(...)
                                // or :nth-last-child(...) or :nth(-last)?-of-type(...)
                                if (diff === false) {
                                    // Use the same loop as above to seek `elem` from the start
                                    while(node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop())if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {
                                        // Cache the index of each encountered element
                                        if (useCache) {
                                            outerCache = node[expando] || (node[expando] = {});
                                            // Support: IE <9 only
                                            // Defend against cloned attroperties (jQuery gh-1709)
                                            uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                                            uniqueCache[type] = [
                                                dirruns,
                                                diff
                                            ];
                                        }
                                        if (node === elem) break;
                                    }
                                }
                            }
                            // Incorporate the offset, then check against cycle size
                            diff -= last;
                            return diff === first || diff % first === 0 && diff / first >= 0;
                        }
                    };
                },
                "PSEUDO": function(pseudo, argument) {
                    // pseudo-class names are case-insensitive
                    // http://www.w3.org/TR/selectors/#pseudo-classes
                    // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
                    // Remember that setFilters inherits from pseudos
                    var args, fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error("unsupported pseudo: " + pseudo);
                    // The user may use createPseudo to indicate that
                    // arguments are needed to create the filter function
                    // just as Sizzle does
                    if (fn[expando]) return fn(argument);
                    // But maintain support for old signatures
                    if (fn.length > 1) {
                        args = [
                            pseudo,
                            pseudo,
                            "",
                            argument
                        ];
                        return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function(seed, matches) {
                            var idx, matched = fn(seed, argument), i = matched.length;
                            while(i--){
                                idx = indexOf(seed, matched[i]);
                                seed[idx] = !(matches[idx] = matched[i]);
                            }
                        }) : function(elem) {
                            return fn(elem, 0, args);
                        };
                    }
                    return fn;
                }
            },
            pseudos: {
                // Potentially complex pseudos
                "not": markFunction(function(selector) {
                    // Trim the selector passed to compile
                    // to avoid treating leading and trailing
                    // spaces as combinators
                    var input = [], results = [], matcher = compile(selector.replace(rtrim, "$1"));
                    return matcher[expando] ? markFunction(function(seed, matches, _context, xml) {
                        var elem, unmatched = matcher(seed, null, xml, []), i = seed.length;
                        // Match elements unmatched by `matcher`
                        while(i--)if (elem = unmatched[i]) seed[i] = !(matches[i] = elem);
                    }) : function(elem, _context, xml) {
                        input[0] = elem;
                        matcher(input, null, xml, results);
                        // Don't keep the element (issue #299)
                        input[0] = null;
                        return !results.pop();
                    };
                }),
                "has": markFunction(function(selector) {
                    return function(elem) {
                        return Sizzle(selector, elem).length > 0;
                    };
                }),
                "contains": markFunction(function(text) {
                    text = text.replace(runescape, funescape);
                    return function(elem) {
                        return (elem.textContent || getText(elem)).indexOf(text) > -1;
                    };
                }),
                // "Whether an element is represented by a :lang() selector
                // is based solely on the element's language value
                // being equal to the identifier C,
                // or beginning with the identifier C immediately followed by "-".
                // The matching of C against the element's language value is performed case-insensitively.
                // The identifier C does not have to be a valid language name."
                // http://www.w3.org/TR/selectors/#lang-pseudo
                "lang": markFunction(function(lang) {
                    // lang value must be a valid identifier
                    if (!ridentifier.test(lang || "")) Sizzle.error("unsupported lang: " + lang);
                    lang = lang.replace(runescape, funescape).toLowerCase();
                    return function(elem) {
                        var elemLang;
                        do if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute("xml:lang") || elem.getAttribute("lang")) {
                            elemLang = elemLang.toLowerCase();
                            return elemLang === lang || elemLang.indexOf(lang + "-") === 0;
                        }
                        while ((elem = elem.parentNode) && elem.nodeType === 1);
                        return false;
                    };
                }),
                // Miscellaneous
                "target": function(elem) {
                    var hash = window1.location && window1.location.hash;
                    return hash && hash.slice(1) === elem.id;
                },
                "root": function(elem) {
                    return elem === docElem;
                },
                "focus": function(elem) {
                    return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
                },
                // Boolean properties
                "enabled": createDisabledPseudo(false),
                "disabled": createDisabledPseudo(true),
                "checked": function(elem) {
                    // In CSS3, :checked should return both checked and selected elements
                    // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
                    var nodeName = elem.nodeName.toLowerCase();
                    return nodeName === "input" && !!elem.checked || nodeName === "option" && !!elem.selected;
                },
                "selected": function(elem) {
                    // Accessing this property makes selected-by-default
                    // options in Safari work properly
                    if (elem.parentNode) // eslint-disable-next-line no-unused-expressions
                    elem.parentNode.selectedIndex;
                    return elem.selected === true;
                },
                // Contents
                "empty": function(elem) {
                    // http://www.w3.org/TR/selectors/#empty-pseudo
                    // :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
                    //   but not by others (comment: 8; processing instruction: 7; etc.)
                    // nodeType < 6 works because attributes (2) do not appear as children
                    for(elem = elem.firstChild; elem; elem = elem.nextSibling){
                        if (elem.nodeType < 6) return false;
                    }
                    return true;
                },
                "parent": function(elem) {
                    return !Expr.pseudos["empty"](elem);
                },
                // Element/input types
                "header": function(elem) {
                    return rheader.test(elem.nodeName);
                },
                "input": function(elem) {
                    return rinputs.test(elem.nodeName);
                },
                "button": function(elem) {
                    var name = elem.nodeName.toLowerCase();
                    return name === "input" && elem.type === "button" || name === "button";
                },
                "text": function(elem) {
                    var attr;
                    return elem.nodeName.toLowerCase() === "input" && elem.type === "text" && ((attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text");
                },
                // Position-in-collection
                "first": createPositionalPseudo(function() {
                    return [
                        0
                    ];
                }),
                "last": createPositionalPseudo(function(_matchIndexes, length) {
                    return [
                        length - 1
                    ];
                }),
                "eq": createPositionalPseudo(function(_matchIndexes, length, argument) {
                    return [
                        argument < 0 ? argument + length : argument
                    ];
                }),
                "even": createPositionalPseudo(function(matchIndexes, length) {
                    var i = 0;
                    for(; i < length; i += 2)matchIndexes.push(i);
                    return matchIndexes;
                }),
                "odd": createPositionalPseudo(function(matchIndexes, length) {
                    var i = 1;
                    for(; i < length; i += 2)matchIndexes.push(i);
                    return matchIndexes;
                }),
                "lt": createPositionalPseudo(function(matchIndexes, length, argument) {
                    var i = argument < 0 ? argument + length : argument > length ? length : argument;
                    for(; --i >= 0;)matchIndexes.push(i);
                    return matchIndexes;
                }),
                "gt": createPositionalPseudo(function(matchIndexes, length, argument) {
                    var i = argument < 0 ? argument + length : argument;
                    for(; ++i < length;)matchIndexes.push(i);
                    return matchIndexes;
                })
            }
        };
        Expr.pseudos["nth"] = Expr.pseudos["eq"];
        // Add button/input type pseudos
        for(i in {
            radio: true,
            checkbox: true,
            file: true,
            password: true,
            image: true
        })Expr.pseudos[i] = createInputPseudo(i);
        for(i in {
            submit: true,
            reset: true
        })Expr.pseudos[i] = createButtonPseudo(i);
        // Easy API for creating new setFilters
        function setFilters() {}
        setFilters.prototype = Expr.filters = Expr.pseudos;
        Expr.setFilters = new setFilters();
        tokenize = Sizzle.tokenize = function(selector, parseOnly) {
            var matched, match, tokens, type, soFar, groups, preFilters, cached = tokenCache[selector + " "];
            if (cached) return parseOnly ? 0 : cached.slice(0);
            soFar = selector;
            groups = [];
            preFilters = Expr.preFilter;
            while(soFar){
                // Comma and first run
                if (!matched || (match = rcomma.exec(soFar))) {
                    if (match) // Don't consume trailing commas as valid
                    soFar = soFar.slice(match[0].length) || soFar;
                    groups.push(tokens = []);
                }
                matched = false;
                // Combinators
                if (match = rcombinators.exec(soFar)) {
                    matched = match.shift();
                    tokens.push({
                        value: matched,
                        // Cast descendant combinators to space
                        type: match[0].replace(rtrim, " ")
                    });
                    soFar = soFar.slice(matched.length);
                }
                // Filters
                for(type in Expr.filter)if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {
                    matched = match.shift();
                    tokens.push({
                        value: matched,
                        type: type,
                        matches: match
                    });
                    soFar = soFar.slice(matched.length);
                }
                if (!matched) break;
            }
            // Return the length of the invalid excess
            // if we're just parsing
            // Otherwise, throw an error or return tokens
            return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : // Cache the tokens
            tokenCache(selector, groups).slice(0);
        };
        function toSelector(tokens) {
            var i = 0, len = tokens.length, selector = "";
            for(; i < len; i++)selector += tokens[i].value;
            return selector;
        }
        function addCombinator(matcher, combinator, base) {
            var dir = combinator.dir, skip = combinator.next, key = skip || dir, checkNonElements = base && key === "parentNode", doneName = done++;
            return combinator.first ? // Check against closest ancestor/preceding element
            function(elem, context, xml) {
                while(elem = elem[dir]){
                    if (elem.nodeType === 1 || checkNonElements) return matcher(elem, context, xml);
                }
                return false;
            } : // Check against all ancestor/preceding elements
            function(elem, context, xml) {
                var oldCache, uniqueCache, outerCache, newCache = [
                    dirruns,
                    doneName
                ];
                // We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
                if (xml) {
                    while(elem = elem[dir])if (elem.nodeType === 1 || checkNonElements) {
                        if (matcher(elem, context, xml)) return true;
                    }
                } else {
                    while(elem = elem[dir])if (elem.nodeType === 1 || checkNonElements) {
                        outerCache = elem[expando] || (elem[expando] = {});
                        // Support: IE <9 only
                        // Defend against cloned attroperties (jQuery gh-1709)
                        uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {});
                        if (skip && skip === elem.nodeName.toLowerCase()) elem = elem[dir] || elem;
                        else if ((oldCache = uniqueCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) // Assign to newCache so results back-propagate to previous elements
                        return newCache[2] = oldCache[2];
                        else {
                            // Reuse newcache so results back-propagate to previous elements
                            uniqueCache[key] = newCache;
                            // A match means we're done; a fail means we have to keep checking
                            if (newCache[2] = matcher(elem, context, xml)) return true;
                        }
                    }
                }
                return false;
            };
        }
        function elementMatcher(matchers) {
            return matchers.length > 1 ? function(elem, context, xml) {
                var i = matchers.length;
                while(i--){
                    if (!matchers[i](elem, context, xml)) return false;
                }
                return true;
            } : matchers[0];
        }
        function multipleContexts(selector, contexts, results) {
            var i = 0, len = contexts.length;
            for(; i < len; i++)Sizzle(selector, contexts[i], results);
            return results;
        }
        function condense(unmatched, map, filter, context, xml) {
            var elem, newUnmatched = [], i = 0, len = unmatched.length, mapped = map != null;
            for(; i < len; i++){
                if (elem = unmatched[i]) {
                    if (!filter || filter(elem, context, xml)) {
                        newUnmatched.push(elem);
                        if (mapped) map.push(i);
                    }
                }
            }
            return newUnmatched;
        }
        function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {
            if (postFilter && !postFilter[expando]) postFilter = setMatcher(postFilter);
            if (postFinder && !postFinder[expando]) postFinder = setMatcher(postFinder, postSelector);
            return markFunction(function(seed, results, context, xml) {
                var temp, i, elem, preMap = [], postMap = [], preexisting = results.length, // Get initial elements from seed or context
                elems = seed || multipleContexts(selector || "*", context.nodeType ? [
                    context
                ] : context, []), // Prefilter to get matcher input, preserving a map for seed-results synchronization
                matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems, matcherOut = matcher ? // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
                postFinder || (seed ? preFilter : preexisting || postFilter) ? // ...intermediate processing is necessary
                [] : // ...otherwise use results directly
                results : matcherIn;
                // Find primary matches
                if (matcher) matcher(matcherIn, matcherOut, context, xml);
                // Apply postFilter
                if (postFilter) {
                    temp = condense(matcherOut, postMap);
                    postFilter(temp, [], context, xml);
                    // Un-match failing elements by moving them back to matcherIn
                    i = temp.length;
                    while(i--)if (elem = temp[i]) matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);
                }
                if (seed) {
                    if (postFinder || preFilter) {
                        if (postFinder) {
                            // Get the final matcherOut by condensing this intermediate into postFinder contexts
                            temp = [];
                            i = matcherOut.length;
                            while(i--)if (elem = matcherOut[i]) // Restore matcherIn since elem is not yet a final match
                            temp.push(matcherIn[i] = elem);
                            postFinder(null, matcherOut = [], temp, xml);
                        }
                        // Move matched elements from seed to results to keep them synchronized
                        i = matcherOut.length;
                        while(i--)if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1) seed[temp] = !(results[temp] = elem);
                    }
                } else {
                    matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);
                    if (postFinder) postFinder(null, results, matcherOut, xml);
                    else push.apply(results, matcherOut);
                }
            });
        }
        function matcherFromTokens(tokens) {
            var checkContext, matcher, j, len = tokens.length, leadingRelative = Expr.relative[tokens[0].type], implicitRelative = leadingRelative || Expr.relative[" "], i = leadingRelative ? 1 : 0, // The foundational matcher ensures that elements are reachable from top-level context(s)
            matchContext = addCombinator(function(elem) {
                return elem === checkContext;
            }, implicitRelative, true), matchAnyContext = addCombinator(function(elem) {
                return indexOf(checkContext, elem) > -1;
            }, implicitRelative, true), matchers = [
                function(elem, context, xml) {
                    var ret = !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));
                    // Avoid hanging onto element (issue #299)
                    checkContext = null;
                    return ret;
                }
            ];
            for(; i < len; i++)if (matcher = Expr.relative[tokens[i].type]) matchers = [
                addCombinator(elementMatcher(matchers), matcher)
            ];
            else {
                matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches);
                // Return special upon seeing a positional matcher
                if (matcher[expando]) {
                    // Find the next relative operator (if any) for proper handling
                    j = ++i;
                    for(; j < len; j++){
                        if (Expr.relative[tokens[j].type]) break;
                    }
                    return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector(// If the preceding token was a descendant combinator, insert an implicit any-element `*`
                    tokens.slice(0, i - 1).concat({
                        value: tokens[i - 2].type === " " ? "*" : ""
                    })).replace(rtrim, "$1"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));
                }
                matchers.push(matcher);
            }
            return elementMatcher(matchers);
        }
        function matcherFromGroupMatchers(elementMatchers, setMatchers) {
            var bySet = setMatchers.length > 0, byElement = elementMatchers.length > 0, superMatcher = function(seed, context, xml, results, outermost) {
                var elem, j, matcher, matchedCount = 0, i = "0", unmatched = seed && [], setMatched = [], contextBackup = outermostContext, // We must always have either seed elements or outermost context
                elems = seed || byElement && Expr.find["TAG"]("*", outermost), // Use integer dirruns iff this is the outermost matcher
                dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1, len = elems.length;
                if (outermost) // Support: IE 11+, Edge 17 - 18+
                // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
                // two documents; shallow comparisons work.
                // eslint-disable-next-line eqeqeq
                outermostContext = context == document || context || outermost;
                // Add elements passing elementMatchers directly to results
                // Support: IE<9, Safari
                // Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
                for(; i !== len && (elem = elems[i]) != null; i++){
                    if (byElement && elem) {
                        j = 0;
                        // Support: IE 11+, Edge 17 - 18+
                        // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
                        // two documents; shallow comparisons work.
                        // eslint-disable-next-line eqeqeq
                        if (!context && elem.ownerDocument != document) {
                            setDocument(elem);
                            xml = !documentIsHTML;
                        }
                        while(matcher = elementMatchers[j++])if (matcher(elem, context || document, xml)) {
                            results.push(elem);
                            break;
                        }
                        if (outermost) dirruns = dirrunsUnique;
                    }
                    // Track unmatched elements for set filters
                    if (bySet) {
                        // They will have gone through all possible matchers
                        if (elem = !matcher && elem) matchedCount--;
                        // Lengthen the array for every element, matched or not
                        if (seed) unmatched.push(elem);
                    }
                }
                // `i` is now the count of elements visited above, and adding it to `matchedCount`
                // makes the latter nonnegative.
                matchedCount += i;
                // Apply set filters to unmatched elements
                // NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
                // equals `i`), unless we didn't visit _any_ elements in the above loop because we have
                // no element matchers and no seed.
                // Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
                // case, which will result in a "00" `matchedCount` that differs from `i` but is also
                // numerically zero.
                if (bySet && i !== matchedCount) {
                    j = 0;
                    while(matcher = setMatchers[j++])matcher(unmatched, setMatched, context, xml);
                    if (seed) {
                        // Reintegrate element matches to eliminate the need for sorting
                        if (matchedCount > 0) {
                            while(i--)if (!(unmatched[i] || setMatched[i])) setMatched[i] = pop.call(results);
                        }
                        // Discard index placeholder values to get only actual matches
                        setMatched = condense(setMatched);
                    }
                    // Add matches to results
                    push.apply(results, setMatched);
                    // Seedless set matches succeeding multiple successful matchers stipulate sorting
                    if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) Sizzle.uniqueSort(results);
                }
                // Override manipulation of globals by nested matchers
                if (outermost) {
                    dirruns = dirrunsUnique;
                    outermostContext = contextBackup;
                }
                return unmatched;
            };
            return bySet ? markFunction(superMatcher) : superMatcher;
        }
        compile = Sizzle.compile = function(selector, match /* Internal Use Only */ ) {
            var i, setMatchers = [], elementMatchers = [], cached = compilerCache[selector + " "];
            if (!cached) {
                // Generate a function of recursive functions that can be used to check each element
                if (!match) match = tokenize(selector);
                i = match.length;
                while(i--){
                    cached = matcherFromTokens(match[i]);
                    if (cached[expando]) setMatchers.push(cached);
                    else elementMatchers.push(cached);
                }
                // Cache the compiled function
                cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));
                // Save selector and tokenization
                cached.selector = selector;
            }
            return cached;
        };
        /**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */ select = Sizzle.select = function(selector, context, results, seed) {
            var i, tokens, token, type, find, compiled = typeof selector === "function" && selector, match = !seed && tokenize(selector = compiled.selector || selector);
            results = results || [];
            // Try to minimize operations if there is only one selector in the list and no seed
            // (the latter of which guarantees us context)
            if (match.length === 1) {
                // Reduce context if the leading compound selector is an ID
                tokens = match[0] = match[0].slice(0);
                if (tokens.length > 2 && (token = tokens[0]).type === "ID" && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {
                    context = (Expr.find["ID"](token.matches[0].replace(runescape, funescape), context) || [])[0];
                    if (!context) return results;
                    else if (compiled) context = context.parentNode;
                    selector = selector.slice(tokens.shift().value.length);
                }
                // Fetch a seed set for right-to-left matching
                i = matchExpr["needsContext"].test(selector) ? 0 : tokens.length;
                while(i--){
                    token = tokens[i];
                    // Abort if we hit a combinator
                    if (Expr.relative[type = token.type]) break;
                    if (find = Expr.find[type]) // Search, expanding context for leading sibling combinators
                    {
                        if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {
                            // If seed is empty or no tokens remain, we can return early
                            tokens.splice(i, 1);
                            selector = seed.length && toSelector(tokens);
                            if (!selector) {
                                push.apply(results, seed);
                                return results;
                            }
                            break;
                        }
                    }
                }
            }
            // Compile and execute a filtering function if one is not provided
            // Provide `match` to avoid retokenization if we modified the selector above
            (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);
            return results;
        };
        // One-time assignments
        // Sort stability
        support.sortStable = expando.split("").sort(sortOrder).join("") === expando;
        // Support: Chrome 14-35+
        // Always assume duplicates if they aren't passed to the comparison function
        support.detectDuplicates = !!hasDuplicate;
        // Initialize against the default document
        setDocument();
        // Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
        // Detached nodes confoundingly follow *each other*
        support.sortDetached = assert(function(el) {
            // Should return 1, but returns 4 (following)
            return el.compareDocumentPosition(document.createElement("fieldset")) & 1;
        });
        // Support: IE<8
        // Prevent attribute/property "interpolation"
        // https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
        if (!assert(function(el) {
            el.innerHTML = "<a href='#'></a>";
            return el.firstChild.getAttribute("href") === "#";
        })) addHandle("type|href|height|width", function(elem, name, isXML) {
            if (!isXML) return elem.getAttribute(name, name.toLowerCase() === "type" ? 1 : 2);
        });
        // Support: IE<9
        // Use defaultValue in place of getAttribute("value")
        if (!support.attributes || !assert(function(el) {
            el.innerHTML = "<input/>";
            el.firstChild.setAttribute("value", "");
            return el.firstChild.getAttribute("value") === "";
        })) addHandle("value", function(elem, _name, isXML) {
            if (!isXML && elem.nodeName.toLowerCase() === "input") return elem.defaultValue;
        });
        // Support: IE<9
        // Use getAttributeNode to fetch booleans when getAttribute lies
        if (!assert(function(el) {
            return el.getAttribute("disabled") == null;
        })) addHandle(booleans, function(elem, name, isXML) {
            var val;
            if (!isXML) return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
        });
        return Sizzle;
    }(window1);
    jQuery.find = Sizzle;
    jQuery.expr = Sizzle.selectors;
    // Deprecated
    jQuery.expr[":"] = jQuery.expr.pseudos;
    jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
    jQuery.text = Sizzle.getText;
    jQuery.isXMLDoc = Sizzle.isXML;
    jQuery.contains = Sizzle.contains;
    jQuery.escapeSelector = Sizzle.escape;
    var dir = function(elem, dir, until) {
        var matched = [], truncate = until !== undefined;
        while((elem = elem[dir]) && elem.nodeType !== 9)if (elem.nodeType === 1) {
            if (truncate && jQuery(elem).is(until)) break;
            matched.push(elem);
        }
        return matched;
    };
    var siblings = function(n, elem) {
        var matched = [];
        for(; n; n = n.nextSibling)if (n.nodeType === 1 && n !== elem) matched.push(n);
        return matched;
    };
    var rneedsContext = jQuery.expr.match.needsContext;
    function nodeName(elem, name) {
        return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
    }
    var rsingleTag = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
    // Implement the identical functionality for filter and not
    function winnow(elements, qualifier, not) {
        if (isFunction(qualifier)) return jQuery.grep(elements, function(elem, i) {
            return !!qualifier.call(elem, i, elem) !== not;
        });
        // Single element
        if (qualifier.nodeType) return jQuery.grep(elements, function(elem) {
            return elem === qualifier !== not;
        });
        // Arraylike of elements (jQuery, arguments, Array)
        if (typeof qualifier !== "string") return jQuery.grep(elements, function(elem) {
            return indexOf.call(qualifier, elem) > -1 !== not;
        });
        // Filtered directly for both simple and complex selectors
        return jQuery.filter(qualifier, elements, not);
    }
    jQuery.filter = function(expr, elems, not) {
        var elem = elems[0];
        if (not) expr = ":not(" + expr + ")";
        if (elems.length === 1 && elem.nodeType === 1) return jQuery.find.matchesSelector(elem, expr) ? [
            elem
        ] : [];
        return jQuery.find.matches(expr, jQuery.grep(elems, function(elem) {
            return elem.nodeType === 1;
        }));
    };
    jQuery.fn.extend({
        find: function(selector) {
            var i, ret, len = this.length, self = this;
            if (typeof selector !== "string") return this.pushStack(jQuery(selector).filter(function() {
                for(i = 0; i < len; i++){
                    if (jQuery.contains(self[i], this)) return true;
                }
            }));
            ret = this.pushStack([]);
            for(i = 0; i < len; i++)jQuery.find(selector, self[i], ret);
            return len > 1 ? jQuery.uniqueSort(ret) : ret;
        },
        filter: function(selector) {
            return this.pushStack(winnow(this, selector || [], false));
        },
        not: function(selector) {
            return this.pushStack(winnow(this, selector || [], true));
        },
        is: function(selector) {
            return !!winnow(this, // If this is a positional/relative selector, check membership in the returned set
            // so $("p:first").is("p:last") won't return true for a doc with two "p".
            typeof selector === "string" && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;
        }
    });
    // Initialize a jQuery object
    // A central reference to the root jQuery(document)
    var rootjQuery, // A simple way to check for HTML strings
    // Prioritize #id over <tag> to avoid XSS via location.hash (trac-9521)
    // Strict HTML recognition (trac-11290: must start with <)
    // Shortcut simple #id case for speed
    rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/, init = jQuery.fn.init = function(selector, context, root) {
        var match, elem;
        // HANDLE: $(""), $(null), $(undefined), $(false)
        if (!selector) return this;
        // Method init() accepts an alternate rootjQuery
        // so migrate can support jQuery.sub (gh-2101)
        root = root || rootjQuery;
        // Handle HTML strings
        if (typeof selector === "string") {
            if (selector[0] === "<" && selector[selector.length - 1] === ">" && selector.length >= 3) // Assume that strings that start and end with <> are HTML and skip the regex check
            match = [
                null,
                selector,
                null
            ];
            else match = rquickExpr.exec(selector);
            // Match html or make sure no context is specified for #id
            if (match && (match[1] || !context)) {
                // HANDLE: $(html) -> $(array)
                if (match[1]) {
                    context = context instanceof jQuery ? context[0] : context;
                    // Option to run scripts is true for back-compat
                    // Intentionally let the error be thrown if parseHTML is not present
                    jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true));
                    // HANDLE: $(html, props)
                    if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {
                        for(match in context)// Properties of context are called as methods if possible
                        if (isFunction(this[match])) this[match](context[match]);
                        else this.attr(match, context[match]);
                    }
                    return this;
                // HANDLE: $(#id)
                } else {
                    elem = document.getElementById(match[2]);
                    if (elem) {
                        // Inject the element directly into the jQuery object
                        this[0] = elem;
                        this.length = 1;
                    }
                    return this;
                }
            } else if (!context || context.jquery) return (context || root).find(selector);
            else return this.constructor(context).find(selector);
        // HANDLE: $(DOMElement)
        } else if (selector.nodeType) {
            this[0] = selector;
            this.length = 1;
            return this;
        // HANDLE: $(function)
        // Shortcut for document ready
        } else if (isFunction(selector)) return root.ready !== undefined ? root.ready(selector) : // Execute immediately if ready is not present
        selector(jQuery);
        return jQuery.makeArray(selector, this);
    };
    // Give the init function the jQuery prototype for later instantiation
    init.prototype = jQuery.fn;
    // Initialize central reference
    rootjQuery = jQuery(document);
    var rparentsprev = /^(?:parents|prev(?:Until|All))/, // Methods guaranteed to produce a unique set when starting from a unique set
    guaranteedUnique = {
        children: true,
        contents: true,
        next: true,
        prev: true
    };
    jQuery.fn.extend({
        has: function(target) {
            var targets = jQuery(target, this), l = targets.length;
            return this.filter(function() {
                var i = 0;
                for(; i < l; i++){
                    if (jQuery.contains(this, targets[i])) return true;
                }
            });
        },
        closest: function(selectors, context) {
            var cur, i = 0, l = this.length, matched = [], targets = typeof selectors !== "string" && jQuery(selectors);
            // Positional selectors never match, since there's no _selection_ context
            if (!rneedsContext.test(selectors)) for(; i < l; i++){
                for(cur = this[i]; cur && cur !== context; cur = cur.parentNode)// Always skip document fragments
                if (cur.nodeType < 11 && (targets ? targets.index(cur) > -1 : // Don't pass non-elements to Sizzle
                cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {
                    matched.push(cur);
                    break;
                }
            }
            return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched);
        },
        // Determine the position of an element within the set
        index: function(elem) {
            // No argument, return index in parent
            if (!elem) return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
            // Index in selector
            if (typeof elem === "string") return indexOf.call(jQuery(elem), this[0]);
            // Locate the position of the desired element
            return indexOf.call(this, // If it receives a jQuery object, the first element is used
            elem.jquery ? elem[0] : elem);
        },
        add: function(selector, context) {
            return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))));
        },
        addBack: function(selector) {
            return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));
        }
    });
    function sibling(cur, dir) {
        while((cur = cur[dir]) && cur.nodeType !== 1);
        return cur;
    }
    jQuery.each({
        parent: function(elem) {
            var parent = elem.parentNode;
            return parent && parent.nodeType !== 11 ? parent : null;
        },
        parents: function(elem) {
            return dir(elem, "parentNode");
        },
        parentsUntil: function(elem, _i, until) {
            return dir(elem, "parentNode", until);
        },
        next: function(elem) {
            return sibling(elem, "nextSibling");
        },
        prev: function(elem) {
            return sibling(elem, "previousSibling");
        },
        nextAll: function(elem) {
            return dir(elem, "nextSibling");
        },
        prevAll: function(elem) {
            return dir(elem, "previousSibling");
        },
        nextUntil: function(elem, _i, until) {
            return dir(elem, "nextSibling", until);
        },
        prevUntil: function(elem, _i, until) {
            return dir(elem, "previousSibling", until);
        },
        siblings: function(elem) {
            return siblings((elem.parentNode || {}).firstChild, elem);
        },
        children: function(elem) {
            return siblings(elem.firstChild);
        },
        contents: function(elem) {
            if (elem.contentDocument != null && // Support: IE 11+
            // <object> elements with no `data` attribute has an object
            // `contentDocument` with a `null` prototype.
            getProto(elem.contentDocument)) return elem.contentDocument;
            // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
            // Treat the template element as a regular one in browsers that
            // don't support it.
            if (nodeName(elem, "template")) elem = elem.content || elem;
            return jQuery.merge([], elem.childNodes);
        }
    }, function(name, fn) {
        jQuery.fn[name] = function(until, selector) {
            var matched = jQuery.map(this, fn, until);
            if (name.slice(-5) !== "Until") selector = until;
            if (selector && typeof selector === "string") matched = jQuery.filter(selector, matched);
            if (this.length > 1) {
                // Remove duplicates
                if (!guaranteedUnique[name]) jQuery.uniqueSort(matched);
                // Reverse order for parents* and prev-derivatives
                if (rparentsprev.test(name)) matched.reverse();
            }
            return this.pushStack(matched);
        };
    });
    var rnothtmlwhite = /[^\x20\t\r\n\f]+/g;
    // Convert String-formatted options into Object-formatted ones
    function createOptions(options) {
        var object = {};
        jQuery.each(options.match(rnothtmlwhite) || [], function(_, flag) {
            object[flag] = true;
        });
        return object;
    }
    /*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */ jQuery.Callbacks = function(options) {
        // Convert options from String-formatted to Object-formatted if needed
        // (we check in cache first)
        options = typeof options === "string" ? createOptions(options) : jQuery.extend({}, options);
        var firing, // Last fire value for non-forgettable lists
        memory, // Flag to know if list was already fired
        fired, // Flag to prevent firing
        locked, // Actual callback list
        list = [], // Queue of execution data for repeatable lists
        queue = [], // Index of currently firing callback (modified by add/remove as needed)
        firingIndex = -1, // Fire callbacks
        fire = function() {
            // Enforce single-firing
            locked = locked || options.once;
            // Execute callbacks for all pending executions,
            // respecting firingIndex overrides and runtime changes
            fired = firing = true;
            for(; queue.length; firingIndex = -1){
                memory = queue.shift();
                while(++firingIndex < list.length)// Run callback and check for early termination
                if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {
                    // Jump to end and forget the data so .add doesn't re-fire
                    firingIndex = list.length;
                    memory = false;
                }
            }
            // Forget the data if we're done with it
            if (!options.memory) memory = false;
            firing = false;
            // Clean up if we're done firing for good
            if (locked) {
                // Keep an empty list if we have data for future add calls
                if (memory) list = [];
                else list = "";
            }
        }, // Actual Callbacks object
        self = {
            // Add a callback or a collection of callbacks to the list
            add: function() {
                if (list) {
                    // If we have memory from a past run, we should fire after adding
                    if (memory && !firing) {
                        firingIndex = list.length - 1;
                        queue.push(memory);
                    }
                    (function add(args) {
                        jQuery.each(args, function(_, arg) {
                            if (isFunction(arg)) {
                                if (!options.unique || !self.has(arg)) list.push(arg);
                            } else if (arg && arg.length && toType(arg) !== "string") // Inspect recursively
                            add(arg);
                        });
                    })(arguments);
                    if (memory && !firing) fire();
                }
                return this;
            },
            // Remove a callback from the list
            remove: function() {
                jQuery.each(arguments, function(_, arg) {
                    var index;
                    while((index = jQuery.inArray(arg, list, index)) > -1){
                        list.splice(index, 1);
                        // Handle firing indexes
                        if (index <= firingIndex) firingIndex--;
                    }
                });
                return this;
            },
            // Check if a given callback is in the list.
            // If no argument is given, return whether or not list has callbacks attached.
            has: function(fn) {
                return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;
            },
            // Remove all callbacks from the list
            empty: function() {
                if (list) list = [];
                return this;
            },
            // Disable .fire and .add
            // Abort any current/pending executions
            // Clear all callbacks and values
            disable: function() {
                locked = queue = [];
                list = memory = "";
                return this;
            },
            disabled: function() {
                return !list;
            },
            // Disable .fire
            // Also disable .add unless we have memory (since it would have no effect)
            // Abort any pending executions
            lock: function() {
                locked = queue = [];
                if (!memory && !firing) list = memory = "";
                return this;
            },
            locked: function() {
                return !!locked;
            },
            // Call all callbacks with the given context and arguments
            fireWith: function(context, args) {
                if (!locked) {
                    args = args || [];
                    args = [
                        context,
                        args.slice ? args.slice() : args
                    ];
                    queue.push(args);
                    if (!firing) fire();
                }
                return this;
            },
            // Call all the callbacks with the given arguments
            fire: function() {
                self.fireWith(this, arguments);
                return this;
            },
            // To know if the callbacks have already been called at least once
            fired: function() {
                return !!fired;
            }
        };
        return self;
    };
    function Identity(v) {
        return v;
    }
    function Thrower(ex) {
        throw ex;
    }
    function adoptValue(value, resolve, reject, noValue) {
        var method;
        try {
            // Check for promise aspect first to privilege synchronous behavior
            if (value && isFunction(method = value.promise)) method.call(value).done(resolve).fail(reject);
            else if (value && isFunction(method = value.then)) method.call(value, resolve, reject);
            else // Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
            // * false: [ value ].slice( 0 ) => resolve( value )
            // * true: [ value ].slice( 1 ) => resolve()
            resolve.apply(undefined, [
                value
            ].slice(noValue));
        // For Promises/A+, convert exceptions into rejections
        // Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
        // Deferred#then to conditionally suppress rejection.
        } catch (value1) {
            // Support: Android 4.0 only
            // Strict mode functions invoked without .call/.apply get global-object context
            reject.apply(undefined, [
                value1
            ]);
        }
    }
    jQuery.extend({
        Deferred: function(func) {
            var tuples = [
                // action, add listener, callbacks,
                // ... .then handlers, argument index, [final state]
                [
                    "notify",
                    "progress",
                    jQuery.Callbacks("memory"),
                    jQuery.Callbacks("memory"),
                    2
                ],
                [
                    "resolve",
                    "done",
                    jQuery.Callbacks("once memory"),
                    jQuery.Callbacks("once memory"),
                    0,
                    "resolved"
                ],
                [
                    "reject",
                    "fail",
                    jQuery.Callbacks("once memory"),
                    jQuery.Callbacks("once memory"),
                    1,
                    "rejected"
                ]
            ], state = "pending", promise = {
                state: function() {
                    return state;
                },
                always: function() {
                    deferred.done(arguments).fail(arguments);
                    return this;
                },
                "catch": function(fn) {
                    return promise.then(null, fn);
                },
                // Keep pipe for back-compat
                pipe: function() {
                    var fns = arguments;
                    return jQuery.Deferred(function(newDefer) {
                        jQuery.each(tuples, function(_i, tuple) {
                            // Map tuples (progress, done, fail) to arguments (done, fail, progress)
                            var fn = isFunction(fns[tuple[4]]) && fns[tuple[4]];
                            // deferred.progress(function() { bind to newDefer or newDefer.notify })
                            // deferred.done(function() { bind to newDefer or newDefer.resolve })
                            // deferred.fail(function() { bind to newDefer or newDefer.reject })
                            deferred[tuple[1]](function() {
                                var returned = fn && fn.apply(this, arguments);
                                if (returned && isFunction(returned.promise)) returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);
                                else newDefer[tuple[0] + "With"](this, fn ? [
                                    returned
                                ] : arguments);
                            });
                        });
                        fns = null;
                    }).promise();
                },
                then: function(onFulfilled, onRejected, onProgress) {
                    var maxDepth = 0;
                    function resolve(depth, deferred, handler, special) {
                        return function() {
                            var that = this, args = arguments, mightThrow = function() {
                                var returned, then;
                                // Support: Promises/A+ section 2.3.3.3.3
                                // https://promisesaplus.com/#point-59
                                // Ignore double-resolution attempts
                                if (depth < maxDepth) return;
                                returned = handler.apply(that, args);
                                // Support: Promises/A+ section 2.3.1
                                // https://promisesaplus.com/#point-48
                                if (returned === deferred.promise()) throw new TypeError("Thenable self-resolution");
                                // Support: Promises/A+ sections 2.3.3.1, 3.5
                                // https://promisesaplus.com/#point-54
                                // https://promisesaplus.com/#point-75
                                // Retrieve `then` only once
                                then = returned && (typeof returned === "object" || typeof returned === "function") && returned.then;
                                // Handle a returned thenable
                                if (isFunction(then)) {
                                    // Special processors (notify) just wait for resolution
                                    if (special) then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special));
                                    else {
                                        // ...and disregard older resolution values
                                        maxDepth++;
                                        then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special), resolve(maxDepth, deferred, Identity, deferred.notifyWith));
                                    }
                                } else {
                                    // Only substitute handlers pass on context
                                    // and multiple values (non-spec behavior)
                                    if (handler !== Identity) {
                                        that = undefined;
                                        args = [
                                            returned
                                        ];
                                    }
                                    // Process the value(s)
                                    // Default process is resolve
                                    (special || deferred.resolveWith)(that, args);
                                }
                            }, // Only normal processors (resolve) catch and reject exceptions
                            process = special ? mightThrow : function() {
                                try {
                                    mightThrow();
                                } catch (e) {
                                    if (jQuery.Deferred.exceptionHook) jQuery.Deferred.exceptionHook(e, process.stackTrace);
                                    // Support: Promises/A+ section 2.3.3.3.4.1
                                    // https://promisesaplus.com/#point-61
                                    // Ignore post-resolution exceptions
                                    if (depth + 1 >= maxDepth) {
                                        // Only substitute handlers pass on context
                                        // and multiple values (non-spec behavior)
                                        if (handler !== Thrower) {
                                            that = undefined;
                                            args = [
                                                e
                                            ];
                                        }
                                        deferred.rejectWith(that, args);
                                    }
                                }
                            };
                            // Support: Promises/A+ section 2.3.3.3.1
                            // https://promisesaplus.com/#point-57
                            // Re-resolve promises immediately to dodge false rejection from
                            // subsequent errors
                            if (depth) process();
                            else {
                                // Call an optional hook to record the stack, in case of exception
                                // since it's otherwise lost when execution goes async
                                if (jQuery.Deferred.getStackHook) process.stackTrace = jQuery.Deferred.getStackHook();
                                window1.setTimeout(process);
                            }
                        };
                    }
                    return jQuery.Deferred(function(newDefer) {
                        // progress_handlers.add( ... )
                        tuples[0][3].add(resolve(0, newDefer, isFunction(onProgress) ? onProgress : Identity, newDefer.notifyWith));
                        // fulfilled_handlers.add( ... )
                        tuples[1][3].add(resolve(0, newDefer, isFunction(onFulfilled) ? onFulfilled : Identity));
                        // rejected_handlers.add( ... )
                        tuples[2][3].add(resolve(0, newDefer, isFunction(onRejected) ? onRejected : Thrower));
                    }).promise();
                },
                // Get a promise for this deferred
                // If obj is provided, the promise aspect is added to the object
                promise: function(obj) {
                    return obj != null ? jQuery.extend(obj, promise) : promise;
                }
            }, deferred = {};
            // Add list-specific methods
            jQuery.each(tuples, function(i, tuple) {
                var list = tuple[2], stateString = tuple[5];
                // promise.progress = list.add
                // promise.done = list.add
                // promise.fail = list.add
                promise[tuple[1]] = list.add;
                // Handle state
                if (stateString) list.add(function() {
                    // state = "resolved" (i.e., fulfilled)
                    // state = "rejected"
                    state = stateString;
                }, // rejected_callbacks.disable
                // fulfilled_callbacks.disable
                tuples[3 - i][2].disable, // rejected_handlers.disable
                // fulfilled_handlers.disable
                tuples[3 - i][3].disable, // progress_callbacks.lock
                tuples[0][2].lock, // progress_handlers.lock
                tuples[0][3].lock);
                // progress_handlers.fire
                // fulfilled_handlers.fire
                // rejected_handlers.fire
                list.add(tuple[3].fire);
                // deferred.notify = function() { deferred.notifyWith(...) }
                // deferred.resolve = function() { deferred.resolveWith(...) }
                // deferred.reject = function() { deferred.rejectWith(...) }
                deferred[tuple[0]] = function() {
                    deferred[tuple[0] + "With"](this === deferred ? undefined : this, arguments);
                    return this;
                };
                // deferred.notifyWith = list.fireWith
                // deferred.resolveWith = list.fireWith
                // deferred.rejectWith = list.fireWith
                deferred[tuple[0] + "With"] = list.fireWith;
            });
            // Make the deferred a promise
            promise.promise(deferred);
            // Call given func if any
            if (func) func.call(deferred, deferred);
            // All done!
            return deferred;
        },
        // Deferred helper
        when: function(singleValue) {
            var // count of uncompleted subordinates
            remaining = arguments.length, // count of unprocessed arguments
            i = remaining, // subordinate fulfillment data
            resolveContexts = Array(i), resolveValues = slice.call(arguments), // the primary Deferred
            primary = jQuery.Deferred(), // subordinate callback factory
            updateFunc = function(i) {
                return function(value) {
                    resolveContexts[i] = this;
                    resolveValues[i] = arguments.length > 1 ? slice.call(arguments) : value;
                    if (!--remaining) primary.resolveWith(resolveContexts, resolveValues);
                };
            };
            // Single- and empty arguments are adopted like Promise.resolve
            if (remaining <= 1) {
                adoptValue(singleValue, primary.done(updateFunc(i)).resolve, primary.reject, !remaining);
                // Use .then() to unwrap secondary thenables (cf. gh-3000)
                if (primary.state() === "pending" || isFunction(resolveValues[i] && resolveValues[i].then)) return primary.then();
            }
            // Multiple arguments are aggregated like Promise.all array elements
            while(i--)adoptValue(resolveValues[i], updateFunc(i), primary.reject);
            return primary.promise();
        }
    });
    // These usually indicate a programmer mistake during development,
    // warn about them ASAP rather than swallowing them by default.
    var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
    jQuery.Deferred.exceptionHook = function(error, stack) {
        // Support: IE 8 - 9 only
        // Console exists when dev tools are open, which can happen at any time
        if (window1.console && window1.console.warn && error && rerrorNames.test(error.name)) window1.console.warn("jQuery.Deferred exception: " + error.message, error.stack, stack);
    };
    jQuery.readyException = function(error) {
        window1.setTimeout(function() {
            throw error;
        });
    };
    // The deferred used on DOM ready
    var readyList = jQuery.Deferred();
    jQuery.fn.ready = function(fn) {
        readyList.then(fn)// Wrap jQuery.readyException in a function so that the lookup
        // happens at the time of error handling instead of callback
        // registration.
        .catch(function(error) {
            jQuery.readyException(error);
        });
        return this;
    };
    jQuery.extend({
        // Is the DOM ready to be used? Set to true once it occurs.
        isReady: false,
        // A counter to track how many items to wait for before
        // the ready event fires. See trac-6781
        readyWait: 1,
        // Handle when the DOM is ready
        ready: function(wait) {
            // Abort if there are pending holds or we're already ready
            if (wait === true ? --jQuery.readyWait : jQuery.isReady) return;
            // Remember that the DOM is ready
            jQuery.isReady = true;
            // If a normal DOM Ready event fired, decrement, and wait if need be
            if (wait !== true && --jQuery.readyWait > 0) return;
            // If there are functions bound, to execute
            readyList.resolveWith(document, [
                jQuery
            ]);
        }
    });
    jQuery.ready.then = readyList.then;
    // The ready event handler and self cleanup method
    function completed() {
        document.removeEventListener("DOMContentLoaded", completed);
        window1.removeEventListener("load", completed);
        jQuery.ready();
    }
    // Catch cases where $(document).ready() is called
    // after the browser event has already occurred.
    // Support: IE <=9 - 10 only
    // Older IE sometimes signals "interactive" too soon
    if (document.readyState === "complete" || document.readyState !== "loading" && !document.documentElement.doScroll) // Handle it asynchronously to allow scripts the opportunity to delay ready
    window1.setTimeout(jQuery.ready);
    else {
        // Use the handy event callback
        document.addEventListener("DOMContentLoaded", completed);
        // A fallback to window.onload, that will always work
        window1.addEventListener("load", completed);
    }
    // Multifunctional method to get and set values of a collection
    // The value/s can optionally be executed if it's a function
    var access = function(elems, fn, key, value, chainable, emptyGet, raw) {
        var i = 0, len = elems.length, bulk = key == null;
        // Sets many values
        if (toType(key) === "object") {
            chainable = true;
            for(i in key)access(elems, fn, i, key[i], true, emptyGet, raw);
        // Sets one value
        } else if (value !== undefined) {
            chainable = true;
            if (!isFunction(value)) raw = true;
            if (bulk) {
                // Bulk operations run against the entire set
                if (raw) {
                    fn.call(elems, value);
                    fn = null;
                // ...except when executing function values
                } else {
                    bulk = fn;
                    fn = function(elem, _key, value) {
                        return bulk.call(jQuery(elem), value);
                    };
                }
            }
            if (fn) for(; i < len; i++)fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));
        }
        if (chainable) return elems;
        // Gets
        if (bulk) return fn.call(elems);
        return len ? fn(elems[0], key) : emptyGet;
    };
    // Matches dashed string for camelizing
    var rmsPrefix = /^-ms-/, rdashAlpha = /-([a-z])/g;
    // Used by camelCase as callback to replace()
    function fcamelCase(_all, letter) {
        return letter.toUpperCase();
    }
    // Convert dashed to camelCase; used by the css and data modules
    // Support: IE <=9 - 11, Edge 12 - 15
    // Microsoft forgot to hump their vendor prefix (trac-9572)
    function camelCase(string) {
        return string.replace(rmsPrefix, "ms-").replace(rdashAlpha, fcamelCase);
    }
    var acceptData = function(owner) {
        // Accepts only:
        //  - Node
        //    - Node.ELEMENT_NODE
        //    - Node.DOCUMENT_NODE
        //  - Object
        //    - Any
        return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;
    };
    function Data() {
        this.expando = jQuery.expando + Data.uid++;
    }
    Data.uid = 1;
    Data.prototype = {
        cache: function(owner) {
            // Check if the owner object already has a cache
            var value = owner[this.expando];
            // If not, create one
            if (!value) {
                value = {};
                // We can accept data for non-element nodes in modern browsers,
                // but we should not, see trac-8335.
                // Always return an empty object.
                if (acceptData(owner)) {
                    // If it is a node unlikely to be stringify-ed or looped over
                    // use plain assignment
                    if (owner.nodeType) owner[this.expando] = value;
                    else Object.defineProperty(owner, this.expando, {
                        value: value,
                        configurable: true
                    });
                }
            }
            return value;
        },
        set: function(owner, data, value) {
            var prop, cache = this.cache(owner);
            // Handle: [ owner, key, value ] args
            // Always use camelCase key (gh-2257)
            if (typeof data === "string") cache[camelCase(data)] = value;
            else // Copy the properties one-by-one to the cache object
            for(prop in data)cache[camelCase(prop)] = data[prop];
            return cache;
        },
        get: function(owner, key) {
            return key === undefined ? this.cache(owner) : // Always use camelCase key (gh-2257)
            owner[this.expando] && owner[this.expando][camelCase(key)];
        },
        access: function(owner, key, value) {
            // In cases where either:
            //
            //   1. No key was specified
            //   2. A string key was specified, but no value provided
            //
            // Take the "read" path and allow the get method to determine
            // which value to return, respectively either:
            //
            //   1. The entire cache object
            //   2. The data stored at the key
            //
            if (key === undefined || key && typeof key === "string" && value === undefined) return this.get(owner, key);
            // When the key is not a string, or both a key and value
            // are specified, set or extend (existing objects) with either:
            //
            //   1. An object of properties
            //   2. A key and value
            //
            this.set(owner, key, value);
            // Since the "set" path can have two possible entry points
            // return the expected data based on which path was taken[*]
            return value !== undefined ? value : key;
        },
        remove: function(owner, key) {
            var i, cache = owner[this.expando];
            if (cache === undefined) return;
            if (key !== undefined) {
                // Support array or space separated string of keys
                if (Array.isArray(key)) // If key is an array of keys...
                // We always set camelCase keys, so remove that.
                key = key.map(camelCase);
                else {
                    key = camelCase(key);
                    // If a key with the spaces exists, use it.
                    // Otherwise, create an array by matching non-whitespace
                    key = key in cache ? [
                        key
                    ] : key.match(rnothtmlwhite) || [];
                }
                i = key.length;
                while(i--)delete cache[key[i]];
            }
            // Remove the expando if there's no more data
            if (key === undefined || jQuery.isEmptyObject(cache)) {
                // Support: Chrome <=35 - 45
                // Webkit & Blink performance suffers when deleting properties
                // from DOM nodes, so set to undefined instead
                // https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
                if (owner.nodeType) owner[this.expando] = undefined;
                else delete owner[this.expando];
            }
        },
        hasData: function(owner) {
            var cache = owner[this.expando];
            return cache !== undefined && !jQuery.isEmptyObject(cache);
        }
    };
    var dataPriv = new Data();
    var dataUser = new Data();
    //	Implementation Summary
    //
    //	1. Enforce API surface and semantic compatibility with 1.9.x branch
    //	2. Improve the module's maintainability by reducing the storage
    //		paths to a single mechanism.
    //	3. Use the same single mechanism to support "private" and "user" data.
    //	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
    //	5. Avoid exposing implementation details on user objects (eg. expando properties)
    //	6. Provide a clear path for implementation upgrade to WeakMap in 2014
    var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/, rmultiDash = /[A-Z]/g;
    function getData(data) {
        if (data === "true") return true;
        if (data === "false") return false;
        if (data === "null") return null;
        // Only convert to a number if it doesn't change the string
        if (data === +data + "") return +data;
        if (rbrace.test(data)) return JSON.parse(data);
        return data;
    }
    function dataAttr(elem, key, data) {
        var name;
        // If nothing was found internally, try to fetch any
        // data from the HTML5 data-* attribute
        if (data === undefined && elem.nodeType === 1) {
            name = "data-" + key.replace(rmultiDash, "-$&").toLowerCase();
            data = elem.getAttribute(name);
            if (typeof data === "string") {
                try {
                    data = getData(data);
                } catch (e) {}
                // Make sure we set the data so it isn't changed later
                dataUser.set(elem, key, data);
            } else data = undefined;
        }
        return data;
    }
    jQuery.extend({
        hasData: function(elem) {
            return dataUser.hasData(elem) || dataPriv.hasData(elem);
        },
        data: function(elem, name, data) {
            return dataUser.access(elem, name, data);
        },
        removeData: function(elem, name) {
            dataUser.remove(elem, name);
        },
        // TODO: Now that all calls to _data and _removeData have been replaced
        // with direct calls to dataPriv methods, these can be deprecated.
        _data: function(elem, name, data) {
            return dataPriv.access(elem, name, data);
        },
        _removeData: function(elem, name) {
            dataPriv.remove(elem, name);
        }
    });
    jQuery.fn.extend({
        data: function(key, value) {
            var i, name, data, elem = this[0], attrs = elem && elem.attributes;
            // Gets all values
            if (key === undefined) {
                if (this.length) {
                    data = dataUser.get(elem);
                    if (elem.nodeType === 1 && !dataPriv.get(elem, "hasDataAttrs")) {
                        i = attrs.length;
                        while(i--)// Support: IE 11 only
                        // The attrs elements can be null (trac-14894)
                        if (attrs[i]) {
                            name = attrs[i].name;
                            if (name.indexOf("data-") === 0) {
                                name = camelCase(name.slice(5));
                                dataAttr(elem, name, data[name]);
                            }
                        }
                        dataPriv.set(elem, "hasDataAttrs", true);
                    }
                }
                return data;
            }
            // Sets multiple values
            if (typeof key === "object") return this.each(function() {
                dataUser.set(this, key);
            });
            return access(this, function(value) {
                var data;
                // The calling jQuery object (element matches) is not empty
                // (and therefore has an element appears at this[ 0 ]) and the
                // `value` parameter was not undefined. An empty jQuery object
                // will result in `undefined` for elem = this[ 0 ] which will
                // throw an exception if an attempt to read a data cache is made.
                if (elem && value === undefined) {
                    // Attempt to get data from the cache
                    // The key will always be camelCased in Data
                    data = dataUser.get(elem, key);
                    if (data !== undefined) return data;
                    // Attempt to "discover" the data in
                    // HTML5 custom data-* attrs
                    data = dataAttr(elem, key);
                    if (data !== undefined) return data;
                    // We tried really hard, but the data doesn't exist.
                    return;
                }
                // Set the data...
                this.each(function() {
                    // We always store the camelCased key
                    dataUser.set(this, key, value);
                });
            }, null, value, arguments.length > 1, null, true);
        },
        removeData: function(key) {
            return this.each(function() {
                dataUser.remove(this, key);
            });
        }
    });
    jQuery.extend({
        queue: function(elem, type, data) {
            var queue;
            if (elem) {
                type = (type || "fx") + "queue";
                queue = dataPriv.get(elem, type);
                // Speed up dequeue by getting out quickly if this is just a lookup
                if (data) {
                    if (!queue || Array.isArray(data)) queue = dataPriv.access(elem, type, jQuery.makeArray(data));
                    else queue.push(data);
                }
                return queue || [];
            }
        },
        dequeue: function(elem, type) {
            type = type || "fx";
            var queue = jQuery.queue(elem, type), startLength = queue.length, fn = queue.shift(), hooks = jQuery._queueHooks(elem, type), next = function() {
                jQuery.dequeue(elem, type);
            };
            // If the fx queue is dequeued, always remove the progress sentinel
            if (fn === "inprogress") {
                fn = queue.shift();
                startLength--;
            }
            if (fn) {
                // Add a progress sentinel to prevent the fx queue from being
                // automatically dequeued
                if (type === "fx") queue.unshift("inprogress");
                // Clear up the last queue stop function
                delete hooks.stop;
                fn.call(elem, next, hooks);
            }
            if (!startLength && hooks) hooks.empty.fire();
        },
        // Not public - generate a queueHooks object, or return the current one
        _queueHooks: function(elem, type) {
            var key = type + "queueHooks";
            return dataPriv.get(elem, key) || dataPriv.access(elem, key, {
                empty: jQuery.Callbacks("once memory").add(function() {
                    dataPriv.remove(elem, [
                        type + "queue",
                        key
                    ]);
                })
            });
        }
    });
    jQuery.fn.extend({
        queue: function(type, data) {
            var setter = 2;
            if (typeof type !== "string") {
                data = type;
                type = "fx";
                setter--;
            }
            if (arguments.length < setter) return jQuery.queue(this[0], type);
            return data === undefined ? this : this.each(function() {
                var queue = jQuery.queue(this, type, data);
                // Ensure a hooks for this queue
                jQuery._queueHooks(this, type);
                if (type === "fx" && queue[0] !== "inprogress") jQuery.dequeue(this, type);
            });
        },
        dequeue: function(type) {
            return this.each(function() {
                jQuery.dequeue(this, type);
            });
        },
        clearQueue: function(type) {
            return this.queue(type || "fx", []);
        },
        // Get a promise resolved when queues of a certain type
        // are emptied (fx is the type by default)
        promise: function(type, obj) {
            var tmp, count = 1, defer = jQuery.Deferred(), elements = this, i = this.length, resolve = function() {
                if (!--count) defer.resolveWith(elements, [
                    elements
                ]);
            };
            if (typeof type !== "string") {
                obj = type;
                type = undefined;
            }
            type = type || "fx";
            while(i--){
                tmp = dataPriv.get(elements[i], type + "queueHooks");
                if (tmp && tmp.empty) {
                    count++;
                    tmp.empty.add(resolve);
                }
            }
            resolve();
            return defer.promise(obj);
        }
    });
    var pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source;
    var rcssNum = new RegExp("^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i");
    var cssExpand = [
        "Top",
        "Right",
        "Bottom",
        "Left"
    ];
    var documentElement = document.documentElement;
    var isAttached = function(elem) {
        return jQuery.contains(elem.ownerDocument, elem);
    }, composed = {
        composed: true
    };
    // Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only
    // Check attachment across shadow DOM boundaries when possible (gh-3504)
    // Support: iOS 10.0-10.2 only
    // Early iOS 10 versions support `attachShadow` but not `getRootNode`,
    // leading to errors. We need to check for `getRootNode`.
    if (documentElement.getRootNode) isAttached = function(elem) {
        return jQuery.contains(elem.ownerDocument, elem) || elem.getRootNode(composed) === elem.ownerDocument;
    };
    var isHiddenWithinTree = function(elem, el) {
        // isHiddenWithinTree might be called from jQuery#filter function;
        // in that case, element will be second argument
        elem = el || elem;
        // Inline style trumps all
        return elem.style.display === "none" || elem.style.display === "" && // Otherwise, check computed style
        // Support: Firefox <=43 - 45
        // Disconnected elements can have computed display: none, so first confirm that elem is
        // in the document.
        isAttached(elem) && jQuery.css(elem, "display") === "none";
    };
    function adjustCSS(elem, prop, valueParts, tween) {
        var adjusted, scale, maxIterations = 20, currentValue = tween ? function() {
            return tween.cur();
        } : function() {
            return jQuery.css(elem, prop, "");
        }, initial = currentValue(), unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? "" : "px"), // Starting value computation is required for potential unit mismatches
        initialInUnit = elem.nodeType && (jQuery.cssNumber[prop] || unit !== "px" && +initial) && rcssNum.exec(jQuery.css(elem, prop));
        if (initialInUnit && initialInUnit[3] !== unit) {
            // Support: Firefox <=54
            // Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
            initial = initial / 2;
            // Trust units reported by jQuery.css
            unit = unit || initialInUnit[3];
            // Iteratively approximate from a nonzero starting point
            initialInUnit = +initial || 1;
            while(maxIterations--){
                // Evaluate and update our best guess (doubling guesses that zero out).
                // Finish if the scale equals or crosses 1 (making the old*new product non-positive).
                jQuery.style(elem, prop, initialInUnit + unit);
                if ((1 - scale) * (1 - (scale = currentValue() / initial || 0.5)) <= 0) maxIterations = 0;
                initialInUnit = initialInUnit / scale;
            }
            initialInUnit = initialInUnit * 2;
            jQuery.style(elem, prop, initialInUnit + unit);
            // Make sure we update the tween properties later on
            valueParts = valueParts || [];
        }
        if (valueParts) {
            initialInUnit = +initialInUnit || +initial || 0;
            // Apply relative offset (+=/-=) if specified
            adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];
            if (tween) {
                tween.unit = unit;
                tween.start = initialInUnit;
                tween.end = adjusted;
            }
        }
        return adjusted;
    }
    var defaultDisplayMap = {};
    function getDefaultDisplay(elem) {
        var temp, doc = elem.ownerDocument, nodeName = elem.nodeName, display = defaultDisplayMap[nodeName];
        if (display) return display;
        temp = doc.body.appendChild(doc.createElement(nodeName));
        display = jQuery.css(temp, "display");
        temp.parentNode.removeChild(temp);
        if (display === "none") display = "block";
        defaultDisplayMap[nodeName] = display;
        return display;
    }
    function showHide(elements, show) {
        var display, elem, values = [], index = 0, length = elements.length;
        // Determine new display value for elements that need to change
        for(; index < length; index++){
            elem = elements[index];
            if (!elem.style) continue;
            display = elem.style.display;
            if (show) {
                // Since we force visibility upon cascade-hidden elements, an immediate (and slow)
                // check is required in this first loop unless we have a nonempty display value (either
                // inline or about-to-be-restored)
                if (display === "none") {
                    values[index] = dataPriv.get(elem, "display") || null;
                    if (!values[index]) elem.style.display = "";
                }
                if (elem.style.display === "" && isHiddenWithinTree(elem)) values[index] = getDefaultDisplay(elem);
            } else if (display !== "none") {
                values[index] = "none";
                // Remember what we're overwriting
                dataPriv.set(elem, "display", display);
            }
        }
        // Set the display of the elements in a second loop to avoid constant reflow
        for(index = 0; index < length; index++)if (values[index] != null) elements[index].style.display = values[index];
        return elements;
    }
    jQuery.fn.extend({
        show: function() {
            return showHide(this, true);
        },
        hide: function() {
            return showHide(this);
        },
        toggle: function(state) {
            if (typeof state === "boolean") return state ? this.show() : this.hide();
            return this.each(function() {
                if (isHiddenWithinTree(this)) jQuery(this).show();
                else jQuery(this).hide();
            });
        }
    });
    var rcheckableType = /^(?:checkbox|radio)$/i;
    var rtagName = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i;
    var rscriptType = /^$|^module$|\/(?:java|ecma)script/i;
    (function() {
        var fragment = document.createDocumentFragment(), div = fragment.appendChild(document.createElement("div")), input = document.createElement("input");
        // Support: Android 4.0 - 4.3 only
        // Check state lost if the name is set (trac-11217)
        // Support: Windows Web Apps (WWA)
        // `name` and `type` must use .setAttribute for WWA (trac-14901)
        input.setAttribute("type", "radio");
        input.setAttribute("checked", "checked");
        input.setAttribute("name", "t");
        div.appendChild(input);
        // Support: Android <=4.1 only
        // Older WebKit doesn't clone checked state correctly in fragments
        support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked;
        // Support: IE <=11 only
        // Make sure textarea (and checkbox) defaultValue is properly cloned
        div.innerHTML = "<textarea>x</textarea>";
        support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;
        // Support: IE <=9 only
        // IE <=9 replaces <option> tags with their contents when inserted outside of
        // the select element.
        div.innerHTML = "<option></option>";
        support.option = !!div.lastChild;
    })();
    // We have to close these tags to support XHTML (trac-13200)
    var wrapMap = {
        // XHTML parsers do not magically insert elements in the
        // same way that tag soup parsers do. So we cannot shorten
        // this by omitting <tbody> or other required elements.
        thead: [
            1,
            "<table>",
            "</table>"
        ],
        col: [
            2,
            "<table><colgroup>",
            "</colgroup></table>"
        ],
        tr: [
            2,
            "<table><tbody>",
            "</tbody></table>"
        ],
        td: [
            3,
            "<table><tbody><tr>",
            "</tr></tbody></table>"
        ],
        _default: [
            0,
            "",
            ""
        ]
    };
    wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
    wrapMap.th = wrapMap.td;
    // Support: IE <=9 only
    if (!support.option) wrapMap.optgroup = wrapMap.option = [
        1,
        "<select multiple='multiple'>",
        "</select>"
    ];
    function getAll(context, tag) {
        // Support: IE <=9 - 11 only
        // Use typeof to avoid zero-argument method invocation on host objects (trac-15151)
        var ret;
        if (typeof context.getElementsByTagName !== "undefined") ret = context.getElementsByTagName(tag || "*");
        else if (typeof context.querySelectorAll !== "undefined") ret = context.querySelectorAll(tag || "*");
        else ret = [];
        if (tag === undefined || tag && nodeName(context, tag)) return jQuery.merge([
            context
        ], ret);
        return ret;
    }
    // Mark scripts as having already been evaluated
    function setGlobalEval(elems, refElements) {
        var i = 0, l = elems.length;
        for(; i < l; i++)dataPriv.set(elems[i], "globalEval", !refElements || dataPriv.get(refElements[i], "globalEval"));
    }
    var rhtml = /<|&#?\w+;/;
    function buildFragment(elems, context, scripts, selection, ignored) {
        var elem, tmp, tag, wrap, attached, j, fragment = context.createDocumentFragment(), nodes = [], i = 0, l = elems.length;
        for(; i < l; i++){
            elem = elems[i];
            if (elem || elem === 0) {
                // Add nodes directly
                if (toType(elem) === "object") // Support: Android <=4.0 only, PhantomJS 1 only
                // push.apply(_, arraylike) throws on ancient WebKit
                jQuery.merge(nodes, elem.nodeType ? [
                    elem
                ] : elem);
                else if (!rhtml.test(elem)) nodes.push(context.createTextNode(elem));
                else {
                    tmp = tmp || fragment.appendChild(context.createElement("div"));
                    // Deserialize a standard representation
                    tag = (rtagName.exec(elem) || [
                        "",
                        ""
                    ])[1].toLowerCase();
                    wrap = wrapMap[tag] || wrapMap._default;
                    tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2];
                    // Descend through wrappers to the right content
                    j = wrap[0];
                    while(j--)tmp = tmp.lastChild;
                    // Support: Android <=4.0 only, PhantomJS 1 only
                    // push.apply(_, arraylike) throws on ancient WebKit
                    jQuery.merge(nodes, tmp.childNodes);
                    // Remember the top-level container
                    tmp = fragment.firstChild;
                    // Ensure the created nodes are orphaned (trac-12392)
                    tmp.textContent = "";
                }
            }
        }
        // Remove wrapper from fragment
        fragment.textContent = "";
        i = 0;
        while(elem = nodes[i++]){
            // Skip elements already in the context collection (trac-4087)
            if (selection && jQuery.inArray(elem, selection) > -1) {
                if (ignored) ignored.push(elem);
                continue;
            }
            attached = isAttached(elem);
            // Append to fragment
            tmp = getAll(fragment.appendChild(elem), "script");
            // Preserve script evaluation history
            if (attached) setGlobalEval(tmp);
            // Capture executables
            if (scripts) {
                j = 0;
                while(elem = tmp[j++])if (rscriptType.test(elem.type || "")) scripts.push(elem);
            }
        }
        return fragment;
    }
    var rtypenamespace = /^([^.]*)(?:\.(.+)|)/;
    function returnTrue() {
        return true;
    }
    function returnFalse() {
        return false;
    }
    // Support: IE <=9 - 11+
    // focus() and blur() are asynchronous, except when they are no-op.
    // So expect focus to be synchronous when the element is already active,
    // and blur to be synchronous when the element is not already active.
    // (focus and blur are always synchronous in other supported browsers,
    // this just defines when we can count on it).
    function expectSync(elem, type) {
        return elem === safeActiveElement() === (type === "focus");
    }
    // Support: IE <=9 only
    // Accessing document.activeElement can throw unexpectedly
    // https://bugs.jquery.com/ticket/13393
    function safeActiveElement() {
        try {
            return document.activeElement;
        } catch (err) {}
    }
    function on(elem, types, selector, data, fn, one) {
        var origFn, type;
        // Types can be a map of types/handlers
        if (typeof types === "object") {
            // ( types-Object, selector, data )
            if (typeof selector !== "string") {
                // ( types-Object, data )
                data = data || selector;
                selector = undefined;
            }
            for(type in types)on(elem, type, selector, data, types[type], one);
            return elem;
        }
        if (data == null && fn == null) {
            // ( types, fn )
            fn = selector;
            data = selector = undefined;
        } else if (fn == null) {
            if (typeof selector === "string") {
                // ( types, selector, fn )
                fn = data;
                data = undefined;
            } else {
                // ( types, data, fn )
                fn = data;
                data = selector;
                selector = undefined;
            }
        }
        if (fn === false) fn = returnFalse;
        else if (!fn) return elem;
        if (one === 1) {
            origFn = fn;
            fn = function(event) {
                // Can use an empty set, since event contains the info
                jQuery().off(event);
                return origFn.apply(this, arguments);
            };
            // Use same guid so caller can remove using origFn
            fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);
        }
        return elem.each(function() {
            jQuery.event.add(this, types, fn, data, selector);
        });
    }
    /*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */ jQuery.event = {
        global: {},
        add: function(elem, types, handler, data, selector) {
            var handleObjIn, eventHandle, tmp, events, t, handleObj, special, handlers, type, namespaces, origType, elemData = dataPriv.get(elem);
            // Only attach events to objects that accept data
            if (!acceptData(elem)) return;
            // Caller can pass in an object of custom data in lieu of the handler
            if (handler.handler) {
                handleObjIn = handler;
                handler = handleObjIn.handler;
                selector = handleObjIn.selector;
            }
            // Ensure that invalid selectors throw exceptions at attach time
            // Evaluate against documentElement in case elem is a non-element node (e.g., document)
            if (selector) jQuery.find.matchesSelector(documentElement, selector);
            // Make sure that the handler has a unique ID, used to find/remove it later
            if (!handler.guid) handler.guid = jQuery.guid++;
            // Init the element's event structure and main handler, if this is the first
            if (!(events = elemData.events)) events = elemData.events = Object.create(null);
            if (!(eventHandle = elemData.handle)) eventHandle = elemData.handle = function(e) {
                // Discard the second event of a jQuery.event.trigger() and
                // when an event is called after a page has unloaded
                return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined;
            };
            // Handle multiple events separated by a space
            types = (types || "").match(rnothtmlwhite) || [
                ""
            ];
            t = types.length;
            while(t--){
                tmp = rtypenamespace.exec(types[t]) || [];
                type = origType = tmp[1];
                namespaces = (tmp[2] || "").split(".").sort();
                // There *must* be a type, no attaching namespace-only handlers
                if (!type) continue;
                // If event changes its type, use the special event handlers for the changed type
                special = jQuery.event.special[type] || {};
                // If selector defined, determine special event api type, otherwise given type
                type = (selector ? special.delegateType : special.bindType) || type;
                // Update special based on newly reset type
                special = jQuery.event.special[type] || {};
                // handleObj is passed to all event handlers
                handleObj = jQuery.extend({
                    type: type,
                    origType: origType,
                    data: data,
                    handler: handler,
                    guid: handler.guid,
                    selector: selector,
                    needsContext: selector && jQuery.expr.match.needsContext.test(selector),
                    namespace: namespaces.join(".")
                }, handleObjIn);
                // Init the event handler queue if we're the first
                if (!(handlers = events[type])) {
                    handlers = events[type] = [];
                    handlers.delegateCount = 0;
                    // Only use addEventListener if the special events handler returns false
                    if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {
                        if (elem.addEventListener) elem.addEventListener(type, eventHandle);
                    }
                }
                if (special.add) {
                    special.add.call(elem, handleObj);
                    if (!handleObj.handler.guid) handleObj.handler.guid = handler.guid;
                }
                // Add to the element's handler list, delegates in front
                if (selector) handlers.splice(handlers.delegateCount++, 0, handleObj);
                else handlers.push(handleObj);
                // Keep track of which events have ever been used, for event optimization
                jQuery.event.global[type] = true;
            }
        },
        // Detach an event or set of events from an element
        remove: function(elem, types, handler, selector, mappedTypes) {
            var j, origCount, tmp, events, t, handleObj, special, handlers, type, namespaces, origType, elemData = dataPriv.hasData(elem) && dataPriv.get(elem);
            if (!elemData || !(events = elemData.events)) return;
            // Once for each type.namespace in types; type may be omitted
            types = (types || "").match(rnothtmlwhite) || [
                ""
            ];
            t = types.length;
            while(t--){
                tmp = rtypenamespace.exec(types[t]) || [];
                type = origType = tmp[1];
                namespaces = (tmp[2] || "").split(".").sort();
                // Unbind all events (on this namespace, if provided) for the element
                if (!type) {
                    for(type in events)jQuery.event.remove(elem, type + types[t], handler, selector, true);
                    continue;
                }
                special = jQuery.event.special[type] || {};
                type = (selector ? special.delegateType : special.bindType) || type;
                handlers = events[type] || [];
                tmp = tmp[2] && new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)");
                // Remove matching events
                origCount = j = handlers.length;
                while(j--){
                    handleObj = handlers[j];
                    if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === "**" && handleObj.selector)) {
                        handlers.splice(j, 1);
                        if (handleObj.selector) handlers.delegateCount--;
                        if (special.remove) special.remove.call(elem, handleObj);
                    }
                }
                // Remove generic event handler if we removed something and no more handlers exist
                // (avoids potential for endless recursion during removal of special event handlers)
                if (origCount && !handlers.length) {
                    if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) jQuery.removeEvent(elem, type, elemData.handle);
                    delete events[type];
                }
            }
            // Remove data and the expando if it's no longer used
            if (jQuery.isEmptyObject(events)) dataPriv.remove(elem, "handle events");
        },
        dispatch: function(nativeEvent) {
            var i, j, ret, matched, handleObj, handlerQueue, args = new Array(arguments.length), // Make a writable jQuery.Event from the native event object
            event = jQuery.event.fix(nativeEvent), handlers = (dataPriv.get(this, "events") || Object.create(null))[event.type] || [], special = jQuery.event.special[event.type] || {};
            // Use the fix-ed jQuery.Event rather than the (read-only) native event
            args[0] = event;
            for(i = 1; i < arguments.length; i++)args[i] = arguments[i];
            event.delegateTarget = this;
            // Call the preDispatch hook for the mapped type, and let it bail if desired
            if (special.preDispatch && special.preDispatch.call(this, event) === false) return;
            // Determine handlers
            handlerQueue = jQuery.event.handlers.call(this, event, handlers);
            // Run delegates first; they may want to stop propagation beneath us
            i = 0;
            while((matched = handlerQueue[i++]) && !event.isPropagationStopped()){
                event.currentTarget = matched.elem;
                j = 0;
                while((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped())// If the event is namespaced, then each handler is only invoked if it is
                // specially universal or its namespaces are a superset of the event's.
                if (!event.rnamespace || handleObj.namespace === false || event.rnamespace.test(handleObj.namespace)) {
                    event.handleObj = handleObj;
                    event.data = handleObj.data;
                    ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);
                    if (ret !== undefined) {
                        if ((event.result = ret) === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                    }
                }
            }
            // Call the postDispatch hook for the mapped type
            if (special.postDispatch) special.postDispatch.call(this, event);
            return event.result;
        },
        handlers: function(event, handlers) {
            var i, handleObj, sel, matchedHandlers, matchedSelectors, handlerQueue = [], delegateCount = handlers.delegateCount, cur = event.target;
            // Find delegate handlers
            if (delegateCount && // Support: IE <=9
            // Black-hole SVG <use> instance trees (trac-13180)
            cur.nodeType && // Support: Firefox <=42
            // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
            // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
            // Support: IE 11 only
            // ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
            !(event.type === "click" && event.button >= 1)) {
                for(; cur !== this; cur = cur.parentNode || this)// Don't check non-elements (trac-13208)
                // Don't process clicks on disabled elements (trac-6911, trac-8165, trac-11382, trac-11764)
                if (cur.nodeType === 1 && !(event.type === "click" && cur.disabled === true)) {
                    matchedHandlers = [];
                    matchedSelectors = {};
                    for(i = 0; i < delegateCount; i++){
                        handleObj = handlers[i];
                        // Don't conflict with Object.prototype properties (trac-13203)
                        sel = handleObj.selector + " ";
                        if (matchedSelectors[sel] === undefined) matchedSelectors[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) > -1 : jQuery.find(sel, this, null, [
                            cur
                        ]).length;
                        if (matchedSelectors[sel]) matchedHandlers.push(handleObj);
                    }
                    if (matchedHandlers.length) handlerQueue.push({
                        elem: cur,
                        handlers: matchedHandlers
                    });
                }
            }
            // Add the remaining (directly-bound) handlers
            cur = this;
            if (delegateCount < handlers.length) handlerQueue.push({
                elem: cur,
                handlers: handlers.slice(delegateCount)
            });
            return handlerQueue;
        },
        addProp: function(name, hook) {
            Object.defineProperty(jQuery.Event.prototype, name, {
                enumerable: true,
                configurable: true,
                get: isFunction(hook) ? function() {
                    if (this.originalEvent) return hook(this.originalEvent);
                } : function() {
                    if (this.originalEvent) return this.originalEvent[name];
                },
                set: function(value) {
                    Object.defineProperty(this, name, {
                        enumerable: true,
                        configurable: true,
                        writable: true,
                        value: value
                    });
                }
            });
        },
        fix: function(originalEvent) {
            return originalEvent[jQuery.expando] ? originalEvent : new jQuery.Event(originalEvent);
        },
        special: {
            load: {
                // Prevent triggered image.load events from bubbling to window.load
                noBubble: true
            },
            click: {
                // Utilize native event to ensure correct state for checkable inputs
                setup: function(data) {
                    // For mutual compressibility with _default, replace `this` access with a local var.
                    // `|| data` is dead code meant only to preserve the variable through minification.
                    var el = this || data;
                    // Claim the first handler
                    if (rcheckableType.test(el.type) && el.click && nodeName(el, "input")) // dataPriv.set( el, "click", ... )
                    leverageNative(el, "click", returnTrue);
                    // Return false to allow normal processing in the caller
                    return false;
                },
                trigger: function(data) {
                    // For mutual compressibility with _default, replace `this` access with a local var.
                    // `|| data` is dead code meant only to preserve the variable through minification.
                    var el = this || data;
                    // Force setup before triggering a click
                    if (rcheckableType.test(el.type) && el.click && nodeName(el, "input")) leverageNative(el, "click");
                    // Return non-false to allow normal event-path propagation
                    return true;
                },
                // For cross-browser consistency, suppress native .click() on links
                // Also prevent it if we're currently inside a leveraged native-event stack
                _default: function(event) {
                    var target = event.target;
                    return rcheckableType.test(target.type) && target.click && nodeName(target, "input") && dataPriv.get(target, "click") || nodeName(target, "a");
                }
            },
            beforeunload: {
                postDispatch: function(event) {
                    // Support: Firefox 20+
                    // Firefox doesn't alert if the returnValue field is not set.
                    if (event.result !== undefined && event.originalEvent) event.originalEvent.returnValue = event.result;
                }
            }
        }
    };
    // Ensure the presence of an event listener that handles manually-triggered
    // synthetic events by interrupting progress until reinvoked in response to
    // *native* events that it fires directly, ensuring that state changes have
    // already occurred before other listeners are invoked.
    function leverageNative(el, type, expectSync) {
        // Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add
        if (!expectSync) {
            if (dataPriv.get(el, type) === undefined) jQuery.event.add(el, type, returnTrue);
            return;
        }
        // Register the controller as a special universal handler for all event namespaces
        dataPriv.set(el, type, false);
        jQuery.event.add(el, type, {
            namespace: false,
            handler: function(event) {
                var notAsync, result, saved = dataPriv.get(this, type);
                if (event.isTrigger & 1 && this[type]) {
                    // Interrupt processing of the outer synthetic .trigger()ed event
                    // Saved data should be false in such cases, but might be a leftover capture object
                    // from an async native handler (gh-4350)
                    if (!saved.length) {
                        // Store arguments for use when handling the inner native event
                        // There will always be at least one argument (an event object), so this array
                        // will not be confused with a leftover capture object.
                        saved = slice.call(arguments);
                        dataPriv.set(this, type, saved);
                        // Trigger the native event and capture its result
                        // Support: IE <=9 - 11+
                        // focus() and blur() are asynchronous
                        notAsync = expectSync(this, type);
                        this[type]();
                        result = dataPriv.get(this, type);
                        if (saved !== result || notAsync) dataPriv.set(this, type, false);
                        else result = {};
                        if (saved !== result) {
                            // Cancel the outer synthetic event
                            event.stopImmediatePropagation();
                            event.preventDefault();
                            // Support: Chrome 86+
                            // In Chrome, if an element having a focusout handler is blurred by
                            // clicking outside of it, it invokes the handler synchronously. If
                            // that handler calls `.remove()` on the element, the data is cleared,
                            // leaving `result` undefined. We need to guard against this.
                            return result && result.value;
                        }
                    // If this is an inner synthetic event for an event with a bubbling surrogate
                    // (focus or blur), assume that the surrogate already propagated from triggering the
                    // native event and prevent that from happening again here.
                    // This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the
                    // bubbling surrogate propagates *after* the non-bubbling base), but that seems
                    // less bad than duplication.
                    } else if ((jQuery.event.special[type] || {}).delegateType) event.stopPropagation();
                // If this is a native event triggered above, everything is now in order
                // Fire an inner synthetic event with the original arguments
                } else if (saved.length) {
                    // ...and capture the result
                    dataPriv.set(this, type, {
                        value: jQuery.event.trigger(// Support: IE <=9 - 11+
                        // Extend with the prototype to reset the above stopImmediatePropagation()
                        jQuery.extend(saved[0], jQuery.Event.prototype), saved.slice(1), this)
                    });
                    // Abort handling of the native event
                    event.stopImmediatePropagation();
                }
            }
        });
    }
    jQuery.removeEvent = function(elem, type, handle) {
        // This "if" is needed for plain objects
        if (elem.removeEventListener) elem.removeEventListener(type, handle);
    };
    jQuery.Event = function(src, props) {
        // Allow instantiation without the 'new' keyword
        if (!(this instanceof jQuery.Event)) return new jQuery.Event(src, props);
        // Event object
        if (src && src.type) {
            this.originalEvent = src;
            this.type = src.type;
            // Events bubbling up the document may have been marked as prevented
            // by a handler lower down the tree; reflect the correct value.
            this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && // Support: Android <=2.3 only
            src.returnValue === false ? returnTrue : returnFalse;
            // Create target properties
            // Support: Safari <=6 - 7 only
            // Target should not be a text node (trac-504, trac-13143)
            this.target = src.target && src.target.nodeType === 3 ? src.target.parentNode : src.target;
            this.currentTarget = src.currentTarget;
            this.relatedTarget = src.relatedTarget;
        // Event type
        } else this.type = src;
        // Put explicitly provided properties onto the event object
        if (props) jQuery.extend(this, props);
        // Create a timestamp if incoming event doesn't have one
        this.timeStamp = src && src.timeStamp || Date.now();
        // Mark it as fixed
        this[jQuery.expando] = true;
    };
    // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
    // https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
    jQuery.Event.prototype = {
        constructor: jQuery.Event,
        isDefaultPrevented: returnFalse,
        isPropagationStopped: returnFalse,
        isImmediatePropagationStopped: returnFalse,
        isSimulated: false,
        preventDefault: function() {
            var e = this.originalEvent;
            this.isDefaultPrevented = returnTrue;
            if (e && !this.isSimulated) e.preventDefault();
        },
        stopPropagation: function() {
            var e = this.originalEvent;
            this.isPropagationStopped = returnTrue;
            if (e && !this.isSimulated) e.stopPropagation();
        },
        stopImmediatePropagation: function() {
            var e = this.originalEvent;
            this.isImmediatePropagationStopped = returnTrue;
            if (e && !this.isSimulated) e.stopImmediatePropagation();
            this.stopPropagation();
        }
    };
    // Includes all common event props including KeyEvent and MouseEvent specific props
    jQuery.each({
        altKey: true,
        bubbles: true,
        cancelable: true,
        changedTouches: true,
        ctrlKey: true,
        detail: true,
        eventPhase: true,
        metaKey: true,
        pageX: true,
        pageY: true,
        shiftKey: true,
        view: true,
        "char": true,
        code: true,
        charCode: true,
        key: true,
        keyCode: true,
        button: true,
        buttons: true,
        clientX: true,
        clientY: true,
        offsetX: true,
        offsetY: true,
        pointerId: true,
        pointerType: true,
        screenX: true,
        screenY: true,
        targetTouches: true,
        toElement: true,
        touches: true,
        which: true
    }, jQuery.event.addProp);
    jQuery.each({
        focus: "focusin",
        blur: "focusout"
    }, function(type, delegateType) {
        jQuery.event.special[type] = {
            // Utilize native event if possible so blur/focus sequence is correct
            setup: function() {
                // Claim the first handler
                // dataPriv.set( this, "focus", ... )
                // dataPriv.set( this, "blur", ... )
                leverageNative(this, type, expectSync);
                // Return false to allow normal processing in the caller
                return false;
            },
            trigger: function() {
                // Force setup before trigger
                leverageNative(this, type);
                // Return non-false to allow normal event-path propagation
                return true;
            },
            // Suppress native focus or blur if we're currently inside
            // a leveraged native-event stack
            _default: function(event) {
                return dataPriv.get(event.target, type);
            },
            delegateType: delegateType
        };
    });
    // Create mouseenter/leave events using mouseover/out and event-time checks
    // so that event delegation works in jQuery.
    // Do the same for pointerenter/pointerleave and pointerover/pointerout
    //
    // Support: Safari 7 only
    // Safari sends mouseenter too often; see:
    // https://bugs.chromium.org/p/chromium/issues/detail?id=470258
    // for the description of the bug (it existed in older Chrome versions as well).
    jQuery.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout",
        pointerenter: "pointerover",
        pointerleave: "pointerout"
    }, function(orig, fix) {
        jQuery.event.special[orig] = {
            delegateType: fix,
            bindType: fix,
            handle: function(event) {
                var ret, target = this, related = event.relatedTarget, handleObj = event.handleObj;
                // For mouseenter/leave call the handler if related is outside the target.
                // NB: No relatedTarget if the mouse left/entered the browser window
                if (!related || related !== target && !jQuery.contains(target, related)) {
                    event.type = handleObj.origType;
                    ret = handleObj.handler.apply(this, arguments);
                    event.type = fix;
                }
                return ret;
            }
        };
    });
    jQuery.fn.extend({
        on: function(types, selector, data, fn) {
            return on(this, types, selector, data, fn);
        },
        one: function(types, selector, data, fn) {
            return on(this, types, selector, data, fn, 1);
        },
        off: function(types, selector, fn) {
            var handleObj, type;
            if (types && types.preventDefault && types.handleObj) {
                // ( event )  dispatched jQuery.Event
                handleObj = types.handleObj;
                jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);
                return this;
            }
            if (typeof types === "object") {
                // ( types-object [, selector] )
                for(type in types)this.off(type, selector, types[type]);
                return this;
            }
            if (selector === false || typeof selector === "function") {
                // ( types [, fn] )
                fn = selector;
                selector = undefined;
            }
            if (fn === false) fn = returnFalse;
            return this.each(function() {
                jQuery.event.remove(this, types, fn, selector);
            });
        }
    });
    var // Support: IE <=10 - 11, Edge 12 - 13 only
    // In IE/Edge using regex groups here causes severe slowdowns.
    // See https://connect.microsoft.com/IE/feedback/details/1736512/
    rnoInnerhtml = /<script|<style|<link/i, // checked="checked" or checked
    rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i, rcleanScript = /^\s*<!\[CDATA\[|\]\]>\s*$/g;
    // Prefer a tbody over its parent table for containing new rows
    function manipulationTarget(elem, content) {
        if (nodeName(elem, "table") && nodeName(content.nodeType !== 11 ? content : content.firstChild, "tr")) return jQuery(elem).children("tbody")[0] || elem;
        return elem;
    }
    // Replace/restore the type attribute of script elements for safe DOM manipulation
    function disableScript(elem) {
        elem.type = (elem.getAttribute("type") !== null) + "/" + elem.type;
        return elem;
    }
    function restoreScript(elem) {
        if ((elem.type || "").slice(0, 5) === "true/") elem.type = elem.type.slice(5);
        else elem.removeAttribute("type");
        return elem;
    }
    function cloneCopyEvent(src, dest) {
        var i, l, type, pdataOld, udataOld, udataCur, events;
        if (dest.nodeType !== 1) return;
        // 1. Copy private data: events, handlers, etc.
        if (dataPriv.hasData(src)) {
            pdataOld = dataPriv.get(src);
            events = pdataOld.events;
            if (events) {
                dataPriv.remove(dest, "handle events");
                for(type in events)for(i = 0, l = events[type].length; i < l; i++)jQuery.event.add(dest, type, events[type][i]);
            }
        }
        // 2. Copy user data
        if (dataUser.hasData(src)) {
            udataOld = dataUser.access(src);
            udataCur = jQuery.extend({}, udataOld);
            dataUser.set(dest, udataCur);
        }
    }
    // Fix IE bugs, see support tests
    function fixInput(src, dest) {
        var nodeName = dest.nodeName.toLowerCase();
        // Fails to persist the checked state of a cloned checkbox or radio button.
        if (nodeName === "input" && rcheckableType.test(src.type)) dest.checked = src.checked;
        else if (nodeName === "input" || nodeName === "textarea") dest.defaultValue = src.defaultValue;
    }
    function domManip(collection, args, callback, ignored) {
        // Flatten any nested arrays
        args = flat(args);
        var fragment, first, scripts, hasScripts, node, doc, i = 0, l = collection.length, iNoClone = l - 1, value = args[0], valueIsFunction = isFunction(value);
        // We can't cloneNode fragments that contain checked, in WebKit
        if (valueIsFunction || l > 1 && typeof value === "string" && !support.checkClone && rchecked.test(value)) return collection.each(function(index) {
            var self = collection.eq(index);
            if (valueIsFunction) args[0] = value.call(this, index, self.html());
            domManip(self, args, callback, ignored);
        });
        if (l) {
            fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);
            first = fragment.firstChild;
            if (fragment.childNodes.length === 1) fragment = first;
            // Require either new content or an interest in ignored elements to invoke the callback
            if (first || ignored) {
                scripts = jQuery.map(getAll(fragment, "script"), disableScript);
                hasScripts = scripts.length;
                // Use the original fragment for the last item
                // instead of the first because it can end up
                // being emptied incorrectly in certain situations (trac-8070).
                for(; i < l; i++){
                    node = fragment;
                    if (i !== iNoClone) {
                        node = jQuery.clone(node, true, true);
                        // Keep references to cloned scripts for later restoration
                        if (hasScripts) // Support: Android <=4.0 only, PhantomJS 1 only
                        // push.apply(_, arraylike) throws on ancient WebKit
                        jQuery.merge(scripts, getAll(node, "script"));
                    }
                    callback.call(collection[i], node, i);
                }
                if (hasScripts) {
                    doc = scripts[scripts.length - 1].ownerDocument;
                    // Reenable scripts
                    jQuery.map(scripts, restoreScript);
                    // Evaluate executable scripts on first document insertion
                    for(i = 0; i < hasScripts; i++){
                        node = scripts[i];
                        if (rscriptType.test(node.type || "") && !dataPriv.access(node, "globalEval") && jQuery.contains(doc, node)) {
                            if (node.src && (node.type || "").toLowerCase() !== "module") // Optional AJAX dependency, but won't run scripts if not present
                            {
                                if (jQuery._evalUrl && !node.noModule) jQuery._evalUrl(node.src, {
                                    nonce: node.nonce || node.getAttribute("nonce")
                                }, doc);
                            } else // Unwrap a CDATA section containing script contents. This shouldn't be
                            // needed as in XML documents they're already not visible when
                            // inspecting element contents and in HTML documents they have no
                            // meaning but we're preserving that logic for backwards compatibility.
                            // This will be removed completely in 4.0. See gh-4904.
                            DOMEval(node.textContent.replace(rcleanScript, ""), node, doc);
                        }
                    }
                }
            }
        }
        return collection;
    }
    function remove(elem, selector, keepData) {
        var node, nodes = selector ? jQuery.filter(selector, elem) : elem, i = 0;
        for(; (node = nodes[i]) != null; i++){
            if (!keepData && node.nodeType === 1) jQuery.cleanData(getAll(node));
            if (node.parentNode) {
                if (keepData && isAttached(node)) setGlobalEval(getAll(node, "script"));
                node.parentNode.removeChild(node);
            }
        }
        return elem;
    }
    jQuery.extend({
        htmlPrefilter: function(html) {
            return html;
        },
        clone: function(elem, dataAndEvents, deepDataAndEvents) {
            var i, l, srcElements, destElements, clone = elem.cloneNode(true), inPage = isAttached(elem);
            // Fix IE cloning issues
            if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {
                // We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
                destElements = getAll(clone);
                srcElements = getAll(elem);
                for(i = 0, l = srcElements.length; i < l; i++)fixInput(srcElements[i], destElements[i]);
            }
            // Copy the events from the original to the clone
            if (dataAndEvents) {
                if (deepDataAndEvents) {
                    srcElements = srcElements || getAll(elem);
                    destElements = destElements || getAll(clone);
                    for(i = 0, l = srcElements.length; i < l; i++)cloneCopyEvent(srcElements[i], destElements[i]);
                } else cloneCopyEvent(elem, clone);
            }
            // Preserve script evaluation history
            destElements = getAll(clone, "script");
            if (destElements.length > 0) setGlobalEval(destElements, !inPage && getAll(elem, "script"));
            // Return the cloned set
            return clone;
        },
        cleanData: function(elems) {
            var data, elem, type, special = jQuery.event.special, i = 0;
            for(; (elem = elems[i]) !== undefined; i++)if (acceptData(elem)) {
                if (data = elem[dataPriv.expando]) {
                    if (data.events) {
                        for(type in data.events)if (special[type]) jQuery.event.remove(elem, type);
                        else jQuery.removeEvent(elem, type, data.handle);
                    }
                    // Support: Chrome <=35 - 45+
                    // Assign undefined instead of using delete, see Data#remove
                    elem[dataPriv.expando] = undefined;
                }
                if (elem[dataUser.expando]) // Support: Chrome <=35 - 45+
                // Assign undefined instead of using delete, see Data#remove
                elem[dataUser.expando] = undefined;
            }
        }
    });
    jQuery.fn.extend({
        detach: function(selector) {
            return remove(this, selector, true);
        },
        remove: function(selector) {
            return remove(this, selector);
        },
        text: function(value) {
            return access(this, function(value) {
                return value === undefined ? jQuery.text(this) : this.empty().each(function() {
                    if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) this.textContent = value;
                });
            }, null, value, arguments.length);
        },
        append: function() {
            return domManip(this, arguments, function(elem) {
                if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                    var target = manipulationTarget(this, elem);
                    target.appendChild(elem);
                }
            });
        },
        prepend: function() {
            return domManip(this, arguments, function(elem) {
                if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                    var target = manipulationTarget(this, elem);
                    target.insertBefore(elem, target.firstChild);
                }
            });
        },
        before: function() {
            return domManip(this, arguments, function(elem) {
                if (this.parentNode) this.parentNode.insertBefore(elem, this);
            });
        },
        after: function() {
            return domManip(this, arguments, function(elem) {
                if (this.parentNode) this.parentNode.insertBefore(elem, this.nextSibling);
            });
        },
        empty: function() {
            var elem, i = 0;
            for(; (elem = this[i]) != null; i++)if (elem.nodeType === 1) {
                // Prevent memory leaks
                jQuery.cleanData(getAll(elem, false));
                // Remove any remaining nodes
                elem.textContent = "";
            }
            return this;
        },
        clone: function(dataAndEvents, deepDataAndEvents) {
            dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
            deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;
            return this.map(function() {
                return jQuery.clone(this, dataAndEvents, deepDataAndEvents);
            });
        },
        html: function(value) {
            return access(this, function(value) {
                var elem = this[0] || {}, i = 0, l = this.length;
                if (value === undefined && elem.nodeType === 1) return elem.innerHTML;
                // See if we can take a shortcut and just use innerHTML
                if (typeof value === "string" && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || [
                    "",
                    ""
                ])[1].toLowerCase()]) {
                    value = jQuery.htmlPrefilter(value);
                    try {
                        for(; i < l; i++){
                            elem = this[i] || {};
                            // Remove element nodes and prevent memory leaks
                            if (elem.nodeType === 1) {
                                jQuery.cleanData(getAll(elem, false));
                                elem.innerHTML = value;
                            }
                        }
                        elem = 0;
                    // If using innerHTML throws an exception, use the fallback method
                    } catch (e) {}
                }
                if (elem) this.empty().append(value);
            }, null, value, arguments.length);
        },
        replaceWith: function() {
            var ignored = [];
            // Make the changes, replacing each non-ignored context element with the new content
            return domManip(this, arguments, function(elem) {
                var parent = this.parentNode;
                if (jQuery.inArray(this, ignored) < 0) {
                    jQuery.cleanData(getAll(this));
                    if (parent) parent.replaceChild(elem, this);
                }
            // Force callback invocation
            }, ignored);
        }
    });
    jQuery.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(name, original) {
        jQuery.fn[name] = function(selector) {
            var elems, ret = [], insert = jQuery(selector), last = insert.length - 1, i = 0;
            for(; i <= last; i++){
                elems = i === last ? this : this.clone(true);
                jQuery(insert[i])[original](elems);
                // Support: Android <=4.0 only, PhantomJS 1 only
                // .get() because push.apply(_, arraylike) throws on ancient WebKit
                push.apply(ret, elems.get());
            }
            return this.pushStack(ret);
        };
    });
    var rnumnonpx = new RegExp("^(" + pnum + ")(?!px)[a-z%]+$", "i");
    var rcustomProp = /^--/;
    var getStyles = function(elem) {
        // Support: IE <=11 only, Firefox <=30 (trac-15098, trac-14150)
        // IE throws on elements created in popups
        // FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
        var view = elem.ownerDocument.defaultView;
        if (!view || !view.opener) view = window1;
        return view.getComputedStyle(elem);
    };
    var swap = function(elem, options, callback) {
        var ret, name, old = {};
        // Remember the old values, and insert the new ones
        for(name in options){
            old[name] = elem.style[name];
            elem.style[name] = options[name];
        }
        ret = callback.call(elem);
        // Revert the old values
        for(name in options)elem.style[name] = old[name];
        return ret;
    };
    var rboxStyle = new RegExp(cssExpand.join("|"), "i");
    var whitespace = "[\\x20\\t\\r\\n\\f]";
    var rtrimCSS = new RegExp("^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g");
    (function() {
        // Executing both pixelPosition & boxSizingReliable tests require only one layout
        // so they're executed at the same time to save the second computation.
        function computeStyleTests() {
            // This is a singleton, we need to execute it only once
            if (!div) return;
            container.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0";
            div.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%";
            documentElement.appendChild(container).appendChild(div);
            var divStyle = window1.getComputedStyle(div);
            pixelPositionVal = divStyle.top !== "1%";
            // Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
            reliableMarginLeftVal = roundPixelMeasures(divStyle.marginLeft) === 12;
            // Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
            // Some styles come back with percentage values, even though they shouldn't
            div.style.right = "60%";
            pixelBoxStylesVal = roundPixelMeasures(divStyle.right) === 36;
            // Support: IE 9 - 11 only
            // Detect misreporting of content dimensions for box-sizing:border-box elements
            boxSizingReliableVal = roundPixelMeasures(divStyle.width) === 36;
            // Support: IE 9 only
            // Detect overflow:scroll screwiness (gh-3699)
            // Support: Chrome <=64
            // Don't get tricked when zoom affects offsetWidth (gh-4029)
            div.style.position = "absolute";
            scrollboxSizeVal = roundPixelMeasures(div.offsetWidth / 3) === 12;
            documentElement.removeChild(container);
            // Nullify the div so it wouldn't be stored in the memory and
            // it will also be a sign that checks already performed
            div = null;
        }
        function roundPixelMeasures(measure) {
            return Math.round(parseFloat(measure));
        }
        var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal, reliableTrDimensionsVal, reliableMarginLeftVal, container = document.createElement("div"), div = document.createElement("div");
        // Finish early in limited (non-browser) environments
        if (!div.style) return;
        // Support: IE <=9 - 11 only
        // Style of cloned element affects source element cloned (trac-8908)
        div.style.backgroundClip = "content-box";
        div.cloneNode(true).style.backgroundClip = "";
        support.clearCloneStyle = div.style.backgroundClip === "content-box";
        jQuery.extend(support, {
            boxSizingReliable: function() {
                computeStyleTests();
                return boxSizingReliableVal;
            },
            pixelBoxStyles: function() {
                computeStyleTests();
                return pixelBoxStylesVal;
            },
            pixelPosition: function() {
                computeStyleTests();
                return pixelPositionVal;
            },
            reliableMarginLeft: function() {
                computeStyleTests();
                return reliableMarginLeftVal;
            },
            scrollboxSize: function() {
                computeStyleTests();
                return scrollboxSizeVal;
            },
            // Support: IE 9 - 11+, Edge 15 - 18+
            // IE/Edge misreport `getComputedStyle` of table rows with width/height
            // set in CSS while `offset*` properties report correct values.
            // Behavior in IE 9 is more subtle than in newer versions & it passes
            // some versions of this test; make sure not to make it pass there!
            //
            // Support: Firefox 70+
            // Only Firefox includes border widths
            // in computed dimensions. (gh-4529)
            reliableTrDimensions: function() {
                var table, tr, trChild, trStyle;
                if (reliableTrDimensionsVal == null) {
                    table = document.createElement("table");
                    tr = document.createElement("tr");
                    trChild = document.createElement("div");
                    table.style.cssText = "position:absolute;left:-11111px;border-collapse:separate";
                    tr.style.cssText = "border:1px solid";
                    // Support: Chrome 86+
                    // Height set through cssText does not get applied.
                    // Computed height then comes back as 0.
                    tr.style.height = "1px";
                    trChild.style.height = "9px";
                    // Support: Android 8 Chrome 86+
                    // In our bodyBackground.html iframe,
                    // display for all div elements is set to "inline",
                    // which causes a problem only in Android 8 Chrome 86.
                    // Ensuring the div is display: block
                    // gets around this issue.
                    trChild.style.display = "block";
                    documentElement.appendChild(table).appendChild(tr).appendChild(trChild);
                    trStyle = window1.getComputedStyle(tr);
                    reliableTrDimensionsVal = parseInt(trStyle.height, 10) + parseInt(trStyle.borderTopWidth, 10) + parseInt(trStyle.borderBottomWidth, 10) === tr.offsetHeight;
                    documentElement.removeChild(table);
                }
                return reliableTrDimensionsVal;
            }
        });
    })();
    function curCSS(elem, name, computed) {
        var width, minWidth, maxWidth, ret, isCustomProp = rcustomProp.test(name), // Support: Firefox 51+
        // Retrieving style before computed somehow
        // fixes an issue with getting wrong values
        // on detached elements
        style = elem.style;
        computed = computed || getStyles(elem);
        // getPropertyValue is needed for:
        //   .css('filter') (IE 9 only, trac-12537)
        //   .css('--customProperty) (gh-3144)
        if (computed) {
            ret = computed.getPropertyValue(name) || computed[name];
            // trim whitespace for custom property (issue gh-4926)
            if (isCustomProp) // rtrim treats U+000D CARRIAGE RETURN and U+000C FORM FEED
            // as whitespace while CSS does not, but this is not a problem
            // because CSS preprocessing replaces them with U+000A LINE FEED
            // (which *is* CSS whitespace)
            // https://www.w3.org/TR/css-syntax-3/#input-preprocessing
            ret = ret.replace(rtrimCSS, "$1");
            if (ret === "" && !isAttached(elem)) ret = jQuery.style(elem, name);
            // A tribute to the "awesome hack by Dean Edwards"
            // Android Browser returns percentage for some values,
            // but width seems to be reliably pixels.
            // This is against the CSSOM draft spec:
            // https://drafts.csswg.org/cssom/#resolved-values
            if (!support.pixelBoxStyles() && rnumnonpx.test(ret) && rboxStyle.test(name)) {
                // Remember the original values
                width = style.width;
                minWidth = style.minWidth;
                maxWidth = style.maxWidth;
                // Put in the new values to get a computed value out
                style.minWidth = style.maxWidth = style.width = ret;
                ret = computed.width;
                // Revert the changed values
                style.width = width;
                style.minWidth = minWidth;
                style.maxWidth = maxWidth;
            }
        }
        return ret !== undefined ? // Support: IE <=9 - 11 only
        // IE returns zIndex value as an integer.
        ret + "" : ret;
    }
    function addGetHookIf(conditionFn, hookFn) {
        // Define the hook, we'll check on the first run if it's really needed.
        return {
            get: function() {
                if (conditionFn()) {
                    // Hook not needed (or it's not possible to use it due
                    // to missing dependency), remove it.
                    delete this.get;
                    return;
                }
                // Hook needed; redefine it so that the support test is not executed again.
                return (this.get = hookFn).apply(this, arguments);
            }
        };
    }
    var cssPrefixes = [
        "Webkit",
        "Moz",
        "ms"
    ], emptyStyle = document.createElement("div").style, vendorProps = {};
    // Return a vendor-prefixed property or undefined
    function vendorPropName(name) {
        // Check for vendor prefixed names
        var capName = name[0].toUpperCase() + name.slice(1), i = cssPrefixes.length;
        while(i--){
            name = cssPrefixes[i] + capName;
            if (name in emptyStyle) return name;
        }
    }
    // Return a potentially-mapped jQuery.cssProps or vendor prefixed property
    function finalPropName(name) {
        var final = jQuery.cssProps[name] || vendorProps[name];
        if (final) return final;
        if (name in emptyStyle) return name;
        return vendorProps[name] = vendorPropName(name) || name;
    }
    var // Swappable if display is none or starts with table
    // except "table", "table-cell", or "table-caption"
    // See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
    rdisplayswap = /^(none|table(?!-c[ea]).+)/, cssShow = {
        position: "absolute",
        visibility: "hidden",
        display: "block"
    }, cssNormalTransform = {
        letterSpacing: "0",
        fontWeight: "400"
    };
    function setPositiveNumber(_elem, value, subtract) {
        // Any relative (+/-) values have already been
        // normalized at this point
        var matches = rcssNum.exec(value);
        return matches ? // Guard against undefined "subtract", e.g., when used as in cssHooks
        Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || "px") : value;
    }
    function boxModelAdjustment(elem, dimension, box, isBorderBox, styles, computedVal) {
        var i = dimension === "width" ? 1 : 0, extra = 0, delta = 0;
        // Adjustment may not be necessary
        if (box === (isBorderBox ? "border" : "content")) return 0;
        for(; i < 4; i += 2){
            // Both box models exclude margin
            if (box === "margin") delta += jQuery.css(elem, box + cssExpand[i], true, styles);
            // If we get here with a content-box, we're seeking "padding" or "border" or "margin"
            if (!isBorderBox) {
                // Add padding
                delta += jQuery.css(elem, "padding" + cssExpand[i], true, styles);
                // For "border" or "margin", add border
                if (box !== "padding") delta += jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles);
                else extra += jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles);
            // If we get here with a border-box (content + padding + border), we're seeking "content" or
            // "padding" or "margin"
            } else {
                // For "content", subtract padding
                if (box === "content") delta -= jQuery.css(elem, "padding" + cssExpand[i], true, styles);
                // For "content" or "padding", subtract border
                if (box !== "margin") delta -= jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles);
            }
        }
        // Account for positive content-box scroll gutter when requested by providing computedVal
        if (!isBorderBox && computedVal >= 0) // offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
        // Assuming integer scroll gutter, subtract the rest and round down
        delta += Math.max(0, Math.ceil(elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] - computedVal - delta - extra - 0.5)) || 0;
        return delta;
    }
    function getWidthOrHeight(elem, dimension, extra) {
        // Start with computed style
        var styles = getStyles(elem), // To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).
        // Fake content-box until we know it's needed to know the true value.
        boxSizingNeeded = !support.boxSizingReliable() || extra, isBorderBox = boxSizingNeeded && jQuery.css(elem, "boxSizing", false, styles) === "border-box", valueIsBorderBox = isBorderBox, val = curCSS(elem, dimension, styles), offsetProp = "offset" + dimension[0].toUpperCase() + dimension.slice(1);
        // Support: Firefox <=54
        // Return a confounding non-pixel value or feign ignorance, as appropriate.
        if (rnumnonpx.test(val)) {
            if (!extra) return val;
            val = "auto";
        }
        // Support: IE 9 - 11 only
        // Use offsetWidth/offsetHeight for when box sizing is unreliable.
        // In those cases, the computed value can be trusted to be border-box.
        if ((!support.boxSizingReliable() && isBorderBox || // Support: IE 10 - 11+, Edge 15 - 18+
        // IE/Edge misreport `getComputedStyle` of table rows with width/height
        // set in CSS while `offset*` properties report correct values.
        // Interestingly, in some cases IE 9 doesn't suffer from this issue.
        !support.reliableTrDimensions() && nodeName(elem, "tr") || // Fall back to offsetWidth/offsetHeight when value is "auto"
        // This happens for inline elements with no explicit setting (gh-3571)
        val === "auto" || // Support: Android <=4.1 - 4.3 only
        // Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
        !parseFloat(val) && jQuery.css(elem, "display", false, styles) === "inline") && // Make sure the element is visible & connected
        elem.getClientRects().length) {
            isBorderBox = jQuery.css(elem, "boxSizing", false, styles) === "border-box";
            // Where available, offsetWidth/offsetHeight approximate border box dimensions.
            // Where not available (e.g., SVG), assume unreliable box-sizing and interpret the
            // retrieved value as a content box dimension.
            valueIsBorderBox = offsetProp in elem;
            if (valueIsBorderBox) val = elem[offsetProp];
        }
        // Normalize "" and auto
        val = parseFloat(val) || 0;
        // Adjust for the element's box model
        return val + boxModelAdjustment(elem, dimension, extra || (isBorderBox ? "border" : "content"), valueIsBorderBox, styles, // Provide the current computed size to request scroll gutter calculation (gh-3589)
        val) + "px";
    }
    jQuery.extend({
        // Add in style property hooks for overriding the default
        // behavior of getting and setting a style property
        cssHooks: {
            opacity: {
                get: function(elem, computed) {
                    if (computed) {
                        // We should always get a number back from opacity
                        var ret = curCSS(elem, "opacity");
                        return ret === "" ? "1" : ret;
                    }
                }
            }
        },
        // Don't automatically add "px" to these possibly-unitless properties
        cssNumber: {
            "animationIterationCount": true,
            "columnCount": true,
            "fillOpacity": true,
            "flexGrow": true,
            "flexShrink": true,
            "fontWeight": true,
            "gridArea": true,
            "gridColumn": true,
            "gridColumnEnd": true,
            "gridColumnStart": true,
            "gridRow": true,
            "gridRowEnd": true,
            "gridRowStart": true,
            "lineHeight": true,
            "opacity": true,
            "order": true,
            "orphans": true,
            "widows": true,
            "zIndex": true,
            "zoom": true
        },
        // Add in properties whose names you wish to fix before
        // setting or getting the value
        cssProps: {},
        // Get and set the style property on a DOM Node
        style: function(elem, name, value, extra) {
            // Don't set styles on text and comment nodes
            if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) return;
            // Make sure that we're working with the right name
            var ret, type, hooks, origName = camelCase(name), isCustomProp = rcustomProp.test(name), style = elem.style;
            // Make sure that we're working with the right name. We don't
            // want to query the value if it is a CSS custom property
            // since they are user-defined.
            if (!isCustomProp) name = finalPropName(origName);
            // Gets hook for the prefixed version, then unprefixed version
            hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];
            // Check if we're setting a value
            if (value !== undefined) {
                type = typeof value;
                // Convert "+=" or "-=" to relative numbers (trac-7345)
                if (type === "string" && (ret = rcssNum.exec(value)) && ret[1]) {
                    value = adjustCSS(elem, name, ret);
                    // Fixes bug trac-9237
                    type = "number";
                }
                // Make sure that null and NaN values aren't set (trac-7116)
                if (value == null || value !== value) return;
                // If a number was passed in, add the unit (except for certain CSS properties)
                // The isCustomProp check can be removed in jQuery 4.0 when we only auto-append
                // "px" to a few hardcoded values.
                if (type === "number" && !isCustomProp) value += ret && ret[3] || (jQuery.cssNumber[origName] ? "" : "px");
                // background-* props affect original clone's values
                if (!support.clearCloneStyle && value === "" && name.indexOf("background") === 0) style[name] = "inherit";
                // If a hook was provided, use that value, otherwise just set the specified value
                if (!hooks || !("set" in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {
                    if (isCustomProp) style.setProperty(name, value);
                    else style[name] = value;
                }
            } else {
                // If a hook was provided get the non-computed value from there
                if (hooks && "get" in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) return ret;
                // Otherwise just get the value from the style object
                return style[name];
            }
        },
        css: function(elem, name, extra, styles) {
            var val, num, hooks, origName = camelCase(name), isCustomProp = rcustomProp.test(name);
            // Make sure that we're working with the right name. We don't
            // want to modify the value if it is a CSS custom property
            // since they are user-defined.
            if (!isCustomProp) name = finalPropName(origName);
            // Try prefixed name followed by the unprefixed name
            hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];
            // If a hook was provided get the computed value from there
            if (hooks && "get" in hooks) val = hooks.get(elem, true, extra);
            // Otherwise, if a way to get the computed value exists, use that
            if (val === undefined) val = curCSS(elem, name, styles);
            // Convert "normal" to computed value
            if (val === "normal" && name in cssNormalTransform) val = cssNormalTransform[name];
            // Make numeric if forced or a qualifier was provided and val looks numeric
            if (extra === "" || extra) {
                num = parseFloat(val);
                return extra === true || isFinite(num) ? num || 0 : val;
            }
            return val;
        }
    });
    jQuery.each([
        "height",
        "width"
    ], function(_i, dimension) {
        jQuery.cssHooks[dimension] = {
            get: function(elem, computed, extra) {
                if (computed) // Certain elements can have dimension info if we invisibly show them
                // but it must have a current display style that would benefit
                return rdisplayswap.test(jQuery.css(elem, "display")) && (!elem.getClientRects().length || !elem.getBoundingClientRect().width) ? swap(elem, cssShow, function() {
                    return getWidthOrHeight(elem, dimension, extra);
                }) : getWidthOrHeight(elem, dimension, extra);
            },
            set: function(elem, value, extra) {
                var matches, styles = getStyles(elem), // Only read styles.position if the test has a chance to fail
                // to avoid forcing a reflow.
                scrollboxSizeBuggy = !support.scrollboxSize() && styles.position === "absolute", // To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)
                boxSizingNeeded = scrollboxSizeBuggy || extra, isBorderBox = boxSizingNeeded && jQuery.css(elem, "boxSizing", false, styles) === "border-box", subtract = extra ? boxModelAdjustment(elem, dimension, extra, isBorderBox, styles) : 0;
                // Account for unreliable border-box dimensions by comparing offset* to computed and
                // faking a content-box to get border and padding (gh-3699)
                if (isBorderBox && scrollboxSizeBuggy) subtract -= Math.ceil(elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] - parseFloat(styles[dimension]) - boxModelAdjustment(elem, dimension, "border", false, styles) - 0.5);
                // Convert to pixels if value adjustment is needed
                if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || "px") !== "px") {
                    elem.style[dimension] = value;
                    value = jQuery.css(elem, dimension);
                }
                return setPositiveNumber(elem, value, subtract);
            }
        };
    });
    jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function(elem, computed) {
        if (computed) return (parseFloat(curCSS(elem, "marginLeft")) || elem.getBoundingClientRect().left - swap(elem, {
            marginLeft: 0
        }, function() {
            return elem.getBoundingClientRect().left;
        })) + "px";
    });
    // These hooks are used by animate to expand properties
    jQuery.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(prefix, suffix) {
        jQuery.cssHooks[prefix + suffix] = {
            expand: function(value) {
                var i = 0, expanded = {}, // Assumes a single number if not a string
                parts = typeof value === "string" ? value.split(" ") : [
                    value
                ];
                for(; i < 4; i++)expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];
                return expanded;
            }
        };
        if (prefix !== "margin") jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;
    });
    jQuery.fn.extend({
        css: function(name, value) {
            return access(this, function(elem, name, value) {
                var styles, len, map = {}, i = 0;
                if (Array.isArray(name)) {
                    styles = getStyles(elem);
                    len = name.length;
                    for(; i < len; i++)map[name[i]] = jQuery.css(elem, name[i], false, styles);
                    return map;
                }
                return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);
            }, name, value, arguments.length > 1);
        }
    });
    function Tween(elem, options, prop, end, easing) {
        return new Tween.prototype.init(elem, options, prop, end, easing);
    }
    jQuery.Tween = Tween;
    Tween.prototype = {
        constructor: Tween,
        init: function(elem, options, prop, end, easing, unit) {
            this.elem = elem;
            this.prop = prop;
            this.easing = easing || jQuery.easing._default;
            this.options = options;
            this.start = this.now = this.cur();
            this.end = end;
            this.unit = unit || (jQuery.cssNumber[prop] ? "" : "px");
        },
        cur: function() {
            var hooks = Tween.propHooks[this.prop];
            return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);
        },
        run: function(percent) {
            var eased, hooks = Tween.propHooks[this.prop];
            if (this.options.duration) this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);
            else this.pos = eased = percent;
            this.now = (this.end - this.start) * eased + this.start;
            if (this.options.step) this.options.step.call(this.elem, this.now, this);
            if (hooks && hooks.set) hooks.set(this);
            else Tween.propHooks._default.set(this);
            return this;
        }
    };
    Tween.prototype.init.prototype = Tween.prototype;
    Tween.propHooks = {
        _default: {
            get: function(tween) {
                var result;
                // Use a property on the element directly when it is not a DOM element,
                // or when there is no matching style property that exists.
                if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) return tween.elem[tween.prop];
                // Passing an empty string as a 3rd parameter to .css will automatically
                // attempt a parseFloat and fallback to a string if the parse fails.
                // Simple values such as "10px" are parsed to Float;
                // complex values such as "rotate(1rad)" are returned as-is.
                result = jQuery.css(tween.elem, tween.prop, "");
                // Empty strings, null, undefined and "auto" are converted to 0.
                return !result || result === "auto" ? 0 : result;
            },
            set: function(tween) {
                // Use step hook for back compat.
                // Use cssHook if its there.
                // Use .style if available and use plain properties where available.
                if (jQuery.fx.step[tween.prop]) jQuery.fx.step[tween.prop](tween);
                else if (tween.elem.nodeType === 1 && (jQuery.cssHooks[tween.prop] || tween.elem.style[finalPropName(tween.prop)] != null)) jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);
                else tween.elem[tween.prop] = tween.now;
            }
        }
    };
    // Support: IE <=9 only
    // Panic based approach to setting things on disconnected nodes
    Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
        set: function(tween) {
            if (tween.elem.nodeType && tween.elem.parentNode) tween.elem[tween.prop] = tween.now;
        }
    };
    jQuery.easing = {
        linear: function(p) {
            return p;
        },
        swing: function(p) {
            return 0.5 - Math.cos(p * Math.PI) / 2;
        },
        _default: "swing"
    };
    jQuery.fx = Tween.prototype.init;
    // Back compat <1.8 extension point
    jQuery.fx.step = {};
    var fxNow, inProgress, rfxtypes = /^(?:toggle|show|hide)$/, rrun = /queueHooks$/;
    function schedule() {
        if (inProgress) {
            if (document.hidden === false && window1.requestAnimationFrame) window1.requestAnimationFrame(schedule);
            else window1.setTimeout(schedule, jQuery.fx.interval);
            jQuery.fx.tick();
        }
    }
    // Animations created synchronously will run synchronously
    function createFxNow() {
        window1.setTimeout(function() {
            fxNow = undefined;
        });
        return fxNow = Date.now();
    }
    // Generate parameters to create a standard animation
    function genFx(type, includeWidth) {
        var which, i = 0, attrs = {
            height: type
        };
        // If we include width, step value is 1 to do all cssExpand values,
        // otherwise step value is 2 to skip over Left and Right
        includeWidth = includeWidth ? 1 : 0;
        for(; i < 4; i += 2 - includeWidth){
            which = cssExpand[i];
            attrs["margin" + which] = attrs["padding" + which] = type;
        }
        if (includeWidth) attrs.opacity = attrs.width = type;
        return attrs;
    }
    function createTween(value, prop, animation) {
        var tween, collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners["*"]), index = 0, length = collection.length;
        for(; index < length; index++){
            if (tween = collection[index].call(animation, prop, value)) // We're done with this property
            return tween;
        }
    }
    function defaultPrefilter(elem, props, opts) {
        var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display, isBox = "width" in props || "height" in props, anim = this, orig = {}, style = elem.style, hidden = elem.nodeType && isHiddenWithinTree(elem), dataShow = dataPriv.get(elem, "fxshow");
        // Queue-skipping animations hijack the fx hooks
        if (!opts.queue) {
            hooks = jQuery._queueHooks(elem, "fx");
            if (hooks.unqueued == null) {
                hooks.unqueued = 0;
                oldfire = hooks.empty.fire;
                hooks.empty.fire = function() {
                    if (!hooks.unqueued) oldfire();
                };
            }
            hooks.unqueued++;
            anim.always(function() {
                // Ensure the complete handler is called before this completes
                anim.always(function() {
                    hooks.unqueued--;
                    if (!jQuery.queue(elem, "fx").length) hooks.empty.fire();
                });
            });
        }
        // Detect show/hide animations
        for(prop in props){
            value = props[prop];
            if (rfxtypes.test(value)) {
                delete props[prop];
                toggle = toggle || value === "toggle";
                if (value === (hidden ? "hide" : "show")) {
                    // Pretend to be hidden if this is a "show" and
                    // there is still data from a stopped show/hide
                    if (value === "show" && dataShow && dataShow[prop] !== undefined) hidden = true;
                    else continue;
                }
                orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);
            }
        }
        // Bail out if this is a no-op like .hide().hide()
        propTween = !jQuery.isEmptyObject(props);
        if (!propTween && jQuery.isEmptyObject(orig)) return;
        // Restrict "overflow" and "display" styles during box animations
        if (isBox && elem.nodeType === 1) {
            // Support: IE <=9 - 11, Edge 12 - 15
            // Record all 3 overflow attributes because IE does not infer the shorthand
            // from identically-valued overflowX and overflowY and Edge just mirrors
            // the overflowX value there.
            opts.overflow = [
                style.overflow,
                style.overflowX,
                style.overflowY
            ];
            // Identify a display type, preferring old show/hide data over the CSS cascade
            restoreDisplay = dataShow && dataShow.display;
            if (restoreDisplay == null) restoreDisplay = dataPriv.get(elem, "display");
            display = jQuery.css(elem, "display");
            if (display === "none") {
                if (restoreDisplay) display = restoreDisplay;
                else {
                    // Get nonempty value(s) by temporarily forcing visibility
                    showHide([
                        elem
                    ], true);
                    restoreDisplay = elem.style.display || restoreDisplay;
                    display = jQuery.css(elem, "display");
                    showHide([
                        elem
                    ]);
                }
            }
            // Animate inline elements as inline-block
            if (display === "inline" || display === "inline-block" && restoreDisplay != null) {
                if (jQuery.css(elem, "float") === "none") {
                    // Restore the original display value at the end of pure show/hide animations
                    if (!propTween) {
                        anim.done(function() {
                            style.display = restoreDisplay;
                        });
                        if (restoreDisplay == null) {
                            display = style.display;
                            restoreDisplay = display === "none" ? "" : display;
                        }
                    }
                    style.display = "inline-block";
                }
            }
        }
        if (opts.overflow) {
            style.overflow = "hidden";
            anim.always(function() {
                style.overflow = opts.overflow[0];
                style.overflowX = opts.overflow[1];
                style.overflowY = opts.overflow[2];
            });
        }
        // Implement show/hide animations
        propTween = false;
        for(prop in orig){
            // General show/hide setup for this element animation
            if (!propTween) {
                if (dataShow) {
                    if ("hidden" in dataShow) hidden = dataShow.hidden;
                } else dataShow = dataPriv.access(elem, "fxshow", {
                    display: restoreDisplay
                });
                // Store hidden/visible for toggle so `.stop().toggle()` "reverses"
                if (toggle) dataShow.hidden = !hidden;
                // Show elements before animating them
                if (hidden) showHide([
                    elem
                ], true);
                /* eslint-disable no-loop-func */ anim.done(function() {
                    /* eslint-enable no-loop-func */ // The final step of a "hide" animation is actually hiding the element
                    if (!hidden) showHide([
                        elem
                    ]);
                    dataPriv.remove(elem, "fxshow");
                    for(prop in orig)jQuery.style(elem, prop, orig[prop]);
                });
            }
            // Per-property setup
            propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim);
            if (!(prop in dataShow)) {
                dataShow[prop] = propTween.start;
                if (hidden) {
                    propTween.end = propTween.start;
                    propTween.start = 0;
                }
            }
        }
    }
    function propFilter(props, specialEasing) {
        var index, name, easing, value, hooks;
        // camelCase, specialEasing and expand cssHook pass
        for(index in props){
            name = camelCase(index);
            easing = specialEasing[name];
            value = props[index];
            if (Array.isArray(value)) {
                easing = value[1];
                value = props[index] = value[0];
            }
            if (index !== name) {
                props[name] = value;
                delete props[index];
            }
            hooks = jQuery.cssHooks[name];
            if (hooks && "expand" in hooks) {
                value = hooks.expand(value);
                delete props[name];
                // Not quite $.extend, this won't overwrite existing keys.
                // Reusing 'index' because we have the correct "name"
                for(index in value)if (!(index in props)) {
                    props[index] = value[index];
                    specialEasing[index] = easing;
                }
            } else specialEasing[name] = easing;
        }
    }
    function Animation(elem, properties, options) {
        var result, stopped, index = 0, length = Animation.prefilters.length, deferred = jQuery.Deferred().always(function() {
            // Don't match elem in the :animated selector
            delete tick.elem;
        }), tick = function() {
            if (stopped) return false;
            var currentTime = fxNow || createFxNow(), remaining = Math.max(0, animation.startTime + animation.duration - currentTime), // Support: Android 2.3 only
            // Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (trac-12497)
            temp = remaining / animation.duration || 0, percent = 1 - temp, index = 0, length = animation.tweens.length;
            for(; index < length; index++)animation.tweens[index].run(percent);
            deferred.notifyWith(elem, [
                animation,
                percent,
                remaining
            ]);
            // If there's more to do, yield
            if (percent < 1 && length) return remaining;
            // If this was an empty animation, synthesize a final progress notification
            if (!length) deferred.notifyWith(elem, [
                animation,
                1,
                0
            ]);
            // Resolve the animation and report its conclusion
            deferred.resolveWith(elem, [
                animation
            ]);
            return false;
        }, animation = deferred.promise({
            elem: elem,
            props: jQuery.extend({}, properties),
            opts: jQuery.extend(true, {
                specialEasing: {},
                easing: jQuery.easing._default
            }, options),
            originalProperties: properties,
            originalOptions: options,
            startTime: fxNow || createFxNow(),
            duration: options.duration,
            tweens: [],
            createTween: function(prop, end) {
                var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);
                animation.tweens.push(tween);
                return tween;
            },
            stop: function(gotoEnd) {
                var index = 0, // If we are going to the end, we want to run all the tweens
                // otherwise we skip this part
                length = gotoEnd ? animation.tweens.length : 0;
                if (stopped) return this;
                stopped = true;
                for(; index < length; index++)animation.tweens[index].run(1);
                // Resolve when we played the last frame; otherwise, reject
                if (gotoEnd) {
                    deferred.notifyWith(elem, [
                        animation,
                        1,
                        0
                    ]);
                    deferred.resolveWith(elem, [
                        animation,
                        gotoEnd
                    ]);
                } else deferred.rejectWith(elem, [
                    animation,
                    gotoEnd
                ]);
                return this;
            }
        }), props = animation.props;
        propFilter(props, animation.opts.specialEasing);
        for(; index < length; index++){
            result = Animation.prefilters[index].call(animation, elem, props, animation.opts);
            if (result) {
                if (isFunction(result.stop)) jQuery._queueHooks(animation.elem, animation.opts.queue).stop = result.stop.bind(result);
                return result;
            }
        }
        jQuery.map(props, createTween, animation);
        if (isFunction(animation.opts.start)) animation.opts.start.call(elem, animation);
        // Attach callbacks from options
        animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);
        jQuery.fx.timer(jQuery.extend(tick, {
            elem: elem,
            anim: animation,
            queue: animation.opts.queue
        }));
        return animation;
    }
    jQuery.Animation = jQuery.extend(Animation, {
        tweeners: {
            "*": [
                function(prop, value) {
                    var tween = this.createTween(prop, value);
                    adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);
                    return tween;
                }
            ]
        },
        tweener: function(props, callback) {
            if (isFunction(props)) {
                callback = props;
                props = [
                    "*"
                ];
            } else props = props.match(rnothtmlwhite);
            var prop, index = 0, length = props.length;
            for(; index < length; index++){
                prop = props[index];
                Animation.tweeners[prop] = Animation.tweeners[prop] || [];
                Animation.tweeners[prop].unshift(callback);
            }
        },
        prefilters: [
            defaultPrefilter
        ],
        prefilter: function(callback, prepend) {
            if (prepend) Animation.prefilters.unshift(callback);
            else Animation.prefilters.push(callback);
        }
    });
    jQuery.speed = function(speed, easing, fn) {
        var opt = speed && typeof speed === "object" ? jQuery.extend({}, speed) : {
            complete: fn || !fn && easing || isFunction(speed) && speed,
            duration: speed,
            easing: fn && easing || easing && !isFunction(easing) && easing
        };
        // Go to the end state if fx are off
        if (jQuery.fx.off) opt.duration = 0;
        else if (typeof opt.duration !== "number") {
            if (opt.duration in jQuery.fx.speeds) opt.duration = jQuery.fx.speeds[opt.duration];
            else opt.duration = jQuery.fx.speeds._default;
        }
        // Normalize opt.queue - true/undefined/null -> "fx"
        if (opt.queue == null || opt.queue === true) opt.queue = "fx";
        // Queueing
        opt.old = opt.complete;
        opt.complete = function() {
            if (isFunction(opt.old)) opt.old.call(this);
            if (opt.queue) jQuery.dequeue(this, opt.queue);
        };
        return opt;
    };
    jQuery.fn.extend({
        fadeTo: function(speed, to, easing, callback) {
            // Show any hidden elements after setting opacity to 0
            return this.filter(isHiddenWithinTree).css("opacity", 0).show()// Animate to the value specified
            .end().animate({
                opacity: to
            }, speed, easing, callback);
        },
        animate: function(prop, speed, easing, callback) {
            var empty = jQuery.isEmptyObject(prop), optall = jQuery.speed(speed, easing, callback), doAnimation = function() {
                // Operate on a copy of prop so per-property easing won't be lost
                var anim = Animation(this, jQuery.extend({}, prop), optall);
                // Empty animations, or finishing resolves immediately
                if (empty || dataPriv.get(this, "finish")) anim.stop(true);
            };
            doAnimation.finish = doAnimation;
            return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);
        },
        stop: function(type, clearQueue, gotoEnd) {
            var stopQueue = function(hooks) {
                var stop = hooks.stop;
                delete hooks.stop;
                stop(gotoEnd);
            };
            if (typeof type !== "string") {
                gotoEnd = clearQueue;
                clearQueue = type;
                type = undefined;
            }
            if (clearQueue) this.queue(type || "fx", []);
            return this.each(function() {
                var dequeue = true, index = type != null && type + "queueHooks", timers = jQuery.timers, data = dataPriv.get(this);
                if (index) {
                    if (data[index] && data[index].stop) stopQueue(data[index]);
                } else {
                    for(index in data)if (data[index] && data[index].stop && rrun.test(index)) stopQueue(data[index]);
                }
                for(index = timers.length; index--;)if (timers[index].elem === this && (type == null || timers[index].queue === type)) {
                    timers[index].anim.stop(gotoEnd);
                    dequeue = false;
                    timers.splice(index, 1);
                }
                // Start the next in the queue if the last step wasn't forced.
                // Timers currently will call their complete callbacks, which
                // will dequeue but only if they were gotoEnd.
                if (dequeue || !gotoEnd) jQuery.dequeue(this, type);
            });
        },
        finish: function(type) {
            if (type !== false) type = type || "fx";
            return this.each(function() {
                var index, data = dataPriv.get(this), queue = data[type + "queue"], hooks = data[type + "queueHooks"], timers = jQuery.timers, length = queue ? queue.length : 0;
                // Enable finishing flag on private data
                data.finish = true;
                // Empty the queue first
                jQuery.queue(this, type, []);
                if (hooks && hooks.stop) hooks.stop.call(this, true);
                // Look for any active animations, and finish them
                for(index = timers.length; index--;)if (timers[index].elem === this && timers[index].queue === type) {
                    timers[index].anim.stop(true);
                    timers.splice(index, 1);
                }
                // Look for any animations in the old queue and finish them
                for(index = 0; index < length; index++)if (queue[index] && queue[index].finish) queue[index].finish.call(this);
                // Turn off finishing flag
                delete data.finish;
            });
        }
    });
    jQuery.each([
        "toggle",
        "show",
        "hide"
    ], function(_i, name) {
        var cssFn = jQuery.fn[name];
        jQuery.fn[name] = function(speed, easing, callback) {
            return speed == null || typeof speed === "boolean" ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);
        };
    });
    // Generate shortcuts for custom animations
    jQuery.each({
        slideDown: genFx("show"),
        slideUp: genFx("hide"),
        slideToggle: genFx("toggle"),
        fadeIn: {
            opacity: "show"
        },
        fadeOut: {
            opacity: "hide"
        },
        fadeToggle: {
            opacity: "toggle"
        }
    }, function(name, props) {
        jQuery.fn[name] = function(speed, easing, callback) {
            return this.animate(props, speed, easing, callback);
        };
    });
    jQuery.timers = [];
    jQuery.fx.tick = function() {
        var timer, i = 0, timers = jQuery.timers;
        fxNow = Date.now();
        for(; i < timers.length; i++){
            timer = timers[i];
            // Run the timer and safely remove it when done (allowing for external removal)
            if (!timer() && timers[i] === timer) timers.splice(i--, 1);
        }
        if (!timers.length) jQuery.fx.stop();
        fxNow = undefined;
    };
    jQuery.fx.timer = function(timer) {
        jQuery.timers.push(timer);
        jQuery.fx.start();
    };
    jQuery.fx.interval = 13;
    jQuery.fx.start = function() {
        if (inProgress) return;
        inProgress = true;
        schedule();
    };
    jQuery.fx.stop = function() {
        inProgress = null;
    };
    jQuery.fx.speeds = {
        slow: 600,
        fast: 200,
        // Default speed
        _default: 400
    };
    // Based off of the plugin by Clint Helfers, with permission.
    jQuery.fn.delay = function(time, type) {
        time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;
        type = type || "fx";
        return this.queue(type, function(next, hooks) {
            var timeout = window1.setTimeout(next, time);
            hooks.stop = function() {
                window1.clearTimeout(timeout);
            };
        });
    };
    (function() {
        var input = document.createElement("input"), select = document.createElement("select"), opt = select.appendChild(document.createElement("option"));
        input.type = "checkbox";
        // Support: Android <=4.3 only
        // Default value for a checkbox should be "on"
        support.checkOn = input.value !== "";
        // Support: IE <=11 only
        // Must access selectedIndex to make default options select
        support.optSelected = opt.selected;
        // Support: IE <=11 only
        // An input loses its value after becoming a radio
        input = document.createElement("input");
        input.value = "t";
        input.type = "radio";
        support.radioValue = input.value === "t";
    })();
    var boolHook, attrHandle = jQuery.expr.attrHandle;
    jQuery.fn.extend({
        attr: function(name, value) {
            return access(this, jQuery.attr, name, value, arguments.length > 1);
        },
        removeAttr: function(name) {
            return this.each(function() {
                jQuery.removeAttr(this, name);
            });
        }
    });
    jQuery.extend({
        attr: function(elem, name, value) {
            var ret, hooks, nType = elem.nodeType;
            // Don't get/set attributes on text, comment and attribute nodes
            if (nType === 3 || nType === 8 || nType === 2) return;
            // Fallback to prop when attributes are not supported
            if (typeof elem.getAttribute === "undefined") return jQuery.prop(elem, name, value);
            // Attribute hooks are determined by the lowercase version
            // Grab necessary hook if one is defined
            if (nType !== 1 || !jQuery.isXMLDoc(elem)) hooks = jQuery.attrHooks[name.toLowerCase()] || (jQuery.expr.match.bool.test(name) ? boolHook : undefined);
            if (value !== undefined) {
                if (value === null) {
                    jQuery.removeAttr(elem, name);
                    return;
                }
                if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) return ret;
                elem.setAttribute(name, value + "");
                return value;
            }
            if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) return ret;
            ret = jQuery.find.attr(elem, name);
            // Non-existent attributes return null, we normalize to undefined
            return ret == null ? undefined : ret;
        },
        attrHooks: {
            type: {
                set: function(elem, value) {
                    if (!support.radioValue && value === "radio" && nodeName(elem, "input")) {
                        var val = elem.value;
                        elem.setAttribute("type", value);
                        if (val) elem.value = val;
                        return value;
                    }
                }
            }
        },
        removeAttr: function(elem, value) {
            var name, i = 0, // Attribute names can contain non-HTML whitespace characters
            // https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
            attrNames = value && value.match(rnothtmlwhite);
            if (attrNames && elem.nodeType === 1) while(name = attrNames[i++])elem.removeAttribute(name);
        }
    });
    // Hooks for boolean attributes
    boolHook = {
        set: function(elem, value, name) {
            if (value === false) // Remove boolean attributes when set to false
            jQuery.removeAttr(elem, name);
            else elem.setAttribute(name, name);
            return name;
        }
    };
    jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g), function(_i, name) {
        var getter = attrHandle[name] || jQuery.find.attr;
        attrHandle[name] = function(elem, name, isXML) {
            var ret, handle, lowercaseName = name.toLowerCase();
            if (!isXML) {
                // Avoid an infinite loop by temporarily removing this function from the getter
                handle = attrHandle[lowercaseName];
                attrHandle[lowercaseName] = ret;
                ret = getter(elem, name, isXML) != null ? lowercaseName : null;
                attrHandle[lowercaseName] = handle;
            }
            return ret;
        };
    });
    var rfocusable = /^(?:input|select|textarea|button)$/i, rclickable = /^(?:a|area)$/i;
    jQuery.fn.extend({
        prop: function(name, value) {
            return access(this, jQuery.prop, name, value, arguments.length > 1);
        },
        removeProp: function(name) {
            return this.each(function() {
                delete this[jQuery.propFix[name] || name];
            });
        }
    });
    jQuery.extend({
        prop: function(elem, name, value) {
            var ret, hooks, nType = elem.nodeType;
            // Don't get/set properties on text, comment and attribute nodes
            if (nType === 3 || nType === 8 || nType === 2) return;
            if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
                // Fix name and attach hooks
                name = jQuery.propFix[name] || name;
                hooks = jQuery.propHooks[name];
            }
            if (value !== undefined) {
                if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) return ret;
                return elem[name] = value;
            }
            if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) return ret;
            return elem[name];
        },
        propHooks: {
            tabIndex: {
                get: function(elem) {
                    // Support: IE <=9 - 11 only
                    // elem.tabIndex doesn't always return the
                    // correct value when it hasn't been explicitly set
                    // Use proper attribute retrieval (trac-12072)
                    var tabindex = jQuery.find.attr(elem, "tabindex");
                    if (tabindex) return parseInt(tabindex, 10);
                    if (rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href) return 0;
                    return -1;
                }
            }
        },
        propFix: {
            "for": "htmlFor",
            "class": "className"
        }
    });
    // Support: IE <=11 only
    // Accessing the selectedIndex property
    // forces the browser to respect setting selected
    // on the option
    // The getter ensures a default option is selected
    // when in an optgroup
    // eslint rule "no-unused-expressions" is disabled for this code
    // since it considers such accessions noop
    if (!support.optSelected) jQuery.propHooks.selected = {
        get: function(elem) {
            /* eslint no-unused-expressions: "off" */ var parent = elem.parentNode;
            if (parent && parent.parentNode) parent.parentNode.selectedIndex;
            return null;
        },
        set: function(elem) {
            /* eslint no-unused-expressions: "off" */ var parent = elem.parentNode;
            if (parent) {
                parent.selectedIndex;
                if (parent.parentNode) parent.parentNode.selectedIndex;
            }
        }
    };
    jQuery.each([
        "tabIndex",
        "readOnly",
        "maxLength",
        "cellSpacing",
        "cellPadding",
        "rowSpan",
        "colSpan",
        "useMap",
        "frameBorder",
        "contentEditable"
    ], function() {
        jQuery.propFix[this.toLowerCase()] = this;
    });
    // Strip and collapse whitespace according to HTML spec
    // https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
    function stripAndCollapse(value) {
        var tokens = value.match(rnothtmlwhite) || [];
        return tokens.join(" ");
    }
    function getClass(elem) {
        return elem.getAttribute && elem.getAttribute("class") || "";
    }
    function classesToArray(value) {
        if (Array.isArray(value)) return value;
        if (typeof value === "string") return value.match(rnothtmlwhite) || [];
        return [];
    }
    jQuery.fn.extend({
        addClass: function(value) {
            var classNames, cur, curValue, className, i, finalValue;
            if (isFunction(value)) return this.each(function(j) {
                jQuery(this).addClass(value.call(this, j, getClass(this)));
            });
            classNames = classesToArray(value);
            if (classNames.length) return this.each(function() {
                curValue = getClass(this);
                cur = this.nodeType === 1 && " " + stripAndCollapse(curValue) + " ";
                if (cur) {
                    for(i = 0; i < classNames.length; i++){
                        className = classNames[i];
                        if (cur.indexOf(" " + className + " ") < 0) cur += className + " ";
                    }
                    // Only assign if different to avoid unneeded rendering.
                    finalValue = stripAndCollapse(cur);
                    if (curValue !== finalValue) this.setAttribute("class", finalValue);
                }
            });
            return this;
        },
        removeClass: function(value) {
            var classNames, cur, curValue, className, i, finalValue;
            if (isFunction(value)) return this.each(function(j) {
                jQuery(this).removeClass(value.call(this, j, getClass(this)));
            });
            if (!arguments.length) return this.attr("class", "");
            classNames = classesToArray(value);
            if (classNames.length) return this.each(function() {
                curValue = getClass(this);
                // This expression is here for better compressibility (see addClass)
                cur = this.nodeType === 1 && " " + stripAndCollapse(curValue) + " ";
                if (cur) {
                    for(i = 0; i < classNames.length; i++){
                        className = classNames[i];
                        // Remove *all* instances
                        while(cur.indexOf(" " + className + " ") > -1)cur = cur.replace(" " + className + " ", " ");
                    }
                    // Only assign if different to avoid unneeded rendering.
                    finalValue = stripAndCollapse(cur);
                    if (curValue !== finalValue) this.setAttribute("class", finalValue);
                }
            });
            return this;
        },
        toggleClass: function(value, stateVal) {
            var classNames, className, i, self, type = typeof value, isValidValue = type === "string" || Array.isArray(value);
            if (isFunction(value)) return this.each(function(i) {
                jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal);
            });
            if (typeof stateVal === "boolean" && isValidValue) return stateVal ? this.addClass(value) : this.removeClass(value);
            classNames = classesToArray(value);
            return this.each(function() {
                if (isValidValue) {
                    // Toggle individual class names
                    self = jQuery(this);
                    for(i = 0; i < classNames.length; i++){
                        className = classNames[i];
                        // Check each className given, space separated list
                        if (self.hasClass(className)) self.removeClass(className);
                        else self.addClass(className);
                    }
                // Toggle whole class name
                } else if (value === undefined || type === "boolean") {
                    className = getClass(this);
                    if (className) // Store className if set
                    dataPriv.set(this, "__className__", className);
                    // If the element has a class name or if we're passed `false`,
                    // then remove the whole classname (if there was one, the above saved it).
                    // Otherwise bring back whatever was previously saved (if anything),
                    // falling back to the empty string if nothing was stored.
                    if (this.setAttribute) this.setAttribute("class", className || value === false ? "" : dataPriv.get(this, "__className__") || "");
                }
            });
        },
        hasClass: function(selector) {
            var className, elem, i = 0;
            className = " " + selector + " ";
            while(elem = this[i++]){
                if (elem.nodeType === 1 && (" " + stripAndCollapse(getClass(elem)) + " ").indexOf(className) > -1) return true;
            }
            return false;
        }
    });
    var rreturn = /\r/g;
    jQuery.fn.extend({
        val: function(value) {
            var hooks, ret, valueIsFunction, elem = this[0];
            if (!arguments.length) {
                if (elem) {
                    hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];
                    if (hooks && "get" in hooks && (ret = hooks.get(elem, "value")) !== undefined) return ret;
                    ret = elem.value;
                    // Handle most common string cases
                    if (typeof ret === "string") return ret.replace(rreturn, "");
                    // Handle cases where value is null/undef or number
                    return ret == null ? "" : ret;
                }
                return;
            }
            valueIsFunction = isFunction(value);
            return this.each(function(i) {
                var val;
                if (this.nodeType !== 1) return;
                if (valueIsFunction) val = value.call(this, i, jQuery(this).val());
                else val = value;
                // Treat null/undefined as ""; convert numbers to string
                if (val == null) val = "";
                else if (typeof val === "number") val += "";
                else if (Array.isArray(val)) val = jQuery.map(val, function(value) {
                    return value == null ? "" : value + "";
                });
                hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()];
                // If set returns undefined, fall back to normal setting
                if (!hooks || !("set" in hooks) || hooks.set(this, val, "value") === undefined) this.value = val;
            });
        }
    });
    jQuery.extend({
        valHooks: {
            option: {
                get: function(elem) {
                    var val = jQuery.find.attr(elem, "value");
                    return val != null ? val : // Support: IE <=10 - 11 only
                    // option.text throws exceptions (trac-14686, trac-14858)
                    // Strip and collapse whitespace
                    // https://html.spec.whatwg.org/#strip-and-collapse-whitespace
                    stripAndCollapse(jQuery.text(elem));
                }
            },
            select: {
                get: function(elem) {
                    var value, option, i, options = elem.options, index = elem.selectedIndex, one = elem.type === "select-one", values = one ? null : [], max = one ? index + 1 : options.length;
                    if (index < 0) i = max;
                    else i = one ? index : 0;
                    // Loop through all the selected options
                    for(; i < max; i++){
                        option = options[i];
                        // Support: IE <=9 only
                        // IE8-9 doesn't update selected after form reset (trac-2551)
                        if ((option.selected || i === index) && // Don't return options that are disabled or in a disabled optgroup
                        !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, "optgroup"))) {
                            // Get the specific value for the option
                            value = jQuery(option).val();
                            // We don't need an array for one selects
                            if (one) return value;
                            // Multi-Selects return an array
                            values.push(value);
                        }
                    }
                    return values;
                },
                set: function(elem, value) {
                    var optionSet, option, options = elem.options, values = jQuery.makeArray(value), i = options.length;
                    while(i--){
                        option = options[i];
                        /* eslint-disable no-cond-assign */ if (option.selected = jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1) optionSet = true;
                    /* eslint-enable no-cond-assign */ }
                    // Force browsers to behave consistently when non-matching value is set
                    if (!optionSet) elem.selectedIndex = -1;
                    return values;
                }
            }
        }
    });
    // Radios and checkboxes getter/setter
    jQuery.each([
        "radio",
        "checkbox"
    ], function() {
        jQuery.valHooks[this] = {
            set: function(elem, value) {
                if (Array.isArray(value)) return elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1;
            }
        };
        if (!support.checkOn) jQuery.valHooks[this].get = function(elem) {
            return elem.getAttribute("value") === null ? "on" : elem.value;
        };
    });
    // Return jQuery for attributes-only inclusion
    support.focusin = "onfocusin" in window1;
    var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/, stopPropagationCallback = function(e) {
        e.stopPropagation();
    };
    jQuery.extend(jQuery.event, {
        trigger: function(event, data, elem, onlyHandlers) {
            var i, cur, tmp, bubbleType, ontype, handle, special, lastElement, eventPath = [
                elem || document
            ], type = hasOwn.call(event, "type") ? event.type : event, namespaces = hasOwn.call(event, "namespace") ? event.namespace.split(".") : [];
            cur = lastElement = tmp = elem = elem || document;
            // Don't do events on text and comment nodes
            if (elem.nodeType === 3 || elem.nodeType === 8) return;
            // focus/blur morphs to focusin/out; ensure we're not firing them right now
            if (rfocusMorph.test(type + jQuery.event.triggered)) return;
            if (type.indexOf(".") > -1) {
                // Namespaced trigger; create a regexp to match event type in handle()
                namespaces = type.split(".");
                type = namespaces.shift();
                namespaces.sort();
            }
            ontype = type.indexOf(":") < 0 && "on" + type;
            // Caller can pass in a jQuery.Event object, Object, or just an event type string
            event = event[jQuery.expando] ? event : new jQuery.Event(type, typeof event === "object" && event);
            // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
            event.isTrigger = onlyHandlers ? 2 : 3;
            event.namespace = namespaces.join(".");
            event.rnamespace = event.namespace ? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)") : null;
            // Clean up the event in case it is being reused
            event.result = undefined;
            if (!event.target) event.target = elem;
            // Clone any incoming data and prepend the event, creating the handler arg list
            data = data == null ? [
                event
            ] : jQuery.makeArray(data, [
                event
            ]);
            // Allow special events to draw outside the lines
            special = jQuery.event.special[type] || {};
            if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) return;
            // Determine event propagation path in advance, per W3C events spec (trac-9951)
            // Bubble up to document, then to window; watch for a global ownerDocument var (trac-9724)
            if (!onlyHandlers && !special.noBubble && !isWindow(elem)) {
                bubbleType = special.delegateType || type;
                if (!rfocusMorph.test(bubbleType + type)) cur = cur.parentNode;
                for(; cur; cur = cur.parentNode){
                    eventPath.push(cur);
                    tmp = cur;
                }
                // Only add window if we got to document (e.g., not plain obj or detached DOM)
                if (tmp === (elem.ownerDocument || document)) eventPath.push(tmp.defaultView || tmp.parentWindow || window1);
            }
            // Fire handlers on the event path
            i = 0;
            while((cur = eventPath[i++]) && !event.isPropagationStopped()){
                lastElement = cur;
                event.type = i > 1 ? bubbleType : special.bindType || type;
                // jQuery handler
                handle = (dataPriv.get(cur, "events") || Object.create(null))[event.type] && dataPriv.get(cur, "handle");
                if (handle) handle.apply(cur, data);
                // Native handler
                handle = ontype && cur[ontype];
                if (handle && handle.apply && acceptData(cur)) {
                    event.result = handle.apply(cur, data);
                    if (event.result === false) event.preventDefault();
                }
            }
            event.type = type;
            // If nobody prevented the default action, do it now
            if (!onlyHandlers && !event.isDefaultPrevented()) {
                if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) // Call a native DOM method on the target with the same name as the event.
                // Don't do default actions on window, that's where global variables be (trac-6170)
                {
                    if (ontype && isFunction(elem[type]) && !isWindow(elem)) {
                        // Don't re-trigger an onFOO event when we call its FOO() method
                        tmp = elem[ontype];
                        if (tmp) elem[ontype] = null;
                        // Prevent re-triggering of the same event, since we already bubbled it above
                        jQuery.event.triggered = type;
                        if (event.isPropagationStopped()) lastElement.addEventListener(type, stopPropagationCallback);
                        elem[type]();
                        if (event.isPropagationStopped()) lastElement.removeEventListener(type, stopPropagationCallback);
                        jQuery.event.triggered = undefined;
                        if (tmp) elem[ontype] = tmp;
                    }
                }
            }
            return event.result;
        },
        // Piggyback on a donor event to simulate a different one
        // Used only for `focus(in | out)` events
        simulate: function(type, elem, event) {
            var e = jQuery.extend(new jQuery.Event(), event, {
                type: type,
                isSimulated: true
            });
            jQuery.event.trigger(e, null, elem);
        }
    });
    jQuery.fn.extend({
        trigger: function(type, data) {
            return this.each(function() {
                jQuery.event.trigger(type, data, this);
            });
        },
        triggerHandler: function(type, data) {
            var elem = this[0];
            if (elem) return jQuery.event.trigger(type, data, elem, true);
        }
    });
    // Support: Firefox <=44
    // Firefox doesn't have focus(in | out) events
    // Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
    //
    // Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
    // focus(in | out) events fire after focus & blur events,
    // which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
    // Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
    if (!support.focusin) jQuery.each({
        focus: "focusin",
        blur: "focusout"
    }, function(orig, fix) {
        // Attach a single capturing handler on the document while someone wants focusin/focusout
        var handler = function(event) {
            jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));
        };
        jQuery.event.special[fix] = {
            setup: function() {
                // Handle: regular nodes (via `this.ownerDocument`), window
                // (via `this.document`) & document (via `this`).
                var doc = this.ownerDocument || this.document || this, attaches = dataPriv.access(doc, fix);
                if (!attaches) doc.addEventListener(orig, handler, true);
                dataPriv.access(doc, fix, (attaches || 0) + 1);
            },
            teardown: function() {
                var doc = this.ownerDocument || this.document || this, attaches = dataPriv.access(doc, fix) - 1;
                if (!attaches) {
                    doc.removeEventListener(orig, handler, true);
                    dataPriv.remove(doc, fix);
                } else dataPriv.access(doc, fix, attaches);
            }
        };
    });
    var location = window1.location;
    var nonce = {
        guid: Date.now()
    };
    var rquery = /\?/;
    // Cross-browser xml parsing
    jQuery.parseXML = function(data) {
        var xml, parserErrorElem;
        if (!data || typeof data !== "string") return null;
        // Support: IE 9 - 11 only
        // IE throws on parseFromString with invalid input.
        try {
            xml = new window1.DOMParser().parseFromString(data, "text/xml");
        } catch (e) {}
        parserErrorElem = xml && xml.getElementsByTagName("parsererror")[0];
        if (!xml || parserErrorElem) jQuery.error("Invalid XML: " + (parserErrorElem ? jQuery.map(parserErrorElem.childNodes, function(el) {
            return el.textContent;
        }).join("\n") : data));
        return xml;
    };
    var rbracket = /\[\]$/, rCRLF = /\r?\n/g, rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i, rsubmittable = /^(?:input|select|textarea|keygen)/i;
    function buildParams(prefix, obj, traditional, add) {
        var name;
        if (Array.isArray(obj)) // Serialize array item.
        jQuery.each(obj, function(i, v) {
            if (traditional || rbracket.test(prefix)) // Treat each array item as a scalar.
            add(prefix, v);
            else // Item is non-scalar (array or object), encode its numeric index.
            buildParams(prefix + "[" + (typeof v === "object" && v != null ? i : "") + "]", v, traditional, add);
        });
        else if (!traditional && toType(obj) === "object") // Serialize object item.
        for(name in obj)buildParams(prefix + "[" + name + "]", obj[name], traditional, add);
        else // Serialize scalar item.
        add(prefix, obj);
    }
    // Serialize an array of form elements or a set of
    // key/values into a query string
    jQuery.param = function(a, traditional) {
        var prefix, s = [], add = function(key, valueOrFunction) {
            // If value is a function, invoke it and use its return value
            var value = isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;
            s[s.length] = encodeURIComponent(key) + "=" + encodeURIComponent(value == null ? "" : value);
        };
        if (a == null) return "";
        // If an array was passed in, assume that it is an array of form elements.
        if (Array.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) // Serialize the form elements
        jQuery.each(a, function() {
            add(this.name, this.value);
        });
        else // If traditional, encode the "old" way (the way 1.3.2 or older
        // did it), otherwise encode params recursively.
        for(prefix in a)buildParams(prefix, a[prefix], traditional, add);
        // Return the resulting serialization
        return s.join("&");
    };
    jQuery.fn.extend({
        serialize: function() {
            return jQuery.param(this.serializeArray());
        },
        serializeArray: function() {
            return this.map(function() {
                // Can add propHook for "elements" to filter or add form elements
                var elements = jQuery.prop(this, "elements");
                return elements ? jQuery.makeArray(elements) : this;
            }).filter(function() {
                var type = this.type;
                // Use .is( ":disabled" ) so that fieldset[disabled] works
                return this.name && !jQuery(this).is(":disabled") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));
            }).map(function(_i, elem) {
                var val = jQuery(this).val();
                if (val == null) return null;
                if (Array.isArray(val)) return jQuery.map(val, function(val) {
                    return {
                        name: elem.name,
                        value: val.replace(rCRLF, "\r\n")
                    };
                });
                return {
                    name: elem.name,
                    value: val.replace(rCRLF, "\r\n")
                };
            }).get();
        }
    });
    var r20 = /%20/g, rhash = /#.*$/, rantiCache = /([?&])_=[^&]*/, rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg, // trac-7653, trac-8125, trac-8152: local protocol detection
    rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, rnoContent = /^(?:GET|HEAD)$/, rprotocol = /^\/\//, /* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */ prefilters = {}, /* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */ transports = {}, // Avoid comment-prolog char sequence (trac-10098); must appease lint and evade compression
    allTypes = "*/".concat("*"), // Anchor tag for parsing the document origin
    originAnchor = document.createElement("a");
    originAnchor.href = location.href;
    // Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
    function addToPrefiltersOrTransports(structure) {
        // dataTypeExpression is optional and defaults to "*"
        return function(dataTypeExpression, func) {
            if (typeof dataTypeExpression !== "string") {
                func = dataTypeExpression;
                dataTypeExpression = "*";
            }
            var dataType, i = 0, dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];
            if (isFunction(func)) {
                // For each dataType in the dataTypeExpression
                while(dataType = dataTypes[i++])// Prepend if requested
                if (dataType[0] === "+") {
                    dataType = dataType.slice(1) || "*";
                    (structure[dataType] = structure[dataType] || []).unshift(func);
                // Otherwise append
                } else (structure[dataType] = structure[dataType] || []).push(func);
            }
        };
    }
    // Base inspection function for prefilters and transports
    function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {
        var inspected = {}, seekingTransport = structure === transports;
        function inspect(dataType) {
            var selected;
            inspected[dataType] = true;
            jQuery.each(structure[dataType] || [], function(_, prefilterOrFactory) {
                var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);
                if (typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[dataTypeOrTransport]) {
                    options.dataTypes.unshift(dataTypeOrTransport);
                    inspect(dataTypeOrTransport);
                    return false;
                } else if (seekingTransport) return !(selected = dataTypeOrTransport);
            });
            return selected;
        }
        return inspect(options.dataTypes[0]) || !inspected["*"] && inspect("*");
    }
    // A special extend for ajax options
    // that takes "flat" options (not to be deep extended)
    // Fixes trac-9887
    function ajaxExtend(target, src) {
        var key, deep, flatOptions = jQuery.ajaxSettings.flatOptions || {};
        for(key in src)if (src[key] !== undefined) (flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];
        if (deep) jQuery.extend(true, target, deep);
        return target;
    }
    /* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */ function ajaxHandleResponses(s, jqXHR, responses) {
        var ct, type, finalDataType, firstDataType, contents = s.contents, dataTypes = s.dataTypes;
        // Remove auto dataType and get content-type in the process
        while(dataTypes[0] === "*"){
            dataTypes.shift();
            if (ct === undefined) ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");
        }
        // Check if we're dealing with a known content-type
        if (ct) {
            for(type in contents)if (contents[type] && contents[type].test(ct)) {
                dataTypes.unshift(type);
                break;
            }
        }
        // Check to see if we have a response for the expected dataType
        if (dataTypes[0] in responses) finalDataType = dataTypes[0];
        else {
            // Try convertible dataTypes
            for(type in responses){
                if (!dataTypes[0] || s.converters[type + " " + dataTypes[0]]) {
                    finalDataType = type;
                    break;
                }
                if (!firstDataType) firstDataType = type;
            }
            // Or just use first one
            finalDataType = finalDataType || firstDataType;
        }
        // If we found a dataType
        // We add the dataType to the list if needed
        // and return the corresponding response
        if (finalDataType) {
            if (finalDataType !== dataTypes[0]) dataTypes.unshift(finalDataType);
            return responses[finalDataType];
        }
    }
    /* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */ function ajaxConvert(s, response, jqXHR, isSuccess) {
        var conv2, current, conv, tmp, prev, converters = {}, // Work with a copy of dataTypes in case we need to modify it for conversion
        dataTypes = s.dataTypes.slice();
        // Create converters map with lowercased keys
        if (dataTypes[1]) for(conv in s.converters)converters[conv.toLowerCase()] = s.converters[conv];
        current = dataTypes.shift();
        // Convert to each sequential dataType
        while(current){
            if (s.responseFields[current]) jqXHR[s.responseFields[current]] = response;
            // Apply the dataFilter if provided
            if (!prev && isSuccess && s.dataFilter) response = s.dataFilter(response, s.dataType);
            prev = current;
            current = dataTypes.shift();
            if (current) {
                // There's only work to do if current dataType is non-auto
                if (current === "*") current = prev;
                else if (prev !== "*" && prev !== current) {
                    // Seek a direct converter
                    conv = converters[prev + " " + current] || converters["* " + current];
                    // If none found, seek a pair
                    if (!conv) for(conv2 in converters){
                        // If conv2 outputs current
                        tmp = conv2.split(" ");
                        if (tmp[1] === current) {
                            // If prev can be converted to accepted input
                            conv = converters[prev + " " + tmp[0]] || converters["* " + tmp[0]];
                            if (conv) {
                                // Condense equivalence converters
                                if (conv === true) conv = converters[conv2];
                                else if (converters[conv2] !== true) {
                                    current = tmp[0];
                                    dataTypes.unshift(tmp[1]);
                                }
                                break;
                            }
                        }
                    }
                    // Apply converter (if not an equivalence)
                    if (conv !== true) {
                        // Unless errors are allowed to bubble, catch and return them
                        if (conv && s.throws) response = conv(response);
                        else try {
                            response = conv(response);
                        } catch (e) {
                            return {
                                state: "parsererror",
                                error: conv ? e : "No conversion from " + prev + " to " + current
                            };
                        }
                    }
                }
            }
        }
        return {
            state: "success",
            data: response
        };
    }
    jQuery.extend({
        // Counter for holding the number of active queries
        active: 0,
        // Last-Modified header cache for next request
        lastModified: {},
        etag: {},
        ajaxSettings: {
            url: location.href,
            type: "GET",
            isLocal: rlocalProtocol.test(location.protocol),
            global: true,
            processData: true,
            async: true,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            /*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/ accepts: {
                "*": allTypes,
                text: "text/plain",
                html: "text/html",
                xml: "application/xml, text/xml",
                json: "application/json, text/javascript"
            },
            contents: {
                xml: /\bxml\b/,
                html: /\bhtml/,
                json: /\bjson\b/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText",
                json: "responseJSON"
            },
            // Data converters
            // Keys separate source (or catchall "*") and destination types with a single space
            converters: {
                // Convert anything to text
                "* text": String,
                // Text to html (true = no transformation)
                "text html": true,
                // Evaluate text as a json expression
                "text json": JSON.parse,
                // Parse text as xml
                "text xml": jQuery.parseXML
            },
            // For options that shouldn't be deep extended:
            // you can add your own custom options here if
            // and when you create one that shouldn't be
            // deep extended (see ajaxExtend)
            flatOptions: {
                url: true,
                context: true
            }
        },
        // Creates a full fledged settings object into target
        // with both ajaxSettings and settings fields.
        // If target is omitted, writes into ajaxSettings.
        ajaxSetup: function(target, settings) {
            return settings ? // Building a settings object
            ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : // Extending ajaxSettings
            ajaxExtend(jQuery.ajaxSettings, target);
        },
        ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
        ajaxTransport: addToPrefiltersOrTransports(transports),
        // Main method
        ajax: function(url, options) {
            // If url is an object, simulate pre-1.5 signature
            if (typeof url === "object") {
                options = url;
                url = undefined;
            }
            // Force options to be an object
            options = options || {};
            var transport, // URL without anti-cache param
            cacheURL, // Response headers
            responseHeadersString, responseHeaders, // timeout handle
            timeoutTimer, // Url cleanup var
            urlAnchor, // Request state (becomes false upon send and true upon completion)
            completed, // To know if global events are to be dispatched
            fireGlobals, // Loop variable
            i, // uncached part of the url
            uncached, // Create the final options object
            s = jQuery.ajaxSetup({}, options), // Callbacks context
            callbackContext = s.context || s, // Context for global events is callbackContext if it is a DOM node or jQuery collection
            globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event, // Deferreds
            deferred = jQuery.Deferred(), completeDeferred = jQuery.Callbacks("once memory"), // Status-dependent callbacks
            statusCode = s.statusCode || {}, // Headers (they are sent all at once)
            requestHeaders = {}, requestHeadersNames = {}, // Default abort message
            strAbort = "canceled", // Fake xhr
            jqXHR = {
                readyState: 0,
                // Builds headers hashtable if needed
                getResponseHeader: function(key) {
                    var match;
                    if (completed) {
                        if (!responseHeaders) {
                            responseHeaders = {};
                            while(match = rheaders.exec(responseHeadersString))responseHeaders[match[1].toLowerCase() + " "] = (responseHeaders[match[1].toLowerCase() + " "] || []).concat(match[2]);
                        }
                        match = responseHeaders[key.toLowerCase() + " "];
                    }
                    return match == null ? null : match.join(", ");
                },
                // Raw string
                getAllResponseHeaders: function() {
                    return completed ? responseHeadersString : null;
                },
                // Caches the header
                setRequestHeader: function(name, value) {
                    if (completed == null) {
                        name = requestHeadersNames[name.toLowerCase()] = requestHeadersNames[name.toLowerCase()] || name;
                        requestHeaders[name] = value;
                    }
                    return this;
                },
                // Overrides response content-type header
                overrideMimeType: function(type) {
                    if (completed == null) s.mimeType = type;
                    return this;
                },
                // Status-dependent callbacks
                statusCode: function(map) {
                    var code;
                    if (map) {
                        if (completed) // Execute the appropriate callbacks
                        jqXHR.always(map[jqXHR.status]);
                        else // Lazy-add the new callbacks in a way that preserves old ones
                        for(code in map)statusCode[code] = [
                            statusCode[code],
                            map[code]
                        ];
                    }
                    return this;
                },
                // Cancel the request
                abort: function(statusText) {
                    var finalText = statusText || strAbort;
                    if (transport) transport.abort(finalText);
                    done(0, finalText);
                    return this;
                }
            };
            // Attach deferreds
            deferred.promise(jqXHR);
            // Add protocol if not provided (prefilters might expect it)
            // Handle falsy url in the settings object (trac-10093: consistency with old signature)
            // We also use the url parameter if available
            s.url = ((url || s.url || location.href) + "").replace(rprotocol, location.protocol + "//");
            // Alias method option to type as per ticket trac-12004
            s.type = options.method || options.type || s.method || s.type;
            // Extract dataTypes list
            s.dataTypes = (s.dataType || "*").toLowerCase().match(rnothtmlwhite) || [
                ""
            ];
            // A cross-domain request is in order when the origin doesn't match the current origin.
            if (s.crossDomain == null) {
                urlAnchor = document.createElement("a");
                // Support: IE <=8 - 11, Edge 12 - 15
                // IE throws exception on accessing the href property if url is malformed,
                // e.g. http://example.com:80x/
                try {
                    urlAnchor.href = s.url;
                    // Support: IE <=8 - 11 only
                    // Anchor's host property isn't correctly set when s.url is relative
                    urlAnchor.href = urlAnchor.href;
                    s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !== urlAnchor.protocol + "//" + urlAnchor.host;
                } catch (e) {
                    // If there is an error parsing the URL, assume it is crossDomain,
                    // it can be rejected by the transport if it is invalid
                    s.crossDomain = true;
                }
            }
            // Convert data if not already a string
            if (s.data && s.processData && typeof s.data !== "string") s.data = jQuery.param(s.data, s.traditional);
            // Apply prefilters
            inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);
            // If request was aborted inside a prefilter, stop there
            if (completed) return jqXHR;
            // We can fire global events as of now if asked to
            // Don't fire events if jQuery.event is undefined in an AMD-usage scenario (trac-15118)
            fireGlobals = jQuery.event && s.global;
            // Watch for a new set of requests
            if (fireGlobals && (jQuery.active++) === 0) jQuery.event.trigger("ajaxStart");
            // Uppercase the type
            s.type = s.type.toUpperCase();
            // Determine if request has content
            s.hasContent = !rnoContent.test(s.type);
            // Save the URL in case we're toying with the If-Modified-Since
            // and/or If-None-Match header later on
            // Remove hash to simplify url manipulation
            cacheURL = s.url.replace(rhash, "");
            // More options handling for requests with no content
            if (!s.hasContent) {
                // Remember the hash so we can put it back
                uncached = s.url.slice(cacheURL.length);
                // If data is available and should be processed, append data to url
                if (s.data && (s.processData || typeof s.data === "string")) {
                    cacheURL += (rquery.test(cacheURL) ? "&" : "?") + s.data;
                    // trac-9682: remove data so that it's not used in an eventual retry
                    delete s.data;
                }
                // Add or update anti-cache param if needed
                if (s.cache === false) {
                    cacheURL = cacheURL.replace(rantiCache, "$1");
                    uncached = (rquery.test(cacheURL) ? "&" : "?") + "_=" + nonce.guid++ + uncached;
                }
                // Put hash and anti-cache on the URL that will be requested (gh-1732)
                s.url = cacheURL + uncached;
            // Change '%20' to '+' if this is encoded form body content (gh-2658)
            } else if (s.data && s.processData && (s.contentType || "").indexOf("application/x-www-form-urlencoded") === 0) s.data = s.data.replace(r20, "+");
            // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
            if (s.ifModified) {
                if (jQuery.lastModified[cacheURL]) jqXHR.setRequestHeader("If-Modified-Since", jQuery.lastModified[cacheURL]);
                if (jQuery.etag[cacheURL]) jqXHR.setRequestHeader("If-None-Match", jQuery.etag[cacheURL]);
            }
            // Set the correct header, if data is being sent
            if (s.data && s.hasContent && s.contentType !== false || options.contentType) jqXHR.setRequestHeader("Content-Type", s.contentType);
            // Set the Accepts header for the server, depending on the dataType
            jqXHR.setRequestHeader("Accept", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== "*" ? ", " + allTypes + "; q=0.01" : "") : s.accepts["*"]);
            // Check for headers option
            for(i in s.headers)jqXHR.setRequestHeader(i, s.headers[i]);
            // Allow custom headers/mimetypes and early abort
            if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || completed)) // Abort if not done already and return
            return jqXHR.abort();
            // Aborting is no longer a cancellation
            strAbort = "abort";
            // Install callbacks on deferreds
            completeDeferred.add(s.complete);
            jqXHR.done(s.success);
            jqXHR.fail(s.error);
            // Get transport
            transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);
            // If no transport, we auto-abort
            if (!transport) done(-1, "No Transport");
            else {
                jqXHR.readyState = 1;
                // Send global event
                if (fireGlobals) globalEventContext.trigger("ajaxSend", [
                    jqXHR,
                    s
                ]);
                // If request was aborted inside ajaxSend, stop there
                if (completed) return jqXHR;
                // Timeout
                if (s.async && s.timeout > 0) timeoutTimer = window1.setTimeout(function() {
                    jqXHR.abort("timeout");
                }, s.timeout);
                try {
                    completed = false;
                    transport.send(requestHeaders, done);
                } catch (e1) {
                    // Rethrow post-completion exceptions
                    if (completed) throw e1;
                    // Propagate others as results
                    done(-1, e1);
                }
            }
            // Callback for when everything is done
            function done(status, nativeStatusText, responses, headers) {
                var isSuccess, success, error, response, modified, statusText = nativeStatusText;
                // Ignore repeat invocations
                if (completed) return;
                completed = true;
                // Clear timeout if it exists
                if (timeoutTimer) window1.clearTimeout(timeoutTimer);
                // Dereference transport for early garbage collection
                // (no matter how long the jqXHR object will be used)
                transport = undefined;
                // Cache response headers
                responseHeadersString = headers || "";
                // Set readyState
                jqXHR.readyState = status > 0 ? 4 : 0;
                // Determine if successful
                isSuccess = status >= 200 && status < 300 || status === 304;
                // Get response data
                if (responses) response = ajaxHandleResponses(s, jqXHR, responses);
                // Use a noop converter for missing script but not if jsonp
                if (!isSuccess && jQuery.inArray("script", s.dataTypes) > -1 && jQuery.inArray("json", s.dataTypes) < 0) s.converters["text script"] = function() {};
                // Convert no matter what (that way responseXXX fields are always set)
                response = ajaxConvert(s, response, jqXHR, isSuccess);
                // If successful, handle type chaining
                if (isSuccess) {
                    // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
                    if (s.ifModified) {
                        modified = jqXHR.getResponseHeader("Last-Modified");
                        if (modified) jQuery.lastModified[cacheURL] = modified;
                        modified = jqXHR.getResponseHeader("etag");
                        if (modified) jQuery.etag[cacheURL] = modified;
                    }
                    // if no content
                    if (status === 204 || s.type === "HEAD") statusText = "nocontent";
                    else if (status === 304) statusText = "notmodified";
                    else {
                        statusText = response.state;
                        success = response.data;
                        error = response.error;
                        isSuccess = !error;
                    }
                } else {
                    // Extract error from statusText and normalize for non-aborts
                    error = statusText;
                    if (status || !statusText) {
                        statusText = "error";
                        if (status < 0) status = 0;
                    }
                }
                // Set data for the fake xhr object
                jqXHR.status = status;
                jqXHR.statusText = (nativeStatusText || statusText) + "";
                // Success/Error
                if (isSuccess) deferred.resolveWith(callbackContext, [
                    success,
                    statusText,
                    jqXHR
                ]);
                else deferred.rejectWith(callbackContext, [
                    jqXHR,
                    statusText,
                    error
                ]);
                // Status-dependent callbacks
                jqXHR.statusCode(statusCode);
                statusCode = undefined;
                if (fireGlobals) globalEventContext.trigger(isSuccess ? "ajaxSuccess" : "ajaxError", [
                    jqXHR,
                    s,
                    isSuccess ? success : error
                ]);
                // Complete
                completeDeferred.fireWith(callbackContext, [
                    jqXHR,
                    statusText
                ]);
                if (fireGlobals) {
                    globalEventContext.trigger("ajaxComplete", [
                        jqXHR,
                        s
                    ]);
                    // Handle the global AJAX counter
                    if (!--jQuery.active) jQuery.event.trigger("ajaxStop");
                }
            }
            return jqXHR;
        },
        getJSON: function(url, data, callback) {
            return jQuery.get(url, data, callback, "json");
        },
        getScript: function(url, callback) {
            return jQuery.get(url, undefined, callback, "script");
        }
    });
    jQuery.each([
        "get",
        "post"
    ], function(_i, method) {
        jQuery[method] = function(url, data, callback, type) {
            // Shift arguments if data argument was omitted
            if (isFunction(data)) {
                type = type || callback;
                callback = data;
                data = undefined;
            }
            // The url can be an options object (which then must have .url)
            return jQuery.ajax(jQuery.extend({
                url: url,
                type: method,
                dataType: type,
                data: data,
                success: callback
            }, jQuery.isPlainObject(url) && url));
        };
    });
    jQuery.ajaxPrefilter(function(s) {
        var i;
        for(i in s.headers)if (i.toLowerCase() === "content-type") s.contentType = s.headers[i] || "";
    });
    jQuery._evalUrl = function(url, options, doc) {
        return jQuery.ajax({
            url: url,
            // Make this explicit, since user can override this through ajaxSetup (trac-11264)
            type: "GET",
            dataType: "script",
            cache: true,
            async: false,
            global: false,
            // Only evaluate the response if it is successful (gh-4126)
            // dataFilter is not invoked for failure responses, so using it instead
            // of the default converter is kludgy but it works.
            converters: {
                "text script": function() {}
            },
            dataFilter: function(response) {
                jQuery.globalEval(response, options, doc);
            }
        });
    };
    jQuery.fn.extend({
        wrapAll: function(html) {
            var wrap;
            if (this[0]) {
                if (isFunction(html)) html = html.call(this[0]);
                // The elements to wrap the target around
                wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);
                if (this[0].parentNode) wrap.insertBefore(this[0]);
                wrap.map(function() {
                    var elem = this;
                    while(elem.firstElementChild)elem = elem.firstElementChild;
                    return elem;
                }).append(this);
            }
            return this;
        },
        wrapInner: function(html) {
            if (isFunction(html)) return this.each(function(i) {
                jQuery(this).wrapInner(html.call(this, i));
            });
            return this.each(function() {
                var self = jQuery(this), contents = self.contents();
                if (contents.length) contents.wrapAll(html);
                else self.append(html);
            });
        },
        wrap: function(html) {
            var htmlIsFunction = isFunction(html);
            return this.each(function(i) {
                jQuery(this).wrapAll(htmlIsFunction ? html.call(this, i) : html);
            });
        },
        unwrap: function(selector) {
            this.parent(selector).not("body").each(function() {
                jQuery(this).replaceWith(this.childNodes);
            });
            return this;
        }
    });
    jQuery.expr.pseudos.hidden = function(elem) {
        return !jQuery.expr.pseudos.visible(elem);
    };
    jQuery.expr.pseudos.visible = function(elem) {
        return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);
    };
    jQuery.ajaxSettings.xhr = function() {
        try {
            return new window1.XMLHttpRequest();
        } catch (e) {}
    };
    var xhrSuccessStatus = {
        // File protocol always yields status code 0, assume 200
        0: 200,
        // Support: IE <=9 only
        // trac-1450: sometimes IE returns 1223 when it should be 204
        1223: 204
    }, xhrSupported = jQuery.ajaxSettings.xhr();
    support.cors = !!xhrSupported && "withCredentials" in xhrSupported;
    support.ajax = xhrSupported = !!xhrSupported;
    jQuery.ajaxTransport(function(options) {
        var callback, errorCallback;
        // Cross domain only allowed if supported through XMLHttpRequest
        if (support.cors || xhrSupported && !options.crossDomain) return {
            send: function(headers, complete) {
                var i, xhr = options.xhr();
                xhr.open(options.type, options.url, options.async, options.username, options.password);
                // Apply custom fields if provided
                if (options.xhrFields) for(i in options.xhrFields)xhr[i] = options.xhrFields[i];
                // Override mime type if needed
                if (options.mimeType && xhr.overrideMimeType) xhr.overrideMimeType(options.mimeType);
                // X-Requested-With header
                // For cross-domain requests, seeing as conditions for a preflight are
                // akin to a jigsaw puzzle, we simply never set it to be sure.
                // (it can always be set on a per-request basis or even using ajaxSetup)
                // For same-domain requests, won't change header if already provided.
                if (!options.crossDomain && !headers["X-Requested-With"]) headers["X-Requested-With"] = "XMLHttpRequest";
                // Set headers
                for(i in headers)xhr.setRequestHeader(i, headers[i]);
                // Callback
                callback = function(type) {
                    return function() {
                        if (callback) {
                            callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.ontimeout = xhr.onreadystatechange = null;
                            if (type === "abort") xhr.abort();
                            else if (type === "error") {
                                // Support: IE <=9 only
                                // On a manual native abort, IE9 throws
                                // errors on any property access that is not readyState
                                if (typeof xhr.status !== "number") complete(0, "error");
                                else complete(// File: protocol always yields status 0; see trac-8605, trac-14207
                                xhr.status, xhr.statusText);
                            } else complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, // Support: IE <=9 only
                            // IE9 has no XHR2 but throws on binary (trac-11426)
                            // For XHR2 non-text, let the caller handle it (gh-2498)
                            (xhr.responseType || "text") !== "text" || typeof xhr.responseText !== "string" ? {
                                binary: xhr.response
                            } : {
                                text: xhr.responseText
                            }, xhr.getAllResponseHeaders());
                        }
                    };
                };
                // Listen to events
                xhr.onload = callback();
                errorCallback = xhr.onerror = xhr.ontimeout = callback("error");
                // Support: IE 9 only
                // Use onreadystatechange to replace onabort
                // to handle uncaught aborts
                if (xhr.onabort !== undefined) xhr.onabort = errorCallback;
                else xhr.onreadystatechange = function() {
                    // Check readyState before timeout as it changes
                    if (xhr.readyState === 4) // Allow onerror to be called first,
                    // but that will not handle a native abort
                    // Also, save errorCallback to a variable
                    // as xhr.onerror cannot be accessed
                    window1.setTimeout(function() {
                        if (callback) errorCallback();
                    });
                };
                // Create the abort callback
                callback = callback("abort");
                try {
                    // Do send the request (this may raise an exception)
                    xhr.send(options.hasContent && options.data || null);
                } catch (e) {
                    // trac-14683: Only rethrow if this hasn't been notified as an error yet
                    if (callback) throw e;
                }
            },
            abort: function() {
                if (callback) callback();
            }
        };
    });
    // Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
    jQuery.ajaxPrefilter(function(s) {
        if (s.crossDomain) s.contents.script = false;
    });
    // Install script dataType
    jQuery.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /\b(?:java|ecma)script\b/
        },
        converters: {
            "text script": function(text) {
                jQuery.globalEval(text);
                return text;
            }
        }
    });
    // Handle cache's special case and crossDomain
    jQuery.ajaxPrefilter("script", function(s) {
        if (s.cache === undefined) s.cache = false;
        if (s.crossDomain) s.type = "GET";
    });
    // Bind script tag hack transport
    jQuery.ajaxTransport("script", function(s) {
        // This transport only deals with cross domain or forced-by-attrs requests
        if (s.crossDomain || s.scriptAttrs) {
            var script, callback;
            return {
                send: function(_, complete) {
                    script = jQuery("<script>").attr(s.scriptAttrs || {}).prop({
                        charset: s.scriptCharset,
                        src: s.url
                    }).on("load error", callback = function(evt) {
                        script.remove();
                        callback = null;
                        if (evt) complete(evt.type === "error" ? 404 : 200, evt.type);
                    });
                    // Use native DOM manipulation to avoid our domManip AJAX trickery
                    document.head.appendChild(script[0]);
                },
                abort: function() {
                    if (callback) callback();
                }
            };
        }
    });
    var oldCallbacks = [], rjsonp = /(=)\?(?=&|$)|\?\?/;
    // Default jsonp settings
    jQuery.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            var callback = oldCallbacks.pop() || jQuery.expando + "_" + nonce.guid++;
            this[callback] = true;
            return callback;
        }
    });
    // Detect, normalize options and install callbacks for jsonp requests
    jQuery.ajaxPrefilter("json jsonp", function(s, originalSettings, jqXHR) {
        var callbackName, overwritten, responseContainer, jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? "url" : typeof s.data === "string" && (s.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && rjsonp.test(s.data) && "data");
        // Handle iff the expected data type is "jsonp" or we have a parameter to set
        if (jsonProp || s.dataTypes[0] === "jsonp") {
            // Get callback name, remembering preexisting value associated with it
            callbackName = s.jsonpCallback = isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback;
            // Insert callback into url or form data
            if (jsonProp) s[jsonProp] = s[jsonProp].replace(rjsonp, "$1" + callbackName);
            else if (s.jsonp !== false) s.url += (rquery.test(s.url) ? "&" : "?") + s.jsonp + "=" + callbackName;
            // Use data converter to retrieve json after script execution
            s.converters["script json"] = function() {
                if (!responseContainer) jQuery.error(callbackName + " was not called");
                return responseContainer[0];
            };
            // Force json dataType
            s.dataTypes[0] = "json";
            // Install callback
            overwritten = window1[callbackName];
            window1[callbackName] = function() {
                responseContainer = arguments;
            };
            // Clean-up function (fires after converters)
            jqXHR.always(function() {
                // If previous value didn't exist - remove it
                if (overwritten === undefined) jQuery(window1).removeProp(callbackName);
                else window1[callbackName] = overwritten;
                // Save back as free
                if (s[callbackName]) {
                    // Make sure that re-using the options doesn't screw things around
                    s.jsonpCallback = originalSettings.jsonpCallback;
                    // Save the callback name for future use
                    oldCallbacks.push(callbackName);
                }
                // Call if it was a function and we have a response
                if (responseContainer && isFunction(overwritten)) overwritten(responseContainer[0]);
                responseContainer = overwritten = undefined;
            });
            // Delegate to script
            return "script";
        }
    });
    // Support: Safari 8 only
    // In Safari 8 documents created via document.implementation.createHTMLDocument
    // collapse sibling forms: the second one becomes a child of the first one.
    // Because of that, this security measure has to be disabled in Safari 8.
    // https://bugs.webkit.org/show_bug.cgi?id=137337
    support.createHTMLDocument = function() {
        var body = document.implementation.createHTMLDocument("").body;
        body.innerHTML = "<form></form><form></form>";
        return body.childNodes.length === 2;
    }();
    // Argument "data" should be string of html
    // context (optional): If specified, the fragment will be created in this context,
    // defaults to document
    // keepScripts (optional): If true, will include scripts passed in the html string
    jQuery.parseHTML = function(data, context, keepScripts) {
        if (typeof data !== "string") return [];
        if (typeof context === "boolean") {
            keepScripts = context;
            context = false;
        }
        var base, parsed, scripts;
        if (!context) {
            // Stop scripts or inline event handlers from being executed immediately
            // by using document.implementation
            if (support.createHTMLDocument) {
                context = document.implementation.createHTMLDocument("");
                // Set the base href for the created document
                // so any parsed elements with URLs
                // are based on the document's URL (gh-2965)
                base = context.createElement("base");
                base.href = document.location.href;
                context.head.appendChild(base);
            } else context = document;
        }
        parsed = rsingleTag.exec(data);
        scripts = !keepScripts && [];
        // Single tag
        if (parsed) return [
            context.createElement(parsed[1])
        ];
        parsed = buildFragment([
            data
        ], context, scripts);
        if (scripts && scripts.length) jQuery(scripts).remove();
        return jQuery.merge([], parsed.childNodes);
    };
    /**
 * Load a url into a page
 */ jQuery.fn.load = function(url, params, callback) {
        var selector, type, response, self = this, off = url.indexOf(" ");
        if (off > -1) {
            selector = stripAndCollapse(url.slice(off));
            url = url.slice(0, off);
        }
        // If it's a function
        if (isFunction(params)) {
            // We assume that it's the callback
            callback = params;
            params = undefined;
        // Otherwise, build a param string
        } else if (params && typeof params === "object") type = "POST";
        // If we have elements to modify, make the request
        if (self.length > 0) jQuery.ajax({
            url: url,
            // If "type" variable is undefined, then "GET" method will be used.
            // Make value of this field explicit since
            // user can override it through ajaxSetup method
            type: type || "GET",
            dataType: "html",
            data: params
        }).done(function(responseText) {
            // Save response for use in complete callback
            response = arguments;
            self.html(selector ? // If a selector was specified, locate the right elements in a dummy div
            // Exclude scripts to avoid IE 'Permission Denied' errors
            jQuery("<div>").append(jQuery.parseHTML(responseText)).find(selector) : // Otherwise use the full result
            responseText);
        // If the request succeeds, this function gets "data", "status", "jqXHR"
        // but they are ignored because response was set above.
        // If it fails, this function gets "jqXHR", "status", "error"
        }).always(callback && function(jqXHR, status) {
            self.each(function() {
                callback.apply(this, response || [
                    jqXHR.responseText,
                    status,
                    jqXHR
                ]);
            });
        });
        return this;
    };
    jQuery.expr.pseudos.animated = function(elem) {
        return jQuery.grep(jQuery.timers, function(fn) {
            return elem === fn.elem;
        }).length;
    };
    jQuery.offset = {
        setOffset: function(elem, options, i) {
            var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition, position = jQuery.css(elem, "position"), curElem = jQuery(elem), props = {};
            // Set position first, in-case top/left are set even on static elem
            if (position === "static") elem.style.position = "relative";
            curOffset = curElem.offset();
            curCSSTop = jQuery.css(elem, "top");
            curCSSLeft = jQuery.css(elem, "left");
            calculatePosition = (position === "absolute" || position === "fixed") && (curCSSTop + curCSSLeft).indexOf("auto") > -1;
            // Need to be able to calculate position if either
            // top or left is auto and position is either absolute or fixed
            if (calculatePosition) {
                curPosition = curElem.position();
                curTop = curPosition.top;
                curLeft = curPosition.left;
            } else {
                curTop = parseFloat(curCSSTop) || 0;
                curLeft = parseFloat(curCSSLeft) || 0;
            }
            if (isFunction(options)) // Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
            options = options.call(elem, i, jQuery.extend({}, curOffset));
            if (options.top != null) props.top = options.top - curOffset.top + curTop;
            if (options.left != null) props.left = options.left - curOffset.left + curLeft;
            if ("using" in options) options.using.call(elem, props);
            else curElem.css(props);
        }
    };
    jQuery.fn.extend({
        // offset() relates an element's border box to the document origin
        offset: function(options) {
            // Preserve chaining for setter
            if (arguments.length) return options === undefined ? this : this.each(function(i) {
                jQuery.offset.setOffset(this, options, i);
            });
            var rect, win, elem = this[0];
            if (!elem) return;
            // Return zeros for disconnected and hidden (display: none) elements (gh-2310)
            // Support: IE <=11 only
            // Running getBoundingClientRect on a
            // disconnected node in IE throws an error
            if (!elem.getClientRects().length) return {
                top: 0,
                left: 0
            };
            // Get document-relative position by adding viewport scroll to viewport-relative gBCR
            rect = elem.getBoundingClientRect();
            win = elem.ownerDocument.defaultView;
            return {
                top: rect.top + win.pageYOffset,
                left: rect.left + win.pageXOffset
            };
        },
        // position() relates an element's margin box to its offset parent's padding box
        // This corresponds to the behavior of CSS absolute positioning
        position: function() {
            if (!this[0]) return;
            var offsetParent, offset, doc, elem = this[0], parentOffset = {
                top: 0,
                left: 0
            };
            // position:fixed elements are offset from the viewport, which itself always has zero offset
            if (jQuery.css(elem, "position") === "fixed") // Assume position:fixed implies availability of getBoundingClientRect
            offset = elem.getBoundingClientRect();
            else {
                offset = this.offset();
                // Account for the *real* offset parent, which can be the document or its root element
                // when a statically positioned element is identified
                doc = elem.ownerDocument;
                offsetParent = elem.offsetParent || doc.documentElement;
                while(offsetParent && (offsetParent === doc.body || offsetParent === doc.documentElement) && jQuery.css(offsetParent, "position") === "static")offsetParent = offsetParent.parentNode;
                if (offsetParent && offsetParent !== elem && offsetParent.nodeType === 1) {
                    // Incorporate borders into its offset, since they are outside its content origin
                    parentOffset = jQuery(offsetParent).offset();
                    parentOffset.top += jQuery.css(offsetParent, "borderTopWidth", true);
                    parentOffset.left += jQuery.css(offsetParent, "borderLeftWidth", true);
                }
            }
            // Subtract parent offsets and element margins
            return {
                top: offset.top - parentOffset.top - jQuery.css(elem, "marginTop", true),
                left: offset.left - parentOffset.left - jQuery.css(elem, "marginLeft", true)
            };
        },
        // This method will return documentElement in the following cases:
        // 1) For the element inside the iframe without offsetParent, this method will return
        //    documentElement of the parent window
        // 2) For the hidden or detached element
        // 3) For body or html element, i.e. in case of the html node - it will return itself
        //
        // but those exceptions were never presented as a real life use-cases
        // and might be considered as more preferable results.
        //
        // This logic, however, is not guaranteed and can change at any point in the future
        offsetParent: function() {
            return this.map(function() {
                var offsetParent = this.offsetParent;
                while(offsetParent && jQuery.css(offsetParent, "position") === "static")offsetParent = offsetParent.offsetParent;
                return offsetParent || documentElement;
            });
        }
    });
    // Create scrollLeft and scrollTop methods
    jQuery.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function(method, prop) {
        var top = "pageYOffset" === prop;
        jQuery.fn[method] = function(val) {
            return access(this, function(elem, method, val) {
                // Coalesce documents and windows
                var win;
                if (isWindow(elem)) win = elem;
                else if (elem.nodeType === 9) win = elem.defaultView;
                if (val === undefined) return win ? win[prop] : elem[method];
                if (win) win.scrollTo(!top ? val : win.pageXOffset, top ? val : win.pageYOffset);
                else elem[method] = val;
            }, method, val, arguments.length);
        };
    });
    // Support: Safari <=7 - 9.1, Chrome <=37 - 49
    // Add the top/left cssHooks using jQuery.fn.position
    // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
    // Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
    // getComputedStyle returns percent when specified for top/left/bottom/right;
    // rather than make the css module depend on the offset module, just check for it here
    jQuery.each([
        "top",
        "left"
    ], function(_i, prop) {
        jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function(elem, computed) {
            if (computed) {
                computed = curCSS(elem, prop);
                // If curCSS returns percentage, fallback to offset
                return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + "px" : computed;
            }
        });
    });
    // Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
    jQuery.each({
        Height: "height",
        Width: "width"
    }, function(name, type) {
        jQuery.each({
            padding: "inner" + name,
            content: type,
            "": "outer" + name
        }, function(defaultExtra, funcName) {
            // Margin is only for outerHeight, outerWidth
            jQuery.fn[funcName] = function(margin, value) {
                var chainable = arguments.length && (defaultExtra || typeof margin !== "boolean"), extra = defaultExtra || (margin === true || value === true ? "margin" : "border");
                return access(this, function(elem, type, value) {
                    var doc;
                    if (isWindow(elem)) // $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
                    return funcName.indexOf("outer") === 0 ? elem["inner" + name] : elem.document.documentElement["client" + name];
                    // Get document width or height
                    if (elem.nodeType === 9) {
                        doc = elem.documentElement;
                        // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
                        // whichever is greatest
                        return Math.max(elem.body["scroll" + name], doc["scroll" + name], elem.body["offset" + name], doc["offset" + name], doc["client" + name]);
                    }
                    return value === undefined ? // Get width or height on the element, requesting but not forcing parseFloat
                    jQuery.css(elem, type, extra) : // Set width or height on the element
                    jQuery.style(elem, type, value, extra);
                }, type, chainable ? margin : undefined, chainable);
            };
        });
    });
    jQuery.each([
        "ajaxStart",
        "ajaxStop",
        "ajaxComplete",
        "ajaxError",
        "ajaxSuccess",
        "ajaxSend"
    ], function(_i, type) {
        jQuery.fn[type] = function(fn) {
            return this.on(type, fn);
        };
    });
    jQuery.fn.extend({
        bind: function(types, data, fn) {
            return this.on(types, null, data, fn);
        },
        unbind: function(types, fn) {
            return this.off(types, null, fn);
        },
        delegate: function(selector, types, data, fn) {
            return this.on(types, selector, data, fn);
        },
        undelegate: function(selector, types, fn) {
            // ( namespace ) or ( selector, types [, fn] )
            return arguments.length === 1 ? this.off(selector, "**") : this.off(types, selector || "**", fn);
        },
        hover: function(fnOver, fnOut) {
            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);
        }
    });
    jQuery.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function(_i, name) {
        // Handle event binding
        jQuery.fn[name] = function(data, fn) {
            return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);
        };
    });
    // Support: Android <=4.0 only
    // Make sure we trim BOM and NBSP
    // Require that the "whitespace run" starts from a non-whitespace
    // to avoid O(N^2) behavior when the engine would try matching "\s+$" at each space position.
    var rtrim = /^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;
    // Bind a function to a context, optionally partially applying any
    // arguments.
    // jQuery.proxy is deprecated to promote standards (specifically Function#bind)
    // However, it is not slated for removal any time soon
    jQuery.proxy = function(fn, context) {
        var tmp, args, proxy;
        if (typeof context === "string") {
            tmp = fn[context];
            context = fn;
            fn = tmp;
        }
        // Quick check to determine if target is callable, in the spec
        // this throws a TypeError, but we will just return undefined.
        if (!isFunction(fn)) return undefined;
        // Simulated bind
        args = slice.call(arguments, 2);
        proxy = function() {
            return fn.apply(context || this, args.concat(slice.call(arguments)));
        };
        // Set the guid of unique handler to the same of original handler, so it can be removed
        proxy.guid = fn.guid = fn.guid || jQuery.guid++;
        return proxy;
    };
    jQuery.holdReady = function(hold) {
        if (hold) jQuery.readyWait++;
        else jQuery.ready(true);
    };
    jQuery.isArray = Array.isArray;
    jQuery.parseJSON = JSON.parse;
    jQuery.nodeName = nodeName;
    jQuery.isFunction = isFunction;
    jQuery.isWindow = isWindow;
    jQuery.camelCase = camelCase;
    jQuery.type = toType;
    jQuery.now = Date.now;
    jQuery.isNumeric = function(obj) {
        // As of jQuery 3.0, isNumeric is limited to
        // strings and numbers (primitives or objects)
        // that can be coerced to finite numbers (gh-2662)
        var type = jQuery.type(obj);
        return (type === "number" || type === "string") && // parseFloat NaNs numeric-cast false positives ("")
        // ...but misinterprets leading-number strings, particularly hex literals ("0x...")
        // subtraction forces infinities to NaN
        !isNaN(obj - parseFloat(obj));
    };
    jQuery.trim = function(text) {
        return text == null ? "" : (text + "").replace(rtrim, "$1");
    };
    // Register as a named AMD module, since jQuery can be concatenated with other
    // files that may use define, but not via a proper concatenation script that
    // understands anonymous AMD modules. A named AMD is safest and most robust
    // way to register. Lowercase jquery is used because AMD module names are
    // derived from file names, and jQuery is normally delivered in a lowercase
    // file name. Do this after creating the global so that if an AMD module wants
    // to call noConflict to hide this version of jQuery, it will work.
    // Note that for maximum portability, libraries that are not jQuery should
    // declare themselves as anonymous modules, and avoid setting a global if an
    // AMD loader is present. jQuery is a special case. For more information, see
    // https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon
    if (typeof define === "function" && define.amd) define("jquery", [], function() {
        return jQuery;
    });
    var // Map over jQuery in case of overwrite
    _jQuery = window1.jQuery, // Map over the $ in case of overwrite
    _$ = window1.$;
    jQuery.noConflict = function(deep) {
        if (window1.$ === jQuery) window1.$ = _$;
        if (deep && window1.jQuery === jQuery) window1.jQuery = _jQuery;
        return jQuery;
    };
    // Expose jQuery and $ identifiers, even in AMD
    // (trac-7102#comment:10, https://github.com/jquery/jquery/pull/557)
    // and CommonJS for browser emulators (trac-13566)
    if (typeof noGlobal === "undefined") window1.jQuery = window1.$ = jQuery;
    return jQuery;
});

});

parcelRequire.register("9tgSh", function(module, exports) {

$parcel$defineInteropFlag(module.exports);

$parcel$export(module.exports, "default", () => $6e53e969d332ed9f$export$2e2bcd8739ae039);
/**!
 * @fileOverview Kickass library to create and place poppers near their reference elements.
 * @version 1.15.0
 * @license
 * Copyright (c) 2016 Federico Zivolo and contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */ var $6e53e969d332ed9f$var$isBrowser = typeof window !== "undefined" && typeof document !== "undefined";
var $6e53e969d332ed9f$var$longerTimeoutBrowsers = [
    "Edge",
    "Trident",
    "Firefox"
];
var $6e53e969d332ed9f$var$timeoutDuration = 0;
for(var $6e53e969d332ed9f$var$i = 0; $6e53e969d332ed9f$var$i < $6e53e969d332ed9f$var$longerTimeoutBrowsers.length; $6e53e969d332ed9f$var$i += 1)if ($6e53e969d332ed9f$var$isBrowser && navigator.userAgent.indexOf($6e53e969d332ed9f$var$longerTimeoutBrowsers[$6e53e969d332ed9f$var$i]) >= 0) {
    $6e53e969d332ed9f$var$timeoutDuration = 1;
    break;
}
function $6e53e969d332ed9f$var$microtaskDebounce(fn) {
    var called = false;
    return function() {
        if (called) return;
        called = true;
        window.Promise.resolve().then(function() {
            called = false;
            fn();
        });
    };
}
function $6e53e969d332ed9f$var$taskDebounce(fn) {
    var scheduled = false;
    return function() {
        if (!scheduled) {
            scheduled = true;
            setTimeout(function() {
                scheduled = false;
                fn();
            }, $6e53e969d332ed9f$var$timeoutDuration);
        }
    };
}
var $6e53e969d332ed9f$var$supportsMicroTasks = $6e53e969d332ed9f$var$isBrowser && window.Promise;
/**
* Create a debounced version of a method, that's asynchronously deferred
* but called in the minimum time possible.
*
* @method
* @memberof Popper.Utils
* @argument {Function} fn
* @returns {Function}
*/ var $6e53e969d332ed9f$var$debounce = $6e53e969d332ed9f$var$supportsMicroTasks ? $6e53e969d332ed9f$var$microtaskDebounce : $6e53e969d332ed9f$var$taskDebounce;
/**
 * Check if the given variable is a function
 * @method
 * @memberof Popper.Utils
 * @argument {Any} functionToCheck - variable to check
 * @returns {Boolean} answer to: is a function?
 */ function $6e53e969d332ed9f$var$isFunction(functionToCheck) {
    var getType = {};
    return functionToCheck && getType.toString.call(functionToCheck) === "[object Function]";
}
/**
 * Get CSS computed property of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Eement} element
 * @argument {String} property
 */ function $6e53e969d332ed9f$var$getStyleComputedProperty(element, property) {
    if (element.nodeType !== 1) return [];
    // NOTE: 1 DOM access here
    var window1 = element.ownerDocument.defaultView;
    var css = window1.getComputedStyle(element, null);
    return property ? css[property] : css;
}
/**
 * Returns the parentNode or the host of the element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} parent
 */ function $6e53e969d332ed9f$var$getParentNode(element) {
    if (element.nodeName === "HTML") return element;
    return element.parentNode || element.host;
}
/**
 * Returns the scrolling parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} scroll parent
 */ function $6e53e969d332ed9f$var$getScrollParent(element) {
    // Return body, `getScroll` will take care to get the correct `scrollTop` from it
    if (!element) return document.body;
    switch(element.nodeName){
        case "HTML":
        case "BODY":
            return element.ownerDocument.body;
        case "#document":
            return element.body;
    }
    // Firefox want us to check `-x` and `-y` variations as well
    var _getStyleComputedProp = $6e53e969d332ed9f$var$getStyleComputedProperty(element), overflow = _getStyleComputedProp.overflow, overflowX = _getStyleComputedProp.overflowX, overflowY = _getStyleComputedProp.overflowY;
    if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) return element;
    return $6e53e969d332ed9f$var$getScrollParent($6e53e969d332ed9f$var$getParentNode(element));
}
var $6e53e969d332ed9f$var$isIE11 = $6e53e969d332ed9f$var$isBrowser && !!(window.MSInputMethodContext && document.documentMode);
var $6e53e969d332ed9f$var$isIE10 = $6e53e969d332ed9f$var$isBrowser && /MSIE 10/.test(navigator.userAgent);
/**
 * Determines if the browser is Internet Explorer
 * @method
 * @memberof Popper.Utils
 * @param {Number} version to check
 * @returns {Boolean} isIE
 */ function $6e53e969d332ed9f$var$isIE(version) {
    if (version === 11) return $6e53e969d332ed9f$var$isIE11;
    if (version === 10) return $6e53e969d332ed9f$var$isIE10;
    return $6e53e969d332ed9f$var$isIE11 || $6e53e969d332ed9f$var$isIE10;
}
/**
 * Returns the offset parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} offset parent
 */ function $6e53e969d332ed9f$var$getOffsetParent(element) {
    if (!element) return document.documentElement;
    var noOffsetParent = $6e53e969d332ed9f$var$isIE(10) ? document.body : null;
    // NOTE: 1 DOM access here
    var offsetParent = element.offsetParent || null;
    // Skip hidden elements which don't have an offsetParent
    while(offsetParent === noOffsetParent && element.nextElementSibling)offsetParent = (element = element.nextElementSibling).offsetParent;
    var nodeName = offsetParent && offsetParent.nodeName;
    if (!nodeName || nodeName === "BODY" || nodeName === "HTML") return element ? element.ownerDocument.documentElement : document.documentElement;
    // .offsetParent will return the closest TH, TD or TABLE in case
    // no offsetParent is present, I hate this job...
    if ([
        "TH",
        "TD",
        "TABLE"
    ].indexOf(offsetParent.nodeName) !== -1 && $6e53e969d332ed9f$var$getStyleComputedProperty(offsetParent, "position") === "static") return $6e53e969d332ed9f$var$getOffsetParent(offsetParent);
    return offsetParent;
}
function $6e53e969d332ed9f$var$isOffsetContainer(element) {
    var nodeName = element.nodeName;
    if (nodeName === "BODY") return false;
    return nodeName === "HTML" || $6e53e969d332ed9f$var$getOffsetParent(element.firstElementChild) === element;
}
/**
 * Finds the root node (document, shadowDOM root) of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} node
 * @returns {Element} root node
 */ function $6e53e969d332ed9f$var$getRoot(node) {
    if (node.parentNode !== null) return $6e53e969d332ed9f$var$getRoot(node.parentNode);
    return node;
}
/**
 * Finds the offset parent common to the two provided nodes
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element1
 * @argument {Element} element2
 * @returns {Element} common offset parent
 */ function $6e53e969d332ed9f$var$findCommonOffsetParent(element1, element2) {
    // This check is needed to avoid errors in case one of the elements isn't defined for any reason
    if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) return document.documentElement;
    // Here we make sure to give as "start" the element that comes first in the DOM
    var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;
    var start = order ? element1 : element2;
    var end = order ? element2 : element1;
    // Get common ancestor container
    var range = document.createRange();
    range.setStart(start, 0);
    range.setEnd(end, 0);
    var commonAncestorContainer = range.commonAncestorContainer;
    // Both nodes are inside #document
    if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {
        if ($6e53e969d332ed9f$var$isOffsetContainer(commonAncestorContainer)) return commonAncestorContainer;
        return $6e53e969d332ed9f$var$getOffsetParent(commonAncestorContainer);
    }
    // one of the nodes is inside shadowDOM, find which one
    var element1root = $6e53e969d332ed9f$var$getRoot(element1);
    if (element1root.host) return $6e53e969d332ed9f$var$findCommonOffsetParent(element1root.host, element2);
    else return $6e53e969d332ed9f$var$findCommonOffsetParent(element1, $6e53e969d332ed9f$var$getRoot(element2).host);
}
/**
 * Gets the scroll value of the given element in the given side (top and left)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {String} side `top` or `left`
 * @returns {number} amount of scrolled pixels
 */ function $6e53e969d332ed9f$var$getScroll(element) {
    var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "top";
    var upperSide = side === "top" ? "scrollTop" : "scrollLeft";
    var nodeName = element.nodeName;
    if (nodeName === "BODY" || nodeName === "HTML") {
        var html = element.ownerDocument.documentElement;
        var scrollingElement = element.ownerDocument.scrollingElement || html;
        return scrollingElement[upperSide];
    }
    return element[upperSide];
}
/*
 * Sum or subtract the element scroll values (left and top) from a given rect object
 * @method
 * @memberof Popper.Utils
 * @param {Object} rect - Rect object you want to change
 * @param {HTMLElement} element - The element from the function reads the scroll values
 * @param {Boolean} subtract - set to true if you want to subtract the scroll values
 * @return {Object} rect - The modifier rect object
 */ function $6e53e969d332ed9f$var$includeScroll(rect, element) {
    var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var scrollTop = $6e53e969d332ed9f$var$getScroll(element, "top");
    var scrollLeft = $6e53e969d332ed9f$var$getScroll(element, "left");
    var modifier = subtract ? -1 : 1;
    rect.top += scrollTop * modifier;
    rect.bottom += scrollTop * modifier;
    rect.left += scrollLeft * modifier;
    rect.right += scrollLeft * modifier;
    return rect;
}
/*
 * Helper to detect borders of a given element
 * @method
 * @memberof Popper.Utils
 * @param {CSSStyleDeclaration} styles
 * Result of `getStyleComputedProperty` on the given element
 * @param {String} axis - `x` or `y`
 * @return {number} borders - The borders size of the given axis
 */ function $6e53e969d332ed9f$var$getBordersSize(styles, axis) {
    var sideA = axis === "x" ? "Left" : "Top";
    var sideB = sideA === "Left" ? "Right" : "Bottom";
    return parseFloat(styles["border" + sideA + "Width"], 10) + parseFloat(styles["border" + sideB + "Width"], 10);
}
function $6e53e969d332ed9f$var$getSize(axis, body, html, computedStyle) {
    return Math.max(body["offset" + axis], body["scroll" + axis], html["client" + axis], html["offset" + axis], html["scroll" + axis], $6e53e969d332ed9f$var$isIE(10) ? parseInt(html["offset" + axis]) + parseInt(computedStyle["margin" + (axis === "Height" ? "Top" : "Left")]) + parseInt(computedStyle["margin" + (axis === "Height" ? "Bottom" : "Right")]) : 0);
}
function $6e53e969d332ed9f$var$getWindowSizes(document1) {
    var body = document1.body;
    var html = document1.documentElement;
    var computedStyle = $6e53e969d332ed9f$var$isIE(10) && getComputedStyle(html);
    return {
        height: $6e53e969d332ed9f$var$getSize("Height", body, html, computedStyle),
        width: $6e53e969d332ed9f$var$getSize("Width", body, html, computedStyle)
    };
}
var $6e53e969d332ed9f$var$classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
};
var $6e53e969d332ed9f$var$createClass = function() {
    function defineProperties(target, props) {
        for(var i = 0; i < props.length; i++){
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    return function(Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
    };
}();
var $6e53e969d332ed9f$var$defineProperty = function(obj, key, value) {
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
};
var $6e53e969d332ed9f$var$_extends = Object.assign || function(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i];
        for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
    }
    return target;
};
/**
 * Given element offsets, generate an output similar to getBoundingClientRect
 * @method
 * @memberof Popper.Utils
 * @argument {Object} offsets
 * @returns {Object} ClientRect like output
 */ function $6e53e969d332ed9f$var$getClientRect(offsets) {
    return $6e53e969d332ed9f$var$_extends({}, offsets, {
        right: offsets.left + offsets.width,
        bottom: offsets.top + offsets.height
    });
}
/**
 * Get bounding client rect of given element
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} element
 * @return {Object} client rect
 */ function $6e53e969d332ed9f$var$getBoundingClientRect(element) {
    var rect = {};
    // IE10 10 FIX: Please, don't ask, the element isn't
    // considered in DOM in some circumstances...
    // This isn't reproducible in IE10 compatibility mode of IE11
    try {
        if ($6e53e969d332ed9f$var$isIE(10)) {
            rect = element.getBoundingClientRect();
            var scrollTop = $6e53e969d332ed9f$var$getScroll(element, "top");
            var scrollLeft = $6e53e969d332ed9f$var$getScroll(element, "left");
            rect.top += scrollTop;
            rect.left += scrollLeft;
            rect.bottom += scrollTop;
            rect.right += scrollLeft;
        } else rect = element.getBoundingClientRect();
    } catch (e) {}
    var result = {
        left: rect.left,
        top: rect.top,
        width: rect.right - rect.left,
        height: rect.bottom - rect.top
    };
    // subtract scrollbar size from sizes
    var sizes = element.nodeName === "HTML" ? $6e53e969d332ed9f$var$getWindowSizes(element.ownerDocument) : {};
    var width = sizes.width || element.clientWidth || result.right - result.left;
    var height = sizes.height || element.clientHeight || result.bottom - result.top;
    var horizScrollbar = element.offsetWidth - width;
    var vertScrollbar = element.offsetHeight - height;
    // if an hypothetical scrollbar is detected, we must be sure it's not a `border`
    // we make this check conditional for performance reasons
    if (horizScrollbar || vertScrollbar) {
        var styles = $6e53e969d332ed9f$var$getStyleComputedProperty(element);
        horizScrollbar -= $6e53e969d332ed9f$var$getBordersSize(styles, "x");
        vertScrollbar -= $6e53e969d332ed9f$var$getBordersSize(styles, "y");
        result.width -= horizScrollbar;
        result.height -= vertScrollbar;
    }
    return $6e53e969d332ed9f$var$getClientRect(result);
}
function $6e53e969d332ed9f$var$getOffsetRectRelativeToArbitraryNode(children, parent) {
    var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var isIE10 = $6e53e969d332ed9f$var$isIE(10);
    var isHTML = parent.nodeName === "HTML";
    var childrenRect = $6e53e969d332ed9f$var$getBoundingClientRect(children);
    var parentRect = $6e53e969d332ed9f$var$getBoundingClientRect(parent);
    var scrollParent = $6e53e969d332ed9f$var$getScrollParent(children);
    var styles = $6e53e969d332ed9f$var$getStyleComputedProperty(parent);
    var borderTopWidth = parseFloat(styles.borderTopWidth, 10);
    var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);
    // In cases where the parent is fixed, we must ignore negative scroll in offset calc
    if (fixedPosition && isHTML) {
        parentRect.top = Math.max(parentRect.top, 0);
        parentRect.left = Math.max(parentRect.left, 0);
    }
    var offsets = $6e53e969d332ed9f$var$getClientRect({
        top: childrenRect.top - parentRect.top - borderTopWidth,
        left: childrenRect.left - parentRect.left - borderLeftWidth,
        width: childrenRect.width,
        height: childrenRect.height
    });
    offsets.marginTop = 0;
    offsets.marginLeft = 0;
    // Subtract margins of documentElement in case it's being used as parent
    // we do this only on HTML because it's the only element that behaves
    // differently when margins are applied to it. The margins are included in
    // the box of the documentElement, in the other cases not.
    if (!isIE10 && isHTML) {
        var marginTop = parseFloat(styles.marginTop, 10);
        var marginLeft = parseFloat(styles.marginLeft, 10);
        offsets.top -= borderTopWidth - marginTop;
        offsets.bottom -= borderTopWidth - marginTop;
        offsets.left -= borderLeftWidth - marginLeft;
        offsets.right -= borderLeftWidth - marginLeft;
        // Attach marginTop and marginLeft because in some circumstances we may need them
        offsets.marginTop = marginTop;
        offsets.marginLeft = marginLeft;
    }
    if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== "BODY") offsets = $6e53e969d332ed9f$var$includeScroll(offsets, parent);
    return offsets;
}
function $6e53e969d332ed9f$var$getViewportOffsetRectRelativeToArtbitraryNode(element) {
    var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var html = element.ownerDocument.documentElement;
    var relativeOffset = $6e53e969d332ed9f$var$getOffsetRectRelativeToArbitraryNode(element, html);
    var width = Math.max(html.clientWidth, window.innerWidth || 0);
    var height = Math.max(html.clientHeight, window.innerHeight || 0);
    var scrollTop = !excludeScroll ? $6e53e969d332ed9f$var$getScroll(html) : 0;
    var scrollLeft = !excludeScroll ? $6e53e969d332ed9f$var$getScroll(html, "left") : 0;
    var offset = {
        top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
        left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
        width: width,
        height: height
    };
    return $6e53e969d332ed9f$var$getClientRect(offset);
}
/**
 * Check if the given element is fixed or is inside a fixed parent
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {Element} customContainer
 * @returns {Boolean} answer to "isFixed?"
 */ function $6e53e969d332ed9f$var$isFixed(element) {
    var nodeName = element.nodeName;
    if (nodeName === "BODY" || nodeName === "HTML") return false;
    if ($6e53e969d332ed9f$var$getStyleComputedProperty(element, "position") === "fixed") return true;
    var parentNode = $6e53e969d332ed9f$var$getParentNode(element);
    if (!parentNode) return false;
    return $6e53e969d332ed9f$var$isFixed(parentNode);
}
/**
 * Finds the first parent of an element that has a transformed property defined
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} first transformed parent or documentElement
 */ function $6e53e969d332ed9f$var$getFixedPositionOffsetParent(element) {
    // This check is needed to avoid errors in case one of the elements isn't defined for any reason
    if (!element || !element.parentElement || $6e53e969d332ed9f$var$isIE()) return document.documentElement;
    var el = element.parentElement;
    while(el && $6e53e969d332ed9f$var$getStyleComputedProperty(el, "transform") === "none")el = el.parentElement;
    return el || document.documentElement;
}
/**
 * Computed the boundaries limits and return them
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} popper
 * @param {HTMLElement} reference
 * @param {number} padding
 * @param {HTMLElement} boundariesElement - Element used to define the boundaries
 * @param {Boolean} fixedPosition - Is in fixed position mode
 * @returns {Object} Coordinates of the boundaries
 */ function $6e53e969d332ed9f$var$getBoundaries(popper, reference, padding, boundariesElement) {
    var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
    // NOTE: 1 DOM access here
    var boundaries = {
        top: 0,
        left: 0
    };
    var offsetParent = fixedPosition ? $6e53e969d332ed9f$var$getFixedPositionOffsetParent(popper) : $6e53e969d332ed9f$var$findCommonOffsetParent(popper, reference);
    // Handle viewport case
    if (boundariesElement === "viewport") boundaries = $6e53e969d332ed9f$var$getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);
    else {
        // Handle other cases based on DOM element used as boundaries
        var boundariesNode = void 0;
        if (boundariesElement === "scrollParent") {
            boundariesNode = $6e53e969d332ed9f$var$getScrollParent($6e53e969d332ed9f$var$getParentNode(reference));
            if (boundariesNode.nodeName === "BODY") boundariesNode = popper.ownerDocument.documentElement;
        } else if (boundariesElement === "window") boundariesNode = popper.ownerDocument.documentElement;
        else boundariesNode = boundariesElement;
        var offsets = $6e53e969d332ed9f$var$getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);
        // In case of HTML, we need a different computation
        if (boundariesNode.nodeName === "HTML" && !$6e53e969d332ed9f$var$isFixed(offsetParent)) {
            var _getWindowSizes = $6e53e969d332ed9f$var$getWindowSizes(popper.ownerDocument), height = _getWindowSizes.height, width = _getWindowSizes.width;
            boundaries.top += offsets.top - offsets.marginTop;
            boundaries.bottom = height + offsets.top;
            boundaries.left += offsets.left - offsets.marginLeft;
            boundaries.right = width + offsets.left;
        } else // for all the other DOM elements, this one is good
        boundaries = offsets;
    }
    // Add paddings
    padding = padding || 0;
    var isPaddingNumber = typeof padding === "number";
    boundaries.left += isPaddingNumber ? padding : padding.left || 0;
    boundaries.top += isPaddingNumber ? padding : padding.top || 0;
    boundaries.right -= isPaddingNumber ? padding : padding.right || 0;
    boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;
    return boundaries;
}
function $6e53e969d332ed9f$var$getArea(_ref) {
    var width = _ref.width, height = _ref.height;
    return width * height;
}
/**
 * Utility used to transform the `auto` placement to the placement with more
 * available space.
 * @method
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */ function $6e53e969d332ed9f$var$computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {
    var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;
    if (placement.indexOf("auto") === -1) return placement;
    var boundaries = $6e53e969d332ed9f$var$getBoundaries(popper, reference, padding, boundariesElement);
    var rects = {
        top: {
            width: boundaries.width,
            height: refRect.top - boundaries.top
        },
        right: {
            width: boundaries.right - refRect.right,
            height: boundaries.height
        },
        bottom: {
            width: boundaries.width,
            height: boundaries.bottom - refRect.bottom
        },
        left: {
            width: refRect.left - boundaries.left,
            height: boundaries.height
        }
    };
    var sortedAreas = Object.keys(rects).map(function(key) {
        return $6e53e969d332ed9f$var$_extends({
            key: key
        }, rects[key], {
            area: $6e53e969d332ed9f$var$getArea(rects[key])
        });
    }).sort(function(a, b) {
        return b.area - a.area;
    });
    var filteredAreas = sortedAreas.filter(function(_ref2) {
        var width = _ref2.width, height = _ref2.height;
        return width >= popper.clientWidth && height >= popper.clientHeight;
    });
    var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;
    var variation = placement.split("-")[1];
    return computedPlacement + (variation ? "-" + variation : "");
}
/**
 * Get offsets to the reference element
 * @method
 * @memberof Popper.Utils
 * @param {Object} state
 * @param {Element} popper - the popper element
 * @param {Element} reference - the reference element (the popper will be relative to this)
 * @param {Element} fixedPosition - is in fixed position mode
 * @returns {Object} An object containing the offsets which will be applied to the popper
 */ function $6e53e969d332ed9f$var$getReferenceOffsets(state, popper, reference) {
    var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
    var commonOffsetParent = fixedPosition ? $6e53e969d332ed9f$var$getFixedPositionOffsetParent(popper) : $6e53e969d332ed9f$var$findCommonOffsetParent(popper, reference);
    return $6e53e969d332ed9f$var$getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);
}
/**
 * Get the outer sizes of the given element (offset size + margins)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Object} object containing width and height properties
 */ function $6e53e969d332ed9f$var$getOuterSizes(element) {
    var window1 = element.ownerDocument.defaultView;
    var styles = window1.getComputedStyle(element);
    var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);
    var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);
    var result = {
        width: element.offsetWidth + y,
        height: element.offsetHeight + x
    };
    return result;
}
/**
 * Get the opposite placement of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement
 * @returns {String} flipped placement
 */ function $6e53e969d332ed9f$var$getOppositePlacement(placement) {
    var hash = {
        left: "right",
        right: "left",
        bottom: "top",
        top: "bottom"
    };
    return placement.replace(/left|right|bottom|top/g, function(matched) {
        return hash[matched];
    });
}
/**
 * Get offsets to the popper
 * @method
 * @memberof Popper.Utils
 * @param {Object} position - CSS position the Popper will get applied
 * @param {HTMLElement} popper - the popper element
 * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)
 * @param {String} placement - one of the valid placement options
 * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper
 */ function $6e53e969d332ed9f$var$getPopperOffsets(popper, referenceOffsets, placement) {
    placement = placement.split("-")[0];
    // Get popper node sizes
    var popperRect = $6e53e969d332ed9f$var$getOuterSizes(popper);
    // Add position, width and height to our offsets object
    var popperOffsets = {
        width: popperRect.width,
        height: popperRect.height
    };
    // depending by the popper placement we have to compute its offsets slightly differently
    var isHoriz = [
        "right",
        "left"
    ].indexOf(placement) !== -1;
    var mainSide = isHoriz ? "top" : "left";
    var secondarySide = isHoriz ? "left" : "top";
    var measurement = isHoriz ? "height" : "width";
    var secondaryMeasurement = !isHoriz ? "height" : "width";
    popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;
    if (placement === secondarySide) popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];
    else popperOffsets[secondarySide] = referenceOffsets[$6e53e969d332ed9f$var$getOppositePlacement(secondarySide)];
    return popperOffsets;
}
/**
 * Mimics the `find` method of Array
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */ function $6e53e969d332ed9f$var$find(arr, check) {
    // use native find if supported
    if (Array.prototype.find) return arr.find(check);
    // use `filter` to obtain the same behavior of `find`
    return arr.filter(check)[0];
}
/**
 * Return the index of the matching object
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */ function $6e53e969d332ed9f$var$findIndex(arr, prop, value) {
    // use native findIndex if supported
    if (Array.prototype.findIndex) return arr.findIndex(function(cur) {
        return cur[prop] === value;
    });
    // use `find` + `indexOf` if `findIndex` isn't supported
    var match = $6e53e969d332ed9f$var$find(arr, function(obj) {
        return obj[prop] === value;
    });
    return arr.indexOf(match);
}
/**
 * Loop trough the list of modifiers and run them in order,
 * each of them will then edit the data object.
 * @method
 * @memberof Popper.Utils
 * @param {dataObject} data
 * @param {Array} modifiers
 * @param {String} ends - Optional modifier name used as stopper
 * @returns {dataObject}
 */ function $6e53e969d332ed9f$var$runModifiers(modifiers, data, ends) {
    var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, $6e53e969d332ed9f$var$findIndex(modifiers, "name", ends));
    modifiersToRun.forEach(function(modifier) {
        if (modifier["function"]) // eslint-disable-line dot-notation
        console.warn("`modifier.function` is deprecated, use `modifier.fn`!");
        var fn = modifier["function"] || modifier.fn; // eslint-disable-line dot-notation
        if (modifier.enabled && $6e53e969d332ed9f$var$isFunction(fn)) {
            // Add properties to offsets to make them a complete clientRect object
            // we do this before each modifier to make sure the previous one doesn't
            // mess with these values
            data.offsets.popper = $6e53e969d332ed9f$var$getClientRect(data.offsets.popper);
            data.offsets.reference = $6e53e969d332ed9f$var$getClientRect(data.offsets.reference);
            data = fn(data, modifier);
        }
    });
    return data;
}
/**
 * Updates the position of the popper, computing the new offsets and applying
 * the new style.<br />
 * Prefer `scheduleUpdate` over `update` because of performance reasons.
 * @method
 * @memberof Popper
 */ function $6e53e969d332ed9f$var$update() {
    // if popper is destroyed, don't perform any further update
    if (this.state.isDestroyed) return;
    var data = {
        instance: this,
        styles: {},
        arrowStyles: {},
        attributes: {},
        flipped: false,
        offsets: {}
    };
    // compute reference element offsets
    data.offsets.reference = $6e53e969d332ed9f$var$getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);
    // compute auto placement, store placement inside the data object,
    // modifiers will be able to edit `placement` if needed
    // and refer to originalPlacement to know the original value
    data.placement = $6e53e969d332ed9f$var$computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);
    // store the computed placement inside `originalPlacement`
    data.originalPlacement = data.placement;
    data.positionFixed = this.options.positionFixed;
    // compute the popper offsets
    data.offsets.popper = $6e53e969d332ed9f$var$getPopperOffsets(this.popper, data.offsets.reference, data.placement);
    data.offsets.popper.position = this.options.positionFixed ? "fixed" : "absolute";
    // run the modifiers
    data = $6e53e969d332ed9f$var$runModifiers(this.modifiers, data);
    // the first `update` will call `onCreate` callback
    // the other ones will call `onUpdate` callback
    if (!this.state.isCreated) {
        this.state.isCreated = true;
        this.options.onCreate(data);
    } else this.options.onUpdate(data);
}
/**
 * Helper used to know if the given modifier is enabled.
 * @method
 * @memberof Popper.Utils
 * @returns {Boolean}
 */ function $6e53e969d332ed9f$var$isModifierEnabled(modifiers, modifierName) {
    return modifiers.some(function(_ref) {
        var name = _ref.name, enabled = _ref.enabled;
        return enabled && name === modifierName;
    });
}
/**
 * Get the prefixed supported property name
 * @method
 * @memberof Popper.Utils
 * @argument {String} property (camelCase)
 * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)
 */ function $6e53e969d332ed9f$var$getSupportedPropertyName(property) {
    var prefixes = [
        false,
        "ms",
        "Webkit",
        "Moz",
        "O"
    ];
    var upperProp = property.charAt(0).toUpperCase() + property.slice(1);
    for(var i = 0; i < prefixes.length; i++){
        var prefix = prefixes[i];
        var toCheck = prefix ? "" + prefix + upperProp : property;
        if (typeof document.body.style[toCheck] !== "undefined") return toCheck;
    }
    return null;
}
/**
 * Destroys the popper.
 * @method
 * @memberof Popper
 */ function $6e53e969d332ed9f$var$destroy() {
    this.state.isDestroyed = true;
    // touch DOM only if `applyStyle` modifier is enabled
    if ($6e53e969d332ed9f$var$isModifierEnabled(this.modifiers, "applyStyle")) {
        this.popper.removeAttribute("x-placement");
        this.popper.style.position = "";
        this.popper.style.top = "";
        this.popper.style.left = "";
        this.popper.style.right = "";
        this.popper.style.bottom = "";
        this.popper.style.willChange = "";
        this.popper.style[$6e53e969d332ed9f$var$getSupportedPropertyName("transform")] = "";
    }
    this.disableEventListeners();
    // remove the popper if user explicity asked for the deletion on destroy
    // do not use `remove` because IE11 doesn't support it
    if (this.options.removeOnDestroy) this.popper.parentNode.removeChild(this.popper);
    return this;
}
/**
 * Get the window associated with the element
 * @argument {Element} element
 * @returns {Window}
 */ function $6e53e969d332ed9f$var$getWindow(element) {
    var ownerDocument = element.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView : window;
}
function $6e53e969d332ed9f$var$attachToScrollParents(scrollParent, event, callback, scrollParents) {
    var isBody = scrollParent.nodeName === "BODY";
    var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;
    target.addEventListener(event, callback, {
        passive: true
    });
    if (!isBody) $6e53e969d332ed9f$var$attachToScrollParents($6e53e969d332ed9f$var$getScrollParent(target.parentNode), event, callback, scrollParents);
    scrollParents.push(target);
}
/**
 * Setup needed event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */ function $6e53e969d332ed9f$var$setupEventListeners(reference, options, state, updateBound) {
    // Resize event listener on window
    state.updateBound = updateBound;
    $6e53e969d332ed9f$var$getWindow(reference).addEventListener("resize", state.updateBound, {
        passive: true
    });
    // Scroll event listener on scroll parents
    var scrollElement = $6e53e969d332ed9f$var$getScrollParent(reference);
    $6e53e969d332ed9f$var$attachToScrollParents(scrollElement, "scroll", state.updateBound, state.scrollParents);
    state.scrollElement = scrollElement;
    state.eventsEnabled = true;
    return state;
}
/**
 * It will add resize/scroll events and start recalculating
 * position of the popper element when they are triggered.
 * @method
 * @memberof Popper
 */ function $6e53e969d332ed9f$var$enableEventListeners() {
    if (!this.state.eventsEnabled) this.state = $6e53e969d332ed9f$var$setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);
}
/**
 * Remove event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */ function $6e53e969d332ed9f$var$removeEventListeners(reference, state) {
    // Remove resize event listener on window
    $6e53e969d332ed9f$var$getWindow(reference).removeEventListener("resize", state.updateBound);
    // Remove scroll event listener on scroll parents
    state.scrollParents.forEach(function(target) {
        target.removeEventListener("scroll", state.updateBound);
    });
    // Reset state
    state.updateBound = null;
    state.scrollParents = [];
    state.scrollElement = null;
    state.eventsEnabled = false;
    return state;
}
/**
 * It will remove resize/scroll events and won't recalculate popper position
 * when they are triggered. It also won't trigger `onUpdate` callback anymore,
 * unless you call `update` method manually.
 * @method
 * @memberof Popper
 */ function $6e53e969d332ed9f$var$disableEventListeners() {
    if (this.state.eventsEnabled) {
        cancelAnimationFrame(this.scheduleUpdate);
        this.state = $6e53e969d332ed9f$var$removeEventListeners(this.reference, this.state);
    }
}
/**
 * Tells if a given input is a number
 * @method
 * @memberof Popper.Utils
 * @param {*} input to check
 * @return {Boolean}
 */ function $6e53e969d332ed9f$var$isNumeric(n) {
    return n !== "" && !isNaN(parseFloat(n)) && isFinite(n);
}
/**
 * Set the style to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the style to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */ function $6e53e969d332ed9f$var$setStyles(element, styles) {
    Object.keys(styles).forEach(function(prop) {
        var unit = "";
        // add unit if the value is numeric and is one of the following
        if ([
            "width",
            "height",
            "top",
            "right",
            "bottom",
            "left"
        ].indexOf(prop) !== -1 && $6e53e969d332ed9f$var$isNumeric(styles[prop])) unit = "px";
        element.style[prop] = styles[prop] + unit;
    });
}
/**
 * Set the attributes to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the attributes to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */ function $6e53e969d332ed9f$var$setAttributes(element, attributes) {
    Object.keys(attributes).forEach(function(prop) {
        var value = attributes[prop];
        if (value !== false) element.setAttribute(prop, attributes[prop]);
        else element.removeAttribute(prop);
    });
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} data.styles - List of style properties - values to apply to popper element
 * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The same data object
 */ function $6e53e969d332ed9f$var$applyStyle(data) {
    // any property present in `data.styles` will be applied to the popper,
    // in this way we can make the 3rd party modifiers add custom styles to it
    // Be aware, modifiers could override the properties defined in the previous
    // lines of this modifier!
    $6e53e969d332ed9f$var$setStyles(data.instance.popper, data.styles);
    // any property present in `data.attributes` will be applied to the popper,
    // they will be set as HTML attributes of the element
    $6e53e969d332ed9f$var$setAttributes(data.instance.popper, data.attributes);
    // if arrowElement is defined and arrowStyles has some properties
    if (data.arrowElement && Object.keys(data.arrowStyles).length) $6e53e969d332ed9f$var$setStyles(data.arrowElement, data.arrowStyles);
    return data;
}
/**
 * Set the x-placement attribute before everything else because it could be used
 * to add margins to the popper margins needs to be calculated to get the
 * correct popper offsets.
 * @method
 * @memberof Popper.modifiers
 * @param {HTMLElement} reference - The reference element used to position the popper
 * @param {HTMLElement} popper - The HTML element used as popper
 * @param {Object} options - Popper.js options
 */ function $6e53e969d332ed9f$var$applyStyleOnLoad(reference, popper, options, modifierOptions, state) {
    // compute reference element offsets
    var referenceOffsets = $6e53e969d332ed9f$var$getReferenceOffsets(state, popper, reference, options.positionFixed);
    // compute auto placement, store placement inside the data object,
    // modifiers will be able to edit `placement` if needed
    // and refer to originalPlacement to know the original value
    var placement = $6e53e969d332ed9f$var$computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);
    popper.setAttribute("x-placement", placement);
    // Apply `position` to popper before anything else because
    // without the position applied we can't guarantee correct computations
    $6e53e969d332ed9f$var$setStyles(popper, {
        position: options.positionFixed ? "fixed" : "absolute"
    });
    return options;
}
/**
 * @function
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Boolean} shouldRound - If the offsets should be rounded at all
 * @returns {Object} The popper's position offsets rounded
 *
 * The tale of pixel-perfect positioning. It's still not 100% perfect, but as
 * good as it can be within reason.
 * Discussion here: https://github.com/FezVrasta/popper.js/pull/715
 *
 * Low DPI screens cause a popper to be blurry if not using full pixels (Safari
 * as well on High DPI screens).
 *
 * Firefox prefers no rounding for positioning and does not have blurriness on
 * high DPI screens.
 *
 * Only horizontal placement and left/right values need to be considered.
 */ function $6e53e969d332ed9f$var$getRoundedOffsets(data, shouldRound) {
    var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
    var round = Math.round, floor = Math.floor;
    var noRound = function noRound(v) {
        return v;
    };
    var referenceWidth = round(reference.width);
    var popperWidth = round(popper.width);
    var isVertical = [
        "left",
        "right"
    ].indexOf(data.placement) !== -1;
    var isVariation = data.placement.indexOf("-") !== -1;
    var sameWidthParity = referenceWidth % 2 === popperWidth % 2;
    var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;
    var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;
    var verticalToInteger = !shouldRound ? noRound : round;
    return {
        left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),
        top: verticalToInteger(popper.top),
        bottom: verticalToInteger(popper.bottom),
        right: horizontalToInteger(popper.right)
    };
}
var $6e53e969d332ed9f$var$isFirefox = $6e53e969d332ed9f$var$isBrowser && /Firefox/i.test(navigator.userAgent);
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */ function $6e53e969d332ed9f$var$computeStyle(data, options) {
    var x = options.x, y = options.y;
    var popper = data.offsets.popper;
    // Remove this legacy support in Popper.js v2
    var legacyGpuAccelerationOption = $6e53e969d332ed9f$var$find(data.instance.modifiers, function(modifier) {
        return modifier.name === "applyStyle";
    }).gpuAcceleration;
    if (legacyGpuAccelerationOption !== undefined) console.warn("WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!");
    var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;
    var offsetParent = $6e53e969d332ed9f$var$getOffsetParent(data.instance.popper);
    var offsetParentRect = $6e53e969d332ed9f$var$getBoundingClientRect(offsetParent);
    // Styles
    var styles = {
        position: popper.position
    };
    var offsets = $6e53e969d332ed9f$var$getRoundedOffsets(data, window.devicePixelRatio < 2 || !$6e53e969d332ed9f$var$isFirefox);
    var sideA = x === "bottom" ? "top" : "bottom";
    var sideB = y === "right" ? "left" : "right";
    // if gpuAcceleration is set to `true` and transform is supported,
    //  we use `translate3d` to apply the position to the popper we
    // automatically use the supported prefixed version if needed
    var prefixedProperty = $6e53e969d332ed9f$var$getSupportedPropertyName("transform");
    // now, let's make a step back and look at this code closely (wtf?)
    // If the content of the popper grows once it's been positioned, it
    // may happen that the popper gets misplaced because of the new content
    // overflowing its reference element
    // To avoid this problem, we provide two options (x and y), which allow
    // the consumer to define the offset origin.
    // If we position a popper on top of a reference element, we can set
    // `x` to `top` to make the popper grow towards its top instead of
    // its bottom.
    var left = void 0, top = void 0;
    if (sideA === "bottom") {
        // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)
        // and not the bottom of the html element
        if (offsetParent.nodeName === "HTML") top = -offsetParent.clientHeight + offsets.bottom;
        else top = -offsetParentRect.height + offsets.bottom;
    } else top = offsets.top;
    if (sideB === "right") {
        if (offsetParent.nodeName === "HTML") left = -offsetParent.clientWidth + offsets.right;
        else left = -offsetParentRect.width + offsets.right;
    } else left = offsets.left;
    if (gpuAcceleration && prefixedProperty) {
        styles[prefixedProperty] = "translate3d(" + left + "px, " + top + "px, 0)";
        styles[sideA] = 0;
        styles[sideB] = 0;
        styles.willChange = "transform";
    } else {
        // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties
        var invertTop = sideA === "bottom" ? -1 : 1;
        var invertLeft = sideB === "right" ? -1 : 1;
        styles[sideA] = top * invertTop;
        styles[sideB] = left * invertLeft;
        styles.willChange = sideA + ", " + sideB;
    }
    // Attributes
    var attributes = {
        "x-placement": data.placement
    };
    // Update `data` attributes, styles and arrowStyles
    data.attributes = $6e53e969d332ed9f$var$_extends({}, attributes, data.attributes);
    data.styles = $6e53e969d332ed9f$var$_extends({}, styles, data.styles);
    data.arrowStyles = $6e53e969d332ed9f$var$_extends({}, data.offsets.arrow, data.arrowStyles);
    return data;
}
/**
 * Helper used to know if the given modifier depends from another one.<br />
 * It checks if the needed modifier is listed and enabled.
 * @method
 * @memberof Popper.Utils
 * @param {Array} modifiers - list of modifiers
 * @param {String} requestingName - name of requesting modifier
 * @param {String} requestedName - name of requested modifier
 * @returns {Boolean}
 */ function $6e53e969d332ed9f$var$isModifierRequired(modifiers, requestingName, requestedName) {
    var requesting = $6e53e969d332ed9f$var$find(modifiers, function(_ref) {
        var name = _ref.name;
        return name === requestingName;
    });
    var isRequired = !!requesting && modifiers.some(function(modifier) {
        return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;
    });
    if (!isRequired) {
        var _requesting = "`" + requestingName + "`";
        var requested = "`" + requestedName + "`";
        console.warn(requested + " modifier is required by " + _requesting + " modifier in order to work, be sure to include it before " + _requesting + "!");
    }
    return isRequired;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */ function $6e53e969d332ed9f$var$arrow(data, options) {
    var _data$offsets$arrow;
    // arrow depends on keepTogether in order to work
    if (!$6e53e969d332ed9f$var$isModifierRequired(data.instance.modifiers, "arrow", "keepTogether")) return data;
    var arrowElement = options.element;
    // if arrowElement is a string, suppose it's a CSS selector
    if (typeof arrowElement === "string") {
        arrowElement = data.instance.popper.querySelector(arrowElement);
        // if arrowElement is not found, don't run the modifier
        if (!arrowElement) return data;
    } else // if the arrowElement isn't a query selector we must check that the
    // provided DOM node is child of its popper node
    if (!data.instance.popper.contains(arrowElement)) {
        console.warn("WARNING: `arrow.element` must be child of its popper element!");
        return data;
    }
    var placement = data.placement.split("-")[0];
    var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
    var isVertical = [
        "left",
        "right"
    ].indexOf(placement) !== -1;
    var len = isVertical ? "height" : "width";
    var sideCapitalized = isVertical ? "Top" : "Left";
    var side = sideCapitalized.toLowerCase();
    var altSide = isVertical ? "left" : "top";
    var opSide = isVertical ? "bottom" : "right";
    var arrowElementSize = $6e53e969d332ed9f$var$getOuterSizes(arrowElement)[len];
    //
    // extends keepTogether behavior making sure the popper and its
    // reference have enough pixels in conjunction
    //
    // top/left side
    if (reference[opSide] - arrowElementSize < popper[side]) data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);
    // bottom/right side
    if (reference[side] + arrowElementSize > popper[opSide]) data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];
    data.offsets.popper = $6e53e969d332ed9f$var$getClientRect(data.offsets.popper);
    // compute center of the popper
    var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;
    // Compute the sideValue using the updated popper offsets
    // take popper margin in account because we don't have this info available
    var css = $6e53e969d332ed9f$var$getStyleComputedProperty(data.instance.popper);
    var popperMarginSide = parseFloat(css["margin" + sideCapitalized], 10);
    var popperBorderSide = parseFloat(css["border" + sideCapitalized + "Width"], 10);
    var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;
    // prevent arrowElement from being placed not contiguously to its popper
    sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);
    data.arrowElement = arrowElement;
    data.offsets.arrow = (_data$offsets$arrow = {}, $6e53e969d332ed9f$var$defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), $6e53e969d332ed9f$var$defineProperty(_data$offsets$arrow, altSide, ""), _data$offsets$arrow);
    return data;
}
/**
 * Get the opposite placement variation of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement variation
 * @returns {String} flipped placement variation
 */ function $6e53e969d332ed9f$var$getOppositeVariation(variation) {
    if (variation === "end") return "start";
    else if (variation === "start") return "end";
    return variation;
}
/**
 * List of accepted placements to use as values of the `placement` option.<br />
 * Valid placements are:
 * - `auto`
 * - `top`
 * - `right`
 * - `bottom`
 * - `left`
 *
 * Each placement can have a variation from this list:
 * - `-start`
 * - `-end`
 *
 * Variations are interpreted easily if you think of them as the left to right
 * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`
 * is right.<br />
 * Vertically (`left` and `right`), `start` is top and `end` is bottom.
 *
 * Some valid examples are:
 * - `top-end` (on top of reference, right aligned)
 * - `right-start` (on right of reference, top aligned)
 * - `bottom` (on bottom, centered)
 * - `auto-end` (on the side with more space available, alignment depends by placement)
 *
 * @static
 * @type {Array}
 * @enum {String}
 * @readonly
 * @method placements
 * @memberof Popper
 */ var $6e53e969d332ed9f$var$placements = [
    "auto-start",
    "auto",
    "auto-end",
    "top-start",
    "top",
    "top-end",
    "right-start",
    "right",
    "right-end",
    "bottom-end",
    "bottom",
    "bottom-start",
    "left-end",
    "left",
    "left-start"
];
// Get rid of `auto` `auto-start` and `auto-end`
var $6e53e969d332ed9f$var$validPlacements = $6e53e969d332ed9f$var$placements.slice(3);
/**
 * Given an initial placement, returns all the subsequent placements
 * clockwise (or counter-clockwise).
 *
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement - A valid placement (it accepts variations)
 * @argument {Boolean} counter - Set to true to walk the placements counterclockwise
 * @returns {Array} placements including their variations
 */ function $6e53e969d332ed9f$var$clockwise(placement) {
    var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var index = $6e53e969d332ed9f$var$validPlacements.indexOf(placement);
    var arr = $6e53e969d332ed9f$var$validPlacements.slice(index + 1).concat($6e53e969d332ed9f$var$validPlacements.slice(0, index));
    return counter ? arr.reverse() : arr;
}
var $6e53e969d332ed9f$var$BEHAVIORS = {
    FLIP: "flip",
    CLOCKWISE: "clockwise",
    COUNTERCLOCKWISE: "counterclockwise"
};
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */ function $6e53e969d332ed9f$var$flip(data, options) {
    // if `inner` modifier is enabled, we can't use the `flip` modifier
    if ($6e53e969d332ed9f$var$isModifierEnabled(data.instance.modifiers, "inner")) return data;
    if (data.flipped && data.placement === data.originalPlacement) // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides
    return data;
    var boundaries = $6e53e969d332ed9f$var$getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);
    var placement = data.placement.split("-")[0];
    var placementOpposite = $6e53e969d332ed9f$var$getOppositePlacement(placement);
    var variation = data.placement.split("-")[1] || "";
    var flipOrder = [];
    switch(options.behavior){
        case $6e53e969d332ed9f$var$BEHAVIORS.FLIP:
            flipOrder = [
                placement,
                placementOpposite
            ];
            break;
        case $6e53e969d332ed9f$var$BEHAVIORS.CLOCKWISE:
            flipOrder = $6e53e969d332ed9f$var$clockwise(placement);
            break;
        case $6e53e969d332ed9f$var$BEHAVIORS.COUNTERCLOCKWISE:
            flipOrder = $6e53e969d332ed9f$var$clockwise(placement, true);
            break;
        default:
            flipOrder = options.behavior;
    }
    flipOrder.forEach(function(step, index) {
        if (placement !== step || flipOrder.length === index + 1) return data;
        placement = data.placement.split("-")[0];
        placementOpposite = $6e53e969d332ed9f$var$getOppositePlacement(placement);
        var popperOffsets = data.offsets.popper;
        var refOffsets = data.offsets.reference;
        // using floor because the reference offsets may contain decimals we are not going to consider here
        var floor = Math.floor;
        var overlapsRef = placement === "left" && floor(popperOffsets.right) > floor(refOffsets.left) || placement === "right" && floor(popperOffsets.left) < floor(refOffsets.right) || placement === "top" && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === "bottom" && floor(popperOffsets.top) < floor(refOffsets.bottom);
        var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);
        var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);
        var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);
        var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);
        var overflowsBoundaries = placement === "left" && overflowsLeft || placement === "right" && overflowsRight || placement === "top" && overflowsTop || placement === "bottom" && overflowsBottom;
        // flip the variation if required
        var isVertical = [
            "top",
            "bottom"
        ].indexOf(placement) !== -1;
        // flips variation if reference element overflows boundaries
        var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === "start" && overflowsLeft || isVertical && variation === "end" && overflowsRight || !isVertical && variation === "start" && overflowsTop || !isVertical && variation === "end" && overflowsBottom);
        // flips variation if popper content overflows boundaries
        var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === "start" && overflowsRight || isVertical && variation === "end" && overflowsLeft || !isVertical && variation === "start" && overflowsBottom || !isVertical && variation === "end" && overflowsTop);
        var flippedVariation = flippedVariationByRef || flippedVariationByContent;
        if (overlapsRef || overflowsBoundaries || flippedVariation) {
            // this boolean to detect any flip loop
            data.flipped = true;
            if (overlapsRef || overflowsBoundaries) placement = flipOrder[index + 1];
            if (flippedVariation) variation = $6e53e969d332ed9f$var$getOppositeVariation(variation);
            data.placement = placement + (variation ? "-" + variation : "");
            // this object contains `position`, we want to preserve it along with
            // any additional property we may add in the future
            data.offsets.popper = $6e53e969d332ed9f$var$_extends({}, data.offsets.popper, $6e53e969d332ed9f$var$getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));
            data = $6e53e969d332ed9f$var$runModifiers(data.instance.modifiers, data, "flip");
        }
    });
    return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */ function $6e53e969d332ed9f$var$keepTogether(data) {
    var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
    var placement = data.placement.split("-")[0];
    var floor = Math.floor;
    var isVertical = [
        "top",
        "bottom"
    ].indexOf(placement) !== -1;
    var side = isVertical ? "right" : "bottom";
    var opSide = isVertical ? "left" : "top";
    var measurement = isVertical ? "width" : "height";
    if (popper[side] < floor(reference[opSide])) data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];
    if (popper[opSide] > floor(reference[side])) data.offsets.popper[opSide] = floor(reference[side]);
    return data;
}
/**
 * Converts a string containing value + unit into a px value number
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} str - Value + unit string
 * @argument {String} measurement - `height` or `width`
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @returns {Number|String}
 * Value in pixels, or original string if no values were extracted
 */ function $6e53e969d332ed9f$var$toValue(str, measurement, popperOffsets, referenceOffsets) {
    // separate value from unit
    var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
    var value = +split[1];
    var unit = split[2];
    // If it's not a number it's an operator, I guess
    if (!value) return str;
    if (unit.indexOf("%") === 0) {
        var element = void 0;
        switch(unit){
            case "%p":
                element = popperOffsets;
                break;
            case "%":
            case "%r":
            default:
                element = referenceOffsets;
        }
        var rect = $6e53e969d332ed9f$var$getClientRect(element);
        return rect[measurement] / 100 * value;
    } else if (unit === "vh" || unit === "vw") {
        // if is a vh or vw, we calculate the size based on the viewport
        var size = void 0;
        if (unit === "vh") size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
        else size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
        return size / 100 * value;
    } else // if is an explicit pixel unit, we get rid of the unit and keep the value
    // if is an implicit unit, it's px, and we return just the value
    return value;
}
/**
 * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} offset
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @argument {String} basePlacement
 * @returns {Array} a two cells array with x and y offsets in numbers
 */ function $6e53e969d332ed9f$var$parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {
    var offsets = [
        0,
        0
    ];
    // Use height if placement is left or right and index is 0 otherwise use width
    // in this way the first offset will use an axis and the second one
    // will use the other one
    var useHeight = [
        "right",
        "left"
    ].indexOf(basePlacement) !== -1;
    // Split the offset string to obtain a list of values and operands
    // The regex addresses values with the plus or minus sign in front (+10, -20, etc)
    var fragments = offset.split(/(\+|\-)/).map(function(frag) {
        return frag.trim();
    });
    // Detect if the offset string contains a pair of values or a single one
    // they could be separated by comma or space
    var divider = fragments.indexOf($6e53e969d332ed9f$var$find(fragments, function(frag) {
        return frag.search(/,|\s/) !== -1;
    }));
    if (fragments[divider] && fragments[divider].indexOf(",") === -1) console.warn("Offsets separated by white space(s) are deprecated, use a comma (,) instead.");
    // If divider is found, we divide the list of values and operands to divide
    // them by ofset X and Y.
    var splitRegex = /\s*,\s*|\s+/;
    var ops = divider !== -1 ? [
        fragments.slice(0, divider).concat([
            fragments[divider].split(splitRegex)[0]
        ]),
        [
            fragments[divider].split(splitRegex)[1]
        ].concat(fragments.slice(divider + 1))
    ] : [
        fragments
    ];
    // Convert the values with units to absolute pixels to allow our computations
    ops = ops.map(function(op, index) {
        // Most of the units rely on the orientation of the popper
        var measurement = (index === 1 ? !useHeight : useHeight) ? "height" : "width";
        var mergeWithPrevious = false;
        return op// This aggregates any `+` or `-` sign that aren't considered operators
        // e.g.: 10 + +5 => [10, +, +5]
        .reduce(function(a, b) {
            if (a[a.length - 1] === "" && [
                "+",
                "-"
            ].indexOf(b) !== -1) {
                a[a.length - 1] = b;
                mergeWithPrevious = true;
                return a;
            } else if (mergeWithPrevious) {
                a[a.length - 1] += b;
                mergeWithPrevious = false;
                return a;
            } else return a.concat(b);
        }, [])// Here we convert the string values into number values (in px)
        .map(function(str) {
            return $6e53e969d332ed9f$var$toValue(str, measurement, popperOffsets, referenceOffsets);
        });
    });
    // Loop trough the offsets arrays and execute the operations
    ops.forEach(function(op, index) {
        op.forEach(function(frag, index2) {
            if ($6e53e969d332ed9f$var$isNumeric(frag)) offsets[index] += frag * (op[index2 - 1] === "-" ? -1 : 1);
        });
    });
    return offsets;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @argument {Number|String} options.offset=0
 * The offset value as described in the modifier description
 * @returns {Object} The data object, properly modified
 */ function $6e53e969d332ed9f$var$offset(data, _ref) {
    var offset = _ref.offset;
    var placement = data.placement, _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
    var basePlacement = placement.split("-")[0];
    var offsets = void 0;
    if ($6e53e969d332ed9f$var$isNumeric(+offset)) offsets = [
        +offset,
        0
    ];
    else offsets = $6e53e969d332ed9f$var$parseOffset(offset, popper, reference, basePlacement);
    if (basePlacement === "left") {
        popper.top += offsets[0];
        popper.left -= offsets[1];
    } else if (basePlacement === "right") {
        popper.top += offsets[0];
        popper.left += offsets[1];
    } else if (basePlacement === "top") {
        popper.left += offsets[0];
        popper.top -= offsets[1];
    } else if (basePlacement === "bottom") {
        popper.left += offsets[0];
        popper.top += offsets[1];
    }
    data.popper = popper;
    return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */ function $6e53e969d332ed9f$var$preventOverflow(data, options) {
    var boundariesElement = options.boundariesElement || $6e53e969d332ed9f$var$getOffsetParent(data.instance.popper);
    // If offsetParent is the reference element, we really want to
    // go one step up and use the next offsetParent as reference to
    // avoid to make this modifier completely useless and look like broken
    if (data.instance.reference === boundariesElement) boundariesElement = $6e53e969d332ed9f$var$getOffsetParent(boundariesElement);
    // NOTE: DOM access here
    // resets the popper's position so that the document size can be calculated excluding
    // the size of the popper element itself
    var transformProp = $6e53e969d332ed9f$var$getSupportedPropertyName("transform");
    var popperStyles = data.instance.popper.style; // assignment to help minification
    var top = popperStyles.top, left = popperStyles.left, transform = popperStyles[transformProp];
    popperStyles.top = "";
    popperStyles.left = "";
    popperStyles[transformProp] = "";
    var boundaries = $6e53e969d332ed9f$var$getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);
    // NOTE: DOM access here
    // restores the original style properties after the offsets have been computed
    popperStyles.top = top;
    popperStyles.left = left;
    popperStyles[transformProp] = transform;
    options.boundaries = boundaries;
    var order = options.priority;
    var popper = data.offsets.popper;
    var check = {
        primary: function primary(placement) {
            var value = popper[placement];
            if (popper[placement] < boundaries[placement] && !options.escapeWithReference) value = Math.max(popper[placement], boundaries[placement]);
            return $6e53e969d332ed9f$var$defineProperty({}, placement, value);
        },
        secondary: function secondary(placement) {
            var mainSide = placement === "right" ? "left" : "top";
            var value = popper[mainSide];
            if (popper[placement] > boundaries[placement] && !options.escapeWithReference) value = Math.min(popper[mainSide], boundaries[placement] - (placement === "right" ? popper.width : popper.height));
            return $6e53e969d332ed9f$var$defineProperty({}, mainSide, value);
        }
    };
    order.forEach(function(placement) {
        var side = [
            "left",
            "top"
        ].indexOf(placement) !== -1 ? "primary" : "secondary";
        popper = $6e53e969d332ed9f$var$_extends({}, popper, check[side](placement));
    });
    data.offsets.popper = popper;
    return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */ function $6e53e969d332ed9f$var$shift(data) {
    var placement = data.placement;
    var basePlacement = placement.split("-")[0];
    var shiftvariation = placement.split("-")[1];
    // if shift shiftvariation is specified, run the modifier
    if (shiftvariation) {
        var _data$offsets = data.offsets, reference = _data$offsets.reference, popper = _data$offsets.popper;
        var isVertical = [
            "bottom",
            "top"
        ].indexOf(basePlacement) !== -1;
        var side = isVertical ? "left" : "top";
        var measurement = isVertical ? "width" : "height";
        var shiftOffsets = {
            start: $6e53e969d332ed9f$var$defineProperty({}, side, reference[side]),
            end: $6e53e969d332ed9f$var$defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])
        };
        data.offsets.popper = $6e53e969d332ed9f$var$_extends({}, popper, shiftOffsets[shiftvariation]);
    }
    return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */ function $6e53e969d332ed9f$var$hide(data) {
    if (!$6e53e969d332ed9f$var$isModifierRequired(data.instance.modifiers, "hide", "preventOverflow")) return data;
    var refRect = data.offsets.reference;
    var bound = $6e53e969d332ed9f$var$find(data.instance.modifiers, function(modifier) {
        return modifier.name === "preventOverflow";
    }).boundaries;
    if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
        // Avoid unnecessary DOM access if visibility hasn't changed
        if (data.hide === true) return data;
        data.hide = true;
        data.attributes["x-out-of-boundaries"] = "";
    } else {
        // Avoid unnecessary DOM access if visibility hasn't changed
        if (data.hide === false) return data;
        data.hide = false;
        data.attributes["x-out-of-boundaries"] = false;
    }
    return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */ function $6e53e969d332ed9f$var$inner(data) {
    var placement = data.placement;
    var basePlacement = placement.split("-")[0];
    var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
    var isHoriz = [
        "left",
        "right"
    ].indexOf(basePlacement) !== -1;
    var subtractLength = [
        "top",
        "left"
    ].indexOf(basePlacement) === -1;
    popper[isHoriz ? "left" : "top"] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? "width" : "height"] : 0);
    data.placement = $6e53e969d332ed9f$var$getOppositePlacement(placement);
    data.offsets.popper = $6e53e969d332ed9f$var$getClientRect(popper);
    return data;
}
/**
 * Modifier function, each modifier can have a function of this type assigned
 * to its `fn` property.<br />
 * These functions will be called on each update, this means that you must
 * make sure they are performant enough to avoid performance bottlenecks.
 *
 * @function ModifierFn
 * @argument {dataObject} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {dataObject} The data object, properly modified
 */ /**
 * Modifiers are plugins used to alter the behavior of your poppers.<br />
 * Popper.js uses a set of 9 modifiers to provide all the basic functionalities
 * needed by the library.
 *
 * Usually you don't want to override the `order`, `fn` and `onLoad` props.
 * All the other properties are configurations that could be tweaked.
 * @namespace modifiers
 */ var $6e53e969d332ed9f$var$modifiers = {
    /**
   * Modifier used to shift the popper on the start or end of its reference
   * element.<br />
   * It will read the variation of the `placement` property.<br />
   * It can be one either `-end` or `-start`.
   * @memberof modifiers
   * @inner
   */ shift: {
        /** @prop {number} order=100 - Index used to define the order of execution */ order: 100,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true,
        /** @prop {ModifierFn} */ fn: $6e53e969d332ed9f$var$shift
    },
    /**
   * The `offset` modifier can shift your popper on both its axis.
   *
   * It accepts the following units:
   * - `px` or unit-less, interpreted as pixels
   * - `%` or `%r`, percentage relative to the length of the reference element
   * - `%p`, percentage relative to the length of the popper element
   * - `vw`, CSS viewport width unit
   * - `vh`, CSS viewport height unit
   *
   * For length is intended the main axis relative to the placement of the popper.<br />
   * This means that if the placement is `top` or `bottom`, the length will be the
   * `width`. In case of `left` or `right`, it will be the `height`.
   *
   * You can provide a single value (as `Number` or `String`), or a pair of values
   * as `String` divided by a comma or one (or more) white spaces.<br />
   * The latter is a deprecated method because it leads to confusion and will be
   * removed in v2.<br />
   * Additionally, it accepts additions and subtractions between different units.
   * Note that multiplications and divisions aren't supported.
   *
   * Valid examples are:
   * ```
   * 10
   * '10%'
   * '10, 10'
   * '10%, 10'
   * '10 + 10%'
   * '10 - 5vh + 3%'
   * '-10px + 5vh, 5px - 6%'
   * ```
   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).
   *
   * @memberof modifiers
   * @inner
   */ offset: {
        /** @prop {number} order=200 - Index used to define the order of execution */ order: 200,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true,
        /** @prop {ModifierFn} */ fn: $6e53e969d332ed9f$var$offset,
        /** @prop {Number|String} offset=0
     * The offset value as described in the modifier description
     */ offset: 0
    },
    /**
   * Modifier used to prevent the popper from being positioned outside the boundary.
   *
   * A scenario exists where the reference itself is not within the boundaries.<br />
   * We can say it has "escaped the boundaries" — or just "escaped".<br />
   * In this case we need to decide whether the popper should either:
   *
   * - detach from the reference and remain "trapped" in the boundaries, or
   * - if it should ignore the boundary and "escape with its reference"
   *
   * When `escapeWithReference` is set to`true` and reference is completely
   * outside its boundaries, the popper will overflow (or completely leave)
   * the boundaries in order to remain attached to the edge of the reference.
   *
   * @memberof modifiers
   * @inner
   */ preventOverflow: {
        /** @prop {number} order=300 - Index used to define the order of execution */ order: 300,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true,
        /** @prop {ModifierFn} */ fn: $6e53e969d332ed9f$var$preventOverflow,
        /**
     * @prop {Array} [priority=['left','right','top','bottom']]
     * Popper will try to prevent overflow following these priorities by default,
     * then, it could overflow on the left and on top of the `boundariesElement`
     */ priority: [
            "left",
            "right",
            "top",
            "bottom"
        ],
        /**
     * @prop {number} padding=5
     * Amount of pixel used to define a minimum distance between the boundaries
     * and the popper. This makes sure the popper always has a little padding
     * between the edges of its container
     */ padding: 5,
        /**
     * @prop {String|HTMLElement} boundariesElement='scrollParent'
     * Boundaries used by the modifier. Can be `scrollParent`, `window`,
     * `viewport` or any DOM element.
     */ boundariesElement: "scrollParent"
    },
    /**
   * Modifier used to make sure the reference and its popper stay near each other
   * without leaving any gap between the two. Especially useful when the arrow is
   * enabled and you want to ensure that it points to its reference element.
   * It cares only about the first axis. You can still have poppers with margin
   * between the popper and its reference element.
   * @memberof modifiers
   * @inner
   */ keepTogether: {
        /** @prop {number} order=400 - Index used to define the order of execution */ order: 400,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true,
        /** @prop {ModifierFn} */ fn: $6e53e969d332ed9f$var$keepTogether
    },
    /**
   * This modifier is used to move the `arrowElement` of the popper to make
   * sure it is positioned between the reference element and its popper element.
   * It will read the outer size of the `arrowElement` node to detect how many
   * pixels of conjunction are needed.
   *
   * It has no effect if no `arrowElement` is provided.
   * @memberof modifiers
   * @inner
   */ arrow: {
        /** @prop {number} order=500 - Index used to define the order of execution */ order: 500,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true,
        /** @prop {ModifierFn} */ fn: $6e53e969d332ed9f$var$arrow,
        /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */ element: "[x-arrow]"
    },
    /**
   * Modifier used to flip the popper's placement when it starts to overlap its
   * reference element.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   *
   * **NOTE:** this modifier will interrupt the current update cycle and will
   * restart it if it detects the need to flip the placement.
   * @memberof modifiers
   * @inner
   */ flip: {
        /** @prop {number} order=600 - Index used to define the order of execution */ order: 600,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true,
        /** @prop {ModifierFn} */ fn: $6e53e969d332ed9f$var$flip,
        /**
     * @prop {String|Array} behavior='flip'
     * The behavior used to change the popper's placement. It can be one of
     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
     * placements (with optional variations)
     */ behavior: "flip",
        /**
     * @prop {number} padding=5
     * The popper will flip if it hits the edges of the `boundariesElement`
     */ padding: 5,
        /**
     * @prop {String|HTMLElement} boundariesElement='viewport'
     * The element which will define the boundaries of the popper position.
     * The popper will never be placed outside of the defined boundaries
     * (except if `keepTogether` is enabled)
     */ boundariesElement: "viewport",
        /**
     * @prop {Boolean} flipVariations=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the reference element overlaps its boundaries.
     *
     * The original placement should have a set variation.
     */ flipVariations: false,
        /**
     * @prop {Boolean} flipVariationsByContent=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the popper element overlaps its reference boundaries.
     *
     * The original placement should have a set variation.
     */ flipVariationsByContent: false
    },
    /**
   * Modifier used to make the popper flow toward the inner of the reference element.
   * By default, when this modifier is disabled, the popper will be placed outside
   * the reference element.
   * @memberof modifiers
   * @inner
   */ inner: {
        /** @prop {number} order=700 - Index used to define the order of execution */ order: 700,
        /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */ enabled: false,
        /** @prop {ModifierFn} */ fn: $6e53e969d332ed9f$var$inner
    },
    /**
   * Modifier used to hide the popper when its reference element is outside of the
   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
   * be used to hide with a CSS selector the popper when its reference is
   * out of boundaries.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   * @memberof modifiers
   * @inner
   */ hide: {
        /** @prop {number} order=800 - Index used to define the order of execution */ order: 800,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true,
        /** @prop {ModifierFn} */ fn: $6e53e969d332ed9f$var$hide
    },
    /**
   * Computes the style that will be applied to the popper element to gets
   * properly positioned.
   *
   * Note that this modifier will not touch the DOM, it just prepares the styles
   * so that `applyStyle` modifier can apply it. This separation is useful
   * in case you need to replace `applyStyle` with a custom implementation.
   *
   * This modifier has `850` as `order` value to maintain backward compatibility
   * with previous versions of Popper.js. Expect the modifiers ordering method
   * to change in future major versions of the library.
   *
   * @memberof modifiers
   * @inner
   */ computeStyle: {
        /** @prop {number} order=850 - Index used to define the order of execution */ order: 850,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true,
        /** @prop {ModifierFn} */ fn: $6e53e969d332ed9f$var$computeStyle,
        /**
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */ gpuAcceleration: true,
        /**
     * @prop {string} [x='bottom']
     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
     * Change this if your popper should grow in a direction different from `bottom`
     */ x: "bottom",
        /**
     * @prop {string} [x='left']
     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
     * Change this if your popper should grow in a direction different from `right`
     */ y: "right"
    },
    /**
   * Applies the computed styles to the popper element.
   *
   * All the DOM manipulations are limited to this modifier. This is useful in case
   * you want to integrate Popper.js inside a framework or view library and you
   * want to delegate all the DOM manipulations to it.
   *
   * Note that if you disable this modifier, you must make sure the popper element
   * has its position set to `absolute` before Popper.js can do its work!
   *
   * Just disable this modifier and define your own to achieve the desired effect.
   *
   * @memberof modifiers
   * @inner
   */ applyStyle: {
        /** @prop {number} order=900 - Index used to define the order of execution */ order: 900,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true,
        /** @prop {ModifierFn} */ fn: $6e53e969d332ed9f$var$applyStyle,
        /** @prop {Function} */ onLoad: $6e53e969d332ed9f$var$applyStyleOnLoad,
        /**
     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */ gpuAcceleration: undefined
    }
};
/**
 * The `dataObject` is an object containing all the information used by Popper.js.
 * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.
 * @name dataObject
 * @property {Object} data.instance The Popper.js instance
 * @property {String} data.placement Placement applied to popper
 * @property {String} data.originalPlacement Placement originally defined on init
 * @property {Boolean} data.flipped True if popper has been flipped by flip modifier
 * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper
 * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier
 * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.boundaries Offsets of the popper boundaries
 * @property {Object} data.offsets The measurements of popper, reference and arrow elements
 * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0
 */ /**
 * Default options provided to Popper.js constructor.<br />
 * These can be overridden using the `options` argument of Popper.js.<br />
 * To override an option, simply pass an object with the same
 * structure of the `options` object, as the 3rd argument. For example:
 * ```
 * new Popper(ref, pop, {
 *   modifiers: {
 *     preventOverflow: { enabled: false }
 *   }
 * })
 * ```
 * @type {Object}
 * @static
 * @memberof Popper
 */ var $6e53e969d332ed9f$var$Defaults = {
    /**
   * Popper's placement.
   * @prop {Popper.placements} placement='bottom'
   */ placement: "bottom",
    /**
   * Set this to true if you want popper to position it self in 'fixed' mode
   * @prop {Boolean} positionFixed=false
   */ positionFixed: false,
    /**
   * Whether events (resize, scroll) are initially enabled.
   * @prop {Boolean} eventsEnabled=true
   */ eventsEnabled: true,
    /**
   * Set to true if you want to automatically remove the popper when
   * you call the `destroy` method.
   * @prop {Boolean} removeOnDestroy=false
   */ removeOnDestroy: false,
    /**
   * Callback called when the popper is created.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onCreate}
   */ onCreate: function onCreate() {},
    /**
   * Callback called when the popper is updated. This callback is not called
   * on the initialization/creation of the popper, but only on subsequent
   * updates.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onUpdate}
   */ onUpdate: function onUpdate() {},
    /**
   * List of modifiers used to modify the offsets before they are applied to the popper.
   * They provide most of the functionalities of Popper.js.
   * @prop {modifiers}
   */ modifiers: $6e53e969d332ed9f$var$modifiers
};
/**
 * @callback onCreate
 * @param {dataObject} data
 */ /**
 * @callback onUpdate
 * @param {dataObject} data
 */ // Utils
// Methods
var $6e53e969d332ed9f$var$Popper = function() {
    /**
   * Creates a new Popper.js instance.
   * @class Popper
   * @param {Element|referenceObject} reference - The reference element used to position the popper
   * @param {Element} popper - The HTML / XML element used as the popper
   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)
   * @return {Object} instance - The generated Popper.js instance
   */ function Popper(reference, popper) {
        var _this = this;
        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
        $6e53e969d332ed9f$var$classCallCheck(this, Popper);
        this.scheduleUpdate = function() {
            return requestAnimationFrame(_this.update);
        };
        // make update() debounced, so that it only runs at most once-per-tick
        this.update = $6e53e969d332ed9f$var$debounce(this.update.bind(this));
        // with {} we create a new object with the options inside it
        this.options = $6e53e969d332ed9f$var$_extends({}, Popper.Defaults, options);
        // init state
        this.state = {
            isDestroyed: false,
            isCreated: false,
            scrollParents: []
        };
        // get reference and popper elements (allow jQuery wrappers)
        this.reference = reference && reference.jquery ? reference[0] : reference;
        this.popper = popper && popper.jquery ? popper[0] : popper;
        // Deep merge modifiers options
        this.options.modifiers = {};
        Object.keys($6e53e969d332ed9f$var$_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function(name) {
            _this.options.modifiers[name] = $6e53e969d332ed9f$var$_extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});
        });
        // Refactoring modifiers' list (Object => Array)
        this.modifiers = Object.keys(this.options.modifiers).map(function(name) {
            return $6e53e969d332ed9f$var$_extends({
                name: name
            }, _this.options.modifiers[name]);
        })// sort the modifiers by order
        .sort(function(a, b) {
            return a.order - b.order;
        });
        // modifiers have the ability to execute arbitrary code when Popper.js get inited
        // such code is executed in the same order of its modifier
        // they could add new properties to their options configuration
        // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!
        this.modifiers.forEach(function(modifierOptions) {
            if (modifierOptions.enabled && $6e53e969d332ed9f$var$isFunction(modifierOptions.onLoad)) modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
        });
        // fire the first update to position the popper in the right place
        this.update();
        var eventsEnabled = this.options.eventsEnabled;
        if (eventsEnabled) // setup event listeners, they will take care of update the position in specific situations
        this.enableEventListeners();
        this.state.eventsEnabled = eventsEnabled;
    }
    // We can't use class properties because they don't get listed in the
    // class prototype and break stuff like Sinon stubs
    $6e53e969d332ed9f$var$createClass(Popper, [
        {
            key: "update",
            value: function update$$1() {
                return $6e53e969d332ed9f$var$update.call(this);
            }
        },
        {
            key: "destroy",
            value: function destroy$$1() {
                return $6e53e969d332ed9f$var$destroy.call(this);
            }
        },
        {
            key: "enableEventListeners",
            value: function enableEventListeners$$1() {
                return $6e53e969d332ed9f$var$enableEventListeners.call(this);
            }
        },
        {
            key: "disableEventListeners",
            value: function disableEventListeners$$1() {
                return $6e53e969d332ed9f$var$disableEventListeners.call(this);
            }
        }
    ]);
    return Popper;
}();
/**
 * The `referenceObject` is an object that provides an interface compatible with Popper.js
 * and lets you use it as replacement of a real DOM node.<br />
 * You can use this method to position a popper relatively to a set of coordinates
 * in case you don't have a DOM node to use as reference.
 *
 * ```
 * new Popper(referenceObject, popperNode);
 * ```
 *
 * NB: This feature isn't supported in Internet Explorer 10.
 * @name referenceObject
 * @property {Function} data.getBoundingClientRect
 * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.
 * @property {number} data.clientWidth
 * An ES6 getter that will return the width of the virtual reference element.
 * @property {number} data.clientHeight
 * An ES6 getter that will return the height of the virtual reference element.
 */ $6e53e969d332ed9f$var$Popper.Utils = (typeof window !== "undefined" ? window : $parcel$global).PopperUtils;
$6e53e969d332ed9f$var$Popper.placements = $6e53e969d332ed9f$var$placements;
$6e53e969d332ed9f$var$Popper.Defaults = $6e53e969d332ed9f$var$Defaults;
var $6e53e969d332ed9f$export$2e2bcd8739ae039 = $6e53e969d332ed9f$var$Popper;

});

parcelRequire.register("8XP4N", function(module, exports) {
(function() {
    var base64map = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", crypt = {
        // Bit-wise rotation left
        rotl: function(n, b) {
            return n << b | n >>> 32 - b;
        },
        // Bit-wise rotation right
        rotr: function(n, b) {
            return n << 32 - b | n >>> b;
        },
        // Swap big-endian to little-endian and vice versa
        endian: function(n) {
            // If number given, swap endian
            if (n.constructor == Number) return crypt.rotl(n, 8) & 0x00FF00FF | crypt.rotl(n, 24) & 0xFF00FF00;
            // Else, assume array and swap all items
            for(var i = 0; i < n.length; i++)n[i] = crypt.endian(n[i]);
            return n;
        },
        // Generate an array of any length of random bytes
        randomBytes: function(n) {
            for(var bytes = []; n > 0; n--)bytes.push(Math.floor(Math.random() * 256));
            return bytes;
        },
        // Convert a byte array to big-endian 32-bit words
        bytesToWords: function(bytes) {
            for(var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)words[b >>> 5] |= bytes[i] << 24 - b % 32;
            return words;
        },
        // Convert big-endian 32-bit words to a byte array
        wordsToBytes: function(words) {
            for(var bytes = [], b = 0; b < words.length * 32; b += 8)bytes.push(words[b >>> 5] >>> 24 - b % 32 & 0xFF);
            return bytes;
        },
        // Convert a byte array to a hex string
        bytesToHex: function(bytes) {
            for(var hex = [], i = 0; i < bytes.length; i++){
                hex.push((bytes[i] >>> 4).toString(16));
                hex.push((bytes[i] & 0xF).toString(16));
            }
            return hex.join("");
        },
        // Convert a hex string to a byte array
        hexToBytes: function(hex) {
            for(var bytes = [], c = 0; c < hex.length; c += 2)bytes.push(parseInt(hex.substr(c, 2), 16));
            return bytes;
        },
        // Convert a byte array to a base-64 string
        bytesToBase64: function(bytes) {
            for(var base64 = [], i = 0; i < bytes.length; i += 3){
                var triplet = bytes[i] << 16 | bytes[i + 1] << 8 | bytes[i + 2];
                for(var j = 0; j < 4; j++)if (i * 8 + j * 6 <= bytes.length * 8) base64.push(base64map.charAt(triplet >>> 6 * (3 - j) & 0x3F));
                else base64.push("=");
            }
            return base64.join("");
        },
        // Convert a base-64 string to a byte array
        base64ToBytes: function(base64) {
            // Remove non-base-64 characters
            base64 = base64.replace(/[^A-Z0-9+\/]/ig, "");
            for(var bytes = [], i = 0, imod4 = 0; i < base64.length; imod4 = ++i % 4){
                if (imod4 == 0) continue;
                bytes.push((base64map.indexOf(base64.charAt(i - 1)) & Math.pow(2, -2 * imod4 + 8) - 1) << imod4 * 2 | base64map.indexOf(base64.charAt(i)) >>> 6 - imod4 * 2);
            }
            return bytes;
        }
    };
    module.exports = crypt;
})();

});

parcelRequire.register("78RhX", function(module, exports) {
var $53329dc309f51002$var$charenc = {
    // UTF-8 encoding
    utf8: {
        // Convert a string to a byte array
        stringToBytes: function(str) {
            return $53329dc309f51002$var$charenc.bin.stringToBytes(unescape(encodeURIComponent(str)));
        },
        // Convert a byte array to a string
        bytesToString: function(bytes) {
            return decodeURIComponent(escape($53329dc309f51002$var$charenc.bin.bytesToString(bytes)));
        }
    },
    // Binary encoding
    bin: {
        // Convert a string to a byte array
        stringToBytes: function(str) {
            for(var bytes = [], i = 0; i < str.length; i++)bytes.push(str.charCodeAt(i) & 0xFF);
            return bytes;
        },
        // Convert a byte array to a string
        bytesToString: function(bytes) {
            for(var str = [], i = 0; i < bytes.length; i++)str.push(String.fromCharCode(bytes[i]));
            return str.join("");
        }
    }
};
module.exports = $53329dc309f51002$var$charenc;

});

parcelRequire.register("iGHba", function(module, exports) {
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */ // The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports = function(obj) {
    return obj != null && ($d9ada4b206652e5c$var$isBuffer(obj) || $d9ada4b206652e5c$var$isSlowBuffer(obj) || !!obj._isBuffer);
};
function $d9ada4b206652e5c$var$isBuffer(obj) {
    return !!obj.constructor && typeof obj.constructor.isBuffer === "function" && obj.constructor.isBuffer(obj);
}
// For Node v0.10 support. Remove this eventually.
function $d9ada4b206652e5c$var$isSlowBuffer(obj) {
    return typeof obj.readFloatLE === "function" && typeof obj.slice === "function" && $d9ada4b206652e5c$var$isBuffer(obj.slice(0, 0));
}

});

parcelRequire.register("g1Hrr", function(module, exports) {
"use strict";
var $baae6ff2bdf2f3ae$var$vars = {};
var $baae6ff2bdf2f3ae$var$setVar = function setVar(n, v) {
    $baae6ff2bdf2f3ae$var$vars[n] = v;
};
var $baae6ff2bdf2f3ae$var$getVar = function getVar(n) {
    return $baae6ff2bdf2f3ae$var$vars[n] ? $baae6ff2bdf2f3ae$var$vars[n] : 0;
};
var $baae6ff2bdf2f3ae$var$plusVar = function plusVar(n) {
    return $baae6ff2bdf2f3ae$var$setVar(n, $baae6ff2bdf2f3ae$var$getVar(n) + 1);
};
var $baae6ff2bdf2f3ae$var$save = function save() {
    return $baae6ff2bdf2f3ae$var$vars;
};
var $baae6ff2bdf2f3ae$var$load = function load(n) {
    $baae6ff2bdf2f3ae$var$vars = n;
};
module.exports = {
    setVar: $baae6ff2bdf2f3ae$var$setVar,
    getVar: $baae6ff2bdf2f3ae$var$getVar,
    plusVar: $baae6ff2bdf2f3ae$var$plusVar,
    save: $baae6ff2bdf2f3ae$var$save,
    load: $baae6ff2bdf2f3ae$var$load
};

});

parcelRequire.register("dI8Uu", function(module, exports) {
"use strict";
//var BEGIN = require("./text/begin.txt");
module.exports = {
    GID: "gordon",
    GNAME: "Gordonova farma",
    GENTER: "Stiskni ENTER",
    NOSEE: "Nevid\xedš nic zvl\xe1štn\xedho",
    NOCARRY: "Nem\xe1š u sebe nic.",
    NOGO: "Nemůžeš j\xedt nikam.",
    CANGO: "Můžeš j\xedt ",
    HAVE: "M\xe1š u sebe ",
    SEE: "Vid\xedš ",
    //BEGIN
    HELP: '"Gordonova farma" je textov\xe1 hra. Pokud jste se nikdy předt\xedm s textovou hrou nesetkali, pomůže v\xe1m p\xe1r n\xe1sleduj\xedc\xedch tipů.\n\nVe hře ovl\xe1d\xe1te svou postavu, podobně jako v jin\xfdch hr\xe1ch, Na rozd\xedl od klasick\xfdch her v textov\xe9 hře neovl\xe1d\xe1te postavu joystickem, ale př\xedkazy, kter\xfdmi ř\xedk\xe1te postavě, co m\xe1 udělat. Např\xedklad JDI DO DOMU, ZVEDNI KL\xcdČ nebo POUŽIJ ZAPALOVAČ. Hra nepouž\xedv\xe1 grafiku, m\xedsto toho v\xe1m popisuje vše důležit\xe9, co se děje, rovněž textem. Jedn\xe1 se vlastně o interaktivn\xed pov\xeddku, ovšem jej\xed v\xfdsledek je zcela na v\xe1s.\n\nPř\xedkazy zad\xe1v\xe1te nejčastěji pomoc\xed sloves a podstatn\xfdch jmen. Nejpouž\xedvanějš\xed př\xedkazy jsou JDI, VEZMI, POLOŽ, POUŽIJ a PROZKOUMEJ, ale hra rozum\xed i jin\xfdm. M\xedsto VEZMI můžete napsat ZVEDNI nebo SEBER a tak d\xe1l. Abyste nemuseli tolik ps\xe1t, tak stač\xed m\xedsto slovesa zadat jen prvn\xed tři znaky. U většiny předmětů stač\xed rovněž prvn\xed tři znaky. Pokud hře nebude jasn\xe9, jak\xfd předmět přesně mysl\xedte, zept\xe1 se na upřesněn\xed.\n\nJsou i někter\xe9 speci\xe1ln\xed př\xedkazy. INVENT\xc1Ř (nebo zkr\xe1ceně jen "I") v\xe1m vyjmenuje předměty, jak\xe9 m\xe1 postava u sebe (asi v kaps\xe1ch nebo v ruk\xe1ch). Př\xedkaz ROZHL\xc9DNI SE (nebo zkr\xe1ceně R) zopakuje popis m\xedsta, v němž se nach\xe1z\xed vaše postava. Pomoc\xed SAVE se ulož\xed stav hry do paměti v prohl\xedžeči, pomoc\xed LOAD ho zase nahrajete zpět. Můžete si uložit až 9 různ\xfdch her (SAVE 1, SAVE 2, ... SAVE 9) a u př\xedkazu LOAD zadat č\xedslo pozice.\n\nNa zbytek si ale mus\xedte přij\xedt sami. Jen prozrad\xedm, že hra m\xe1 několik možn\xfdch konců a každ\xe9 vaše rozhodnut\xed může hr\xe1t z\xe1sadn\xed roli...'
};

});

parcelRequire.register("4a4Mh", function(module, exports) {
"use strict";

var $hYjWe = parcelRequire("hYjWe");

var $bBTq0 = parcelRequire("bBTq0");
var $307bcd5bb53537b4$var$sysExamine = function sysExamine(game, pars) {
    var itm = game.getItem(pars[0]);
    console.log(itm, pars);
    $hYjWe.printTextYellow("Zkoum\xe1š " + game.itemFullName(itm)[3] + ".");
    game.doDisp(itm.desc);
    if (itm.isCrate()) {
        var inside = game.crateListItems(itm.id);
        if (inside && inside.length) game.doDisp("[R[Objevil jsi][Našel jsi][Uvnitř vid\xedš][Uvnitř jsi našel]] " + $bBTq0.listToText(inside.map(function(q) {
            return game.itemFullName(q)[3];
        })));
         //deshadow
        inside.map(function(q) {
            return q.removeAttr("shadow");
        });
    }
};
module.exports = $307bcd5bb53537b4$var$sysExamine;

});
parcelRequire.register("hYjWe", function(module, exports) {
"use strict";
function $d1578197203d1581$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) resolve(value);
    else Promise.resolve(value).then(_next, _throw);
}
function $d1578197203d1581$var$_asyncToGenerator(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                $d1578197203d1581$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                $d1578197203d1581$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
var $d1578197203d1581$var$texth = 24;
var $d1578197203d1581$var$textw = 10;
var $d1578197203d1581$var$padding = 5;
var $d1578197203d1581$var$maxLinesAtOnce = 13;
var $d1578197203d1581$var$ctx;
var $d1578197203d1581$var$supress = false;
var $d1578197203d1581$var$init = function init() {
    $d1578197203d1581$var$ctx = document.getElementById("canvas").getContext("2d");
    $d1578197203d1581$var$ctx.font = "20px farroregular";
    $d1578197203d1581$var$ctx.fillStyle = "#eee";
    $d1578197203d1581$var$ctx.textBaseline = "top";
    $d1578197203d1581$var$printAt(" . ", 0, $d1578197203d1581$var$cline);
    $d1578197203d1581$var$printAt("     ", 0, $d1578197203d1581$var$cline);
};

var $dI8Uu = parcelRequire("dI8Uu");
var $d1578197203d1581$var$cls = function cls() {
    $d1578197203d1581$var$ctx.clearRect(0, 0, 650, 490);
    $d1578197203d1581$var$cline = 0;
};
var $d1578197203d1581$var$printAt = function printAt(text, x, y) {
    if ($d1578197203d1581$var$supress) return;
    $d1578197203d1581$var$ctx.clearRect(x * $d1578197203d1581$var$textw + $d1578197203d1581$var$padding, y * $d1578197203d1581$var$texth + $d1578197203d1581$var$padding, text.length * $d1578197203d1581$var$textw + 10, $d1578197203d1581$var$texth);
    $d1578197203d1581$var$ctx.fillText(text, x * $d1578197203d1581$var$textw + $d1578197203d1581$var$padding, y * $d1578197203d1581$var$texth + $d1578197203d1581$var$padding); //console.log("PRTAT", text, x, y);
};
/*
var clearRect = function(x, y, w, h) {
  ctx.clearRect(x * textw + padding, y * texth + padding, w * textw, h * texth);
};
*/ var $d1578197203d1581$var$cline = 0;
var $d1578197203d1581$var$maxline = 20; //const main = require("../main.js");
var $d1578197203d1581$var$printLine = function printLine(text) {
    $d1578197203d1581$var$printAt(text, 0, $d1578197203d1581$var$cline);
    $d1578197203d1581$var$cline++;
    if ($d1578197203d1581$var$cline == $d1578197203d1581$var$maxline) $d1578197203d1581$var$scrollUp();
};
var $d1578197203d1581$var$printSameLine = function printSameLine(text) {
    //console.log("SAMELINE", text, cline);
    $d1578197203d1581$var$ctx.fillStyle = "#e4e";
    $d1578197203d1581$var$printAt(text, 0, $d1578197203d1581$var$cline);
    $d1578197203d1581$var$ctx.fillStyle = "#eee"; //cline++;
//if (cline==maxline) scrollUp();
};
var $d1578197203d1581$var$clearSameLine = function clearSameLine() {
    $d1578197203d1581$var$ctx.clearRect(0, $d1578197203d1581$var$cline * $d1578197203d1581$var$texth + $d1578197203d1581$var$padding, 650, $d1578197203d1581$var$texth);
};
var $d1578197203d1581$var$printText = /*#__PURE__*/ function() {
    var _ref = $d1578197203d1581$var$_asyncToGenerator(/*#__PURE__*/ regeneratorRuntime.mark(function _callee(text, prevLineCount) {
        var lineCount, slova, out, w, ww;
        return regeneratorRuntime.wrap(function _callee$(_context) {
            while(true)switch(_context.prev = _context.next){
                case 0:
                    lineCount = prevLineCount ? prevLineCount : 0;
                    slova = text.split(" ");
                    out = [];
                case 3:
                    if (!slova.length) {
                        _context.next = 19;
                        break;
                    }
                    out.push(slova.shift());
                    w = $d1578197203d1581$var$ctx.measureText(out.join(" ")).width;
                    if (!(w > 640)) {
                        _context.next = 17;
                        break;
                    }
                    //jsme přes
                    slova.unshift(out.pop());
                    $d1578197203d1581$var$printLine(out.join(" "));
                    lineCount++;
                    if (!(lineCount == $d1578197203d1581$var$maxLinesAtOnce)) {
                        _context.next = 16;
                        break;
                    }
                    //haveToPause
                    $d1578197203d1581$var$printSameLine($dI8Uu.GENTER);
                    ww = new Promise(function(r) {
                        window.setEnterWaiter(r);
                    }); //.then(() => console.log("WAIT2"))
                    _context.next = 15;
                    return ww;
                case 15:
                    //keyboard.wasEnterPressed()
                    //console.log("WAIT", q);
                    //cline--;
                    lineCount = 0;
                case 16:
                    out = [];
                case 17:
                    _context.next = 3;
                    break;
                case 19:
                    if (out.length) {
                        $d1578197203d1581$var$printLine(out.join(" "));
                        lineCount++;
                    }
                    return _context.abrupt("return", lineCount);
                case 21:
                case "end":
                    return _context.stop();
            }
        }, _callee);
    }));
    return function printText(_x, _x2) {
        return _ref.apply(this, arguments);
    };
}(); //var keyboard = require("./keyboard.js");
var $d1578197203d1581$var$printTextMultiline = /*#__PURE__*/ function() {
    var _ref2 = $d1578197203d1581$var$_asyncToGenerator(/*#__PURE__*/ regeneratorRuntime.mark(function _callee2(t, hasWait) {
        var l, lc, i, ww;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
            while(true)switch(_context2.prev = _context2.next){
                case 0:
                    $d1578197203d1581$var$clearSameLine();
                    l = t.split("\n"); //console.log("PTM", l, l.length);
                    lc = 0; //var hasWait = false;
                    i = 0;
                case 4:
                    if (!(i < l.length)) {
                        _context2.next = 11;
                        break;
                    }
                    _context2.next = 7;
                    return $d1578197203d1581$var$printText(l[i], lc);
                case 7:
                    lc = _context2.sent;
                case 8:
                    i++;
                    _context2.next = 4;
                    break;
                case 11:
                    if (hasWait) {
                        _context2.next = 13;
                        break;
                    }
                    return _context2.abrupt("return", lc);
                case 13:
                    $d1578197203d1581$var$printSameLine($dI8Uu.GENTER);
                    ww = new Promise(function(r) {
                        window.setEnterWaiter(r);
                    });
                    _context2.next = 17;
                    return ww;
                case 17:
                    $d1578197203d1581$var$clearSameLine(); //printSameLine("         ");
                    return _context2.abrupt("return", lc);
                case 19:
                case "end":
                    return _context2.stop();
            }
        }, _callee2);
    }));
    return function printTextMultiline(_x3, _x4) {
        return _ref2.apply(this, arguments);
    };
}();
var $d1578197203d1581$var$printTextRed = function printTextRed(text) {
    $d1578197203d1581$var$ctx.fillStyle = "#e44";
    $d1578197203d1581$var$printText(text);
    $d1578197203d1581$var$ctx.fillStyle = "#eee";
};
var $d1578197203d1581$var$printTextYellow = function printTextYellow(text) {
    $d1578197203d1581$var$ctx.fillStyle = "#ee4";
    $d1578197203d1581$var$printText(text);
    $d1578197203d1581$var$ctx.fillStyle = "#eee";
};
var $d1578197203d1581$var$scrollUp = function scrollUp() {
    var myImageData = $d1578197203d1581$var$ctx.getImageData(0, $d1578197203d1581$var$texth, 640 + 2 * $d1578197203d1581$var$padding, 480 + 2 * $d1578197203d1581$var$padding - $d1578197203d1581$var$texth);
    $d1578197203d1581$var$ctx.clearRect(0, 480 + 2 * $d1578197203d1581$var$padding - $d1578197203d1581$var$texth, 640 + 2 * $d1578197203d1581$var$padding, $d1578197203d1581$var$texth);
    $d1578197203d1581$var$ctx.putImageData(myImageData, 0, 0);
    $d1578197203d1581$var$cline--;
}; //todo:
/*
cls
správně mazat rámce
wait for enter po tisku (printAndWait) :)
*/ module.exports = {
    init: $d1578197203d1581$var$init,
    noPrint: function noPrint(q) {
        $d1578197203d1581$var$supress = q;
    },
    printAt: $d1578197203d1581$var$printAt,
    printLine: $d1578197203d1581$var$printLine,
    printSameLine: $d1578197203d1581$var$printSameLine,
    printText: $d1578197203d1581$var$printText,
    printTextRed: $d1578197203d1581$var$printTextRed,
    printTextYellow: $d1578197203d1581$var$printTextYellow,
    printTextMultiline: $d1578197203d1581$var$printTextMultiline,
    clearSameLine: $d1578197203d1581$var$clearSameLine,
    cls: $d1578197203d1581$var$cls
};

});

parcelRequire.register("bBTq0", function(module, exports) {
"use strict";
function $873e23624f15e36a$var$_slicedToArray(arr, i) {
    return $873e23624f15e36a$var$_arrayWithHoles(arr) || $873e23624f15e36a$var$_iterableToArrayLimit(arr, i) || $873e23624f15e36a$var$_unsupportedIterableToArray(arr, i) || $873e23624f15e36a$var$_nonIterableRest();
}
function $873e23624f15e36a$var$_iterableToArrayLimit(arr, i) {
    if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;
    try {
        for(var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function $873e23624f15e36a$var$_createForOfIteratorHelper(o, allowArrayLike) {
    var it;
    if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
        if (Array.isArray(o) || (it = $873e23624f15e36a$var$_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
            if (it) o = it;
            var i = 0;
            var F = function F() {};
            return {
                s: F,
                n: function n() {
                    if (i >= o.length) return {
                        done: true
                    };
                    return {
                        done: false,
                        value: o[i++]
                    };
                },
                e: function e(_e2) {
                    throw _e2;
                },
                f: F
            };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var normalCompletion = true, didErr = false, err;
    return {
        s: function s() {
            it = o[Symbol.iterator]();
        },
        n: function n() {
            var step = it.next();
            normalCompletion = step.done;
            return step;
        },
        e: function e(_e3) {
            didErr = true;
            err = _e3;
        },
        f: function f() {
            try {
                if (!normalCompletion && it["return"] != null) it["return"]();
            } finally{
                if (didErr) throw err;
            }
        }
    };
}
function $873e23624f15e36a$var$_toArray(arr) {
    return $873e23624f15e36a$var$_arrayWithHoles(arr) || $873e23624f15e36a$var$_iterableToArray(arr) || $873e23624f15e36a$var$_unsupportedIterableToArray(arr) || $873e23624f15e36a$var$_nonIterableRest();
}
function $873e23624f15e36a$var$_nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function $873e23624f15e36a$var$_unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return $873e23624f15e36a$var$_arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return $873e23624f15e36a$var$_arrayLikeToArray(o, minLen);
}
function $873e23624f15e36a$var$_arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function $873e23624f15e36a$var$_iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
}
function $873e23624f15e36a$var$_arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
}

var $f7eT1 = parcelRequire("f7eT1");
var $873e23624f15e36a$var$listToText = function listToText(s, d) {
    if (!d) d = " a "; //var s = l.map(q => q.names[3]);
    var out = "";
    for(var i = 0; i < s.length; i++){
        out += s[i];
        if (i === s.length - 1) out += ".";
        else if (i === s.length - 2) out += d;
        else out += ", ";
    }
    return out;
};
var $873e23624f15e36a$var$listToQuestion = function listToQuestion(s) {
    //var s = l.map(q => q.names[3]);
    var out = "";
    for(var i = 0; i < s.length; i++){
        out += s[i];
        if (i === s.length - 1) out += "?";
        else if (i === s.length - 2) out += ", nebo ";
        else out += ", ";
    }
    return out;
}; //string fixes
var $873e23624f15e36a$var$savedStrings = {};
var $873e23624f15e36a$var$oneShuffle = function oneShuffle(array) {
    return array.sort(function() {
        return Math.random() - 0.5;
    });
};
var $873e23624f15e36a$var$shuffle = function shuffle(array) {
    for(var i = 0; i < 5000; i++){
        array = $873e23624f15e36a$var$oneShuffle(array);
        return array;
    }
};
var $873e23624f15e36a$var$lShuffle = function lShuffle(s) {
    //zamichat a pak furt dokola
    if (typeof s.index === "undefined") {
        s.index = 0;
        s.strings = $873e23624f15e36a$var$shuffle(s.strings);
    }
    var out = s.strings[s.index];
    s.index++;
    if (s.index >= s.strings.length) s.index = 0;
    return out;
};
var $873e23624f15e36a$var$lLoop = function lLoop(s) {
    //zamichat a pak furt dokola
    if (typeof s.index === "undefined") s.index = 0;
    var out = s.strings[s.index];
    s.index++;
    if (s.index >= s.strings.length) s.index = 0;
    return out;
};
var $873e23624f15e36a$var$lShot = function lShot(s) {
    //1, 2, 3, ... 9, "", ""
    if (typeof s.index === "undefined") s.index = 0;
    if (s.index >= s.strings.length) return "";
    var out = s.strings[s.index];
    s.index++;
    return out;
};
var $873e23624f15e36a$var$lLast = function lLast(s) {
    //1, 2, 3, ... 9, 9, 9
    if (typeof s.index === "undefined") s.index = 0;
    if (s.index >= s.strings.length) s.index--;
    var out = s.strings[s.index];
    s.index++;
    return out;
};
var $873e23624f15e36a$var$lRand = function lRand(s) {
    var idx = Math.floor(Math.random() * s.strings.length);
    return s.strings[idx];
};
var $873e23624f15e36a$var$prepareSaved = function prepareSaved(sx) {
    var type = "";
    switch(sx[1].toUpperCase()){
        case "S":
            type = "shuffle";
            break;
        case "O":
            type = "oneshoot";
            break;
        case "L":
            type = "loop";
            break;
        case "R":
            type = "rand";
            break;
        case "T":
            type = "last";
            break;
    }
    if (!type) return sx;
    var strings = sx.substr(2).match(/\[.*?\]/g).map(function(q) {
        return q.substr(1, q.length - 2);
    }); //console.log(sx, strings);
    return {
        type: type,
        strings: strings
    };
};

var $g1Hrr = parcelRequire("g1Hrr");
var $873e23624f15e36a$var$tConds = function tConds(cs, game) {
    var _cs$split = cs.split(","), _cs$split2 = $873e23624f15e36a$var$_toArray(_cs$split), cond = _cs$split2[0], pars = _cs$split2.slice(1);
    console.log(cond, pars);
    var hasNeg = cond[0] === "!";
    if (hasNeg) cond = cond.substr(1);
    var value = false;
    switch(cond.toUpperCase()){
        case "VZ":
            //var zero
            value = $g1Hrr.getVar(pars[0]) === 0;
            break;
        case "VE":
            //var equal
            value = $g1Hrr.getVar(pars[0]) == pars[1];
            break;
        case "IC":
            //item carried
            value = game.getItem(pars[0]).carry();
            break;
        case "IH":
            //item here
            value = game.getItem(pars[0]).isHere();
            break;
    }
    if (hasNeg) value = value ? false : true;
    return value;
}; //Podmíněné řetězce
/*

{cond|text}
{cond|text|else}

vyhodnotí podmínku viz výše

*/ var $873e23624f15e36a$var$condString = function condString(s, game) {
    //conditioned string
    var conds = s.match(/\{(.*?)\}/g);
    if (!conds) return s;
    var _iterator = $873e23624f15e36a$var$_createForOfIteratorHelper(conds), _step;
    try {
        for(_iterator.s(); !(_step = _iterator.n()).done;){
            var condX = _step.value;
            var _condX$substr$split = condX.substr(1, condX.length - 2).split("|"), _condX$substr$split2 = $873e23624f15e36a$var$_slicedToArray(_condX$substr$split, 3), cond = _condX$substr$split2[0], text = _condX$substr$split2[1], els = _condX$substr$split2[2]; //console.log("QQ", cond, text, els);
            if ($873e23624f15e36a$var$tConds(cond, game)) s = s.replace(condX, text);
            else if (els) s = s.replace(condX, els);
            else s = s.replace(condX, "");
        } //console.log(conds);
    } catch (err) {
        _iterator.e(err);
    } finally{
        _iterator.f();
    }
    return s;
};
var $873e23624f15e36a$var$fixString = function fixString(s, g) {
    if (typeof s === "string") {
        //zpracování řetězců
        s = $873e23624f15e36a$var$condString(s, g);
        var mulfix = s.match(/\[(.\[.*?\])\]/g);
        if (!mulfix || !mulfix.length) return s; //just a simple string
        var _iterator2 = $873e23624f15e36a$var$_createForOfIteratorHelper(mulfix), _step2;
        try {
            for(_iterator2.s(); !(_step2 = _iterator2.n()).done;){
                var t = _step2.value;
                var sign = $f7eT1(t);
                if (!$873e23624f15e36a$var$savedStrings[sign]) /// prepare
                $873e23624f15e36a$var$savedStrings[sign] = $873e23624f15e36a$var$prepareSaved(t);
                var out = fixString($873e23624f15e36a$var$savedStrings[sign]); //console.log(savedStrings[sign]);
                s = s.replace(t, out);
            }
        } catch (err) {
            _iterator2.e(err);
        } finally{
            _iterator2.f();
        }
        return s; //po všech replacementech
    } //object. Asi list
    //probabilita
    if (!s.density) s.density = 1;
    if (Math.random() > 1 / s.density) return ""; //je inicializovaný?
    switch(s.type){
        case "shuffle":
            return $873e23624f15e36a$var$lShuffle(s);
        case "oneshot":
            return $873e23624f15e36a$var$lShot(s);
        case "loop":
            return $873e23624f15e36a$var$lLoop(s);
        case "rand":
            return $873e23624f15e36a$var$lRand(s);
        case "last":
            return $873e23624f15e36a$var$lLast(s);
    }
}; //formátovat řetězec s palceholderem pro předmět
/*
#0, #1, #2 ... item name podle pádu
^0, ^1 ... dtto, ale s prvním písmenem velkým
*/ var $873e23624f15e36a$var$formatItem = function formatItem(s, itm) {
    var replaces = s.match(/\#[0-9]/g);
    if (replaces) {
        var _iterator3 = $873e23624f15e36a$var$_createForOfIteratorHelper(replaces), _step3;
        try {
            for(_iterator3.s(); !(_step3 = _iterator3.n()).done;){
                var t = _step3.value;
                var flex = parseInt(t[1]);
                s = s.replace(t, itm.fullName(flex));
            }
        } catch (err) {
            _iterator3.e(err);
        } finally{
            _iterator3.f();
        }
    }
    replaces = s.match(/\^[0-9]/g); //capitalize
    if (replaces) {
        var _iterator4 = $873e23624f15e36a$var$_createForOfIteratorHelper(replaces), _step4;
        try {
            for(_iterator4.s(); !(_step4 = _iterator4.n()).done;){
                t = _step4.value;
                var fn = itm.fullName(parseInt(t[1]));
                fn = fn[0].toUpperCase() + fn.substr(1);
                s = s.replace(t, fn);
            }
        } catch (err1) {
            _iterator4.e(err1);
        } finally{
            _iterator4.f();
        }
    }
    return s;
};
module.exports = {
    listToText: $873e23624f15e36a$var$listToText,
    listToQuestion: $873e23624f15e36a$var$listToQuestion,
    fixString: $873e23624f15e36a$var$fixString,
    formatItem: $873e23624f15e36a$var$formatItem
};

});
parcelRequire.register("f7eT1", function(module, exports) {




(function() {
    var crypt = (parcelRequire("8XP4N")), utf8 = (parcelRequire("78RhX")).utf8, isBuffer = (parcelRequire("iGHba")), bin = (parcelRequire("78RhX")).bin, // The core
    md5 = function(message, options) {
        // Convert to byte array
        if (message.constructor == String) {
            if (options && options.encoding === "binary") message = bin.stringToBytes(message);
            else message = utf8.stringToBytes(message);
        } else if (isBuffer(message)) message = Array.prototype.slice.call(message, 0);
        else if (!Array.isArray(message)) message = message.toString();
        // else, assume byte array already
        var m = crypt.bytesToWords(message), l = message.length * 8, a = 1732584193, b = -271733879, c = -1732584194, d = 271733878;
        // Swap endian
        for(var i = 0; i < m.length; i++)m[i] = (m[i] << 8 | m[i] >>> 24) & 0x00FF00FF | (m[i] << 24 | m[i] >>> 8) & 0xFF00FF00;
        // Padding
        m[l >>> 5] |= 0x80 << l % 32;
        m[(l + 64 >>> 9 << 4) + 14] = l;
        // Method shortcuts
        var FF = md5._ff, GG = md5._gg, HH = md5._hh, II = md5._ii;
        for(var i = 0; i < m.length; i += 16){
            var aa = a, bb = b, cc = c, dd = d;
            a = FF(a, b, c, d, m[i + 0], 7, -680876936);
            d = FF(d, a, b, c, m[i + 1], 12, -389564586);
            c = FF(c, d, a, b, m[i + 2], 17, 606105819);
            b = FF(b, c, d, a, m[i + 3], 22, -1044525330);
            a = FF(a, b, c, d, m[i + 4], 7, -176418897);
            d = FF(d, a, b, c, m[i + 5], 12, 1200080426);
            c = FF(c, d, a, b, m[i + 6], 17, -1473231341);
            b = FF(b, c, d, a, m[i + 7], 22, -45705983);
            a = FF(a, b, c, d, m[i + 8], 7, 1770035416);
            d = FF(d, a, b, c, m[i + 9], 12, -1958414417);
            c = FF(c, d, a, b, m[i + 10], 17, -42063);
            b = FF(b, c, d, a, m[i + 11], 22, -1990404162);
            a = FF(a, b, c, d, m[i + 12], 7, 1804603682);
            d = FF(d, a, b, c, m[i + 13], 12, -40341101);
            c = FF(c, d, a, b, m[i + 14], 17, -1502002290);
            b = FF(b, c, d, a, m[i + 15], 22, 1236535329);
            a = GG(a, b, c, d, m[i + 1], 5, -165796510);
            d = GG(d, a, b, c, m[i + 6], 9, -1069501632);
            c = GG(c, d, a, b, m[i + 11], 14, 643717713);
            b = GG(b, c, d, a, m[i + 0], 20, -373897302);
            a = GG(a, b, c, d, m[i + 5], 5, -701558691);
            d = GG(d, a, b, c, m[i + 10], 9, 38016083);
            c = GG(c, d, a, b, m[i + 15], 14, -660478335);
            b = GG(b, c, d, a, m[i + 4], 20, -405537848);
            a = GG(a, b, c, d, m[i + 9], 5, 568446438);
            d = GG(d, a, b, c, m[i + 14], 9, -1019803690);
            c = GG(c, d, a, b, m[i + 3], 14, -187363961);
            b = GG(b, c, d, a, m[i + 8], 20, 1163531501);
            a = GG(a, b, c, d, m[i + 13], 5, -1444681467);
            d = GG(d, a, b, c, m[i + 2], 9, -51403784);
            c = GG(c, d, a, b, m[i + 7], 14, 1735328473);
            b = GG(b, c, d, a, m[i + 12], 20, -1926607734);
            a = HH(a, b, c, d, m[i + 5], 4, -378558);
            d = HH(d, a, b, c, m[i + 8], 11, -2022574463);
            c = HH(c, d, a, b, m[i + 11], 16, 1839030562);
            b = HH(b, c, d, a, m[i + 14], 23, -35309556);
            a = HH(a, b, c, d, m[i + 1], 4, -1530992060);
            d = HH(d, a, b, c, m[i + 4], 11, 1272893353);
            c = HH(c, d, a, b, m[i + 7], 16, -155497632);
            b = HH(b, c, d, a, m[i + 10], 23, -1094730640);
            a = HH(a, b, c, d, m[i + 13], 4, 681279174);
            d = HH(d, a, b, c, m[i + 0], 11, -358537222);
            c = HH(c, d, a, b, m[i + 3], 16, -722521979);
            b = HH(b, c, d, a, m[i + 6], 23, 76029189);
            a = HH(a, b, c, d, m[i + 9], 4, -640364487);
            d = HH(d, a, b, c, m[i + 12], 11, -421815835);
            c = HH(c, d, a, b, m[i + 15], 16, 530742520);
            b = HH(b, c, d, a, m[i + 2], 23, -995338651);
            a = II(a, b, c, d, m[i + 0], 6, -198630844);
            d = II(d, a, b, c, m[i + 7], 10, 1126891415);
            c = II(c, d, a, b, m[i + 14], 15, -1416354905);
            b = II(b, c, d, a, m[i + 5], 21, -57434055);
            a = II(a, b, c, d, m[i + 12], 6, 1700485571);
            d = II(d, a, b, c, m[i + 3], 10, -1894986606);
            c = II(c, d, a, b, m[i + 10], 15, -1051523);
            b = II(b, c, d, a, m[i + 1], 21, -2054922799);
            a = II(a, b, c, d, m[i + 8], 6, 1873313359);
            d = II(d, a, b, c, m[i + 15], 10, -30611744);
            c = II(c, d, a, b, m[i + 6], 15, -1560198380);
            b = II(b, c, d, a, m[i + 13], 21, 1309151649);
            a = II(a, b, c, d, m[i + 4], 6, -145523070);
            d = II(d, a, b, c, m[i + 11], 10, -1120210379);
            c = II(c, d, a, b, m[i + 2], 15, 718787259);
            b = II(b, c, d, a, m[i + 9], 21, -343485551);
            a = a + aa >>> 0;
            b = b + bb >>> 0;
            c = c + cc >>> 0;
            d = d + dd >>> 0;
        }
        return crypt.endian([
            a,
            b,
            c,
            d
        ]);
    };
    // Auxiliary functions
    md5._ff = function(a, b, c, d, x, s, t) {
        var n = a + (b & c | ~b & d) + (x >>> 0) + t;
        return (n << s | n >>> 32 - s) + b;
    };
    md5._gg = function(a, b, c, d, x, s, t) {
        var n = a + (b & d | c & ~d) + (x >>> 0) + t;
        return (n << s | n >>> 32 - s) + b;
    };
    md5._hh = function(a, b, c, d, x, s, t) {
        var n = a + (b ^ c ^ d) + (x >>> 0) + t;
        return (n << s | n >>> 32 - s) + b;
    };
    md5._ii = function(a, b, c, d, x, s, t) {
        var n = a + (c ^ (b | ~d)) + (x >>> 0) + t;
        return (n << s | n >>> 32 - s) + b;
    };
    // Package private blocksize
    md5._blocksize = 16;
    md5._digestsize = 16;
    module.exports = function(message, options) {
        if (message === undefined || message === null) throw new Error("Illegal argument " + message);
        var digestbytes = crypt.wordsToBytes(md5(message, options));
        return options && options.asBytes ? digestbytes : options && options.asString ? bin.bytesToString(digestbytes) : crypt.bytesToHex(digestbytes);
    };
})();

});



parcelRequire.register("iyako", function(module, exports) {
"use strict";
function $d81369dbf90fd1a7$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) resolve(value);
    else Promise.resolve(value).then(_next, _throw);
}
function $d81369dbf90fd1a7$var$_asyncToGenerator(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                $d81369dbf90fd1a7$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                $d81369dbf90fd1a7$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}

var $hYjWe = parcelRequire("hYjWe");
module.exports = /*#__PURE__*/ function() {
    var _ref = $d81369dbf90fd1a7$var$_asyncToGenerator(/*#__PURE__*/ regeneratorRuntime.mark(function _callee(game, pars) {
        var exit;
        return regeneratorRuntime.wrap(function _callee$(_context) {
            while(true)switch(_context.prev = _context.next){
                case 0:
                    console.log("GO", pars);
                    exit = game.getExitById(pars[0]); //game.where = pars[0];
                    //console.log(exit);
                    game.cls();
                    $hYjWe.printTextYellow("Jdeš " + exit.to);
                    _context.next = 6;
                    return game.cEnter(pars[0]);
                case 6:
                case "end":
                    return _context.stop();
            }
        }, _callee);
    }));
    return function(_x, _x2) {
        return _ref.apply(this, arguments);
    };
}();

});

parcelRequire.register("etWIK", function(module, exports) {
"use strict";
function $a8b152dc591c8c29$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) resolve(value);
    else Promise.resolve(value).then(_next, _throw);
}
function $a8b152dc591c8c29$var$_asyncToGenerator(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                $a8b152dc591c8c29$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                $a8b152dc591c8c29$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}

var $hYjWe = parcelRequire("hYjWe");
module.exports = /*#__PURE__*/ function() {
    var _ref = $a8b152dc591c8c29$var$_asyncToGenerator(/*#__PURE__*/ regeneratorRuntime.mark(function _callee(game, pars) {
        var inv;
        return regeneratorRuntime.wrap(function _callee$(_context) {
            while(true)switch(_context.prev = _context.next){
                case 0:
                    //console.log("I", pars);
                    inv = game.cInventory(); //console.log(inv);
                    $hYjWe.printTextYellow(inv);
                case 2:
                case "end":
                    return _context.stop();
            }
        }, _callee);
    }));
    return function(_x, _x2) {
        return _ref.apply(this, arguments);
    };
}();

});

parcelRequire.register("1aR1O", function(module, exports) {
"use strict";
function $0dafdbed2ce0da9c$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) resolve(value);
    else Promise.resolve(value).then(_next, _throw);
}
function $0dafdbed2ce0da9c$var$_asyncToGenerator(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                $0dafdbed2ce0da9c$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                $0dafdbed2ce0da9c$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}

var $hYjWe = parcelRequire("hYjWe");
module.exports = /*#__PURE__*/ function() {
    var _ref = $0dafdbed2ce0da9c$var$_asyncToGenerator(/*#__PURE__*/ regeneratorRuntime.mark(function _callee(game, pars) {
        var itm;
        return regeneratorRuntime.wrap(function _callee$(_context) {
            while(true)switch(_context.prev = _context.next){
                case 0:
                    itm = game.getItem(pars[0]);
                    console.log("DROP", itm, pars);
                    $hYjWe.printTextYellow("Položil jsi " + game.itemFullName(itm)[3] + ".");
                    game.dropItem(itm.id);
                case 4:
                case "end":
                    return _context.stop();
            }
        }, _callee);
    }));
    return function(_x, _x2) {
        return _ref.apply(this, arguments);
    };
}();

});

parcelRequire.register("hqXv2", function(module, exports) {
"use strict";
function $cb1304c06101a70a$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) resolve(value);
    else Promise.resolve(value).then(_next, _throw);
}
function $cb1304c06101a70a$var$_asyncToGenerator(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                $cb1304c06101a70a$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                $cb1304c06101a70a$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}

var $hYjWe = parcelRequire("hYjWe");

var $bBTq0 = parcelRequire("bBTq0");
module.exports = /*#__PURE__*/ function() {
    var _ref = $cb1304c06101a70a$var$_asyncToGenerator(/*#__PURE__*/ regeneratorRuntime.mark(function _callee(game, pars, cmd) {
        var itm;
        return regeneratorRuntime.wrap(function _callee$(_context) {
            while(true)switch(_context.prev = _context.next){
                case 0:
                    itm = game.getItem(pars[0]);
                    console.log("Take", itm, pars);
                    if (itm.isMovable()) {
                        _context.next = 6;
                        break;
                    }
                    if (!cmd._nonmovable) {
                        _context.next = 6;
                        break;
                    }
                    game.err($bBTq0.formatItem(cmd._nonmovable, itm));
                    return _context.abrupt("return");
                case 6:
                    $hYjWe.printTextYellow("Vzal jsi " + game.itemFullName(itm)[3] + ".");
                    game.takeItem(itm.id);
                case 8:
                case "end":
                    return _context.stop();
            }
        }, _callee);
    }));
    return function(_x, _x2, _x3) {
        return _ref.apply(this, arguments);
    };
}();

});

parcelRequire.register("3u4fe", function(module, exports) {
// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>
// This work is free. You can redistribute it and/or modify it
// under the terms of the WTFPL, Version 2
// For more information see LICENSE.txt or http://www.wtfpl.net/
//
// For more information, the home page:
// http://pieroxy.net/blog/pages/lz-string/testing.html
//
// LZ-based compression algorithm, version 1.4.4
var LZString = function() {
    // private property
    var f = String.fromCharCode;
    var keyStrBase64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    var keyStrUriSafe = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$";
    var baseReverseDic = {};
    function getBaseValue(alphabet, character) {
        if (!baseReverseDic[alphabet]) {
            baseReverseDic[alphabet] = {};
            for(var i = 0; i < alphabet.length; i++)baseReverseDic[alphabet][alphabet.charAt(i)] = i;
        }
        return baseReverseDic[alphabet][character];
    }
    var LZString = {
        compressToBase64: function(input) {
            if (input == null) return "";
            var res = LZString._compress(input, 6, function(a) {
                return keyStrBase64.charAt(a);
            });
            switch(res.length % 4){
                default:
                case 0:
                    return res;
                case 1:
                    return res + "===";
                case 2:
                    return res + "==";
                case 3:
                    return res + "=";
            }
        },
        decompressFromBase64: function(input) {
            if (input == null) return "";
            if (input == "") return null;
            return LZString._decompress(input.length, 32, function(index) {
                return getBaseValue(keyStrBase64, input.charAt(index));
            });
        },
        compressToUTF16: function(input) {
            if (input == null) return "";
            return LZString._compress(input, 15, function(a) {
                return f(a + 32);
            }) + " ";
        },
        decompressFromUTF16: function(compressed) {
            if (compressed == null) return "";
            if (compressed == "") return null;
            return LZString._decompress(compressed.length, 16384, function(index) {
                return compressed.charCodeAt(index) - 32;
            });
        },
        //compress into uint8array (UCS-2 big endian format)
        compressToUint8Array: function(uncompressed) {
            var compressed = LZString.compress(uncompressed);
            var buf = new Uint8Array(compressed.length * 2); // 2 bytes per character
            for(var i = 0, TotalLen = compressed.length; i < TotalLen; i++){
                var current_value = compressed.charCodeAt(i);
                buf[i * 2] = current_value >>> 8;
                buf[i * 2 + 1] = current_value % 256;
            }
            return buf;
        },
        //decompress from uint8array (UCS-2 big endian format)
        decompressFromUint8Array: function(compressed) {
            if (compressed === null || compressed === undefined) return LZString.decompress(compressed);
            else {
                var buf = new Array(compressed.length / 2); // 2 bytes per character
                for(var i = 0, TotalLen = buf.length; i < TotalLen; i++)buf[i] = compressed[i * 2] * 256 + compressed[i * 2 + 1];
                var result = [];
                buf.forEach(function(c) {
                    result.push(f(c));
                });
                return LZString.decompress(result.join(""));
            }
        },
        //compress into a string that is already URI encoded
        compressToEncodedURIComponent: function(input) {
            if (input == null) return "";
            return LZString._compress(input, 6, function(a) {
                return keyStrUriSafe.charAt(a);
            });
        },
        //decompress from an output of compressToEncodedURIComponent
        decompressFromEncodedURIComponent: function(input) {
            if (input == null) return "";
            if (input == "") return null;
            input = input.replace(/ /g, "+");
            return LZString._decompress(input.length, 32, function(index) {
                return getBaseValue(keyStrUriSafe, input.charAt(index));
            });
        },
        compress: function(uncompressed) {
            return LZString._compress(uncompressed, 16, function(a) {
                return f(a);
            });
        },
        _compress: function(uncompressed, bitsPerChar, getCharFromInt) {
            if (uncompressed == null) return "";
            var i, value, context_dictionary = {}, context_dictionaryToCreate = {}, context_c = "", context_wc = "", context_w = "", context_enlargeIn = 2, context_dictSize = 3, context_numBits = 2, context_data = [], context_data_val = 0, context_data_position = 0, ii;
            for(ii = 0; ii < uncompressed.length; ii += 1){
                context_c = uncompressed.charAt(ii);
                if (!Object.prototype.hasOwnProperty.call(context_dictionary, context_c)) {
                    context_dictionary[context_c] = context_dictSize++;
                    context_dictionaryToCreate[context_c] = true;
                }
                context_wc = context_w + context_c;
                if (Object.prototype.hasOwnProperty.call(context_dictionary, context_wc)) context_w = context_wc;
                else {
                    if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate, context_w)) {
                        if (context_w.charCodeAt(0) < 256) {
                            for(i = 0; i < context_numBits; i++){
                                context_data_val = context_data_val << 1;
                                if (context_data_position == bitsPerChar - 1) {
                                    context_data_position = 0;
                                    context_data.push(getCharFromInt(context_data_val));
                                    context_data_val = 0;
                                } else context_data_position++;
                            }
                            value = context_w.charCodeAt(0);
                            for(i = 0; i < 8; i++){
                                context_data_val = context_data_val << 1 | value & 1;
                                if (context_data_position == bitsPerChar - 1) {
                                    context_data_position = 0;
                                    context_data.push(getCharFromInt(context_data_val));
                                    context_data_val = 0;
                                } else context_data_position++;
                                value = value >> 1;
                            }
                        } else {
                            value = 1;
                            for(i = 0; i < context_numBits; i++){
                                context_data_val = context_data_val << 1 | value;
                                if (context_data_position == bitsPerChar - 1) {
                                    context_data_position = 0;
                                    context_data.push(getCharFromInt(context_data_val));
                                    context_data_val = 0;
                                } else context_data_position++;
                                value = 0;
                            }
                            value = context_w.charCodeAt(0);
                            for(i = 0; i < 16; i++){
                                context_data_val = context_data_val << 1 | value & 1;
                                if (context_data_position == bitsPerChar - 1) {
                                    context_data_position = 0;
                                    context_data.push(getCharFromInt(context_data_val));
                                    context_data_val = 0;
                                } else context_data_position++;
                                value = value >> 1;
                            }
                        }
                        context_enlargeIn--;
                        if (context_enlargeIn == 0) {
                            context_enlargeIn = Math.pow(2, context_numBits);
                            context_numBits++;
                        }
                        delete context_dictionaryToCreate[context_w];
                    } else {
                        value = context_dictionary[context_w];
                        for(i = 0; i < context_numBits; i++){
                            context_data_val = context_data_val << 1 | value & 1;
                            if (context_data_position == bitsPerChar - 1) {
                                context_data_position = 0;
                                context_data.push(getCharFromInt(context_data_val));
                                context_data_val = 0;
                            } else context_data_position++;
                            value = value >> 1;
                        }
                    }
                    context_enlargeIn--;
                    if (context_enlargeIn == 0) {
                        context_enlargeIn = Math.pow(2, context_numBits);
                        context_numBits++;
                    }
                    // Add wc to the dictionary.
                    context_dictionary[context_wc] = context_dictSize++;
                    context_w = String(context_c);
                }
            }
            // Output the code for w.
            if (context_w !== "") {
                if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate, context_w)) {
                    if (context_w.charCodeAt(0) < 256) {
                        for(i = 0; i < context_numBits; i++){
                            context_data_val = context_data_val << 1;
                            if (context_data_position == bitsPerChar - 1) {
                                context_data_position = 0;
                                context_data.push(getCharFromInt(context_data_val));
                                context_data_val = 0;
                            } else context_data_position++;
                        }
                        value = context_w.charCodeAt(0);
                        for(i = 0; i < 8; i++){
                            context_data_val = context_data_val << 1 | value & 1;
                            if (context_data_position == bitsPerChar - 1) {
                                context_data_position = 0;
                                context_data.push(getCharFromInt(context_data_val));
                                context_data_val = 0;
                            } else context_data_position++;
                            value = value >> 1;
                        }
                    } else {
                        value = 1;
                        for(i = 0; i < context_numBits; i++){
                            context_data_val = context_data_val << 1 | value;
                            if (context_data_position == bitsPerChar - 1) {
                                context_data_position = 0;
                                context_data.push(getCharFromInt(context_data_val));
                                context_data_val = 0;
                            } else context_data_position++;
                            value = 0;
                        }
                        value = context_w.charCodeAt(0);
                        for(i = 0; i < 16; i++){
                            context_data_val = context_data_val << 1 | value & 1;
                            if (context_data_position == bitsPerChar - 1) {
                                context_data_position = 0;
                                context_data.push(getCharFromInt(context_data_val));
                                context_data_val = 0;
                            } else context_data_position++;
                            value = value >> 1;
                        }
                    }
                    context_enlargeIn--;
                    if (context_enlargeIn == 0) {
                        context_enlargeIn = Math.pow(2, context_numBits);
                        context_numBits++;
                    }
                    delete context_dictionaryToCreate[context_w];
                } else {
                    value = context_dictionary[context_w];
                    for(i = 0; i < context_numBits; i++){
                        context_data_val = context_data_val << 1 | value & 1;
                        if (context_data_position == bitsPerChar - 1) {
                            context_data_position = 0;
                            context_data.push(getCharFromInt(context_data_val));
                            context_data_val = 0;
                        } else context_data_position++;
                        value = value >> 1;
                    }
                }
                context_enlargeIn--;
                if (context_enlargeIn == 0) {
                    context_enlargeIn = Math.pow(2, context_numBits);
                    context_numBits++;
                }
            }
            // Mark the end of the stream
            value = 2;
            for(i = 0; i < context_numBits; i++){
                context_data_val = context_data_val << 1 | value & 1;
                if (context_data_position == bitsPerChar - 1) {
                    context_data_position = 0;
                    context_data.push(getCharFromInt(context_data_val));
                    context_data_val = 0;
                } else context_data_position++;
                value = value >> 1;
            }
            // Flush the last char
            while(true){
                context_data_val = context_data_val << 1;
                if (context_data_position == bitsPerChar - 1) {
                    context_data.push(getCharFromInt(context_data_val));
                    break;
                } else context_data_position++;
            }
            return context_data.join("");
        },
        decompress: function(compressed) {
            if (compressed == null) return "";
            if (compressed == "") return null;
            return LZString._decompress(compressed.length, 32768, function(index) {
                return compressed.charCodeAt(index);
            });
        },
        _decompress: function(length, resetValue, getNextValue) {
            var dictionary = [], next, enlargeIn = 4, dictSize = 4, numBits = 3, entry = "", result = [], i, w, bits, resb, maxpower, power, c, data = {
                val: getNextValue(0),
                position: resetValue,
                index: 1
            };
            for(i = 0; i < 3; i += 1)dictionary[i] = i;
            bits = 0;
            maxpower = Math.pow(2, 2);
            power = 1;
            while(power != maxpower){
                resb = data.val & data.position;
                data.position >>= 1;
                if (data.position == 0) {
                    data.position = resetValue;
                    data.val = getNextValue(data.index++);
                }
                bits |= (resb > 0 ? 1 : 0) * power;
                power <<= 1;
            }
            switch(next = bits){
                case 0:
                    bits = 0;
                    maxpower = Math.pow(2, 8);
                    power = 1;
                    while(power != maxpower){
                        resb = data.val & data.position;
                        data.position >>= 1;
                        if (data.position == 0) {
                            data.position = resetValue;
                            data.val = getNextValue(data.index++);
                        }
                        bits |= (resb > 0 ? 1 : 0) * power;
                        power <<= 1;
                    }
                    c = f(bits);
                    break;
                case 1:
                    bits = 0;
                    maxpower = Math.pow(2, 16);
                    power = 1;
                    while(power != maxpower){
                        resb = data.val & data.position;
                        data.position >>= 1;
                        if (data.position == 0) {
                            data.position = resetValue;
                            data.val = getNextValue(data.index++);
                        }
                        bits |= (resb > 0 ? 1 : 0) * power;
                        power <<= 1;
                    }
                    c = f(bits);
                    break;
                case 2:
                    return "";
            }
            dictionary[3] = c;
            w = c;
            result.push(c);
            while(true){
                if (data.index > length) return "";
                bits = 0;
                maxpower = Math.pow(2, numBits);
                power = 1;
                while(power != maxpower){
                    resb = data.val & data.position;
                    data.position >>= 1;
                    if (data.position == 0) {
                        data.position = resetValue;
                        data.val = getNextValue(data.index++);
                    }
                    bits |= (resb > 0 ? 1 : 0) * power;
                    power <<= 1;
                }
                switch(c = bits){
                    case 0:
                        bits = 0;
                        maxpower = Math.pow(2, 8);
                        power = 1;
                        while(power != maxpower){
                            resb = data.val & data.position;
                            data.position >>= 1;
                            if (data.position == 0) {
                                data.position = resetValue;
                                data.val = getNextValue(data.index++);
                            }
                            bits |= (resb > 0 ? 1 : 0) * power;
                            power <<= 1;
                        }
                        dictionary[dictSize++] = f(bits);
                        c = dictSize - 1;
                        enlargeIn--;
                        break;
                    case 1:
                        bits = 0;
                        maxpower = Math.pow(2, 16);
                        power = 1;
                        while(power != maxpower){
                            resb = data.val & data.position;
                            data.position >>= 1;
                            if (data.position == 0) {
                                data.position = resetValue;
                                data.val = getNextValue(data.index++);
                            }
                            bits |= (resb > 0 ? 1 : 0) * power;
                            power <<= 1;
                        }
                        dictionary[dictSize++] = f(bits);
                        c = dictSize - 1;
                        enlargeIn--;
                        break;
                    case 2:
                        return result.join("");
                }
                if (enlargeIn == 0) {
                    enlargeIn = Math.pow(2, numBits);
                    numBits++;
                }
                if (dictionary[c]) entry = dictionary[c];
                else {
                    if (c === dictSize) entry = w + w.charAt(0);
                    else return null;
                }
                result.push(entry);
                // Add w+entry[0] to the dictionary.
                dictionary[dictSize++] = w + entry.charAt(0);
                enlargeIn--;
                w = entry;
                if (enlargeIn == 0) {
                    enlargeIn = Math.pow(2, numBits);
                    numBits++;
                }
            }
        }
    };
    return LZString;
}();
if (typeof define === "function" && define.amd) define(function() {
    return LZString;
});
else if (module != null) module.exports = LZString;

});

parcelRequire.register("fPYfr", function(module, exports) {
"use strict";
var $b87a5a6f0452ef38$var$item = {
    id: "auto",
    name: "aut-o,a,u,o,ě",
    adj: "svoje-,,,,",
    desc: "Dodge Grand Caravan. Takov\xe9 slušn\xe9 SUV, sedm m\xedst, hodně prostoru pro spoustu kr\xe1mů...",
    attrs: [
        "nonmovable",
        "crate"
    ],
    where: "road_r1",
    strings: {
        ctake: "Do kapsy se ti nevejde, za sebou ho nepot\xe1hneš... To fakt nepůjde."
    },
    actions: {
        csitinto: function csitinto(itm, game) {
            game.doDisp("Sedl sis do auta.");
            game.cEnter("road_auto");
        }
    }
};
module.exports = $b87a5a6f0452ef38$var$item;

});

parcelRequire.register("9DP4p", function(module, exports) {
"use strict";
var $704f5f077e677e37$var$item = {
    id: "rezerva",
    name: "rezerv-a,y,ě,u",
    desc: "Rezervn\xed kolo. Ještě že ho m\xe1š s sebou! Jen škoda, že sis tehdy, když žena p\xedchla, řekl, že to oprav\xedš až pak, někdy, a pak ses na to vykašlal. \nTakže je \xfaplně pr\xe1zdn\xe1, a ty jsi v pytli. To ani nem\xe1 smysl se pokoušet vyměňovat. Je mi l\xedto. Teda tobě...",
    attrs: [],
    where: "auto",
    handlers: []
};
module.exports = $704f5f077e677e37$var$item;

});

parcelRequire.register("dfbp2", function(module, exports) {
"use strict";
var $9a458570b9209b4e$var$item = {
    id: "hever",
    name: "hever-,u,u,,u",
    desc: "Poctiv\xe1 kovařina, t\xedmhle heverem zvedneš i mikrobus, když na to přijde...",
    attrs: [],
    where: "auto",
    handlers: []
};
module.exports = $9a458570b9209b4e$var$item;

});

parcelRequire.register("fDmRV", function(module, exports) {
"use strict";
var $b61c3cccda92780f$var$item = {
    id: "kastlik",
    name: "přihr\xe1d-ka,ky,ce,ku,ce",
    adj: "palubn\xed-,,,,",
    desc: "Pln\xe1 haraburd\xed, \xfačtenek z fastfoodů a různ\xfdch dokladů",
    attrs: [
        "nonmovable",
        "crate"
    ],
    where: "road_auto",
    strings: {
        ctake: "Do kapsy se ti nevejde, za sebou ho nepot\xe1hneš... To fakt nepůjde."
    }
};
module.exports = $b61c3cccda92780f$var$item;

});

parcelRequire.register("wBNOe", function(module, exports) {
"use strict";

module.exports = {
    id: "road_r1",
    title: "Room1",
    desc: "Stoj\xedš na kraji silnice vedle sv\xe9ho auta.",
    ext: "Je pech p\xedchnout na takov\xe9m m\xedstě, co? Široko daleko nikde nic, jen silnice, vlevo pole, vpravo pole, v d\xe1lce je vidět nějak\xe9 silo, za polem to vypad\xe1 na nějakou krajinu rybn\xedků, ale tam ti asi těžko někdo pomůže... Jedin\xe1 civilizace bude někde před tebou.",
    atmosphere: (parcelRequire("c5duM")),
    exits: [
        {
            to: "po krajnici dopředu",
            room: "road_r2"
        },
        {
            to: "do auta",
            room: "road_auto"
        }
    ],
    attrs: [
        "start"
    ],
    _enter: function _enter(g) {
        console.log("onEnter", g);
        g.startStepTickToGo("roadr1", "road_rstop", 7); //g.startStepCounter(()=>{g.cEnter("road_rstop")})
    },
    handlers: []
};

});
parcelRequire.register("c5duM", function(module, exports) {
"use strict";
var $8cc06b91105350ce$var$ATLIST = {
    type: "shuffle",
    strings: [
        "Prš\xed.",
        "Už dlouho kolem nic nejelo.",
        "Široko daleko ani živ\xe1čka."
    ],
    density: 2
};
module.exports = $8cc06b91105350ce$var$ATLIST;

});


parcelRequire.register("lkGae", function(module, exports) {
"use strict";

module.exports = {
    id: "road_r2",
    title: "Room1",
    desc: "Stoj\xedš u silnice kdesi v zapomenut\xe9 oblasti.",
    ext: "Za sebou vid\xedš svoje auto, odstaven\xe9 u krajnice.",
    atmosphere: (parcelRequire("c5duM")),
    exits: [
        {
            to: "zp\xe1tky k autu",
            room: "road_r1"
        },
        {
            to: "d\xe1l po silnici",
            room: "road_r3"
        }
    ],
    attrs: [],
    handlers: []
};

});

parcelRequire.register("4INYI", function(module, exports) {
"use strict";

module.exports = {
    id: "road_r3",
    title: "Room1",
    desc: "Jdeš po silnici kdesi v zapomenut\xe9 oblasti.",
    ext: "Nekonečn\xe1, nudn\xe1, nič\xedm zvl\xe1štn\xed silnice",
    atmosphere: (parcelRequire("c5duM")),
    exits: [
        {
            to: "zp\xe1tky k autu",
            room: "road_r2"
        },
        {
            to: "d\xe1l po silnici",
            room: "road_r3"
        }
    ],
    attrs: [],
    handlers: []
};

});

parcelRequire.register("2dAOq", function(module, exports) {
"use strict";
function $19d959ce87865259$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) resolve(value);
    else Promise.resolve(value).then(_next, _throw);
}
function $19d959ce87865259$var$_asyncToGenerator(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                $19d959ce87865259$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                $19d959ce87865259$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}

module.exports = {
    id: "road_rstop",
    desc: " ",
    ext: " ",
    attrs: [],
    exits: [],
    _beforeEnter: function _beforeEnter(g) {
        return $19d959ce87865259$var$_asyncToGenerator(/*#__PURE__*/ regeneratorRuntime.mark(function _callee() {
            return regeneratorRuntime.wrap(function _callee$(_context) {
                while(true)switch(_context.prev = _context.next){
                    case 0:
                        g.cls();
                    case 1:
                    case "end":
                        return _context.stop();
                }
            }, _callee);
        }))();
    },
    _enter: function _enter(g) {
        return $19d959ce87865259$var$_asyncToGenerator(/*#__PURE__*/ regeneratorRuntime.mark(function _callee2() {
            return regeneratorRuntime.wrap(function _callee2$(_context2) {
                while(true)switch(_context2.prev = _context2.next){
                    case 0:
                        _context2.next = 2;
                        return g.dispML((parcelRequire("DBjTW")));
                    case 2:
                        g.condMoveItem("rezerva", "*", "botnik"); //pokud máš u sebe rezervu, hodíš ji na korbu
                        g.condMoveItem("hever", "*", "botnik");
                        g.cls();
                        g.cEnter("road_van"); //g.startStepTick("roadr1", () => g.cEnter("r1"), 3);
                    //g.startStepCounter(()=>{g.cEnter("road_rstop")})
                    case 6:
                    case "end":
                        return _context2.stop();
                }
            }, _callee2);
        }))();
    },
    handlers: []
};

});
parcelRequire.register("DBjTW", function(module, exports) {
"use strict";
var $0770979ae9ae11a6$var$bigText = 'Najednou jsi zaslechl zvuk motoru. Nejdř\xedv slab\xfd, pak st\xe1le silnějš\xed a silnějš\xed, a najednou st\xe1l vedle tebe: star\xfd rozhrkan\xfd n\xe1klaď\xe1k.\n"Hej, š\xe9fe, ten auť\xe1k bude asi v\xe1š, co?"\nPřisvědčil jsi.\n"A vypad\xe1 to, že potřebujete trochu p\xedchnout, co?"\n"Docela by to bodlo," odpověděls.\n"Tady ale nikde široko daleko nic nen\xed, a j\xe1 jedu jen kousek. Tahle kraksna toho moc na jeden z\xe1tah neujede, hned vař\xed motor."\n"Sakra," pov\xedd\xe1š, protože tě nic jin\xe9ho nenapadlo.\n\nBylo chv\xedli ticho. D\xedvali jste se jeden na druh\xe9ho.\n\n"No," pov\xedd\xe1 ten chl\xe1pek nakonec, "můžete jet se mnou. Už bude tma, tak se u mě vysp\xedte, něco k j\xeddlu se taky najde, a zejtra se na to v d\xedlně mrkneme. Co vy na to?"\n"To by bylo fajn," řekl jsi s \xfasměvem.\nChlap\xedk v n\xe1klaď\xe1ku se usm\xe1l taky. "Tak pojďte dovnitř, ať nepromoknete na kost."\nNemusel tě dvakr\xe1t pob\xedzet. {IC,rezerva|Hodils rezervu na korbu, v|V}lezl jsi do n\xe1klaď\xe1ku a řekl: "D\xedky."\nŘidič se usm\xe1l: "Jasn\xfd. To je přeci jasn\xfd..." Pak se na tebe pod\xedval a pov\xedd\xe1:\n"Jsem ň\xe1kej Gordon."\n';
module.exports = $0770979ae9ae11a6$var$bigText;

});


parcelRequire.register("1Sb6s", function(module, exports) {
"use strict";
module.exports = {
    id: "road_auto",
    title: "Room1",
    desc: "Sed\xedš v autě na předn\xedm sedadle. Můžeš klidně nastartovat, ale s pr\xe1zdnou pneumatikou daleko nedojedeš.",
    exits: [
        {
            to: "ven z auta",
            room: "road_r1"
        }
    ],
    attrs: [],
    handlers: []
};

});

parcelRequire.register("jntTG", function(module, exports) {
"use strict";
module.exports = {
    id: "road_van",
    desc: "Sed\xedš v n\xe1klaď\xe1ku snad z doby star\xfdho Forda. Zvenč\xed vypad\xe1 jako rozhrkan\xe1 kraksna, a zevnitř je to ještě horš\xed. P\xe1sy tu nejsou, tak se mus\xedš držet, čeho se d\xe1.",
    ext: "Vedle tebe sed\xed Gordon a ř\xedd\xed. Vypad\xe1 sympaticky. I když v tvoj\xed situaci by sympaticky vypadal kdokoli, kdo by ti byl ochotn\xfd pomoci.\nNaštěst\xed moc nemluv\xed, žvejk\xe1 sirku v koutku \xfast a sleduje cestu. Ale i kdyby mluvil, tak ho neuslyš\xedš, protože motor řve tak strašně, jako kdybyste ho měli př\xedmo v kabině a ne pod kapotou.\nNemůžeš dělat nic, jen čekat a rozhl\xedžet se...",
    exits: [],
    attrs: [],
    atmosphere: {
        type: "shuffle",
        strings: [
            "Už abyste byli na m\xedstě. Koupel ti fakt bodne.",
            "Gordon něco řve, aby překřičel motor, a povzbudivě se usm\xedv\xe1. Sice ho neslyš\xedš, ale pravděpodobně ř\xedk\xe1 něco o tom, že tam brzo budete.",
            "Dnešek fakt st\xe1l za to..."
        ]
    },
    _enter: function _enter(g) {
        console.log("onEnter", g);
        g.startStepTickToGo("rvan", "road_van_stop", 3); //g.startStepCounter(()=>{g.cEnter("road_rstop")})
    },
    handlers: []
};

});

parcelRequire.register("fjCge", function(module, exports) {
"use strict";
function $b2664f2ed7c7a6b9$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) resolve(value);
    else Promise.resolve(value).then(_next, _throw);
}
function $b2664f2ed7c7a6b9$var$_asyncToGenerator(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                $b2664f2ed7c7a6b9$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                $b2664f2ed7c7a6b9$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
var $b2664f2ed7c7a6b9$var$txt = 'Konečně jste dojeli.\nGordon odbočil ze silnice na nějakou př\xedjezdovou cestu, ještě asi dvacet minut jste se kodrcali přes š\xedlen\xe9 v\xfdmoly, a na konci byla farma. Gordon zajel n\xe1klaď\xe1kem přes dvůr ke stodole a zastavil motor.\n\nTo ticho, co se rozhostilo kabinou po vypnut\xed motoru, bylo ohlušuj\xedc\xed.\n\n"Chvilku počkejte, j\xe1 v\xe1m otevřu zvenč\xed, ono se to zevnitř nějak zasek\xe1v\xe1," řekl Gordon a vylezl ven. Za chvilku už otv\xedral dveře na tvoj\xed straně.\n\nSeskočil jsi dolů z kabiny a zabouchnul za sebou dveře.';
module.exports = {
    id: "road_van_stop",
    desc: "",
    exits: [],
    attrs: [],
    _enter: function _enter(g) {
        return $b2664f2ed7c7a6b9$var$_asyncToGenerator(/*#__PURE__*/ regeneratorRuntime.mark(function _callee() {
            return regeneratorRuntime.wrap(function _callee$(_context) {
                while(true)switch(_context.prev = _context.next){
                    case 0:
                        _context.next = 2;
                        return g.dispML($b2664f2ed7c7a6b9$var$txt);
                    case 2:
                        g.cls();
                        _context.next = 5;
                        return g.dispML("Zaslechl jsi, jak něco křuplo.");
                    case 5:
                        //g.musicPlay("music20");
                        g.musicPlayList([
                            "music20",
                            "music21",
                            "music22",
                            "music23"
                        ]);
                        g.videoPlay("video2");
                        g.cls();
                        _context.next = 10;
                        return g.dispML('"Co to bylo?" zeptal ses Gordona, ale uvědomil sis, že nic neř\xedk\xe1š. V uš\xedch ti začalo hrozně hv\xedzdat a najednou byla tma.');
                    case 10:
                        g.cls();
                        g.cEnter("r1"); //g.startStepTick("roadr1", () => g.cEnter("r1"), 3);
                    //g.startStepCounter(()=>{g.cEnter("road_rstop")})
                    case 12:
                    case "end":
                        return _context.stop();
                }
            }, _callee);
        }))();
    },
    handlers: []
};

});

parcelRequire.register("iEBN6", function(module, exports) {
"use strict";
var $d94946eeb60a37f9$var$ATLIST = {
    type: "shuffle",
    strings: [
        "Někde v d\xe1lce štěk\xe1 pes. Je tu někde nějak\xfd?",
        "Šust\xed list\xed.",
        "Jako bys c\xedtil puch skl\xe1dky.",
        "Něco tu slabě bzuč\xed. Asi elektrick\xe9 veden\xed."
    ],
    density: 3
};
module.exports = {
    id: "r1",
    title: "Room1",
    desc: "Stoj\xedš v m\xedstnosti.",
    ext: "Je to docela mal\xe1 m\xedstnost, na zemi jsou dřevěn\xe9 parkety, na zdech zašl\xe9 tapety, na stropě štuk.",
    atmosphere: $d94946eeb60a37f9$var$ATLIST,
    exits: [
        {
            to: "do chodby",
            room: "r2"
        },
        {
            to: "do prdele",
            room: "rx"
        },
        {
            to: "na balkon",
            room: "r3",
            attrs: [
                "inactive"
            ]
        }
    ],
    attrs: [
        "player"
    ],
    handlers: []
};

});

parcelRequire.register("9ce6j", function(module, exports) {
"use strict";
var $6b202c2cd661b8cf$var$bigText = "Večern\xed j\xedzda autem může b\xfdt docela fajn. Nen\xed to moc n\xe1ročn\xe9 na ř\xedzen\xed, jedeš jen rovně, krajina ub\xedh\xe1 dozadu, motor si pobrukuje, n\xe1drž ještě vydrž\xed aspoň sto pades\xe1t mil, ze satelitn\xedho r\xe1dia hraje pohodov\xe1 hudba, na silnici skoro nikoho nepotk\xe1š, m\xedj\xedš jen nějak\xe9 zemědělsk\xe9 stavby... P\xe1r stodol tuhle, odstaven\xfd traktor t\xe1mhle, vlastně pohoda.\nTa krajina je ale po čase hrozně f\xe1dn\xed.\nMožn\xe1 by to chtělo nějakou drobnou změnu, nějak\xe9 vytržen\xed z ub\xedjej\xedc\xed monot\xf3nnosti farem, pol\xed a dalš\xedch farem.\nVydrž, chlapče, vydrž. Za hodinu, nejpozději za dvě bude nějak\xe9 větš\xed město. Zastav\xedš někde na kraji v Motelu 6, d\xe1š si sprchu, sendvič...\nNe, počkat, po dnešku si zaslouž\xedš trochu h\xfdčk\xe1n\xed. Zkus\xedš třeba Holiday Inn, tam bude hezky čisto, voňavo, měkk\xe1 postel, jemn\xe9 peřiny, vana, televize. A r\xe1no sn\xeddaně!\nSakra, sn\xeddaně. Už m\xe1š docela hlad. Posledn\xed j\xeddlo jsi měl... no... po r\xe1nu, chv\xedli pot\xe9, co jsi zmizel za hranicema okresu. Zapadl\xe1 benz\xednka, bezejmenn\xe1 burgr\xe1rna, moc důvěry to zvenč\xed nevzbuzovalo, ale ten burgr, ten byl prostě bož\xed! Kurva, černej chl\xe1pek, co vypadal jak z Chaloupky str\xfdčka Toma, s jižansk\xfdm př\xedzvukem, ale burgr udělal přesně takovej, jakej chlap ve tv\xfd situaci potřebuje.\n";
module.exports = $6b202c2cd661b8cf$var$bigText;

});

parcelRequire.register("5iI5r", function(module, exports) {
"use strict";
var $3dc0d4ebdc582863$var$bigText = "Na druhou stranu by se našlo p\xe1r věc\xed, co chlap v tvoj\xed situaci nepotřebuje.\n\nNepotřebuje policajty za prdel\xed.\nNepotřebuje ženskou, co by mu kecala do ř\xedzen\xed.\nA už vůbec nepotřebuje p\xedchnout kolo v situaci, kdy m\xe1 hlad, je špinavej, po cel\xfdm dni utahanej, nav\xedc trošku zač\xedn\xe1 pršet, do nejbližš\xedho města je bůhv\xed kolik des\xedtek mil a taky se stm\xedv\xe1...\n\n(Hodně štěst\xed! Od t\xe9to chv\xedle je to na v\xe1s. Když nebudete vědět, napište POMOC!)";
module.exports = $3dc0d4ebdc582863$var$bigText;

});

"use strict";
"use strict";
var $db4c231f7455e9f3$exports = {};
"use strict";

var $gTAze = parcelRequire("gTAze");

var $dS4Ut = parcelRequire("dS4Ut");

var $3y86S = parcelRequire("3y86S");

var $3B1Ky = parcelRequire("3B1Ky");

var $bRGed = parcelRequire("bRGed");

var $eTnVl = parcelRequire("eTnVl");
var $af6bb47517479a3e$require$META = $eTnVl.KEY;

var $hcpLn = parcelRequire("hcpLn");

var $4tRaz = parcelRequire("4tRaz");

var $hMuUi = parcelRequire("hMuUi");

var $dCUYV = parcelRequire("dCUYV");

var $5i4Lz = parcelRequire("5i4Lz");

var $cdkyH = parcelRequire("cdkyH");

var $cX6eF = parcelRequire("cX6eF");
var $9cba1bcdd97fcf9d$exports = {};

var $isffO = parcelRequire("isffO");

var $bz7J4 = parcelRequire("bz7J4");

var $cXyZT = parcelRequire("cXyZT");
$9cba1bcdd97fcf9d$exports = function(it) {
    var result = $isffO(it);
    var getSymbols = $bz7J4.f;
    if (getSymbols) {
        var symbols = getSymbols(it);
        var isEnum = $cXyZT.f;
        var i = 0;
        var key;
        while(symbols.length > i)if (isEnum.call(it, key = symbols[i++])) result.push(key);
    }
    return result;
};



var $iLSpw = parcelRequire("iLSpw");

var $euAZz = parcelRequire("euAZz");

var $ly2vB = parcelRequire("ly2vB");

var $6dhUj = parcelRequire("6dhUj");

var $fHwma = parcelRequire("fHwma");

var $dapnX = parcelRequire("dapnX");

var $87uCM = parcelRequire("87uCM");

var $fKIsL = parcelRequire("fKIsL");

var $1sHxg = parcelRequire("1sHxg");

var $b0Bat = parcelRequire("b0Bat");

var $bz7J4 = parcelRequire("bz7J4");

var $dLczm = parcelRequire("dLczm");

var $isffO = parcelRequire("isffO");
var $af6bb47517479a3e$var$gOPD = $b0Bat.f;
var $af6bb47517479a3e$var$dP = $dLczm.f;
var $af6bb47517479a3e$var$gOPN = $1sHxg.f;
var $af6bb47517479a3e$var$$Symbol = $gTAze.Symbol;
var $af6bb47517479a3e$var$$JSON = $gTAze.JSON;
var $af6bb47517479a3e$var$_stringify = $af6bb47517479a3e$var$$JSON && $af6bb47517479a3e$var$$JSON.stringify;
var $af6bb47517479a3e$var$PROTOTYPE = "prototype";
var $af6bb47517479a3e$var$HIDDEN = $5i4Lz("_hidden");
var $af6bb47517479a3e$var$TO_PRIMITIVE = $5i4Lz("toPrimitive");
var $af6bb47517479a3e$var$isEnum = {}.propertyIsEnumerable;
var $af6bb47517479a3e$var$SymbolRegistry = $4tRaz("symbol-registry");
var $af6bb47517479a3e$var$AllSymbols = $4tRaz("symbols");
var $af6bb47517479a3e$var$OPSymbols = $4tRaz("op-symbols");
var $af6bb47517479a3e$var$ObjectProto = Object[$af6bb47517479a3e$var$PROTOTYPE];
var $af6bb47517479a3e$var$USE_NATIVE = typeof $af6bb47517479a3e$var$$Symbol == "function" && !!$bz7J4.f;
var $af6bb47517479a3e$var$QObject = $gTAze.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var $af6bb47517479a3e$var$setter = !$af6bb47517479a3e$var$QObject || !$af6bb47517479a3e$var$QObject[$af6bb47517479a3e$var$PROTOTYPE] || !$af6bb47517479a3e$var$QObject[$af6bb47517479a3e$var$PROTOTYPE].findChild;
// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var $af6bb47517479a3e$var$setSymbolDesc = $3y86S && $hcpLn(function() {
    return $fKIsL($af6bb47517479a3e$var$dP({}, "a", {
        get: function() {
            return $af6bb47517479a3e$var$dP(this, "a", {
                value: 7
            }).a;
        }
    })).a != 7;
}) ? function(it, key, D) {
    var protoDesc = $af6bb47517479a3e$var$gOPD($af6bb47517479a3e$var$ObjectProto, key);
    if (protoDesc) delete $af6bb47517479a3e$var$ObjectProto[key];
    $af6bb47517479a3e$var$dP(it, key, D);
    if (protoDesc && it !== $af6bb47517479a3e$var$ObjectProto) $af6bb47517479a3e$var$dP($af6bb47517479a3e$var$ObjectProto, key, protoDesc);
} : $af6bb47517479a3e$var$dP;
var $af6bb47517479a3e$var$wrap = function(tag) {
    var sym = $af6bb47517479a3e$var$AllSymbols[tag] = $fKIsL($af6bb47517479a3e$var$$Symbol[$af6bb47517479a3e$var$PROTOTYPE]);
    sym._k = tag;
    return sym;
};
var $af6bb47517479a3e$var$isSymbol = $af6bb47517479a3e$var$USE_NATIVE && typeof $af6bb47517479a3e$var$$Symbol.iterator == "symbol" ? function(it) {
    return typeof it == "symbol";
} : function(it) {
    return it instanceof $af6bb47517479a3e$var$$Symbol;
};
var $af6bb47517479a3e$var$$defineProperty = function defineProperty(it, key, D) {
    if (it === $af6bb47517479a3e$var$ObjectProto) $af6bb47517479a3e$var$$defineProperty($af6bb47517479a3e$var$OPSymbols, key, D);
    $euAZz(it);
    key = $dapnX(key, true);
    $euAZz(D);
    if ($dS4Ut($af6bb47517479a3e$var$AllSymbols, key)) {
        if (!D.enumerable) {
            if (!$dS4Ut(it, $af6bb47517479a3e$var$HIDDEN)) $af6bb47517479a3e$var$dP(it, $af6bb47517479a3e$var$HIDDEN, $87uCM(1, {}));
            it[$af6bb47517479a3e$var$HIDDEN][key] = true;
        } else {
            if ($dS4Ut(it, $af6bb47517479a3e$var$HIDDEN) && it[$af6bb47517479a3e$var$HIDDEN][key]) it[$af6bb47517479a3e$var$HIDDEN][key] = false;
            D = $fKIsL(D, {
                enumerable: $87uCM(0, false)
            });
        }
        return $af6bb47517479a3e$var$setSymbolDesc(it, key, D);
    }
    return $af6bb47517479a3e$var$dP(it, key, D);
};
var $af6bb47517479a3e$var$$defineProperties = function defineProperties(it, P) {
    $euAZz(it);
    var keys = $9cba1bcdd97fcf9d$exports(P = $fHwma(P));
    var i = 0;
    var l = keys.length;
    var key;
    while(l > i)$af6bb47517479a3e$var$$defineProperty(it, key = keys[i++], P[key]);
    return it;
};
var $af6bb47517479a3e$var$$create = function create(it, P) {
    return P === undefined ? $fKIsL(it) : $af6bb47517479a3e$var$$defineProperties($fKIsL(it), P);
};
var $af6bb47517479a3e$var$$propertyIsEnumerable = function propertyIsEnumerable(key) {
    var E = $af6bb47517479a3e$var$isEnum.call(this, key = $dapnX(key, true));
    if (this === $af6bb47517479a3e$var$ObjectProto && $dS4Ut($af6bb47517479a3e$var$AllSymbols, key) && !$dS4Ut($af6bb47517479a3e$var$OPSymbols, key)) return false;
    return E || !$dS4Ut(this, key) || !$dS4Ut($af6bb47517479a3e$var$AllSymbols, key) || $dS4Ut(this, $af6bb47517479a3e$var$HIDDEN) && this[$af6bb47517479a3e$var$HIDDEN][key] ? E : true;
};
var $af6bb47517479a3e$var$$getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
    it = $fHwma(it);
    key = $dapnX(key, true);
    if (it === $af6bb47517479a3e$var$ObjectProto && $dS4Ut($af6bb47517479a3e$var$AllSymbols, key) && !$dS4Ut($af6bb47517479a3e$var$OPSymbols, key)) return;
    var D = $af6bb47517479a3e$var$gOPD(it, key);
    if (D && $dS4Ut($af6bb47517479a3e$var$AllSymbols, key) && !($dS4Ut(it, $af6bb47517479a3e$var$HIDDEN) && it[$af6bb47517479a3e$var$HIDDEN][key])) D.enumerable = true;
    return D;
};
var $af6bb47517479a3e$var$$getOwnPropertyNames = function getOwnPropertyNames(it) {
    var names = $af6bb47517479a3e$var$gOPN($fHwma(it));
    var result = [];
    var i = 0;
    var key;
    while(names.length > i)if (!$dS4Ut($af6bb47517479a3e$var$AllSymbols, key = names[i++]) && key != $af6bb47517479a3e$var$HIDDEN && key != $af6bb47517479a3e$require$META) result.push(key);
    return result;
};
var $af6bb47517479a3e$var$$getOwnPropertySymbols = function getOwnPropertySymbols(it) {
    var IS_OP = it === $af6bb47517479a3e$var$ObjectProto;
    var names = $af6bb47517479a3e$var$gOPN(IS_OP ? $af6bb47517479a3e$var$OPSymbols : $fHwma(it));
    var result = [];
    var i = 0;
    var key;
    while(names.length > i)if ($dS4Ut($af6bb47517479a3e$var$AllSymbols, key = names[i++]) && (IS_OP ? $dS4Ut($af6bb47517479a3e$var$ObjectProto, key) : true)) result.push($af6bb47517479a3e$var$AllSymbols[key]);
    return result;
};



// 19.4.1.1 Symbol([description])
if (!$af6bb47517479a3e$var$USE_NATIVE) {
    $af6bb47517479a3e$var$$Symbol = function Symbol() {
        if (this instanceof $af6bb47517479a3e$var$$Symbol) throw TypeError("Symbol is not a constructor!");
        var tag = $dCUYV(arguments.length > 0 ? arguments[0] : undefined);
        var $set = function(value) {
            if (this === $af6bb47517479a3e$var$ObjectProto) $set.call($af6bb47517479a3e$var$OPSymbols, value);
            if ($dS4Ut(this, $af6bb47517479a3e$var$HIDDEN) && $dS4Ut(this[$af6bb47517479a3e$var$HIDDEN], tag)) this[$af6bb47517479a3e$var$HIDDEN][tag] = false;
            $af6bb47517479a3e$var$setSymbolDesc(this, tag, $87uCM(1, value));
        };
        if ($3y86S && $af6bb47517479a3e$var$setter) $af6bb47517479a3e$var$setSymbolDesc($af6bb47517479a3e$var$ObjectProto, tag, {
            configurable: true,
            set: $set
        });
        return $af6bb47517479a3e$var$wrap(tag);
    };
    $bRGed($af6bb47517479a3e$var$$Symbol[$af6bb47517479a3e$var$PROTOTYPE], "toString", function toString() {
        return this._k;
    });
    $b0Bat.f = $af6bb47517479a3e$var$$getOwnPropertyDescriptor;
    $dLczm.f = $af6bb47517479a3e$var$$defineProperty;
    (parcelRequire("2WGYr")).f = $1sHxg.f = $af6bb47517479a3e$var$$getOwnPropertyNames;
    (parcelRequire("cXyZT")).f = $af6bb47517479a3e$var$$propertyIsEnumerable;
    $bz7J4.f = $af6bb47517479a3e$var$$getOwnPropertySymbols;
    if ($3y86S && !(parcelRequire("jEzjy"))) $bRGed($af6bb47517479a3e$var$ObjectProto, "propertyIsEnumerable", $af6bb47517479a3e$var$$propertyIsEnumerable, true);
    $cdkyH.f = function(name) {
        return $af6bb47517479a3e$var$wrap($5i4Lz(name));
    };
}
$3B1Ky($3B1Ky.G + $3B1Ky.W + $3B1Ky.F * !$af6bb47517479a3e$var$USE_NATIVE, {
    Symbol: $af6bb47517479a3e$var$$Symbol
});
for(var $af6bb47517479a3e$var$es6Symbols = // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
"hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","), $af6bb47517479a3e$var$j = 0; $af6bb47517479a3e$var$es6Symbols.length > $af6bb47517479a3e$var$j;)$5i4Lz($af6bb47517479a3e$var$es6Symbols[$af6bb47517479a3e$var$j++]);
for(var $af6bb47517479a3e$var$wellKnownSymbols = $isffO($5i4Lz.store), $af6bb47517479a3e$var$k = 0; $af6bb47517479a3e$var$wellKnownSymbols.length > $af6bb47517479a3e$var$k;)$cX6eF($af6bb47517479a3e$var$wellKnownSymbols[$af6bb47517479a3e$var$k++]);
$3B1Ky($3B1Ky.S + $3B1Ky.F * !$af6bb47517479a3e$var$USE_NATIVE, "Symbol", {
    // 19.4.2.1 Symbol.for(key)
    "for": function(key) {
        return $dS4Ut($af6bb47517479a3e$var$SymbolRegistry, key += "") ? $af6bb47517479a3e$var$SymbolRegistry[key] : $af6bb47517479a3e$var$SymbolRegistry[key] = $af6bb47517479a3e$var$$Symbol(key);
    },
    // 19.4.2.5 Symbol.keyFor(sym)
    keyFor: function keyFor(sym) {
        if (!$af6bb47517479a3e$var$isSymbol(sym)) throw TypeError(sym + " is not a symbol!");
        for(var key in $af6bb47517479a3e$var$SymbolRegistry)if ($af6bb47517479a3e$var$SymbolRegistry[key] === sym) return key;
    },
    useSetter: function() {
        $af6bb47517479a3e$var$setter = true;
    },
    useSimple: function() {
        $af6bb47517479a3e$var$setter = false;
    }
});
$3B1Ky($3B1Ky.S + $3B1Ky.F * !$af6bb47517479a3e$var$USE_NATIVE, "Object", {
    // 19.1.2.2 Object.create(O [, Properties])
    create: $af6bb47517479a3e$var$$create,
    // 19.1.2.4 Object.defineProperty(O, P, Attributes)
    defineProperty: $af6bb47517479a3e$var$$defineProperty,
    // 19.1.2.3 Object.defineProperties(O, Properties)
    defineProperties: $af6bb47517479a3e$var$$defineProperties,
    // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
    getOwnPropertyDescriptor: $af6bb47517479a3e$var$$getOwnPropertyDescriptor,
    // 19.1.2.7 Object.getOwnPropertyNames(O)
    getOwnPropertyNames: $af6bb47517479a3e$var$$getOwnPropertyNames,
    // 19.1.2.8 Object.getOwnPropertySymbols(O)
    getOwnPropertySymbols: $af6bb47517479a3e$var$$getOwnPropertySymbols
});
// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
var $af6bb47517479a3e$var$FAILS_ON_PRIMITIVES = $hcpLn(function() {
    $bz7J4.f(1);
});
$3B1Ky($3B1Ky.S + $3B1Ky.F * $af6bb47517479a3e$var$FAILS_ON_PRIMITIVES, "Object", {
    getOwnPropertySymbols: function getOwnPropertySymbols(it) {
        return $bz7J4.f($6dhUj(it));
    }
});
// 24.3.2 JSON.stringify(value [, replacer [, space]])
$af6bb47517479a3e$var$$JSON && $3B1Ky($3B1Ky.S + $3B1Ky.F * (!$af6bb47517479a3e$var$USE_NATIVE || $hcpLn(function() {
    var S = $af6bb47517479a3e$var$$Symbol();
    // MS Edge converts symbol values to JSON as {}
    // WebKit converts symbol values to JSON as null
    // V8 throws on boxed symbols
    return $af6bb47517479a3e$var$_stringify([
        S
    ]) != "[null]" || $af6bb47517479a3e$var$_stringify({
        a: S
    }) != "{}" || $af6bb47517479a3e$var$_stringify(Object(S)) != "{}";
})), "JSON", {
    stringify: function stringify(it) {
        var args = [
            it
        ];
        var i = 1;
        var replacer, $replacer;
        while(arguments.length > i)args.push(arguments[i++]);
        $replacer = replacer = args[1];
        if (!$ly2vB(replacer) && it === undefined || $af6bb47517479a3e$var$isSymbol(it)) return; // IE8 returns string on undefined
        if (!$iLSpw(replacer)) replacer = function(key, value) {
            if (typeof $replacer == "function") value = $replacer.call(this, key, value);
            if (!$af6bb47517479a3e$var$isSymbol(value)) return value;
        };
        args[1] = replacer;
        return $af6bb47517479a3e$var$_stringify.apply($af6bb47517479a3e$var$$JSON, args);
    }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$af6bb47517479a3e$var$$Symbol[$af6bb47517479a3e$var$PROTOTYPE][$af6bb47517479a3e$var$TO_PRIMITIVE] || (parcelRequire("expki"))($af6bb47517479a3e$var$$Symbol[$af6bb47517479a3e$var$PROTOTYPE], $af6bb47517479a3e$var$TO_PRIMITIVE, $af6bb47517479a3e$var$$Symbol[$af6bb47517479a3e$var$PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
$hMuUi($af6bb47517479a3e$var$$Symbol, "Symbol");
// 20.2.1.9 Math[@@toStringTag]
$hMuUi(Math, "Math", true);
// 24.3.3 JSON[@@toStringTag]
$hMuUi($gTAze.JSON, "JSON", true);



var $3B1Ky = parcelRequire("3B1Ky");

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$3B1Ky($3B1Ky.S, "Object", {
    create: (parcelRequire("fKIsL"))
});



var $3B1Ky = parcelRequire("3B1Ky");


// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$3B1Ky($3B1Ky.S + $3B1Ky.F * !(parcelRequire("3y86S")), "Object", {
    defineProperty: (parcelRequire("dLczm")).f
});



var $3B1Ky = parcelRequire("3B1Ky");


// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
$3B1Ky($3B1Ky.S + $3B1Ky.F * !(parcelRequire("3y86S")), "Object", {
    defineProperties: (parcelRequire("ccsI4"))
});



var $fHwma = parcelRequire("fHwma");

var $b0Bat = parcelRequire("b0Bat");
var $d3c11a94b42d8a2b$require$$getOwnPropertyDescriptor = $b0Bat.f;

(parcelRequire("eyXYC"))("getOwnPropertyDescriptor", function() {
    return function getOwnPropertyDescriptor(it, key) {
        return $d3c11a94b42d8a2b$require$$getOwnPropertyDescriptor($fHwma(it), key);
    };
});



var $6dhUj = parcelRequire("6dhUj");

var $imZ0P = parcelRequire("imZ0P");

(parcelRequire("eyXYC"))("getPrototypeOf", function() {
    return function getPrototypeOf(it) {
        return $imZ0P($6dhUj(it));
    };
});



var $6dhUj = parcelRequire("6dhUj");

var $isffO = parcelRequire("isffO");

(parcelRequire("eyXYC"))("keys", function() {
    return function keys(it) {
        return $isffO($6dhUj(it));
    };
});




// 19.1.2.7 Object.getOwnPropertyNames(O)
(parcelRequire("eyXYC"))("getOwnPropertyNames", function() {
    return (parcelRequire("1sHxg")).f;
});



var $ly2vB = parcelRequire("ly2vB");

var $eTnVl = parcelRequire("eTnVl");
var $dab433162761f108$require$meta = $eTnVl.onFreeze;

(parcelRequire("eyXYC"))("freeze", function($freeze) {
    return function freeze(it) {
        return $freeze && $ly2vB(it) ? $freeze($dab433162761f108$require$meta(it)) : it;
    };
});



var $ly2vB = parcelRequire("ly2vB");

var $eTnVl = parcelRequire("eTnVl");
var $a006827466d4782b$require$meta = $eTnVl.onFreeze;

(parcelRequire("eyXYC"))("seal", function($seal) {
    return function seal(it) {
        return $seal && $ly2vB(it) ? $seal($a006827466d4782b$require$meta(it)) : it;
    };
});



var $ly2vB = parcelRequire("ly2vB");

var $eTnVl = parcelRequire("eTnVl");
var $97515b70428fcdcf$require$meta = $eTnVl.onFreeze;

(parcelRequire("eyXYC"))("preventExtensions", function($preventExtensions) {
    return function preventExtensions(it) {
        return $preventExtensions && $ly2vB(it) ? $preventExtensions($97515b70428fcdcf$require$meta(it)) : it;
    };
});



var $ly2vB = parcelRequire("ly2vB");

(parcelRequire("eyXYC"))("isFrozen", function($isFrozen) {
    return function isFrozen(it) {
        return $ly2vB(it) ? $isFrozen ? $isFrozen(it) : false : true;
    };
});



var $ly2vB = parcelRequire("ly2vB");

(parcelRequire("eyXYC"))("isSealed", function($isSealed) {
    return function isSealed(it) {
        return $ly2vB(it) ? $isSealed ? $isSealed(it) : false : true;
    };
});



var $ly2vB = parcelRequire("ly2vB");

(parcelRequire("eyXYC"))("isExtensible", function($isExtensible) {
    return function isExtensible(it) {
        return $ly2vB(it) ? $isExtensible ? $isExtensible(it) : true : false;
    };
});



var $3B1Ky = parcelRequire("3B1Ky");

$3B1Ky($3B1Ky.S + $3B1Ky.F, "Object", {
    assign: (parcelRequire("iUG18"))
});



var $3B1Ky = parcelRequire("3B1Ky");

$3B1Ky($3B1Ky.S, "Object", {
    is: (parcelRequire("blUd4"))
});



var $3B1Ky = parcelRequire("3B1Ky");

$3B1Ky($3B1Ky.S, "Object", {
    setPrototypeOf: (parcelRequire("ei7b7")).set
});


"use strict";

var $bbWc2 = parcelRequire("bbWc2");
var $020bd438a37a24ce$var$test = {};

var $5i4Lz = parcelRequire("5i4Lz");
$020bd438a37a24ce$var$test[$5i4Lz("toStringTag")] = "z";

if ($020bd438a37a24ce$var$test + "" != "[object z]") (parcelRequire("bRGed"))(Object.prototype, "toString", function toString() {
    return "[object " + $bbWc2(this) + "]";
}, true);



var $3B1Ky = parcelRequire("3B1Ky");

$3B1Ky($3B1Ky.P, "Function", {
    bind: (parcelRequire("jAuUZ"))
});



var $dLczm = parcelRequire("dLczm");
var $d4a79332cb8b5400$require$dP = $dLczm.f;
var $d4a79332cb8b5400$var$FProto = Function.prototype;
var $d4a79332cb8b5400$var$nameRE = /^\s*function ([^ (]*)/;
var $d4a79332cb8b5400$var$NAME = "name";

// 19.2.4.2 name
$d4a79332cb8b5400$var$NAME in $d4a79332cb8b5400$var$FProto || (parcelRequire("3y86S")) && $d4a79332cb8b5400$require$dP($d4a79332cb8b5400$var$FProto, $d4a79332cb8b5400$var$NAME, {
    configurable: true,
    get: function() {
        try {
            return ("" + this).match($d4a79332cb8b5400$var$nameRE)[1];
        } catch (e) {
            return "";
        }
    }
});


"use strict";

var $ly2vB = parcelRequire("ly2vB");

var $imZ0P = parcelRequire("imZ0P");

var $255e6281512276ae$var$HAS_INSTANCE = (parcelRequire("5i4Lz"))("hasInstance");
var $255e6281512276ae$var$FunctionProto = Function.prototype;

// 19.2.3.6 Function.prototype[@@hasInstance](V)
if (!($255e6281512276ae$var$HAS_INSTANCE in $255e6281512276ae$var$FunctionProto)) (parcelRequire("dLczm")).f($255e6281512276ae$var$FunctionProto, $255e6281512276ae$var$HAS_INSTANCE, {
    value: function(O) {
        if (typeof this != "function" || !$ly2vB(O)) return false;
        if (!$ly2vB(this.prototype)) return O instanceof this;
        // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
        while(O = $imZ0P(O))if (this.prototype === O) return true;
        return false;
    }
});



var $3B1Ky = parcelRequire("3B1Ky");
var $78ed64d1fe6a4ac5$exports = {};

var $gTAze = parcelRequire("gTAze");
var $78ed64d1fe6a4ac5$require$$parseInt = $gTAze.parseInt;

var $jaCBu = parcelRequire("jaCBu");
var $78ed64d1fe6a4ac5$require$$trim = $jaCBu.trim;

var $k0Gfc = parcelRequire("k0Gfc");
var $78ed64d1fe6a4ac5$var$hex = /^[-+]?0[xX]/;
$78ed64d1fe6a4ac5$exports = $78ed64d1fe6a4ac5$require$$parseInt($k0Gfc + "08") !== 8 || $78ed64d1fe6a4ac5$require$$parseInt($k0Gfc + "0x16") !== 22 ? function parseInt(str, radix) {
    var string = $78ed64d1fe6a4ac5$require$$trim(String(str), 3);
    return $78ed64d1fe6a4ac5$require$$parseInt(string, radix >>> 0 || ($78ed64d1fe6a4ac5$var$hex.test(string) ? 16 : 10));
} : $78ed64d1fe6a4ac5$require$$parseInt;


// 18.2.5 parseInt(string, radix)
$3B1Ky($3B1Ky.G + $3B1Ky.F * (parseInt != $78ed64d1fe6a4ac5$exports), {
    parseInt: $78ed64d1fe6a4ac5$exports
});



var $3B1Ky = parcelRequire("3B1Ky");
var $ce9a4224ca357ddd$exports = {};

var $gTAze = parcelRequire("gTAze");
var $ce9a4224ca357ddd$require$$parseFloat = $gTAze.parseFloat;

var $jaCBu = parcelRequire("jaCBu");
var $ce9a4224ca357ddd$require$$trim = $jaCBu.trim;

$ce9a4224ca357ddd$exports = 1 / $ce9a4224ca357ddd$require$$parseFloat((parcelRequire("k0Gfc")) + "-0") !== -Infinity ? function parseFloat(str) {
    var string = $ce9a4224ca357ddd$require$$trim(String(str), 3);
    var result = $ce9a4224ca357ddd$require$$parseFloat(string);
    return result === 0 && string.charAt(0) == "-" ? -0 : result;
} : $ce9a4224ca357ddd$require$$parseFloat;


// 18.2.4 parseFloat(string)
$3B1Ky($3B1Ky.G + $3B1Ky.F * (parseFloat != $ce9a4224ca357ddd$exports), {
    parseFloat: $ce9a4224ca357ddd$exports
});


"use strict";

var $gTAze = parcelRequire("gTAze");

var $dS4Ut = parcelRequire("dS4Ut");

var $bOq6I = parcelRequire("bOq6I");

var $f8mMC = parcelRequire("f8mMC");

var $dapnX = parcelRequire("dapnX");

var $hcpLn = parcelRequire("hcpLn");

var $2WGYr = parcelRequire("2WGYr");
var $b794d19100c9dd85$require$gOPN = $2WGYr.f;

var $b0Bat = parcelRequire("b0Bat");
var $b794d19100c9dd85$require$gOPD = $b0Bat.f;

var $dLczm = parcelRequire("dLczm");
var $b794d19100c9dd85$require$dP = $dLczm.f;

var $jaCBu = parcelRequire("jaCBu");
var $b794d19100c9dd85$require$$trim = $jaCBu.trim;
var $b794d19100c9dd85$var$NUMBER = "Number";
var $b794d19100c9dd85$var$$Number = $gTAze[$b794d19100c9dd85$var$NUMBER];
var $b794d19100c9dd85$var$Base = $b794d19100c9dd85$var$$Number;
var $b794d19100c9dd85$var$proto = $b794d19100c9dd85$var$$Number.prototype;

// Opera ~12 has broken Object#toString
var $b794d19100c9dd85$var$BROKEN_COF = $bOq6I((parcelRequire("fKIsL"))($b794d19100c9dd85$var$proto)) == $b794d19100c9dd85$var$NUMBER;
var $b794d19100c9dd85$var$TRIM = "trim" in String.prototype;
// 7.1.3 ToNumber(argument)
var $b794d19100c9dd85$var$toNumber = function(argument) {
    var it = $dapnX(argument, false);
    if (typeof it == "string" && it.length > 2) {
        it = $b794d19100c9dd85$var$TRIM ? it.trim() : $b794d19100c9dd85$require$$trim(it, 3);
        var first = it.charCodeAt(0);
        var third, radix, maxCode;
        if (first === 43 || first === 45) {
            third = it.charCodeAt(2);
            if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
        } else if (first === 48) {
            switch(it.charCodeAt(1)){
                case 66:
                case 98:
                    radix = 2;
                    maxCode = 49;
                    break; // fast equal /^0b[01]+$/i
                case 79:
                case 111:
                    radix = 8;
                    maxCode = 55;
                    break; // fast equal /^0o[0-7]+$/i
                default:
                    return +it;
            }
            for(var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++){
                code = digits.charCodeAt(i);
                // parseInt parses a string to a first unavailable symbol
                // but ToNumber should return NaN if a string contains unavailable symbols
                if (code < 48 || code > maxCode) return NaN;
            }
            return parseInt(digits, radix);
        }
    }
    return +it;
};


if (!$b794d19100c9dd85$var$$Number(" 0o1") || !$b794d19100c9dd85$var$$Number("0b1") || $b794d19100c9dd85$var$$Number("+0x1")) {
    $b794d19100c9dd85$var$$Number = function Number(value) {
        var it = arguments.length < 1 ? 0 : value;
        var that = this;
        return that instanceof $b794d19100c9dd85$var$$Number && ($b794d19100c9dd85$var$BROKEN_COF ? $hcpLn(function() {
            $b794d19100c9dd85$var$proto.valueOf.call(that);
        }) : $bOq6I(that) != $b794d19100c9dd85$var$NUMBER) ? $f8mMC(new $b794d19100c9dd85$var$Base($b794d19100c9dd85$var$toNumber(it)), that, $b794d19100c9dd85$var$$Number) : $b794d19100c9dd85$var$toNumber(it);
    };
    for(var $b794d19100c9dd85$var$keys = (parcelRequire("3y86S")) ? $b794d19100c9dd85$require$gOPN($b794d19100c9dd85$var$Base) : // ES3:
    "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","), $b794d19100c9dd85$var$j = 0, $b794d19100c9dd85$var$key; $b794d19100c9dd85$var$keys.length > $b794d19100c9dd85$var$j; $b794d19100c9dd85$var$j++)if ($dS4Ut($b794d19100c9dd85$var$Base, $b794d19100c9dd85$var$key = $b794d19100c9dd85$var$keys[$b794d19100c9dd85$var$j]) && !$dS4Ut($b794d19100c9dd85$var$$Number, $b794d19100c9dd85$var$key)) $b794d19100c9dd85$require$dP($b794d19100c9dd85$var$$Number, $b794d19100c9dd85$var$key, $b794d19100c9dd85$require$gOPD($b794d19100c9dd85$var$Base, $b794d19100c9dd85$var$key));
    $b794d19100c9dd85$var$$Number.prototype = $b794d19100c9dd85$var$proto;
    $b794d19100c9dd85$var$proto.constructor = $b794d19100c9dd85$var$$Number;
    (parcelRequire("bRGed"))($gTAze, $b794d19100c9dd85$var$NUMBER, $b794d19100c9dd85$var$$Number);
}


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");

var $fEeDR = parcelRequire("fEeDR");
var $1555d44702304a9c$exports = {};

var $bOq6I = parcelRequire("bOq6I");
$1555d44702304a9c$exports = function(it, msg) {
    if (typeof it != "number" && $bOq6I(it) != "Number") throw TypeError(msg);
    return +it;
};



var $faNmj = parcelRequire("faNmj");
var $a48a83f149987799$var$$toFixed = 1.0.toFixed;
var $a48a83f149987799$var$floor = Math.floor;
var $a48a83f149987799$var$data = [
    0,
    0,
    0,
    0,
    0,
    0
];
var $a48a83f149987799$var$ERROR = "Number.toFixed: incorrect invocation!";
var $a48a83f149987799$var$ZERO = "0";
var $a48a83f149987799$var$multiply = function(n, c) {
    var i = -1;
    var c2 = c;
    while(++i < 6){
        c2 += n * $a48a83f149987799$var$data[i];
        $a48a83f149987799$var$data[i] = c2 % 1e7;
        c2 = $a48a83f149987799$var$floor(c2 / 1e7);
    }
};
var $a48a83f149987799$var$divide = function(n) {
    var i = 6;
    var c = 0;
    while(--i >= 0){
        c += $a48a83f149987799$var$data[i];
        $a48a83f149987799$var$data[i] = $a48a83f149987799$var$floor(c / n);
        c = c % n * 1e7;
    }
};
var $a48a83f149987799$var$numToString = function() {
    var i = 6;
    var s = "";
    while(--i >= 0)if (s !== "" || i === 0 || $a48a83f149987799$var$data[i] !== 0) {
        var t = String($a48a83f149987799$var$data[i]);
        s = s === "" ? t : s + $faNmj.call($a48a83f149987799$var$ZERO, 7 - t.length) + t;
    }
    return s;
};
var $a48a83f149987799$var$pow = function(x, n, acc) {
    return n === 0 ? acc : n % 2 === 1 ? $a48a83f149987799$var$pow(x, n - 1, acc * x) : $a48a83f149987799$var$pow(x * x, n / 2, acc);
};
var $a48a83f149987799$var$log = function(x) {
    var n = 0;
    var x2 = x;
    while(x2 >= 4096){
        n += 12;
        x2 /= 4096;
    }
    while(x2 >= 2){
        n += 1;
        x2 /= 2;
    }
    return n;
};

$3B1Ky($3B1Ky.P + $3B1Ky.F * (!!$a48a83f149987799$var$$toFixed && (0.00008.toFixed(3) !== "0.000" || 0.9.toFixed(0) !== "1" || 1.255.toFixed(2) !== "1.25" || 1000000000000000128.0.toFixed(0) !== "1000000000000000128") || !(parcelRequire("hcpLn"))(function() {
    // V8 ~ Android 4.3-
    $a48a83f149987799$var$$toFixed.call({});
})), "Number", {
    toFixed: function toFixed(fractionDigits) {
        var x = $1555d44702304a9c$exports(this, $a48a83f149987799$var$ERROR);
        var f = $fEeDR(fractionDigits);
        var s = "";
        var m = $a48a83f149987799$var$ZERO;
        var e, z, j, k;
        if (f < 0 || f > 20) throw RangeError($a48a83f149987799$var$ERROR);
        // eslint-disable-next-line no-self-compare
        if (x != x) return "NaN";
        if (x <= -1000000000000000000000 || x >= 1e21) return String(x);
        if (x < 0) {
            s = "-";
            x = -x;
        }
        if (x > 1e-21) {
            e = $a48a83f149987799$var$log(x * $a48a83f149987799$var$pow(2, 69, 1)) - 69;
            z = e < 0 ? x * $a48a83f149987799$var$pow(2, -e, 1) : x / $a48a83f149987799$var$pow(2, e, 1);
            z *= 0x10000000000000;
            e = 52 - e;
            if (e > 0) {
                $a48a83f149987799$var$multiply(0, z);
                j = f;
                while(j >= 7){
                    $a48a83f149987799$var$multiply(1e7, 0);
                    j -= 7;
                }
                $a48a83f149987799$var$multiply($a48a83f149987799$var$pow(10, j, 1), 0);
                j = e - 1;
                while(j >= 23){
                    $a48a83f149987799$var$divide(8388608);
                    j -= 23;
                }
                $a48a83f149987799$var$divide(1 << j);
                $a48a83f149987799$var$multiply(1, 1);
                $a48a83f149987799$var$divide(2);
                m = $a48a83f149987799$var$numToString();
            } else {
                $a48a83f149987799$var$multiply(0, z);
                $a48a83f149987799$var$multiply(1 << -e, 0);
                m = $a48a83f149987799$var$numToString() + $faNmj.call($a48a83f149987799$var$ZERO, f);
            }
        }
        if (f > 0) {
            k = m.length;
            m = s + (k <= f ? "0." + $faNmj.call($a48a83f149987799$var$ZERO, f - k) + m : m.slice(0, k - f) + "." + m.slice(k - f));
        } else m = s + m;
        return m;
    }
});


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");

var $hcpLn = parcelRequire("hcpLn");

var $f800717e49c86b6c$var$$toPrecision = 1.0.toPrecision;
$3B1Ky($3B1Ky.P + $3B1Ky.F * ($hcpLn(function() {
    // IE7-
    return $f800717e49c86b6c$var$$toPrecision.call(1, undefined) !== "1";
}) || !$hcpLn(function() {
    // V8 ~ Android 4.3-
    $f800717e49c86b6c$var$$toPrecision.call({});
})), "Number", {
    toPrecision: function toPrecision(precision) {
        var that = $1555d44702304a9c$exports(this, "Number#toPrecision: incorrect invocation!");
        return precision === undefined ? $f800717e49c86b6c$var$$toPrecision.call(that) : $f800717e49c86b6c$var$$toPrecision.call(that, precision);
    }
});



var $3B1Ky = parcelRequire("3B1Ky");
$3B1Ky($3B1Ky.S, "Number", {
    EPSILON: Math.pow(2, -52)
});



var $3B1Ky = parcelRequire("3B1Ky");

var $gTAze = parcelRequire("gTAze");
var $80ff6ba4d27d936f$require$_isFinite = $gTAze.isFinite;
$3B1Ky($3B1Ky.S, "Number", {
    isFinite: function isFinite(it) {
        return typeof it == "number" && $80ff6ba4d27d936f$require$_isFinite(it);
    }
});



var $3B1Ky = parcelRequire("3B1Ky");

$3B1Ky($3B1Ky.S, "Number", {
    isInteger: (parcelRequire("4yiY8"))
});



var $3B1Ky = parcelRequire("3B1Ky");
$3B1Ky($3B1Ky.S, "Number", {
    isNaN: function isNaN(number) {
        // eslint-disable-next-line no-self-compare
        return number != number;
    }
});



var $3B1Ky = parcelRequire("3B1Ky");

var $4yiY8 = parcelRequire("4yiY8");
var $4e992df95b50038d$var$abs = Math.abs;
$3B1Ky($3B1Ky.S, "Number", {
    isSafeInteger: function isSafeInteger(number) {
        return $4yiY8(number) && $4e992df95b50038d$var$abs(number) <= 0x1fffffffffffff;
    }
});



var $3B1Ky = parcelRequire("3B1Ky");
$3B1Ky($3B1Ky.S, "Number", {
    MAX_SAFE_INTEGER: 0x1fffffffffffff
});



var $3B1Ky = parcelRequire("3B1Ky");
$3B1Ky($3B1Ky.S, "Number", {
    MIN_SAFE_INTEGER: -9007199254740991
});



var $3B1Ky = parcelRequire("3B1Ky");

// 20.1.2.12 Number.parseFloat(string)
$3B1Ky($3B1Ky.S + $3B1Ky.F * (Number.parseFloat != $ce9a4224ca357ddd$exports), "Number", {
    parseFloat: $ce9a4224ca357ddd$exports
});



var $3B1Ky = parcelRequire("3B1Ky");

// 20.1.2.13 Number.parseInt(string, radix)
$3B1Ky($3B1Ky.S + $3B1Ky.F * (Number.parseInt != $78ed64d1fe6a4ac5$exports), "Number", {
    parseInt: $78ed64d1fe6a4ac5$exports
});



var $3B1Ky = parcelRequire("3B1Ky");

var $kg3cE = parcelRequire("kg3cE");
var $4a628d0d6423125c$var$sqrt = Math.sqrt;
var $4a628d0d6423125c$var$$acosh = Math.acosh;
$3B1Ky($3B1Ky.S + $3B1Ky.F * !($4a628d0d6423125c$var$$acosh && Math.floor($4a628d0d6423125c$var$$acosh(Number.MAX_VALUE)) == 710 && $4a628d0d6423125c$var$$acosh(Infinity) == Infinity), "Math", {
    acosh: function acosh(x) {
        return (x = +x) < 1 ? NaN : x > 94906265.62425156 ? Math.log(x) + Math.LN2 : $kg3cE(x - 1 + $4a628d0d6423125c$var$sqrt(x - 1) * $4a628d0d6423125c$var$sqrt(x + 1));
    }
});



var $3B1Ky = parcelRequire("3B1Ky");
var $d98fde2b1337b9ea$var$$asinh = Math.asinh;
function $d98fde2b1337b9ea$var$asinh(x) {
    return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -$d98fde2b1337b9ea$var$asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
}
// Tor Browser bug: Math.asinh(0) -> -0
$3B1Ky($3B1Ky.S + $3B1Ky.F * !($d98fde2b1337b9ea$var$$asinh && 1 / $d98fde2b1337b9ea$var$$asinh(0) > 0), "Math", {
    asinh: $d98fde2b1337b9ea$var$asinh
});



var $3B1Ky = parcelRequire("3B1Ky");
var $c71f6ea36670025e$var$$atanh = Math.atanh;
// Tor Browser bug: Math.atanh(-0) -> 0
$3B1Ky($3B1Ky.S + $3B1Ky.F * !($c71f6ea36670025e$var$$atanh && 1 / $c71f6ea36670025e$var$$atanh(-0) < 0), "Math", {
    atanh: function atanh(x) {
        return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
    }
});



var $3B1Ky = parcelRequire("3B1Ky");

var $jx2jO = parcelRequire("jx2jO");
$3B1Ky($3B1Ky.S, "Math", {
    cbrt: function cbrt(x) {
        return $jx2jO(x = +x) * Math.pow(Math.abs(x), 1 / 3);
    }
});



var $3B1Ky = parcelRequire("3B1Ky");
$3B1Ky($3B1Ky.S, "Math", {
    clz32: function clz32(x) {
        return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
    }
});



var $3B1Ky = parcelRequire("3B1Ky");
var $da27be7fe9b559ad$var$exp = Math.exp;
$3B1Ky($3B1Ky.S, "Math", {
    cosh: function cosh(x) {
        return ($da27be7fe9b559ad$var$exp(x = +x) + $da27be7fe9b559ad$var$exp(-x)) / 2;
    }
});



var $3B1Ky = parcelRequire("3B1Ky");
var $6e1f91465ed51c1c$exports = {};
// 20.2.2.14 Math.expm1(x)
var $6e1f91465ed51c1c$var$$expm1 = Math.expm1;
$6e1f91465ed51c1c$exports = !$6e1f91465ed51c1c$var$$expm1 || $6e1f91465ed51c1c$var$$expm1(10) > 22025.465794806719 || $6e1f91465ed51c1c$var$$expm1(10) < 22025.4657948067165168 || $6e1f91465ed51c1c$var$$expm1(-0.00000000000000002) != -0.00000000000000002 ? function expm1(x) {
    return (x = +x) == 0 ? x : x > -0.000001 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
} : $6e1f91465ed51c1c$var$$expm1;


$3B1Ky($3B1Ky.S + $3B1Ky.F * ($6e1f91465ed51c1c$exports != Math.expm1), "Math", {
    expm1: $6e1f91465ed51c1c$exports
});



var $3B1Ky = parcelRequire("3B1Ky");

$3B1Ky($3B1Ky.S, "Math", {
    fround: (parcelRequire("bgh7t"))
});



var $3B1Ky = parcelRequire("3B1Ky");
var $0fcd26a812e5e9c3$var$abs = Math.abs;
$3B1Ky($3B1Ky.S, "Math", {
    hypot: function hypot(value1, value2) {
        var sum = 0;
        var i = 0;
        var aLen = arguments.length;
        var larg = 0;
        var arg, div;
        while(i < aLen){
            arg = $0fcd26a812e5e9c3$var$abs(arguments[i++]);
            if (larg < arg) {
                div = larg / arg;
                sum = sum * div * div + 1;
                larg = arg;
            } else if (arg > 0) {
                div = arg / larg;
                sum += div * div;
            } else sum += arg;
        }
        return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
    }
});



var $3B1Ky = parcelRequire("3B1Ky");
var $5a82b802d9b1dd80$var$$imul = Math.imul;

// some WebKit versions fails with big numbers, some has wrong arity
$3B1Ky($3B1Ky.S + $3B1Ky.F * (parcelRequire("hcpLn"))(function() {
    return $5a82b802d9b1dd80$var$$imul(0xffffffff, 5) != -5 || $5a82b802d9b1dd80$var$$imul.length != 2;
}), "Math", {
    imul: function imul(x, y) {
        var UINT16 = 0xffff;
        var xn = +x;
        var yn = +y;
        var xl = UINT16 & xn;
        var yl = UINT16 & yn;
        return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
    }
});



var $3B1Ky = parcelRequire("3B1Ky");
$3B1Ky($3B1Ky.S, "Math", {
    log10: function log10(x) {
        return Math.log(x) * Math.LOG10E;
    }
});



var $3B1Ky = parcelRequire("3B1Ky");

$3B1Ky($3B1Ky.S, "Math", {
    log1p: (parcelRequire("kg3cE"))
});



var $3B1Ky = parcelRequire("3B1Ky");
$3B1Ky($3B1Ky.S, "Math", {
    log2: function log2(x) {
        return Math.log(x) / Math.LN2;
    }
});



var $3B1Ky = parcelRequire("3B1Ky");

$3B1Ky($3B1Ky.S, "Math", {
    sign: (parcelRequire("jx2jO"))
});



var $3B1Ky = parcelRequire("3B1Ky");

var $235a5cab6907ff7e$var$exp = Math.exp;

// V8 near Chromium 38 has a problem with very small numbers
$3B1Ky($3B1Ky.S + $3B1Ky.F * (parcelRequire("hcpLn"))(function() {
    return !Math.sinh(-0.00000000000000002) != -0.00000000000000002;
}), "Math", {
    sinh: function sinh(x) {
        return Math.abs(x = +x) < 1 ? ($6e1f91465ed51c1c$exports(x) - $6e1f91465ed51c1c$exports(-x)) / 2 : ($235a5cab6907ff7e$var$exp(x - 1) - $235a5cab6907ff7e$var$exp(-x - 1)) * (Math.E / 2);
    }
});



var $3B1Ky = parcelRequire("3B1Ky");

var $c0c84a6c8dd463d4$var$exp = Math.exp;
$3B1Ky($3B1Ky.S, "Math", {
    tanh: function tanh(x) {
        var a = $6e1f91465ed51c1c$exports(x = +x);
        var b = $6e1f91465ed51c1c$exports(-x);
        return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / ($c0c84a6c8dd463d4$var$exp(x) + $c0c84a6c8dd463d4$var$exp(-x));
    }
});



var $3B1Ky = parcelRequire("3B1Ky");
$3B1Ky($3B1Ky.S, "Math", {
    trunc: function trunc(it) {
        return (it > 0 ? Math.floor : Math.ceil)(it);
    }
});



var $3B1Ky = parcelRequire("3B1Ky");

var $aselx = parcelRequire("aselx");
var $5c540ddb736e9a0f$var$fromCharCode = String.fromCharCode;
var $5c540ddb736e9a0f$var$$fromCodePoint = String.fromCodePoint;
// length should be 1, old FF problem
$3B1Ky($3B1Ky.S + $3B1Ky.F * (!!$5c540ddb736e9a0f$var$$fromCodePoint && $5c540ddb736e9a0f$var$$fromCodePoint.length != 1), "String", {
    // 21.1.2.2 String.fromCodePoint(...codePoints)
    fromCodePoint: function fromCodePoint(x) {
        var res = [];
        var aLen = arguments.length;
        var i = 0;
        var code;
        while(aLen > i){
            code = +arguments[i++];
            if ($aselx(code, 0x10ffff) !== code) throw RangeError(code + " is not a valid code point");
            res.push(code < 0x10000 ? $5c540ddb736e9a0f$var$fromCharCode(code) : $5c540ddb736e9a0f$var$fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00));
        }
        return res.join("");
    }
});



var $3B1Ky = parcelRequire("3B1Ky");

var $fHwma = parcelRequire("fHwma");

var $DZqmm = parcelRequire("DZqmm");
$3B1Ky($3B1Ky.S, "String", {
    // 21.1.2.4 String.raw(callSite, ...substitutions)
    raw: function raw(callSite) {
        var tpl = $fHwma(callSite.raw);
        var len = $DZqmm(tpl.length);
        var aLen = arguments.length;
        var res = [];
        var i = 0;
        while(len > i){
            res.push(String(tpl[i++]));
            if (i < aLen) res.push(String(arguments[i]));
        }
        return res.join("");
    }
});


"use strict";

// 21.1.3.25 String.prototype.trim()
(parcelRequire("jaCBu"))("trim", function($trim) {
    return function trim() {
        return $trim(this, 3);
    };
});


"use strict";

var $03a9bfd727eecbbf$var$$at = (parcelRequire("k69Hy"))(true);

// 21.1.3.27 String.prototype[@@iterator]()
(parcelRequire("9eQhN"))(String, "String", function(iterated) {
    this._t = String(iterated); // target
    this._i = 0; // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function() {
    var O = this._t;
    var index = this._i;
    var point;
    if (index >= O.length) return {
        value: undefined,
        done: true
    };
    point = $03a9bfd727eecbbf$var$$at(O, index);
    this._i += point.length;
    return {
        value: point,
        done: false
    };
});


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");

var $4fd6d2b47156af92$var$$at = (parcelRequire("k69Hy"))(false);
$3B1Ky($3B1Ky.P, "String", {
    // 21.1.3.3 String.prototype.codePointAt(pos)
    codePointAt: function codePointAt(pos) {
        return $4fd6d2b47156af92$var$$at(this, pos);
    }
});


// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])
"use strict";

var $3B1Ky = parcelRequire("3B1Ky");

var $DZqmm = parcelRequire("DZqmm");
var $ba942065ff04414d$exports = {};
var $1e2b5bd1dd3f9fca$exports = {};

var $ly2vB = parcelRequire("ly2vB");

var $bOq6I = parcelRequire("bOq6I");

var $1e2b5bd1dd3f9fca$var$MATCH = (parcelRequire("5i4Lz"))("match");
$1e2b5bd1dd3f9fca$exports = function(it) {
    var isRegExp;
    return $ly2vB(it) && ((isRegExp = it[$1e2b5bd1dd3f9fca$var$MATCH]) !== undefined ? !!isRegExp : $bOq6I(it) == "RegExp");
};



var $clUkM = parcelRequire("clUkM");
$ba942065ff04414d$exports = function(that, searchString, NAME) {
    if ($1e2b5bd1dd3f9fca$exports(searchString)) throw TypeError("String#" + NAME + " doesn't accept regex!");
    return String($clUkM(that));
};


var $baed19a4fb24358f$var$ENDS_WITH = "endsWith";
var $baed19a4fb24358f$var$$endsWith = ""[$baed19a4fb24358f$var$ENDS_WITH];

$3B1Ky($3B1Ky.P + $3B1Ky.F * (parcelRequire("kJKVJ"))($baed19a4fb24358f$var$ENDS_WITH), "String", {
    endsWith: function endsWith(searchString /* , endPosition = @length */ ) {
        var that = $ba942065ff04414d$exports(this, searchString, $baed19a4fb24358f$var$ENDS_WITH);
        var endPosition = arguments.length > 1 ? arguments[1] : undefined;
        var len = $DZqmm(that.length);
        var end = endPosition === undefined ? len : Math.min($DZqmm(endPosition), len);
        var search = String(searchString);
        return $baed19a4fb24358f$var$$endsWith ? $baed19a4fb24358f$var$$endsWith.call(that, search, end) : that.slice(end - search.length, end) === search;
    }
});


// 21.1.3.7 String.prototype.includes(searchString, position = 0)
"use strict";

var $3B1Ky = parcelRequire("3B1Ky");

var $882a1d211b7858aa$var$INCLUDES = "includes";

$3B1Ky($3B1Ky.P + $3B1Ky.F * (parcelRequire("kJKVJ"))($882a1d211b7858aa$var$INCLUDES), "String", {
    includes: function includes(searchString /* , position = 0 */ ) {
        return !!~$ba942065ff04414d$exports(this, searchString, $882a1d211b7858aa$var$INCLUDES).indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
    }
});



var $3B1Ky = parcelRequire("3B1Ky");

$3B1Ky($3B1Ky.P, "String", {
    // 21.1.3.13 String.prototype.repeat(count)
    repeat: (parcelRequire("faNmj"))
});


// 21.1.3.18 String.prototype.startsWith(searchString [, position ])
"use strict";

var $3B1Ky = parcelRequire("3B1Ky");

var $DZqmm = parcelRequire("DZqmm");

var $46d743e77b90810b$var$STARTS_WITH = "startsWith";
var $46d743e77b90810b$var$$startsWith = ""[$46d743e77b90810b$var$STARTS_WITH];

$3B1Ky($3B1Ky.P + $3B1Ky.F * (parcelRequire("kJKVJ"))($46d743e77b90810b$var$STARTS_WITH), "String", {
    startsWith: function startsWith(searchString /* , position = 0 */ ) {
        var that = $ba942065ff04414d$exports(this, searchString, $46d743e77b90810b$var$STARTS_WITH);
        var index = $DZqmm(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));
        var search = String(searchString);
        return $46d743e77b90810b$var$$startsWith ? $46d743e77b90810b$var$$startsWith.call(that, search, index) : that.slice(index, index + search.length) === search;
    }
});


"use strict";

// B.2.3.2 String.prototype.anchor(name)
(parcelRequire("lDyfb"))("anchor", function(createHTML) {
    return function anchor(name) {
        return createHTML(this, "a", "name", name);
    };
});


"use strict";

// B.2.3.3 String.prototype.big()
(parcelRequire("lDyfb"))("big", function(createHTML) {
    return function big() {
        return createHTML(this, "big", "", "");
    };
});


"use strict";

// B.2.3.4 String.prototype.blink()
(parcelRequire("lDyfb"))("blink", function(createHTML) {
    return function blink() {
        return createHTML(this, "blink", "", "");
    };
});


"use strict";

// B.2.3.5 String.prototype.bold()
(parcelRequire("lDyfb"))("bold", function(createHTML) {
    return function bold() {
        return createHTML(this, "b", "", "");
    };
});


"use strict";

// B.2.3.6 String.prototype.fixed()
(parcelRequire("lDyfb"))("fixed", function(createHTML) {
    return function fixed() {
        return createHTML(this, "tt", "", "");
    };
});


"use strict";

// B.2.3.7 String.prototype.fontcolor(color)
(parcelRequire("lDyfb"))("fontcolor", function(createHTML) {
    return function fontcolor(color) {
        return createHTML(this, "font", "color", color);
    };
});


"use strict";

// B.2.3.8 String.prototype.fontsize(size)
(parcelRequire("lDyfb"))("fontsize", function(createHTML) {
    return function fontsize(size) {
        return createHTML(this, "font", "size", size);
    };
});


"use strict";

// B.2.3.9 String.prototype.italics()
(parcelRequire("lDyfb"))("italics", function(createHTML) {
    return function italics() {
        return createHTML(this, "i", "", "");
    };
});


"use strict";

// B.2.3.10 String.prototype.link(url)
(parcelRequire("lDyfb"))("link", function(createHTML) {
    return function link(url) {
        return createHTML(this, "a", "href", url);
    };
});


"use strict";

// B.2.3.11 String.prototype.small()
(parcelRequire("lDyfb"))("small", function(createHTML) {
    return function small() {
        return createHTML(this, "small", "", "");
    };
});


"use strict";

// B.2.3.12 String.prototype.strike()
(parcelRequire("lDyfb"))("strike", function(createHTML) {
    return function strike() {
        return createHTML(this, "strike", "", "");
    };
});


"use strict";

// B.2.3.13 String.prototype.sub()
(parcelRequire("lDyfb"))("sub", function(createHTML) {
    return function sub() {
        return createHTML(this, "sub", "", "");
    };
});


"use strict";

// B.2.3.14 String.prototype.sup()
(parcelRequire("lDyfb"))("sup", function(createHTML) {
    return function sup() {
        return createHTML(this, "sup", "", "");
    };
});



var $3B1Ky = parcelRequire("3B1Ky");
$3B1Ky($3B1Ky.S, "Date", {
    now: function() {
        return new Date().getTime();
    }
});


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");

var $6dhUj = parcelRequire("6dhUj");

var $dapnX = parcelRequire("dapnX");

$3B1Ky($3B1Ky.P + $3B1Ky.F * (parcelRequire("hcpLn"))(function() {
    return new Date(NaN).toJSON() !== null || Date.prototype.toJSON.call({
        toISOString: function() {
            return 1;
        }
    }) !== 1;
}), "Date", {
    // eslint-disable-next-line no-unused-vars
    toJSON: function toJSON(key) {
        var O = $6dhUj(this);
        var pv = $dapnX(O);
        return typeof pv == "number" && !isFinite(pv) ? null : O.toISOString();
    }
});



var $3B1Ky = parcelRequire("3B1Ky");
var $286aaf02c017aa21$exports = {};
"use strict";

var $hcpLn = parcelRequire("hcpLn");
var $286aaf02c017aa21$var$getTime = Date.prototype.getTime;
var $286aaf02c017aa21$var$$toISOString = Date.prototype.toISOString;
var $286aaf02c017aa21$var$lz = function(num) {
    return num > 9 ? num : "0" + num;
};
// PhantomJS / old WebKit has a broken implementations
$286aaf02c017aa21$exports = $hcpLn(function() {
    return $286aaf02c017aa21$var$$toISOString.call(new Date(-50000000000000 - 1)) != "0385-07-25T07:06:39.999Z";
}) || !$hcpLn(function() {
    $286aaf02c017aa21$var$$toISOString.call(new Date(NaN));
}) ? function toISOString() {
    if (!isFinite($286aaf02c017aa21$var$getTime.call(this))) throw RangeError("Invalid time value");
    var d = this;
    var y = d.getUTCFullYear();
    var m = d.getUTCMilliseconds();
    var s = y < 0 ? "-" : y > 9999 ? "+" : "";
    return s + ("00000" + Math.abs(y)).slice(s ? -6 : -4) + "-" + $286aaf02c017aa21$var$lz(d.getUTCMonth() + 1) + "-" + $286aaf02c017aa21$var$lz(d.getUTCDate()) + "T" + $286aaf02c017aa21$var$lz(d.getUTCHours()) + ":" + $286aaf02c017aa21$var$lz(d.getUTCMinutes()) + ":" + $286aaf02c017aa21$var$lz(d.getUTCSeconds()) + "." + (m > 99 ? m : "0" + $286aaf02c017aa21$var$lz(m)) + "Z";
} : $286aaf02c017aa21$var$$toISOString;


// PhantomJS / old WebKit has a broken implementations
$3B1Ky($3B1Ky.P + $3B1Ky.F * (Date.prototype.toISOString !== $286aaf02c017aa21$exports), "Date", {
    toISOString: $286aaf02c017aa21$exports
});


var $ecaf6b9a4bfd5b7c$var$DateProto = Date.prototype;
var $ecaf6b9a4bfd5b7c$var$INVALID_DATE = "Invalid Date";
var $ecaf6b9a4bfd5b7c$var$TO_STRING = "toString";
var $ecaf6b9a4bfd5b7c$var$$toString = $ecaf6b9a4bfd5b7c$var$DateProto[$ecaf6b9a4bfd5b7c$var$TO_STRING];
var $ecaf6b9a4bfd5b7c$var$getTime = $ecaf6b9a4bfd5b7c$var$DateProto.getTime;

if (new Date(NaN) + "" != $ecaf6b9a4bfd5b7c$var$INVALID_DATE) (parcelRequire("bRGed"))($ecaf6b9a4bfd5b7c$var$DateProto, $ecaf6b9a4bfd5b7c$var$TO_STRING, function toString() {
    var value = $ecaf6b9a4bfd5b7c$var$getTime.call(this);
    // eslint-disable-next-line no-self-compare
    return value === value ? $ecaf6b9a4bfd5b7c$var$$toString.call(this) : $ecaf6b9a4bfd5b7c$var$INVALID_DATE;
});



var $99efcf869b2abff2$var$TO_PRIMITIVE = (parcelRequire("5i4Lz"))("toPrimitive");
var $99efcf869b2abff2$var$proto = Date.prototype;


if (!($99efcf869b2abff2$var$TO_PRIMITIVE in $99efcf869b2abff2$var$proto)) (parcelRequire("expki"))($99efcf869b2abff2$var$proto, $99efcf869b2abff2$var$TO_PRIMITIVE, (parcelRequire("kIs70")));



var $3B1Ky = parcelRequire("3B1Ky");

$3B1Ky($3B1Ky.S, "Array", {
    isArray: (parcelRequire("iLSpw"))
});


"use strict";

var $7vO7i = parcelRequire("7vO7i");

var $3B1Ky = parcelRequire("3B1Ky");

var $6dhUj = parcelRequire("6dhUj");

var $5UELR = parcelRequire("5UELR");

var $4NkNf = parcelRequire("4NkNf");

var $DZqmm = parcelRequire("DZqmm");
var $b61c8e7c85d33c3b$exports = {};
"use strict";

var $dLczm = parcelRequire("dLczm");

var $87uCM = parcelRequire("87uCM");
$b61c8e7c85d33c3b$exports = function(object, index, value) {
    if (index in object) $dLczm.f(object, index, $87uCM(0, value));
    else object[index] = value;
};



var $4QM0B = parcelRequire("4QM0B");

$3B1Ky($3B1Ky.S + $3B1Ky.F * !(parcelRequire("cGAqi"))(function(iter) {
    Array.from(iter);
}), "Array", {
    // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
    from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */ ) {
        var O = $6dhUj(arrayLike);
        var C = typeof this == "function" ? this : Array;
        var aLen = arguments.length;
        var mapfn = aLen > 1 ? arguments[1] : undefined;
        var mapping = mapfn !== undefined;
        var index = 0;
        var iterFn = $4QM0B(O);
        var length, result, step, iterator;
        if (mapping) mapfn = $7vO7i(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
        // if object isn't iterable or it's array with default iterator - use simple case
        if (iterFn != undefined && !(C == Array && $4NkNf(iterFn))) for(iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++)$b61c8e7c85d33c3b$exports(result, index, mapping ? $5UELR(iterator, mapfn, [
            step.value,
            index
        ], true) : step.value);
        else {
            length = $DZqmm(O.length);
            for(result = new C(length); length > index; index++)$b61c8e7c85d33c3b$exports(result, index, mapping ? mapfn(O[index], index) : O[index]);
        }
        result.length = index;
        return result;
    }
});


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");


// WebKit Array.of isn't generic
$3B1Ky($3B1Ky.S + $3B1Ky.F * (parcelRequire("hcpLn"))(function() {
    function F() {}
    return !(Array.of.call(F) instanceof F);
}), "Array", {
    // 22.1.2.3 Array.of( ...items)
    of: function of() {
        var index = 0;
        var aLen = arguments.length;
        var result = new (typeof this == "function" ? this : Array)(aLen);
        while(aLen > index)$b61c8e7c85d33c3b$exports(result, index, arguments[index++]);
        result.length = aLen;
        return result;
    }
});


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");

var $fHwma = parcelRequire("fHwma");
var $d64e167ce81c3648$var$arrayJoin = [].join;


// fallback for not array-like strings
$3B1Ky($3B1Ky.P + $3B1Ky.F * ((parcelRequire("acjvS")) != Object || !(parcelRequire("cHHAW"))($d64e167ce81c3648$var$arrayJoin)), "Array", {
    join: function join(separator) {
        return $d64e167ce81c3648$var$arrayJoin.call($fHwma(this), separator === undefined ? "," : separator);
    }
});


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");

var $76Lij = parcelRequire("76Lij");

var $bOq6I = parcelRequire("bOq6I");

var $aselx = parcelRequire("aselx");

var $DZqmm = parcelRequire("DZqmm");
var $b6489951a57ba854$var$arraySlice = [].slice;

// fallback for not array-like ES3 strings and DOM objects
$3B1Ky($3B1Ky.P + $3B1Ky.F * (parcelRequire("hcpLn"))(function() {
    if ($76Lij) $b6489951a57ba854$var$arraySlice.call($76Lij);
}), "Array", {
    slice: function slice(begin, end) {
        var len = $DZqmm(this.length);
        var klass = $bOq6I(this);
        end = end === undefined ? len : end;
        if (klass == "Array") return $b6489951a57ba854$var$arraySlice.call(this, begin, end);
        var start = $aselx(begin, len);
        var upTo = $aselx(end, len);
        var size = $DZqmm(upTo - start);
        var cloned = new Array(size);
        var i = 0;
        for(; i < size; i++)cloned[i] = klass == "String" ? this.charAt(start + i) : this[start + i];
        return cloned;
    }
});


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");

var $1C6Y9 = parcelRequire("1C6Y9");

var $6dhUj = parcelRequire("6dhUj");

var $hcpLn = parcelRequire("hcpLn");
var $dab9a43914dc9cc2$var$$sort = [].sort;
var $dab9a43914dc9cc2$var$test = [
    1,
    2,
    3
];

$3B1Ky($3B1Ky.P + $3B1Ky.F * ($hcpLn(function() {
    // IE8-
    $dab9a43914dc9cc2$var$test.sort(undefined);
}) || !$hcpLn(function() {
    // V8 bug
    $dab9a43914dc9cc2$var$test.sort(null);
// Old WebKit
}) || !(parcelRequire("cHHAW"))($dab9a43914dc9cc2$var$$sort)), "Array", {
    // 22.1.3.25 Array.prototype.sort(comparefn)
    sort: function sort(comparefn) {
        return comparefn === undefined ? $dab9a43914dc9cc2$var$$sort.call($6dhUj(this)) : $dab9a43914dc9cc2$var$$sort.call($6dhUj(this), $1C6Y9(comparefn));
    }
});


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");

var $9f3bef5a1bae2451$var$$forEach = (parcelRequire("9vq0S"))(0);

var $9f3bef5a1bae2451$var$STRICT = (parcelRequire("cHHAW"))([].forEach, true);
$3B1Ky($3B1Ky.P + $3B1Ky.F * !$9f3bef5a1bae2451$var$STRICT, "Array", {
    // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
    forEach: function forEach(callbackfn /* , thisArg */ ) {
        return $9f3bef5a1bae2451$var$$forEach(this, callbackfn, arguments[1]);
    }
});


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");

var $2be1b12e69b23e4e$var$$map = (parcelRequire("9vq0S"))(1);

$3B1Ky($3B1Ky.P + $3B1Ky.F * !(parcelRequire("cHHAW"))([].map, true), "Array", {
    // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
    map: function map(callbackfn /* , thisArg */ ) {
        return $2be1b12e69b23e4e$var$$map(this, callbackfn, arguments[1]);
    }
});


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");

var $cbeeceb5771ad998$var$$filter = (parcelRequire("9vq0S"))(2);

$3B1Ky($3B1Ky.P + $3B1Ky.F * !(parcelRequire("cHHAW"))([].filter, true), "Array", {
    // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
    filter: function filter(callbackfn /* , thisArg */ ) {
        return $cbeeceb5771ad998$var$$filter(this, callbackfn, arguments[1]);
    }
});


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");

var $7d9954161b63aeb0$var$$some = (parcelRequire("9vq0S"))(3);

$3B1Ky($3B1Ky.P + $3B1Ky.F * !(parcelRequire("cHHAW"))([].some, true), "Array", {
    // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
    some: function some(callbackfn /* , thisArg */ ) {
        return $7d9954161b63aeb0$var$$some(this, callbackfn, arguments[1]);
    }
});


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");

var $27aa84cad5440e0d$var$$every = (parcelRequire("9vq0S"))(4);

$3B1Ky($3B1Ky.P + $3B1Ky.F * !(parcelRequire("cHHAW"))([].every, true), "Array", {
    // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
    every: function every(callbackfn /* , thisArg */ ) {
        return $27aa84cad5440e0d$var$$every(this, callbackfn, arguments[1]);
    }
});


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");
var $62a96380d12e0dee$exports = {};

var $1C6Y9 = parcelRequire("1C6Y9");

var $6dhUj = parcelRequire("6dhUj");

var $acjvS = parcelRequire("acjvS");

var $DZqmm = parcelRequire("DZqmm");
$62a96380d12e0dee$exports = function(that, callbackfn, aLen, memo, isRight) {
    $1C6Y9(callbackfn);
    var O = $6dhUj(that);
    var self = $acjvS(O);
    var length = $DZqmm(O.length);
    var index = isRight ? length - 1 : 0;
    var i = isRight ? -1 : 1;
    if (aLen < 2) for(;;){
        if (index in self) {
            memo = self[index];
            index += i;
            break;
        }
        index += i;
        if (isRight ? index < 0 : length <= index) throw TypeError("Reduce of empty array with no initial value");
    }
    for(; isRight ? index >= 0 : length > index; index += i)if (index in self) memo = callbackfn(memo, self[index], index, O);
    return memo;
};



$3B1Ky($3B1Ky.P + $3B1Ky.F * !(parcelRequire("cHHAW"))([].reduce, true), "Array", {
    // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
    reduce: function reduce(callbackfn /* , initialValue */ ) {
        return $62a96380d12e0dee$exports(this, callbackfn, arguments.length, arguments[1], false);
    }
});


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");


$3B1Ky($3B1Ky.P + $3B1Ky.F * !(parcelRequire("cHHAW"))([].reduceRight, true), "Array", {
    // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
    reduceRight: function reduceRight(callbackfn /* , initialValue */ ) {
        return $62a96380d12e0dee$exports(this, callbackfn, arguments.length, arguments[1], true);
    }
});


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");

var $7b7867b842a9f560$var$$indexOf = (parcelRequire("4VU3O"))(false);
var $7b7867b842a9f560$var$$native = [].indexOf;
var $7b7867b842a9f560$var$NEGATIVE_ZERO = !!$7b7867b842a9f560$var$$native && 1 / [
    1
].indexOf(1, -0) < 0;

$3B1Ky($3B1Ky.P + $3B1Ky.F * ($7b7867b842a9f560$var$NEGATIVE_ZERO || !(parcelRequire("cHHAW"))($7b7867b842a9f560$var$$native)), "Array", {
    // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
    indexOf: function indexOf(searchElement /* , fromIndex = 0 */ ) {
        return $7b7867b842a9f560$var$NEGATIVE_ZERO ? $7b7867b842a9f560$var$$native.apply(this, arguments) || 0 : $7b7867b842a9f560$var$$indexOf(this, searchElement, arguments[1]);
    }
});


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");

var $fHwma = parcelRequire("fHwma");

var $fEeDR = parcelRequire("fEeDR");

var $DZqmm = parcelRequire("DZqmm");
var $79b49aafe5c0bafc$var$$native = [].lastIndexOf;
var $79b49aafe5c0bafc$var$NEGATIVE_ZERO = !!$79b49aafe5c0bafc$var$$native && 1 / [
    1
].lastIndexOf(1, -0) < 0;

$3B1Ky($3B1Ky.P + $3B1Ky.F * ($79b49aafe5c0bafc$var$NEGATIVE_ZERO || !(parcelRequire("cHHAW"))($79b49aafe5c0bafc$var$$native)), "Array", {
    // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
    lastIndexOf: function lastIndexOf(searchElement /* , fromIndex = @[*-1] */ ) {
        // convert -0 to +0
        if ($79b49aafe5c0bafc$var$NEGATIVE_ZERO) return $79b49aafe5c0bafc$var$$native.apply(this, arguments) || 0;
        var O = $fHwma(this);
        var length = $DZqmm(O.length);
        var index = length - 1;
        if (arguments.length > 1) index = Math.min(index, $fEeDR(arguments[1]));
        if (index < 0) index = length + index;
        for(; index >= 0; index--)if (index in O) {
            if (O[index] === searchElement) return index || 0;
        }
        return -1;
    }
});



var $3B1Ky = parcelRequire("3B1Ky");

$3B1Ky($3B1Ky.P, "Array", {
    copyWithin: (parcelRequire("jak4y"))
});

(parcelRequire("bqTbq"))("copyWithin");



var $3B1Ky = parcelRequire("3B1Ky");

$3B1Ky($3B1Ky.P, "Array", {
    fill: (parcelRequire("cSivE"))
});

(parcelRequire("bqTbq"))("fill");


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");

var $36c4d211d0a3545c$var$$find = (parcelRequire("9vq0S"))(5);
var $36c4d211d0a3545c$var$KEY = "find";
var $36c4d211d0a3545c$var$forced = true;
// Shouldn't skip holes
if ($36c4d211d0a3545c$var$KEY in []) Array(1)[$36c4d211d0a3545c$var$KEY](function() {
    $36c4d211d0a3545c$var$forced = false;
});
$3B1Ky($3B1Ky.P + $3B1Ky.F * $36c4d211d0a3545c$var$forced, "Array", {
    find: function find(callbackfn /* , that = undefined */ ) {
        return $36c4d211d0a3545c$var$$find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    }
});

(parcelRequire("bqTbq"))($36c4d211d0a3545c$var$KEY);


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");

var $7e8485e8801683dd$var$$find = (parcelRequire("9vq0S"))(6);
var $7e8485e8801683dd$var$KEY = "findIndex";
var $7e8485e8801683dd$var$forced = true;
// Shouldn't skip holes
if ($7e8485e8801683dd$var$KEY in []) Array(1)[$7e8485e8801683dd$var$KEY](function() {
    $7e8485e8801683dd$var$forced = false;
});
$3B1Ky($3B1Ky.P + $3B1Ky.F * $7e8485e8801683dd$var$forced, "Array", {
    findIndex: function findIndex(callbackfn /* , that = undefined */ ) {
        return $7e8485e8801683dd$var$$find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    }
});

(parcelRequire("bqTbq"))($7e8485e8801683dd$var$KEY);



(parcelRequire("epMIB"))("Array");


parcelRequire("j0YvL");

var $gTAze = parcelRequire("gTAze");

var $f8mMC = parcelRequire("f8mMC");

var $dLczm = parcelRequire("dLczm");
var $39f147f49f0f7c7e$require$dP = $dLczm.f;

var $2WGYr = parcelRequire("2WGYr");
var $39f147f49f0f7c7e$require$gOPN = $2WGYr.f;


var $kiAdZ = parcelRequire("kiAdZ");
var $39f147f49f0f7c7e$var$$RegExp = $gTAze.RegExp;
var $39f147f49f0f7c7e$var$Base = $39f147f49f0f7c7e$var$$RegExp;
var $39f147f49f0f7c7e$var$proto = $39f147f49f0f7c7e$var$$RegExp.prototype;
var $39f147f49f0f7c7e$var$re1 = /a/g;
var $39f147f49f0f7c7e$var$re2 = /a/g;
// "new" creates a new object, old webkit buggy here
var $39f147f49f0f7c7e$var$CORRECT_NEW = new $39f147f49f0f7c7e$var$$RegExp($39f147f49f0f7c7e$var$re1) !== $39f147f49f0f7c7e$var$re1;



var $5i4Lz = parcelRequire("5i4Lz");

if ((parcelRequire("3y86S")) && (!$39f147f49f0f7c7e$var$CORRECT_NEW || (parcelRequire("hcpLn"))(function() {
    $39f147f49f0f7c7e$var$re2[$5i4Lz("match")] = false;
    // RegExp constructor can alter flags and IsRegExp works correct with @@match
    return $39f147f49f0f7c7e$var$$RegExp($39f147f49f0f7c7e$var$re1) != $39f147f49f0f7c7e$var$re1 || $39f147f49f0f7c7e$var$$RegExp($39f147f49f0f7c7e$var$re2) == $39f147f49f0f7c7e$var$re2 || $39f147f49f0f7c7e$var$$RegExp($39f147f49f0f7c7e$var$re1, "i") != "/a/i";
}))) {
    $39f147f49f0f7c7e$var$$RegExp = function RegExp(p, f) {
        var tiRE = this instanceof $39f147f49f0f7c7e$var$$RegExp;
        var piRE = $1e2b5bd1dd3f9fca$exports(p);
        var fiU = f === undefined;
        return !tiRE && piRE && p.constructor === $39f147f49f0f7c7e$var$$RegExp && fiU ? p : $f8mMC($39f147f49f0f7c7e$var$CORRECT_NEW ? new $39f147f49f0f7c7e$var$Base(piRE && !fiU ? p.source : p, f) : $39f147f49f0f7c7e$var$Base((piRE = p instanceof $39f147f49f0f7c7e$var$$RegExp) ? p.source : p, piRE && fiU ? $kiAdZ.call(p) : f), tiRE ? this : $39f147f49f0f7c7e$var$proto, $39f147f49f0f7c7e$var$$RegExp);
    };
    var $39f147f49f0f7c7e$var$proxy = function(key) {
        key in $39f147f49f0f7c7e$var$$RegExp || $39f147f49f0f7c7e$require$dP($39f147f49f0f7c7e$var$$RegExp, key, {
            configurable: true,
            get: function() {
                return $39f147f49f0f7c7e$var$Base[key];
            },
            set: function(it) {
                $39f147f49f0f7c7e$var$Base[key] = it;
            }
        });
    };
    for(var $39f147f49f0f7c7e$var$keys = $39f147f49f0f7c7e$require$gOPN($39f147f49f0f7c7e$var$Base), $39f147f49f0f7c7e$var$i = 0; $39f147f49f0f7c7e$var$keys.length > $39f147f49f0f7c7e$var$i;)$39f147f49f0f7c7e$var$proxy($39f147f49f0f7c7e$var$keys[$39f147f49f0f7c7e$var$i++]);
    $39f147f49f0f7c7e$var$proto.constructor = $39f147f49f0f7c7e$var$$RegExp;
    $39f147f49f0f7c7e$var$$RegExp.prototype = $39f147f49f0f7c7e$var$proto;
    (parcelRequire("bRGed"))($gTAze, "RegExp", $39f147f49f0f7c7e$var$$RegExp);
}

(parcelRequire("epMIB"))("RegExp");


parcelRequire("5GgqM");
"use strict";



// 21.2.5.3 get RegExp.prototype.flags()
if ((parcelRequire("3y86S")) && /./g.flags != "g") (parcelRequire("dLczm")).f(RegExp.prototype, "flags", {
    configurable: true,
    get: (parcelRequire("kiAdZ"))
});



var $euAZz = parcelRequire("euAZz");

var $kiAdZ = parcelRequire("kiAdZ");

var $3y86S = parcelRequire("3y86S");
var $d13c0964643d537d$var$TO_STRING = "toString";
var $d13c0964643d537d$var$$toString = /./[$d13c0964643d537d$var$TO_STRING];

var $d13c0964643d537d$var$define = function(fn) {
    (parcelRequire("bRGed"))(RegExp.prototype, $d13c0964643d537d$var$TO_STRING, fn, true);
};

// 21.2.5.14 RegExp.prototype.toString()
if ((parcelRequire("hcpLn"))(function() {
    return $d13c0964643d537d$var$$toString.call({
        source: "a",
        flags: "b"
    }) != "/a/b";
})) $d13c0964643d537d$var$define(function toString() {
    var R = $euAZz(this);
    return "/".concat(R.source, "/", "flags" in R ? R.flags : !$3y86S && R instanceof RegExp ? $kiAdZ.call(R) : undefined);
});
else if ($d13c0964643d537d$var$$toString.name != $d13c0964643d537d$var$TO_STRING) $d13c0964643d537d$var$define(function toString() {
    return $d13c0964643d537d$var$$toString.call(this);
});



"use strict";

var $euAZz = parcelRequire("euAZz");

var $DZqmm = parcelRequire("DZqmm");
var $909de51196b5ba7f$exports = {};
"use strict";

var $909de51196b5ba7f$var$at = (parcelRequire("k69Hy"))(true);
// `AdvanceStringIndex` abstract operation
// https://tc39.github.io/ecma262/#sec-advancestringindex
$909de51196b5ba7f$exports = function(S, index, unicode) {
    return index + (unicode ? $909de51196b5ba7f$var$at(S, index).length : 1);
};


var $75e93e90730e9d2f$exports = {};
"use strict";

var $bbWc2 = parcelRequire("bbWc2");
var $75e93e90730e9d2f$var$builtinExec = RegExp.prototype.exec;
// `RegExpExec` abstract operation
// https://tc39.github.io/ecma262/#sec-regexpexec
$75e93e90730e9d2f$exports = function(R, S) {
    var exec = R.exec;
    if (typeof exec === "function") {
        var result = exec.call(R, S);
        if (typeof result !== "object") throw new TypeError("RegExp exec method returned something other than an Object or null");
        return result;
    }
    if ($bbWc2(R) !== "RegExp") throw new TypeError("RegExp#exec called on incompatible receiver");
    return $75e93e90730e9d2f$var$builtinExec.call(R, S);
};



// @@match logic
(parcelRequire("2INyC"))("match", 1, function(defined, MATCH, $match, maybeCallNative) {
    return [
        // `String.prototype.match` method
        // https://tc39.github.io/ecma262/#sec-string.prototype.match
        function match(regexp) {
            var O = defined(this);
            var fn = regexp == undefined ? undefined : regexp[MATCH];
            return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
        },
        // `RegExp.prototype[@@match]` method
        // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match
        function(regexp) {
            var res = maybeCallNative($match, regexp, this);
            if (res.done) return res.value;
            var rx = $euAZz(regexp);
            var S = String(this);
            if (!rx.global) return $75e93e90730e9d2f$exports(rx, S);
            var fullUnicode = rx.unicode;
            rx.lastIndex = 0;
            var A = [];
            var n = 0;
            var result;
            while((result = $75e93e90730e9d2f$exports(rx, S)) !== null){
                var matchStr = String(result[0]);
                A[n] = matchStr;
                if (matchStr === "") rx.lastIndex = $909de51196b5ba7f$exports(S, $DZqmm(rx.lastIndex), fullUnicode);
                n++;
            }
            return n === 0 ? null : A;
        }
    ];
});


"use strict";

var $euAZz = parcelRequire("euAZz");

var $6dhUj = parcelRequire("6dhUj");

var $DZqmm = parcelRequire("DZqmm");

var $fEeDR = parcelRequire("fEeDR");


var $41bc9ec72b21bb0b$var$max = Math.max;
var $41bc9ec72b21bb0b$var$min = Math.min;
var $41bc9ec72b21bb0b$var$floor = Math.floor;
var $41bc9ec72b21bb0b$var$SUBSTITUTION_SYMBOLS = /\$([$&`']|\d\d?|<[^>]*>)/g;
var $41bc9ec72b21bb0b$var$SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&`']|\d\d?)/g;
var $41bc9ec72b21bb0b$var$maybeToString = function(it) {
    return it === undefined ? it : String(it);
};

// @@replace logic
(parcelRequire("2INyC"))("replace", 2, function(defined, REPLACE, $replace, maybeCallNative) {
    return [
        // `String.prototype.replace` method
        // https://tc39.github.io/ecma262/#sec-string.prototype.replace
        function replace(searchValue, replaceValue) {
            var O = defined(this);
            var fn = searchValue == undefined ? undefined : searchValue[REPLACE];
            return fn !== undefined ? fn.call(searchValue, O, replaceValue) : $replace.call(String(O), searchValue, replaceValue);
        },
        // `RegExp.prototype[@@replace]` method
        // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace
        function(regexp, replaceValue) {
            var res = maybeCallNative($replace, regexp, this, replaceValue);
            if (res.done) return res.value;
            var rx = $euAZz(regexp);
            var S = String(this);
            var functionalReplace = typeof replaceValue === "function";
            if (!functionalReplace) replaceValue = String(replaceValue);
            var global = rx.global;
            if (global) {
                var fullUnicode = rx.unicode;
                rx.lastIndex = 0;
            }
            var results = [];
            while(true){
                var result = $75e93e90730e9d2f$exports(rx, S);
                if (result === null) break;
                results.push(result);
                if (!global) break;
                var matchStr = String(result[0]);
                if (matchStr === "") rx.lastIndex = $909de51196b5ba7f$exports(S, $DZqmm(rx.lastIndex), fullUnicode);
            }
            var accumulatedResult = "";
            var nextSourcePosition = 0;
            for(var i = 0; i < results.length; i++){
                result = results[i];
                var matched = String(result[0]);
                var position = $41bc9ec72b21bb0b$var$max($41bc9ec72b21bb0b$var$min($fEeDR(result.index), S.length), 0);
                var captures = [];
                // NOTE: This is equivalent to
                //   captures = result.slice(1).map(maybeToString)
                // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
                // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
                // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
                for(var j = 1; j < result.length; j++)captures.push($41bc9ec72b21bb0b$var$maybeToString(result[j]));
                var namedCaptures = result.groups;
                if (functionalReplace) {
                    var replacerArgs = [
                        matched
                    ].concat(captures, position, S);
                    if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);
                    var replacement = String(replaceValue.apply(undefined, replacerArgs));
                } else replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
                if (position >= nextSourcePosition) {
                    accumulatedResult += S.slice(nextSourcePosition, position) + replacement;
                    nextSourcePosition = position + matched.length;
                }
            }
            return accumulatedResult + S.slice(nextSourcePosition);
        }
    ];
    // https://tc39.github.io/ecma262/#sec-getsubstitution
    function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {
        var tailPos = position + matched.length;
        var m = captures.length;
        var symbols = $41bc9ec72b21bb0b$var$SUBSTITUTION_SYMBOLS_NO_NAMED;
        if (namedCaptures !== undefined) {
            namedCaptures = $6dhUj(namedCaptures);
            symbols = $41bc9ec72b21bb0b$var$SUBSTITUTION_SYMBOLS;
        }
        return $replace.call(replacement, symbols, function(match, ch) {
            var capture;
            switch(ch.charAt(0)){
                case "$":
                    return "$";
                case "&":
                    return matched;
                case "`":
                    return str.slice(0, position);
                case "'":
                    return str.slice(tailPos);
                case "<":
                    capture = namedCaptures[ch.slice(1, -1)];
                    break;
                default:
                    var n = +ch;
                    if (n === 0) return match;
                    if (n > m) {
                        var f = $41bc9ec72b21bb0b$var$floor(n / 10);
                        if (f === 0) return match;
                        if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);
                        return match;
                    }
                    capture = captures[n - 1];
            }
            return capture === undefined ? "" : capture;
        });
    }
});


"use strict";

var $euAZz = parcelRequire("euAZz");

var $blUd4 = parcelRequire("blUd4");


// @@search logic
(parcelRequire("2INyC"))("search", 1, function(defined, SEARCH, $search, maybeCallNative) {
    return [
        // `String.prototype.search` method
        // https://tc39.github.io/ecma262/#sec-string.prototype.search
        function search(regexp) {
            var O = defined(this);
            var fn = regexp == undefined ? undefined : regexp[SEARCH];
            return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
        },
        // `RegExp.prototype[@@search]` method
        // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search
        function(regexp) {
            var res = maybeCallNative($search, regexp, this);
            if (res.done) return res.value;
            var rx = $euAZz(regexp);
            var S = String(this);
            var previousLastIndex = rx.lastIndex;
            if (!$blUd4(previousLastIndex, 0)) rx.lastIndex = 0;
            var result = $75e93e90730e9d2f$exports(rx, S);
            if (!$blUd4(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;
            return result === null ? -1 : result.index;
        }
    ];
});


"use strict";


var $euAZz = parcelRequire("euAZz");

var $aKF9g = parcelRequire("aKF9g");


var $DZqmm = parcelRequire("DZqmm");


var $isVBs = parcelRequire("isVBs");

var $hcpLn = parcelRequire("hcpLn");
var $026d21177bba3c7a$var$$min = Math.min;
var $026d21177bba3c7a$var$$push = [].push;
var $026d21177bba3c7a$var$$SPLIT = "split";
var $026d21177bba3c7a$var$LENGTH = "length";
var $026d21177bba3c7a$var$LAST_INDEX = "lastIndex";
var $026d21177bba3c7a$var$MAX_UINT32 = 0xffffffff;
// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError
var $026d21177bba3c7a$var$SUPPORTS_Y = !$hcpLn(function() {
    RegExp($026d21177bba3c7a$var$MAX_UINT32, "y");
});

// @@split logic
(parcelRequire("2INyC"))("split", 2, function(defined, SPLIT, $split, maybeCallNative) {
    var internalSplit;
    if ("abbc"[$026d21177bba3c7a$var$$SPLIT](/(b)*/)[1] == "c" || "test"[$026d21177bba3c7a$var$$SPLIT](/(?:)/, -1)[$026d21177bba3c7a$var$LENGTH] != 4 || "ab"[$026d21177bba3c7a$var$$SPLIT](/(?:ab)*/)[$026d21177bba3c7a$var$LENGTH] != 2 || "."[$026d21177bba3c7a$var$$SPLIT](/(.?)(.?)/)[$026d21177bba3c7a$var$LENGTH] != 4 || "."[$026d21177bba3c7a$var$$SPLIT](/()()/)[$026d21177bba3c7a$var$LENGTH] > 1 || ""[$026d21177bba3c7a$var$$SPLIT](/.?/)[$026d21177bba3c7a$var$LENGTH]) // based on es5-shim implementation, need to rework it
    internalSplit = function(separator, limit) {
        var string = String(this);
        if (separator === undefined && limit === 0) return [];
        // If `separator` is not a regex, use native split
        if (!$1e2b5bd1dd3f9fca$exports(separator)) return $split.call(string, separator, limit);
        var output = [];
        var flags = (separator.ignoreCase ? "i" : "") + (separator.multiline ? "m" : "") + (separator.unicode ? "u" : "") + (separator.sticky ? "y" : "");
        var lastLastIndex = 0;
        var splitLimit = limit === undefined ? $026d21177bba3c7a$var$MAX_UINT32 : limit >>> 0;
        // Make `global` and avoid `lastIndex` issues by working with a copy
        var separatorCopy = new RegExp(separator.source, flags + "g");
        var match, lastIndex, lastLength;
        while(match = $isVBs.call(separatorCopy, string)){
            lastIndex = separatorCopy[$026d21177bba3c7a$var$LAST_INDEX];
            if (lastIndex > lastLastIndex) {
                output.push(string.slice(lastLastIndex, match.index));
                if (match[$026d21177bba3c7a$var$LENGTH] > 1 && match.index < string[$026d21177bba3c7a$var$LENGTH]) $026d21177bba3c7a$var$$push.apply(output, match.slice(1));
                lastLength = match[0][$026d21177bba3c7a$var$LENGTH];
                lastLastIndex = lastIndex;
                if (output[$026d21177bba3c7a$var$LENGTH] >= splitLimit) break;
            }
            if (separatorCopy[$026d21177bba3c7a$var$LAST_INDEX] === match.index) separatorCopy[$026d21177bba3c7a$var$LAST_INDEX]++; // Avoid an infinite loop
        }
        if (lastLastIndex === string[$026d21177bba3c7a$var$LENGTH]) {
            if (lastLength || !separatorCopy.test("")) output.push("");
        } else output.push(string.slice(lastLastIndex));
        return output[$026d21177bba3c7a$var$LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
    };
    else if ("0"[$026d21177bba3c7a$var$$SPLIT](undefined, 0)[$026d21177bba3c7a$var$LENGTH]) internalSplit = function(separator, limit) {
        return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);
    };
    else internalSplit = $split;
    return [
        // `String.prototype.split` method
        // https://tc39.github.io/ecma262/#sec-string.prototype.split
        function split(separator, limit) {
            var O = defined(this);
            var splitter = separator == undefined ? undefined : separator[SPLIT];
            return splitter !== undefined ? splitter.call(separator, O, limit) : internalSplit.call(String(O), separator, limit);
        },
        // `RegExp.prototype[@@split]` method
        // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split
        //
        // NOTE: This cannot be properly polyfilled in engines that don't support
        // the 'y' flag.
        function(regexp, limit) {
            var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);
            if (res.done) return res.value;
            var rx = $euAZz(regexp);
            var S = String(this);
            var C = $aKF9g(rx, RegExp);
            var unicodeMatching = rx.unicode;
            var flags = (rx.ignoreCase ? "i" : "") + (rx.multiline ? "m" : "") + (rx.unicode ? "u" : "") + ($026d21177bba3c7a$var$SUPPORTS_Y ? "y" : "g");
            // ^(? + rx + ) is needed, in combination with some S slicing, to
            // simulate the 'y' flag.
            var splitter = new C($026d21177bba3c7a$var$SUPPORTS_Y ? rx : "^(?:" + rx.source + ")", flags);
            var lim = limit === undefined ? $026d21177bba3c7a$var$MAX_UINT32 : limit >>> 0;
            if (lim === 0) return [];
            if (S.length === 0) return $75e93e90730e9d2f$exports(splitter, S) === null ? [
                S
            ] : [];
            var p = 0;
            var q = 0;
            var A = [];
            while(q < S.length){
                splitter.lastIndex = $026d21177bba3c7a$var$SUPPORTS_Y ? q : 0;
                var z = $75e93e90730e9d2f$exports(splitter, $026d21177bba3c7a$var$SUPPORTS_Y ? S : S.slice(q));
                var e;
                if (z === null || (e = $026d21177bba3c7a$var$$min($DZqmm(splitter.lastIndex + ($026d21177bba3c7a$var$SUPPORTS_Y ? 0 : q)), S.length)) === p) q = $909de51196b5ba7f$exports(S, q, unicodeMatching);
                else {
                    A.push(S.slice(p, q));
                    if (A.length === lim) return A;
                    for(var i = 1; i <= z.length - 1; i++){
                        A.push(z[i]);
                        if (A.length === lim) return A;
                    }
                    q = p = e;
                }
            }
            A.push(S.slice(p));
            return A;
        }
    ];
});


"use strict";

var $jEzjy = parcelRequire("jEzjy");

var $gTAze = parcelRequire("gTAze");

var $7vO7i = parcelRequire("7vO7i");

var $bbWc2 = parcelRequire("bbWc2");

var $3B1Ky = parcelRequire("3B1Ky");

var $ly2vB = parcelRequire("ly2vB");

var $1C6Y9 = parcelRequire("1C6Y9");

var $4UEtt = parcelRequire("4UEtt");

var $bXt2A = parcelRequire("bXt2A");

var $aKF9g = parcelRequire("aKF9g");

var $lmMSx = parcelRequire("lmMSx");
var $087c3f82703bd565$require$task = $lmMSx.set;

var $087c3f82703bd565$var$microtask = (parcelRequire("8Bw9Z"))();
var $5f54ffbc58658dff$export$2d1720544b23b823;
"use strict";

var $1C6Y9 = parcelRequire("1C6Y9");
function $5f54ffbc58658dff$var$PromiseCapability(C) {
    var resolve, reject;
    this.promise = new C(function($$resolve, $$reject) {
        if (resolve !== undefined || reject !== undefined) throw TypeError("Bad Promise constructor");
        resolve = $$resolve;
        reject = $$reject;
    });
    this.resolve = $1C6Y9(resolve);
    this.reject = $1C6Y9(reject);
}
$5f54ffbc58658dff$export$2d1720544b23b823 = function(C) {
    return new $5f54ffbc58658dff$var$PromiseCapability(C);
};


var $133aedacd70c4393$exports = {};
$133aedacd70c4393$exports = function(exec) {
    try {
        return {
            e: false,
            v: exec()
        };
    } catch (e) {
        return {
            e: true,
            v: e
        };
    }
};


var $9e3bd4638ec6853a$exports = {};

var $gTAze = parcelRequire("gTAze");
var $9e3bd4638ec6853a$var$navigator = $gTAze.navigator;
$9e3bd4638ec6853a$exports = $9e3bd4638ec6853a$var$navigator && $9e3bd4638ec6853a$var$navigator.userAgent || "";


var $7fbef04359d29757$exports = {};

var $euAZz = parcelRequire("euAZz");

var $ly2vB = parcelRequire("ly2vB");

$7fbef04359d29757$exports = function(C, x) {
    $euAZz(C);
    if ($ly2vB(x) && x.constructor === C) return x;
    var promiseCapability = $5f54ffbc58658dff$export$2d1720544b23b823(C);
    var resolve = promiseCapability.resolve;
    resolve(x);
    return promiseCapability.promise;
};


var $087c3f82703bd565$var$PROMISE = "Promise";
var $087c3f82703bd565$var$TypeError = $gTAze.TypeError;
var $087c3f82703bd565$var$process = $gTAze.process;
var $087c3f82703bd565$var$versions = $087c3f82703bd565$var$process && $087c3f82703bd565$var$process.versions;
var $087c3f82703bd565$var$v8 = $087c3f82703bd565$var$versions && $087c3f82703bd565$var$versions.v8 || "";
var $087c3f82703bd565$var$$Promise = $gTAze[$087c3f82703bd565$var$PROMISE];
var $087c3f82703bd565$var$isNode = $bbWc2($087c3f82703bd565$var$process) == "process";
var $087c3f82703bd565$var$empty = function() {};
var $087c3f82703bd565$var$Internal, $087c3f82703bd565$var$newGenericPromiseCapability, $087c3f82703bd565$var$OwnPromiseCapability, $087c3f82703bd565$var$Wrapper;
var $087c3f82703bd565$var$newPromiseCapability = $087c3f82703bd565$var$newGenericPromiseCapability = $5f54ffbc58658dff$export$2d1720544b23b823;

var $087c3f82703bd565$var$USE_NATIVE = !!function() {
    try {
        // correct subclassing with @@species support
        var promise = $087c3f82703bd565$var$$Promise.resolve(1);
        var FakePromise = (promise.constructor = {})[(parcelRequire("5i4Lz"))("species")] = function(exec) {
            exec($087c3f82703bd565$var$empty, $087c3f82703bd565$var$empty);
        };
        // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
        return ($087c3f82703bd565$var$isNode || typeof PromiseRejectionEvent == "function") && promise.then($087c3f82703bd565$var$empty) instanceof FakePromise && $087c3f82703bd565$var$v8.indexOf("6.6") !== 0 && $9e3bd4638ec6853a$exports.indexOf("Chrome/66") === -1;
    } catch (e) {}
}();
// helpers
var $087c3f82703bd565$var$isThenable = function(it) {
    var then;
    return $ly2vB(it) && typeof (then = it.then) == "function" ? then : false;
};
var $087c3f82703bd565$var$notify = function(promise, isReject) {
    if (promise._n) return;
    promise._n = true;
    var chain = promise._c;
    $087c3f82703bd565$var$microtask(function() {
        var value = promise._v;
        var ok = promise._s == 1;
        var i = 0;
        var run = function(reaction) {
            var handler = ok ? reaction.ok : reaction.fail;
            var resolve = reaction.resolve;
            var reject = reaction.reject;
            var domain = reaction.domain;
            var result, then, exited;
            try {
                if (handler) {
                    if (!ok) {
                        if (promise._h == 2) $087c3f82703bd565$var$onHandleUnhandled(promise);
                        promise._h = 1;
                    }
                    if (handler === true) result = value;
                    else {
                        if (domain) domain.enter();
                        result = handler(value); // may throw
                        if (domain) {
                            domain.exit();
                            exited = true;
                        }
                    }
                    if (result === reaction.promise) reject($087c3f82703bd565$var$TypeError("Promise-chain cycle"));
                    else if (then = $087c3f82703bd565$var$isThenable(result)) then.call(result, resolve, reject);
                    else resolve(result);
                } else reject(value);
            } catch (e) {
                if (domain && !exited) domain.exit();
                reject(e);
            }
        };
        while(chain.length > i)run(chain[i++]); // variable length - can't use forEach
        promise._c = [];
        promise._n = false;
        if (isReject && !promise._h) $087c3f82703bd565$var$onUnhandled(promise);
    });
};
var $087c3f82703bd565$var$onUnhandled = function(promise) {
    $087c3f82703bd565$require$task.call($gTAze, function() {
        var value = promise._v;
        var unhandled = $087c3f82703bd565$var$isUnhandled(promise);
        var result, handler, console;
        if (unhandled) {
            result = $133aedacd70c4393$exports(function() {
                if ($087c3f82703bd565$var$isNode) $087c3f82703bd565$var$process.emit("unhandledRejection", value, promise);
                else if (handler = $gTAze.onunhandledrejection) handler({
                    promise: promise,
                    reason: value
                });
                else if ((console = $gTAze.console) && console.error) console.error("Unhandled promise rejection", value);
            });
            // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
            promise._h = $087c3f82703bd565$var$isNode || $087c3f82703bd565$var$isUnhandled(promise) ? 2 : 1;
        }
        promise._a = undefined;
        if (unhandled && result.e) throw result.v;
    });
};
var $087c3f82703bd565$var$isUnhandled = function(promise) {
    return promise._h !== 1 && (promise._a || promise._c).length === 0;
};
var $087c3f82703bd565$var$onHandleUnhandled = function(promise) {
    $087c3f82703bd565$require$task.call($gTAze, function() {
        var handler;
        if ($087c3f82703bd565$var$isNode) $087c3f82703bd565$var$process.emit("rejectionHandled", promise);
        else if (handler = $gTAze.onrejectionhandled) handler({
            promise: promise,
            reason: promise._v
        });
    });
};
var $087c3f82703bd565$var$$reject = function(value) {
    var promise = this;
    if (promise._d) return;
    promise._d = true;
    promise = promise._w || promise; // unwrap
    promise._v = value;
    promise._s = 2;
    if (!promise._a) promise._a = promise._c.slice();
    $087c3f82703bd565$var$notify(promise, true);
};
var $087c3f82703bd565$var$$resolve = function(value) {
    var promise = this;
    var then;
    if (promise._d) return;
    promise._d = true;
    promise = promise._w || promise; // unwrap
    try {
        if (promise === value) throw $087c3f82703bd565$var$TypeError("Promise can't be resolved itself");
        if (then = $087c3f82703bd565$var$isThenable(value)) $087c3f82703bd565$var$microtask(function() {
            var wrapper = {
                _w: promise,
                _d: false
            }; // wrap
            try {
                then.call(value, $7vO7i($087c3f82703bd565$var$$resolve, wrapper, 1), $7vO7i($087c3f82703bd565$var$$reject, wrapper, 1));
            } catch (e) {
                $087c3f82703bd565$var$$reject.call(wrapper, e);
            }
        });
        else {
            promise._v = value;
            promise._s = 1;
            $087c3f82703bd565$var$notify(promise, false);
        }
    } catch (e) {
        $087c3f82703bd565$var$$reject.call({
            _w: promise,
            _d: false
        }, e); // wrap
    }
};

// constructor polyfill
if (!$087c3f82703bd565$var$USE_NATIVE) {
    // 25.4.3.1 Promise(executor)
    $087c3f82703bd565$var$$Promise = function Promise(executor) {
        $4UEtt(this, $087c3f82703bd565$var$$Promise, $087c3f82703bd565$var$PROMISE, "_h");
        $1C6Y9(executor);
        $087c3f82703bd565$var$Internal.call(this);
        try {
            executor($7vO7i($087c3f82703bd565$var$$resolve, this, 1), $7vO7i($087c3f82703bd565$var$$reject, this, 1));
        } catch (err) {
            $087c3f82703bd565$var$$reject.call(this, err);
        }
    };
    // eslint-disable-next-line no-unused-vars
    $087c3f82703bd565$var$Internal = function Promise(executor) {
        this._c = []; // <- awaiting reactions
        this._a = undefined; // <- checked in isUnhandled reactions
        this._s = 0; // <- state
        this._d = false; // <- done
        this._v = undefined; // <- value
        this._h = 0; // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
        this._n = false; // <- notify
    };
    $087c3f82703bd565$var$Internal.prototype = (parcelRequire("hcrCL"))($087c3f82703bd565$var$$Promise.prototype, {
        // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
        then: function then(onFulfilled, onRejected) {
            var reaction = $087c3f82703bd565$var$newPromiseCapability($aKF9g(this, $087c3f82703bd565$var$$Promise));
            reaction.ok = typeof onFulfilled == "function" ? onFulfilled : true;
            reaction.fail = typeof onRejected == "function" && onRejected;
            reaction.domain = $087c3f82703bd565$var$isNode ? $087c3f82703bd565$var$process.domain : undefined;
            this._c.push(reaction);
            if (this._a) this._a.push(reaction);
            if (this._s) $087c3f82703bd565$var$notify(this, false);
            return reaction.promise;
        },
        // 25.4.5.1 Promise.prototype.catch(onRejected)
        "catch": function(onRejected) {
            return this.then(undefined, onRejected);
        }
    });
    $087c3f82703bd565$var$OwnPromiseCapability = function() {
        var promise = new $087c3f82703bd565$var$Internal();
        this.promise = promise;
        this.resolve = $7vO7i($087c3f82703bd565$var$$resolve, promise, 1);
        this.reject = $7vO7i($087c3f82703bd565$var$$reject, promise, 1);
    };
    $5f54ffbc58658dff$export$2d1720544b23b823 = $087c3f82703bd565$var$newPromiseCapability = function(C) {
        return C === $087c3f82703bd565$var$$Promise || C === $087c3f82703bd565$var$Wrapper ? new $087c3f82703bd565$var$OwnPromiseCapability(C) : $087c3f82703bd565$var$newGenericPromiseCapability(C);
    };
}
$3B1Ky($3B1Ky.G + $3B1Ky.W + $3B1Ky.F * !$087c3f82703bd565$var$USE_NATIVE, {
    Promise: $087c3f82703bd565$var$$Promise
});

(parcelRequire("hMuUi"))($087c3f82703bd565$var$$Promise, $087c3f82703bd565$var$PROMISE);

(parcelRequire("epMIB"))($087c3f82703bd565$var$PROMISE);

$087c3f82703bd565$var$Wrapper = (parcelRequire("6LdXb"))[$087c3f82703bd565$var$PROMISE];
// statics
$3B1Ky($3B1Ky.S + $3B1Ky.F * !$087c3f82703bd565$var$USE_NATIVE, $087c3f82703bd565$var$PROMISE, {
    // 25.4.4.5 Promise.reject(r)
    reject: function reject(r) {
        var capability = $087c3f82703bd565$var$newPromiseCapability(this);
        var $$reject = capability.reject;
        $$reject(r);
        return capability.promise;
    }
});
$3B1Ky($3B1Ky.S + $3B1Ky.F * ($jEzjy || !$087c3f82703bd565$var$USE_NATIVE), $087c3f82703bd565$var$PROMISE, {
    // 25.4.4.6 Promise.resolve(x)
    resolve: function resolve(x) {
        return $7fbef04359d29757$exports($jEzjy && this === $087c3f82703bd565$var$Wrapper ? $087c3f82703bd565$var$$Promise : this, x);
    }
});

$3B1Ky($3B1Ky.S + $3B1Ky.F * !($087c3f82703bd565$var$USE_NATIVE && (parcelRequire("cGAqi"))(function(iter) {
    $087c3f82703bd565$var$$Promise.all(iter)["catch"]($087c3f82703bd565$var$empty);
})), $087c3f82703bd565$var$PROMISE, {
    // 25.4.4.1 Promise.all(iterable)
    all: function all(iterable) {
        var C = this;
        var capability = $087c3f82703bd565$var$newPromiseCapability(C);
        var resolve = capability.resolve;
        var reject = capability.reject;
        var result = $133aedacd70c4393$exports(function() {
            var values = [];
            var index = 0;
            var remaining = 1;
            $bXt2A(iterable, false, function(promise) {
                var $index = index++;
                var alreadyCalled = false;
                values.push(undefined);
                remaining++;
                C.resolve(promise).then(function(value) {
                    if (alreadyCalled) return;
                    alreadyCalled = true;
                    values[$index] = value;
                    --remaining || resolve(values);
                }, reject);
            });
            --remaining || resolve(values);
        });
        if (result.e) reject(result.v);
        return capability.promise;
    },
    // 25.4.4.4 Promise.race(iterable)
    race: function race(iterable) {
        var C = this;
        var capability = $087c3f82703bd565$var$newPromiseCapability(C);
        var reject = capability.reject;
        var result = $133aedacd70c4393$exports(function() {
            $bXt2A(iterable, false, function(promise) {
                C.resolve(promise).then(capability.resolve, reject);
            });
        });
        if (result.e) reject(result.v);
        return capability.promise;
    }
});


var $33cec8d2f94e44bd$exports = {};
"use strict";
var $2efc4ba20e552e74$exports = {};
"use strict";

var $dLczm = parcelRequire("dLczm");
var $2efc4ba20e552e74$require$dP = $dLczm.f;

var $fKIsL = parcelRequire("fKIsL");

var $hcrCL = parcelRequire("hcrCL");

var $7vO7i = parcelRequire("7vO7i");

var $4UEtt = parcelRequire("4UEtt");

var $bXt2A = parcelRequire("bXt2A");

var $9eQhN = parcelRequire("9eQhN");

var $kTFSr = parcelRequire("kTFSr");

var $epMIB = parcelRequire("epMIB");

var $3y86S = parcelRequire("3y86S");

var $eTnVl = parcelRequire("eTnVl");
var $2efc4ba20e552e74$require$fastKey = $eTnVl.fastKey;

var $1km44 = parcelRequire("1km44");
var $2efc4ba20e552e74$var$SIZE = $3y86S ? "_s" : "size";
var $2efc4ba20e552e74$var$getEntry = function(that, key) {
    // fast case
    var index = $2efc4ba20e552e74$require$fastKey(key);
    var entry;
    if (index !== "F") return that._i[index];
    // frozen object case
    for(entry = that._f; entry; entry = entry.n){
        if (entry.k == key) return entry;
    }
};
$2efc4ba20e552e74$exports = {
    getConstructor: function(wrapper, NAME, IS_MAP, ADDER) {
        var C = wrapper(function(that, iterable) {
            $4UEtt(that, C, NAME, "_i");
            that._t = NAME; // collection type
            that._i = $fKIsL(null); // index
            that._f = undefined; // first entry
            that._l = undefined; // last entry
            that[$2efc4ba20e552e74$var$SIZE] = 0; // size
            if (iterable != undefined) $bXt2A(iterable, IS_MAP, that[ADDER], that);
        });
        $hcrCL(C.prototype, {
            // 23.1.3.1 Map.prototype.clear()
            // 23.2.3.2 Set.prototype.clear()
            clear: function clear() {
                for(var that = $1km44(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n){
                    entry.r = true;
                    if (entry.p) entry.p = entry.p.n = undefined;
                    delete data[entry.i];
                }
                that._f = that._l = undefined;
                that[$2efc4ba20e552e74$var$SIZE] = 0;
            },
            // 23.1.3.3 Map.prototype.delete(key)
            // 23.2.3.4 Set.prototype.delete(value)
            "delete": function(key) {
                var that = $1km44(this, NAME);
                var entry = $2efc4ba20e552e74$var$getEntry(that, key);
                if (entry) {
                    var next = entry.n;
                    var prev = entry.p;
                    delete that._i[entry.i];
                    entry.r = true;
                    if (prev) prev.n = next;
                    if (next) next.p = prev;
                    if (that._f == entry) that._f = next;
                    if (that._l == entry) that._l = prev;
                    that[$2efc4ba20e552e74$var$SIZE]--;
                }
                return !!entry;
            },
            // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
            // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
            forEach: function forEach(callbackfn /* , that = undefined */ ) {
                $1km44(this, NAME);
                var f = $7vO7i(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
                var entry;
                while(entry = entry ? entry.n : this._f){
                    f(entry.v, entry.k, this);
                    // revert to the last existing entry
                    while(entry && entry.r)entry = entry.p;
                }
            },
            // 23.1.3.7 Map.prototype.has(key)
            // 23.2.3.7 Set.prototype.has(value)
            has: function has(key) {
                return !!$2efc4ba20e552e74$var$getEntry($1km44(this, NAME), key);
            }
        });
        if ($3y86S) $2efc4ba20e552e74$require$dP(C.prototype, "size", {
            get: function() {
                return $1km44(this, NAME)[$2efc4ba20e552e74$var$SIZE];
            }
        });
        return C;
    },
    def: function(that, key, value) {
        var entry = $2efc4ba20e552e74$var$getEntry(that, key);
        var prev, index;
        // change existing entry
        if (entry) entry.v = value;
        else {
            that._l = entry = {
                i: index = $2efc4ba20e552e74$require$fastKey(key, true),
                k: key,
                v: value,
                p: prev = that._l,
                n: undefined,
                r: false // <- removed
            };
            if (!that._f) that._f = entry;
            if (prev) prev.n = entry;
            that[$2efc4ba20e552e74$var$SIZE]++;
            // add to index
            if (index !== "F") that._i[index] = entry;
        }
        return that;
    },
    getEntry: $2efc4ba20e552e74$var$getEntry,
    setStrong: function(C, NAME, IS_MAP) {
        // add .keys, .values, .entries, [@@iterator]
        // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
        $9eQhN(C, NAME, function(iterated, kind) {
            this._t = $1km44(iterated, NAME); // target
            this._k = kind; // kind
            this._l = undefined; // previous
        }, function() {
            var that = this;
            var kind = that._k;
            var entry = that._l;
            // revert to the last existing entry
            while(entry && entry.r)entry = entry.p;
            // get next entry
            if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
                // or finish the iteration
                that._t = undefined;
                return $kTFSr(1);
            }
            // return step by kind
            if (kind == "keys") return $kTFSr(0, entry.k);
            if (kind == "values") return $kTFSr(0, entry.v);
            return $kTFSr(0, [
                entry.k,
                entry.v
            ]);
        }, IS_MAP ? "entries" : "values", !IS_MAP, true);
        // add [@@species], 23.1.2.2, 23.2.2.2
        $epMIB(NAME);
    }
};



var $1km44 = parcelRequire("1km44");
var $33cec8d2f94e44bd$var$MAP = "Map";

// 23.1 Map Objects
$33cec8d2f94e44bd$exports = (parcelRequire("5hbU4"))($33cec8d2f94e44bd$var$MAP, function(get) {
    return function Map() {
        return get(this, arguments.length > 0 ? arguments[0] : undefined);
    };
}, {
    // 23.1.3.6 Map.prototype.get(key)
    get: function get(key) {
        var entry = $2efc4ba20e552e74$exports.getEntry($1km44(this, $33cec8d2f94e44bd$var$MAP), key);
        return entry && entry.v;
    },
    // 23.1.3.9 Map.prototype.set(key, value)
    set: function set(key, value) {
        return $2efc4ba20e552e74$exports.def($1km44(this, $33cec8d2f94e44bd$var$MAP), key === 0 ? 0 : key, value);
    }
}, $2efc4ba20e552e74$exports, true);


var $4edc228868c57464$exports = {};
"use strict";


var $1km44 = parcelRequire("1km44");
var $4edc228868c57464$var$SET = "Set";

// 23.2 Set Objects
$4edc228868c57464$exports = (parcelRequire("5hbU4"))($4edc228868c57464$var$SET, function(get) {
    return function Set() {
        return get(this, arguments.length > 0 ? arguments[0] : undefined);
    };
}, {
    // 23.2.3.1 Set.prototype.add(value)
    add: function add(value) {
        return $2efc4ba20e552e74$exports.def($1km44(this, $4edc228868c57464$var$SET), value = value === 0 ? 0 : value, value);
    }
}, $2efc4ba20e552e74$exports);


parcelRequire("giGyE");
"use strict";

var $2hVF3 = parcelRequire("2hVF3");

var $1km44 = parcelRequire("1km44");
var $4daca5a8ff62ef8d$var$WEAK_SET = "WeakSet";

// 23.4 WeakSet Objects
(parcelRequire("5hbU4"))($4daca5a8ff62ef8d$var$WEAK_SET, function(get) {
    return function WeakSet() {
        return get(this, arguments.length > 0 ? arguments[0] : undefined);
    };
}, {
    // 23.4.3.1 WeakSet.prototype.add(value)
    add: function add(value) {
        return $2hVF3.def($1km44(this, $4daca5a8ff62ef8d$var$WEAK_SET), value, true);
    }
}, $2hVF3, false, true);


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");

var $cgXEb = parcelRequire("cgXEb");

var $bDH3n = parcelRequire("bDH3n");

var $euAZz = parcelRequire("euAZz");

var $aselx = parcelRequire("aselx");

var $DZqmm = parcelRequire("DZqmm");

var $ly2vB = parcelRequire("ly2vB");

var $gTAze = parcelRequire("gTAze");
var $196a111b61e28436$require$ArrayBuffer = $gTAze.ArrayBuffer;

var $aKF9g = parcelRequire("aKF9g");
var $196a111b61e28436$var$$ArrayBuffer = $bDH3n.ArrayBuffer;
var $196a111b61e28436$var$$DataView = $bDH3n.DataView;
var $196a111b61e28436$var$$isView = $cgXEb.ABV && $196a111b61e28436$require$ArrayBuffer.isView;
var $196a111b61e28436$var$$slice = $196a111b61e28436$var$$ArrayBuffer.prototype.slice;
var $196a111b61e28436$var$VIEW = $cgXEb.VIEW;
var $196a111b61e28436$var$ARRAY_BUFFER = "ArrayBuffer";
$3B1Ky($3B1Ky.G + $3B1Ky.W + $3B1Ky.F * ($196a111b61e28436$require$ArrayBuffer !== $196a111b61e28436$var$$ArrayBuffer), {
    ArrayBuffer: $196a111b61e28436$var$$ArrayBuffer
});
$3B1Ky($3B1Ky.S + $3B1Ky.F * !$cgXEb.CONSTR, $196a111b61e28436$var$ARRAY_BUFFER, {
    // 24.1.3.1 ArrayBuffer.isView(arg)
    isView: function isView(it) {
        return $196a111b61e28436$var$$isView && $196a111b61e28436$var$$isView(it) || $ly2vB(it) && $196a111b61e28436$var$VIEW in it;
    }
});

$3B1Ky($3B1Ky.P + $3B1Ky.U + $3B1Ky.F * (parcelRequire("hcpLn"))(function() {
    return !new $196a111b61e28436$var$$ArrayBuffer(2).slice(1, undefined).byteLength;
}), $196a111b61e28436$var$ARRAY_BUFFER, {
    // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
    slice: function slice(start, end) {
        if ($196a111b61e28436$var$$slice !== undefined && end === undefined) return $196a111b61e28436$var$$slice.call($euAZz(this), start); // FF fix
        var len = $euAZz(this).byteLength;
        var first = $aselx(start, len);
        var fin = $aselx(end === undefined ? len : end, len);
        var result = new ($aKF9g(this, $196a111b61e28436$var$$ArrayBuffer))($DZqmm(fin - first));
        var viewS = new $196a111b61e28436$var$$DataView(this);
        var viewT = new $196a111b61e28436$var$$DataView(result);
        var index = 0;
        while(first < fin)viewT.setUint8(index++, viewS.getUint8(first++));
        return result;
    }
});

(parcelRequire("epMIB"))($196a111b61e28436$var$ARRAY_BUFFER);



var $3B1Ky = parcelRequire("3B1Ky");


$3B1Ky($3B1Ky.G + $3B1Ky.W + $3B1Ky.F * !(parcelRequire("cgXEb")).ABV, {
    DataView: (parcelRequire("bDH3n")).DataView
});



(parcelRequire("du7dW"))("Int8", 1, function(init) {
    return function Int8Array(data, byteOffset, length) {
        return init(this, data, byteOffset, length);
    };
});



(parcelRequire("du7dW"))("Uint8", 1, function(init) {
    return function Uint8Array(data, byteOffset, length) {
        return init(this, data, byteOffset, length);
    };
});



(parcelRequire("du7dW"))("Uint8", 1, function(init) {
    return function Uint8ClampedArray(data, byteOffset, length) {
        return init(this, data, byteOffset, length);
    };
}, true);



(parcelRequire("du7dW"))("Int16", 2, function(init) {
    return function Int16Array(data, byteOffset, length) {
        return init(this, data, byteOffset, length);
    };
});



(parcelRequire("du7dW"))("Uint16", 2, function(init) {
    return function Uint16Array(data, byteOffset, length) {
        return init(this, data, byteOffset, length);
    };
});



(parcelRequire("du7dW"))("Int32", 4, function(init) {
    return function Int32Array(data, byteOffset, length) {
        return init(this, data, byteOffset, length);
    };
});



(parcelRequire("du7dW"))("Uint32", 4, function(init) {
    return function Uint32Array(data, byteOffset, length) {
        return init(this, data, byteOffset, length);
    };
});



(parcelRequire("du7dW"))("Float32", 4, function(init) {
    return function Float32Array(data, byteOffset, length) {
        return init(this, data, byteOffset, length);
    };
});



(parcelRequire("du7dW"))("Float64", 8, function(init) {
    return function Float64Array(data, byteOffset, length) {
        return init(this, data, byteOffset, length);
    };
});



var $3B1Ky = parcelRequire("3B1Ky");

var $1C6Y9 = parcelRequire("1C6Y9");

var $euAZz = parcelRequire("euAZz");

var $ab93ab2a0802ddaa$var$rApply = ((parcelRequire("gTAze")).Reflect || {}).apply;
var $ab93ab2a0802ddaa$var$fApply = Function.apply;

// MS Edge argumentsList argument is optional
$3B1Ky($3B1Ky.S + $3B1Ky.F * !(parcelRequire("hcpLn"))(function() {
    $ab93ab2a0802ddaa$var$rApply(function() {});
}), "Reflect", {
    apply: function apply(target, thisArgument, argumentsList) {
        var T = $1C6Y9(target);
        var L = $euAZz(argumentsList);
        return $ab93ab2a0802ddaa$var$rApply ? $ab93ab2a0802ddaa$var$rApply(T, thisArgument, L) : $ab93ab2a0802ddaa$var$fApply.call(T, thisArgument, L);
    }
});



var $3B1Ky = parcelRequire("3B1Ky");

var $fKIsL = parcelRequire("fKIsL");

var $1C6Y9 = parcelRequire("1C6Y9");

var $euAZz = parcelRequire("euAZz");

var $ly2vB = parcelRequire("ly2vB");

var $hcpLn = parcelRequire("hcpLn");

var $jAuUZ = parcelRequire("jAuUZ");

var $02ba069bec282cbf$var$rConstruct = ((parcelRequire("gTAze")).Reflect || {}).construct;
// MS Edge supports only 2 arguments and argumentsList argument is optional
// FF Nightly sets third argument as `new.target`, but does not create `this` from it
var $02ba069bec282cbf$var$NEW_TARGET_BUG = $hcpLn(function() {
    function F() {}
    return !($02ba069bec282cbf$var$rConstruct(function() {}, [], F) instanceof F);
});
var $02ba069bec282cbf$var$ARGS_BUG = !$hcpLn(function() {
    $02ba069bec282cbf$var$rConstruct(function() {});
});
$3B1Ky($3B1Ky.S + $3B1Ky.F * ($02ba069bec282cbf$var$NEW_TARGET_BUG || $02ba069bec282cbf$var$ARGS_BUG), "Reflect", {
    construct: function construct(Target, args /* , newTarget */ ) {
        $1C6Y9(Target);
        $euAZz(args);
        var newTarget = arguments.length < 3 ? Target : $1C6Y9(arguments[2]);
        if ($02ba069bec282cbf$var$ARGS_BUG && !$02ba069bec282cbf$var$NEW_TARGET_BUG) return $02ba069bec282cbf$var$rConstruct(Target, args, newTarget);
        if (Target == newTarget) {
            // w/o altered newTarget, optimization for 0-4 arguments
            switch(args.length){
                case 0:
                    return new Target();
                case 1:
                    return new Target(args[0]);
                case 2:
                    return new Target(args[0], args[1]);
                case 3:
                    return new Target(args[0], args[1], args[2]);
                case 4:
                    return new Target(args[0], args[1], args[2], args[3]);
            }
            // w/o altered newTarget, lot of arguments case
            var $args = [
                null
            ];
            $args.push.apply($args, args);
            return new ($jAuUZ.apply(Target, $args))();
        }
        // with altered newTarget, not support built-in constructors
        var proto = newTarget.prototype;
        var instance = $fKIsL($ly2vB(proto) ? proto : Object.prototype);
        var result = Function.apply.call(Target, instance, args);
        return $ly2vB(result) ? result : instance;
    }
});



var $dLczm = parcelRequire("dLczm");

var $3B1Ky = parcelRequire("3B1Ky");

var $euAZz = parcelRequire("euAZz");

var $dapnX = parcelRequire("dapnX");

// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
$3B1Ky($3B1Ky.S + $3B1Ky.F * (parcelRequire("hcpLn"))(function() {
    // eslint-disable-next-line no-undef
    Reflect.defineProperty($dLczm.f({}, 1, {
        value: 1
    }), 1, {
        value: 2
    });
}), "Reflect", {
    defineProperty: function defineProperty(target, propertyKey, attributes) {
        $euAZz(target);
        propertyKey = $dapnX(propertyKey, true);
        $euAZz(attributes);
        try {
            $dLczm.f(target, propertyKey, attributes);
            return true;
        } catch (e) {
            return false;
        }
    }
});



var $3B1Ky = parcelRequire("3B1Ky");

var $b0Bat = parcelRequire("b0Bat");
var $050ecf22cef5a53a$require$gOPD = $b0Bat.f;

var $euAZz = parcelRequire("euAZz");
$3B1Ky($3B1Ky.S, "Reflect", {
    deleteProperty: function deleteProperty(target, propertyKey) {
        var desc = $050ecf22cef5a53a$require$gOPD($euAZz(target), propertyKey);
        return desc && !desc.configurable ? false : delete target[propertyKey];
    }
});


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");

var $euAZz = parcelRequire("euAZz");
var $c5144a26b47eed06$var$Enumerate = function(iterated) {
    this._t = $euAZz(iterated); // target
    this._i = 0; // next index
    var keys = this._k = []; // keys
    var key;
    for(key in iterated)keys.push(key);
};

(parcelRequire("eDmOg"))($c5144a26b47eed06$var$Enumerate, "Object", function() {
    var that = this;
    var keys = that._k;
    var key;
    do {
        if (that._i >= keys.length) return {
            value: undefined,
            done: true
        };
    }while (!((key = keys[that._i++]) in that._t));
    return {
        value: key,
        done: false
    };
});
$3B1Ky($3B1Ky.S, "Reflect", {
    enumerate: function enumerate(target) {
        return new $c5144a26b47eed06$var$Enumerate(target);
    }
});



var $b0Bat = parcelRequire("b0Bat");

var $imZ0P = parcelRequire("imZ0P");

var $dS4Ut = parcelRequire("dS4Ut");

var $3B1Ky = parcelRequire("3B1Ky");

var $ly2vB = parcelRequire("ly2vB");

var $euAZz = parcelRequire("euAZz");
function $860859d6233f1dba$var$get(target, propertyKey /* , receiver */ ) {
    var receiver = arguments.length < 3 ? target : arguments[2];
    var desc, proto;
    if ($euAZz(target) === receiver) return target[propertyKey];
    if (desc = $b0Bat.f(target, propertyKey)) return $dS4Ut(desc, "value") ? desc.value : desc.get !== undefined ? desc.get.call(receiver) : undefined;
    if ($ly2vB(proto = $imZ0P(target))) return $860859d6233f1dba$var$get(proto, propertyKey, receiver);
}
$3B1Ky($3B1Ky.S, "Reflect", {
    get: $860859d6233f1dba$var$get
});



var $b0Bat = parcelRequire("b0Bat");

var $3B1Ky = parcelRequire("3B1Ky");

var $euAZz = parcelRequire("euAZz");
$3B1Ky($3B1Ky.S, "Reflect", {
    getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {
        return $b0Bat.f($euAZz(target), propertyKey);
    }
});



var $3B1Ky = parcelRequire("3B1Ky");

var $imZ0P = parcelRequire("imZ0P");

var $euAZz = parcelRequire("euAZz");
$3B1Ky($3B1Ky.S, "Reflect", {
    getPrototypeOf: function getPrototypeOf(target) {
        return $imZ0P($euAZz(target));
    }
});



var $3B1Ky = parcelRequire("3B1Ky");
$3B1Ky($3B1Ky.S, "Reflect", {
    has: function has(target, propertyKey) {
        return propertyKey in target;
    }
});



var $3B1Ky = parcelRequire("3B1Ky");

var $euAZz = parcelRequire("euAZz");
var $d0cd26554e95f4ae$var$$isExtensible = Object.isExtensible;
$3B1Ky($3B1Ky.S, "Reflect", {
    isExtensible: function isExtensible(target) {
        $euAZz(target);
        return $d0cd26554e95f4ae$var$$isExtensible ? $d0cd26554e95f4ae$var$$isExtensible(target) : true;
    }
});



var $3B1Ky = parcelRequire("3B1Ky");

$3B1Ky($3B1Ky.S, "Reflect", {
    ownKeys: (parcelRequire("48gXI"))
});



var $3B1Ky = parcelRequire("3B1Ky");

var $euAZz = parcelRequire("euAZz");
var $195840e87bf74c66$var$$preventExtensions = Object.preventExtensions;
$3B1Ky($3B1Ky.S, "Reflect", {
    preventExtensions: function preventExtensions(target) {
        $euAZz(target);
        try {
            if ($195840e87bf74c66$var$$preventExtensions) $195840e87bf74c66$var$$preventExtensions(target);
            return true;
        } catch (e) {
            return false;
        }
    }
});



var $dLczm = parcelRequire("dLczm");

var $b0Bat = parcelRequire("b0Bat");

var $imZ0P = parcelRequire("imZ0P");

var $dS4Ut = parcelRequire("dS4Ut");

var $3B1Ky = parcelRequire("3B1Ky");

var $87uCM = parcelRequire("87uCM");

var $euAZz = parcelRequire("euAZz");

var $ly2vB = parcelRequire("ly2vB");
function $a9c66b9cc8b77d56$var$set(target, propertyKey, V /* , receiver */ ) {
    var receiver = arguments.length < 4 ? target : arguments[3];
    var ownDesc = $b0Bat.f($euAZz(target), propertyKey);
    var existingDescriptor, proto;
    if (!ownDesc) {
        if ($ly2vB(proto = $imZ0P(target))) return $a9c66b9cc8b77d56$var$set(proto, propertyKey, V, receiver);
        ownDesc = $87uCM(0);
    }
    if ($dS4Ut(ownDesc, "value")) {
        if (ownDesc.writable === false || !$ly2vB(receiver)) return false;
        if (existingDescriptor = $b0Bat.f(receiver, propertyKey)) {
            if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;
            existingDescriptor.value = V;
            $dLczm.f(receiver, propertyKey, existingDescriptor);
        } else $dLczm.f(receiver, propertyKey, $87uCM(0, V));
        return true;
    }
    return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
}
$3B1Ky($3B1Ky.S, "Reflect", {
    set: $a9c66b9cc8b77d56$var$set
});



var $3B1Ky = parcelRequire("3B1Ky");

var $ei7b7 = parcelRequire("ei7b7");
if ($ei7b7) $3B1Ky($3B1Ky.S, "Reflect", {
    setPrototypeOf: function setPrototypeOf(target, proto) {
        $ei7b7.check(target, proto);
        try {
            $ei7b7.set(target, proto);
            return true;
        } catch (e) {
            return false;
        }
    }
});


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");

var $c55613780b446d0f$var$$includes = (parcelRequire("4VU3O"))(true);
$3B1Ky($3B1Ky.P, "Array", {
    includes: function includes(el /* , fromIndex = 0 */ ) {
        return $c55613780b446d0f$var$$includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
    }
});

(parcelRequire("bqTbq"))("includes");


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");
var $3fb26ee40ba63115$exports = {};
"use strict";

var $iLSpw = parcelRequire("iLSpw");

var $ly2vB = parcelRequire("ly2vB");

var $DZqmm = parcelRequire("DZqmm");

var $7vO7i = parcelRequire("7vO7i");

var $3fb26ee40ba63115$var$IS_CONCAT_SPREADABLE = (parcelRequire("5i4Lz"))("isConcatSpreadable");
function $3fb26ee40ba63115$var$flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {
    var targetIndex = start;
    var sourceIndex = 0;
    var mapFn = mapper ? $7vO7i(mapper, thisArg, 3) : false;
    var element, spreadable;
    while(sourceIndex < sourceLen){
        if (sourceIndex in source) {
            element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];
            spreadable = false;
            if ($ly2vB(element)) {
                spreadable = element[$3fb26ee40ba63115$var$IS_CONCAT_SPREADABLE];
                spreadable = spreadable !== undefined ? !!spreadable : $iLSpw(element);
            }
            if (spreadable && depth > 0) targetIndex = $3fb26ee40ba63115$var$flattenIntoArray(target, original, element, $DZqmm(element.length), targetIndex, depth - 1) - 1;
            else {
                if (targetIndex >= 0x1fffffffffffff) throw TypeError();
                target[targetIndex] = element;
            }
            targetIndex++;
        }
        sourceIndex++;
    }
    return targetIndex;
}
$3fb26ee40ba63115$exports = $3fb26ee40ba63115$var$flattenIntoArray;



var $6dhUj = parcelRequire("6dhUj");

var $DZqmm = parcelRequire("DZqmm");

var $1C6Y9 = parcelRequire("1C6Y9");

var $hTYGa = parcelRequire("hTYGa");
$3B1Ky($3B1Ky.P, "Array", {
    flatMap: function flatMap(callbackfn /* , thisArg */ ) {
        var O = $6dhUj(this);
        var sourceLen, A;
        $1C6Y9(callbackfn);
        sourceLen = $DZqmm(O.length);
        A = $hTYGa(O, 0);
        $3fb26ee40ba63115$exports(A, O, O, sourceLen, 0, 1, callbackfn, arguments[1]);
        return A;
    }
});

(parcelRequire("bqTbq"))("flatMap");


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");


var $6dhUj = parcelRequire("6dhUj");

var $DZqmm = parcelRequire("DZqmm");

var $fEeDR = parcelRequire("fEeDR");

var $hTYGa = parcelRequire("hTYGa");
$3B1Ky($3B1Ky.P, "Array", {
    flatten: function flatten() {
        var depthArg = arguments[0];
        var O = $6dhUj(this);
        var sourceLen = $DZqmm(O.length);
        var A = $hTYGa(O, 0);
        $3fb26ee40ba63115$exports(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : $fEeDR(depthArg));
        return A;
    }
});

(parcelRequire("bqTbq"))("flatten");


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");

var $6a11bc248ea4d0ab$var$$at = (parcelRequire("k69Hy"))(true);
$3B1Ky($3B1Ky.P, "String", {
    at: function at(pos) {
        return $6a11bc248ea4d0ab$var$$at(this, pos);
    }
});


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");
var $c4a4d06296b9fd5f$exports = {};

var $DZqmm = parcelRequire("DZqmm");

var $faNmj = parcelRequire("faNmj");

var $clUkM = parcelRequire("clUkM");
$c4a4d06296b9fd5f$exports = function(that, maxLength, fillString, left) {
    var S = String($clUkM(that));
    var stringLength = S.length;
    var fillStr = fillString === undefined ? " " : String(fillString);
    var intMaxLength = $DZqmm(maxLength);
    if (intMaxLength <= stringLength || fillStr == "") return S;
    var fillLen = intMaxLength - stringLength;
    var stringFiller = $faNmj.call(fillStr, Math.ceil(fillLen / fillStr.length));
    if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);
    return left ? stringFiller + S : S + stringFiller;
};



// https://github.com/zloirock/core-js/issues/280
var $9d4ecf8471d2feea$var$WEBKIT_BUG = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test($9e3bd4638ec6853a$exports);
$3B1Ky($3B1Ky.P + $3B1Ky.F * $9d4ecf8471d2feea$var$WEBKIT_BUG, "String", {
    padStart: function padStart(maxLength /* , fillString = ' ' */ ) {
        return $c4a4d06296b9fd5f$exports(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
    }
});


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");


// https://github.com/zloirock/core-js/issues/280
var $10e4f81902571281$var$WEBKIT_BUG = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test($9e3bd4638ec6853a$exports);
$3B1Ky($3B1Ky.P + $3B1Ky.F * $10e4f81902571281$var$WEBKIT_BUG, "String", {
    padEnd: function padEnd(maxLength /* , fillString = ' ' */ ) {
        return $c4a4d06296b9fd5f$exports(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
    }
});


"use strict";

// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
(parcelRequire("jaCBu"))("trimLeft", function($trim) {
    return function trimLeft() {
        return $trim(this, 1);
    };
}, "trimStart");


"use strict";

// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
(parcelRequire("jaCBu"))("trimRight", function($trim) {
    return function trimRight() {
        return $trim(this, 2);
    };
}, "trimEnd");


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");

var $clUkM = parcelRequire("clUkM");

var $DZqmm = parcelRequire("DZqmm");


var $kiAdZ = parcelRequire("kiAdZ");
var $58f608a21ab39fff$var$RegExpProto = RegExp.prototype;
var $58f608a21ab39fff$var$$RegExpStringIterator = function(regexp, string) {
    this._r = regexp;
    this._s = string;
};

(parcelRequire("eDmOg"))($58f608a21ab39fff$var$$RegExpStringIterator, "RegExp String", function next() {
    var match = this._r.exec(this._s);
    return {
        value: match,
        done: match === null
    };
});
$3B1Ky($3B1Ky.P, "String", {
    matchAll: function matchAll(regexp) {
        $clUkM(this);
        if (!$1e2b5bd1dd3f9fca$exports(regexp)) throw TypeError(regexp + " is not a regexp!");
        var S = String(this);
        var flags = "flags" in $58f608a21ab39fff$var$RegExpProto ? String(regexp.flags) : $kiAdZ.call(regexp);
        var rx = new RegExp(regexp.source, ~flags.indexOf("g") ? flags : "g" + flags);
        rx.lastIndex = $DZqmm(regexp.lastIndex);
        return new $58f608a21ab39fff$var$$RegExpStringIterator(rx, S);
    }
});



(parcelRequire("cX6eF"))("asyncIterator");



(parcelRequire("cX6eF"))("observable");



var $3B1Ky = parcelRequire("3B1Ky");

var $48gXI = parcelRequire("48gXI");

var $fHwma = parcelRequire("fHwma");

var $b0Bat = parcelRequire("b0Bat");

$3B1Ky($3B1Ky.S, "Object", {
    getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
        var O = $fHwma(object);
        var getDesc = $b0Bat.f;
        var keys = $48gXI(O);
        var result = {};
        var i = 0;
        var key, desc;
        while(keys.length > i){
            desc = getDesc(O, key = keys[i++]);
            if (desc !== undefined) $b61c8e7c85d33c3b$exports(result, key, desc);
        }
        return result;
    }
});



var $3B1Ky = parcelRequire("3B1Ky");

var $0bb7102d4c9c2fdc$var$$values = (parcelRequire("8obHc"))(false);
$3B1Ky($3B1Ky.S, "Object", {
    values: function values(it) {
        return $0bb7102d4c9c2fdc$var$$values(it);
    }
});



var $3B1Ky = parcelRequire("3B1Ky");

var $25d57402a1c514e3$var$$entries = (parcelRequire("8obHc"))(true);
$3B1Ky($3B1Ky.S, "Object", {
    entries: function entries(it) {
        return $25d57402a1c514e3$var$$entries(it);
    }
});


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");

var $6dhUj = parcelRequire("6dhUj");

var $1C6Y9 = parcelRequire("1C6Y9");

var $dLczm = parcelRequire("dLczm");


// B.2.2.2 Object.prototype.__defineGetter__(P, getter)
(parcelRequire("3y86S")) && $3B1Ky($3B1Ky.P + (parcelRequire("hNa3Q")), "Object", {
    __defineGetter__: function __defineGetter__(P, getter) {
        $dLczm.f($6dhUj(this), P, {
            get: $1C6Y9(getter),
            enumerable: true,
            configurable: true
        });
    }
});


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");

var $6dhUj = parcelRequire("6dhUj");

var $1C6Y9 = parcelRequire("1C6Y9");

var $dLczm = parcelRequire("dLczm");


// B.2.2.3 Object.prototype.__defineSetter__(P, setter)
(parcelRequire("3y86S")) && $3B1Ky($3B1Ky.P + (parcelRequire("hNa3Q")), "Object", {
    __defineSetter__: function __defineSetter__(P, setter) {
        $dLczm.f($6dhUj(this), P, {
            set: $1C6Y9(setter),
            enumerable: true,
            configurable: true
        });
    }
});


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");

var $6dhUj = parcelRequire("6dhUj");

var $dapnX = parcelRequire("dapnX");

var $imZ0P = parcelRequire("imZ0P");

var $b0Bat = parcelRequire("b0Bat");
var $914cad021b00754e$require$getOwnPropertyDescriptor = $b0Bat.f;


// B.2.2.4 Object.prototype.__lookupGetter__(P)
(parcelRequire("3y86S")) && $3B1Ky($3B1Ky.P + (parcelRequire("hNa3Q")), "Object", {
    __lookupGetter__: function __lookupGetter__(P) {
        var O = $6dhUj(this);
        var K = $dapnX(P, true);
        var D;
        do {
            if (D = $914cad021b00754e$require$getOwnPropertyDescriptor(O, K)) return D.get;
        }while (O = $imZ0P(O));
    }
});


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");

var $6dhUj = parcelRequire("6dhUj");

var $dapnX = parcelRequire("dapnX");

var $imZ0P = parcelRequire("imZ0P");

var $b0Bat = parcelRequire("b0Bat");
var $2d5ebb841b333867$require$getOwnPropertyDescriptor = $b0Bat.f;


// B.2.2.5 Object.prototype.__lookupSetter__(P)
(parcelRequire("3y86S")) && $3B1Ky($3B1Ky.P + (parcelRequire("hNa3Q")), "Object", {
    __lookupSetter__: function __lookupSetter__(P) {
        var O = $6dhUj(this);
        var K = $dapnX(P, true);
        var D;
        do {
            if (D = $2d5ebb841b333867$require$getOwnPropertyDescriptor(O, K)) return D.set;
        }while (O = $imZ0P(O));
    }
});



var $3B1Ky = parcelRequire("3B1Ky");

$3B1Ky($3B1Ky.P + $3B1Ky.R, "Map", {
    toJSON: (parcelRequire("dlu6P"))("Map")
});



var $3B1Ky = parcelRequire("3B1Ky");

$3B1Ky($3B1Ky.P + $3B1Ky.R, "Set", {
    toJSON: (parcelRequire("dlu6P"))("Set")
});



// https://tc39.github.io/proposal-setmap-offrom/#sec-map.of
(parcelRequire("gUpXO"))("Map");



// https://tc39.github.io/proposal-setmap-offrom/#sec-set.of
(parcelRequire("gUpXO"))("Set");



// https://tc39.github.io/proposal-setmap-offrom/#sec-weakmap.of
(parcelRequire("gUpXO"))("WeakMap");



// https://tc39.github.io/proposal-setmap-offrom/#sec-weakset.of
(parcelRequire("gUpXO"))("WeakSet");



// https://tc39.github.io/proposal-setmap-offrom/#sec-map.from
(parcelRequire("274XZ"))("Map");



// https://tc39.github.io/proposal-setmap-offrom/#sec-set.from
(parcelRequire("274XZ"))("Set");



// https://tc39.github.io/proposal-setmap-offrom/#sec-weakmap.from
(parcelRequire("274XZ"))("WeakMap");



// https://tc39.github.io/proposal-setmap-offrom/#sec-weakset.from
(parcelRequire("274XZ"))("WeakSet");



var $3B1Ky = parcelRequire("3B1Ky");

$3B1Ky($3B1Ky.G, {
    global: (parcelRequire("gTAze"))
});



var $3B1Ky = parcelRequire("3B1Ky");

$3B1Ky($3B1Ky.S, "System", {
    global: (parcelRequire("gTAze"))
});



var $3B1Ky = parcelRequire("3B1Ky");

var $bOq6I = parcelRequire("bOq6I");
$3B1Ky($3B1Ky.S, "Error", {
    isError: function isError(it) {
        return $bOq6I(it) === "Error";
    }
});



var $3B1Ky = parcelRequire("3B1Ky");
$3B1Ky($3B1Ky.S, "Math", {
    clamp: function clamp(x, lower, upper) {
        return Math.min(upper, Math.max(lower, x));
    }
});



var $3B1Ky = parcelRequire("3B1Ky");
$3B1Ky($3B1Ky.S, "Math", {
    DEG_PER_RAD: Math.PI / 180
});



var $3B1Ky = parcelRequire("3B1Ky");
var $91ce21ea472ba7ac$var$RAD_PER_DEG = 180 / Math.PI;
$3B1Ky($3B1Ky.S, "Math", {
    degrees: function degrees(radians) {
        return radians * $91ce21ea472ba7ac$var$RAD_PER_DEG;
    }
});



var $3B1Ky = parcelRequire("3B1Ky");

var $7ARVO = parcelRequire("7ARVO");

var $bgh7t = parcelRequire("bgh7t");
$3B1Ky($3B1Ky.S, "Math", {
    fscale: function fscale(x, inLow, inHigh, outLow, outHigh) {
        return $bgh7t($7ARVO(x, inLow, inHigh, outLow, outHigh));
    }
});



var $3B1Ky = parcelRequire("3B1Ky");
$3B1Ky($3B1Ky.S, "Math", {
    iaddh: function iaddh(x0, x1, y0, y1) {
        var $x0 = x0 >>> 0;
        var $x1 = x1 >>> 0;
        var $y0 = y0 >>> 0;
        return $x1 + (y1 >>> 0) + (($x0 & $y0 | ($x0 | $y0) & ~($x0 + $y0 >>> 0)) >>> 31) | 0;
    }
});



var $3B1Ky = parcelRequire("3B1Ky");
$3B1Ky($3B1Ky.S, "Math", {
    isubh: function isubh(x0, x1, y0, y1) {
        var $x0 = x0 >>> 0;
        var $x1 = x1 >>> 0;
        var $y0 = y0 >>> 0;
        return $x1 - (y1 >>> 0) - ((~$x0 & $y0 | ~($x0 ^ $y0) & $x0 - $y0 >>> 0) >>> 31) | 0;
    }
});



var $3B1Ky = parcelRequire("3B1Ky");
$3B1Ky($3B1Ky.S, "Math", {
    imulh: function imulh(u, v) {
        var UINT16 = 0xffff;
        var $u = +u;
        var $v = +v;
        var u0 = $u & UINT16;
        var v0 = $v & UINT16;
        var u1 = $u >> 16;
        var v1 = $v >> 16;
        var t = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
        return u1 * v1 + (t >> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >> 16);
    }
});



var $3B1Ky = parcelRequire("3B1Ky");
$3B1Ky($3B1Ky.S, "Math", {
    RAD_PER_DEG: 180 / Math.PI
});



var $3B1Ky = parcelRequire("3B1Ky");
var $41f7b17a6bac4504$var$DEG_PER_RAD = Math.PI / 180;
$3B1Ky($3B1Ky.S, "Math", {
    radians: function radians(degrees) {
        return degrees * $41f7b17a6bac4504$var$DEG_PER_RAD;
    }
});



var $3B1Ky = parcelRequire("3B1Ky");

$3B1Ky($3B1Ky.S, "Math", {
    scale: (parcelRequire("7ARVO"))
});



var $3B1Ky = parcelRequire("3B1Ky");
$3B1Ky($3B1Ky.S, "Math", {
    umulh: function umulh(u, v) {
        var UINT16 = 0xffff;
        var $u = +u;
        var $v = +v;
        var u0 = $u & UINT16;
        var v0 = $v & UINT16;
        var u1 = $u >>> 16;
        var v1 = $v >>> 16;
        var t = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
        return u1 * v1 + (t >>> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >>> 16);
    }
});



var $3B1Ky = parcelRequire("3B1Ky");
$3B1Ky($3B1Ky.S, "Math", {
    signbit: function signbit(x) {
        // eslint-disable-next-line no-self-compare
        return (x = +x) != x ? x : x == 0 ? 1 / x == Infinity : x > 0;
    }
});


// https://github.com/tc39/proposal-promise-finally
"use strict";

var $3B1Ky = parcelRequire("3B1Ky");

var $6LdXb = parcelRequire("6LdXb");

var $gTAze = parcelRequire("gTAze");

var $aKF9g = parcelRequire("aKF9g");

$3B1Ky($3B1Ky.P + $3B1Ky.R, "Promise", {
    "finally": function(onFinally) {
        var C = $aKF9g(this, $6LdXb.Promise || $gTAze.Promise);
        var isFunction = typeof onFinally == "function";
        return this.then(isFunction ? function(x) {
            return $7fbef04359d29757$exports(C, onFinally()).then(function() {
                return x;
            });
        } : onFinally, isFunction ? function(e) {
            return $7fbef04359d29757$exports(C, onFinally()).then(function() {
                throw e;
            });
        } : onFinally);
    }
});


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");


$3B1Ky($3B1Ky.S, "Promise", {
    "try": function(callbackfn) {
        var promiseCapability = $5f54ffbc58658dff$export$2d1720544b23b823(this);
        var result = $133aedacd70c4393$exports(callbackfn);
        (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
        return promiseCapability.promise;
    }
});


var $6db1a3075a969b54$exports = {};


var $3B1Ky = parcelRequire("3B1Ky");

var $6db1a3075a969b54$var$shared = (parcelRequire("4tRaz"))("metadata");

var $6db1a3075a969b54$var$store = $6db1a3075a969b54$var$shared.store || ($6db1a3075a969b54$var$shared.store = new (parcelRequire("giGyE"))());
var $6db1a3075a969b54$var$getOrCreateMetadataMap = function(target, targetKey, create) {
    var targetMetadata = $6db1a3075a969b54$var$store.get(target);
    if (!targetMetadata) {
        if (!create) return undefined;
        $6db1a3075a969b54$var$store.set(target, targetMetadata = new $33cec8d2f94e44bd$exports());
    }
    var keyMetadata = targetMetadata.get(targetKey);
    if (!keyMetadata) {
        if (!create) return undefined;
        targetMetadata.set(targetKey, keyMetadata = new $33cec8d2f94e44bd$exports());
    }
    return keyMetadata;
};
var $6db1a3075a969b54$var$ordinaryHasOwnMetadata = function(MetadataKey, O, P) {
    var metadataMap = $6db1a3075a969b54$var$getOrCreateMetadataMap(O, P, false);
    return metadataMap === undefined ? false : metadataMap.has(MetadataKey);
};
var $6db1a3075a969b54$var$ordinaryGetOwnMetadata = function(MetadataKey, O, P) {
    var metadataMap = $6db1a3075a969b54$var$getOrCreateMetadataMap(O, P, false);
    return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);
};
var $6db1a3075a969b54$var$ordinaryDefineOwnMetadata = function(MetadataKey, MetadataValue, O, P) {
    $6db1a3075a969b54$var$getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);
};
var $6db1a3075a969b54$var$ordinaryOwnMetadataKeys = function(target, targetKey) {
    var metadataMap = $6db1a3075a969b54$var$getOrCreateMetadataMap(target, targetKey, false);
    var keys = [];
    if (metadataMap) metadataMap.forEach(function(_, key) {
        keys.push(key);
    });
    return keys;
};
var $6db1a3075a969b54$var$toMetaKey = function(it) {
    return it === undefined || typeof it == "symbol" ? it : String(it);
};
var $6db1a3075a969b54$var$exp = function(O) {
    $3B1Ky($3B1Ky.S, "Reflect", O);
};
$6db1a3075a969b54$exports = {
    store: $6db1a3075a969b54$var$store,
    map: $6db1a3075a969b54$var$getOrCreateMetadataMap,
    has: $6db1a3075a969b54$var$ordinaryHasOwnMetadata,
    get: $6db1a3075a969b54$var$ordinaryGetOwnMetadata,
    set: $6db1a3075a969b54$var$ordinaryDefineOwnMetadata,
    keys: $6db1a3075a969b54$var$ordinaryOwnMetadataKeys,
    key: $6db1a3075a969b54$var$toMetaKey,
    exp: $6db1a3075a969b54$var$exp
};



var $euAZz = parcelRequire("euAZz");
var $833c524451030471$var$toMetaKey = $6db1a3075a969b54$exports.key;
var $833c524451030471$var$ordinaryDefineOwnMetadata = $6db1a3075a969b54$exports.set;
$6db1a3075a969b54$exports.exp({
    defineMetadata: function defineMetadata(metadataKey, metadataValue, target, targetKey) {
        $833c524451030471$var$ordinaryDefineOwnMetadata(metadataKey, metadataValue, $euAZz(target), $833c524451030471$var$toMetaKey(targetKey));
    }
});




var $euAZz = parcelRequire("euAZz");
var $72d75d0d57720d03$var$toMetaKey = $6db1a3075a969b54$exports.key;
var $72d75d0d57720d03$var$getOrCreateMetadataMap = $6db1a3075a969b54$exports.map;
var $72d75d0d57720d03$var$store = $6db1a3075a969b54$exports.store;
$6db1a3075a969b54$exports.exp({
    deleteMetadata: function deleteMetadata(metadataKey, target /* , targetKey */ ) {
        var targetKey = arguments.length < 3 ? undefined : $72d75d0d57720d03$var$toMetaKey(arguments[2]);
        var metadataMap = $72d75d0d57720d03$var$getOrCreateMetadataMap($euAZz(target), targetKey, false);
        if (metadataMap === undefined || !metadataMap["delete"](metadataKey)) return false;
        if (metadataMap.size) return true;
        var targetMetadata = $72d75d0d57720d03$var$store.get(target);
        targetMetadata["delete"](targetKey);
        return !!targetMetadata.size || $72d75d0d57720d03$var$store["delete"](target);
    }
});




var $euAZz = parcelRequire("euAZz");

var $imZ0P = parcelRequire("imZ0P");
var $96ac26871897726e$var$ordinaryHasOwnMetadata = $6db1a3075a969b54$exports.has;
var $96ac26871897726e$var$ordinaryGetOwnMetadata = $6db1a3075a969b54$exports.get;
var $96ac26871897726e$var$toMetaKey = $6db1a3075a969b54$exports.key;
var $96ac26871897726e$var$ordinaryGetMetadata = function(MetadataKey, O, P) {
    var hasOwn = $96ac26871897726e$var$ordinaryHasOwnMetadata(MetadataKey, O, P);
    if (hasOwn) return $96ac26871897726e$var$ordinaryGetOwnMetadata(MetadataKey, O, P);
    var parent = $imZ0P(O);
    return parent !== null ? $96ac26871897726e$var$ordinaryGetMetadata(MetadataKey, parent, P) : undefined;
};
$6db1a3075a969b54$exports.exp({
    getMetadata: function getMetadata(metadataKey, target /* , targetKey */ ) {
        return $96ac26871897726e$var$ordinaryGetMetadata(metadataKey, $euAZz(target), arguments.length < 3 ? undefined : $96ac26871897726e$var$toMetaKey(arguments[2]));
    }
});




var $fBIyW = parcelRequire("fBIyW");


var $euAZz = parcelRequire("euAZz");

var $imZ0P = parcelRequire("imZ0P");
var $9b8725ae7a20922e$var$ordinaryOwnMetadataKeys = $6db1a3075a969b54$exports.keys;
var $9b8725ae7a20922e$var$toMetaKey = $6db1a3075a969b54$exports.key;
var $9b8725ae7a20922e$var$ordinaryMetadataKeys = function(O, P) {
    var oKeys = $9b8725ae7a20922e$var$ordinaryOwnMetadataKeys(O, P);
    var parent = $imZ0P(O);
    if (parent === null) return oKeys;
    var pKeys = $9b8725ae7a20922e$var$ordinaryMetadataKeys(parent, P);
    return pKeys.length ? oKeys.length ? $fBIyW(new $4edc228868c57464$exports(oKeys.concat(pKeys))) : pKeys : oKeys;
};
$6db1a3075a969b54$exports.exp({
    getMetadataKeys: function getMetadataKeys(target /* , targetKey */ ) {
        return $9b8725ae7a20922e$var$ordinaryMetadataKeys($euAZz(target), arguments.length < 2 ? undefined : $9b8725ae7a20922e$var$toMetaKey(arguments[1]));
    }
});




var $euAZz = parcelRequire("euAZz");
var $945743c9831d0f00$var$ordinaryGetOwnMetadata = $6db1a3075a969b54$exports.get;
var $945743c9831d0f00$var$toMetaKey = $6db1a3075a969b54$exports.key;
$6db1a3075a969b54$exports.exp({
    getOwnMetadata: function getOwnMetadata(metadataKey, target /* , targetKey */ ) {
        return $945743c9831d0f00$var$ordinaryGetOwnMetadata(metadataKey, $euAZz(target), arguments.length < 3 ? undefined : $945743c9831d0f00$var$toMetaKey(arguments[2]));
    }
});




var $euAZz = parcelRequire("euAZz");
var $29a76173e7253bfa$var$ordinaryOwnMetadataKeys = $6db1a3075a969b54$exports.keys;
var $29a76173e7253bfa$var$toMetaKey = $6db1a3075a969b54$exports.key;
$6db1a3075a969b54$exports.exp({
    getOwnMetadataKeys: function getOwnMetadataKeys(target /* , targetKey */ ) {
        return $29a76173e7253bfa$var$ordinaryOwnMetadataKeys($euAZz(target), arguments.length < 2 ? undefined : $29a76173e7253bfa$var$toMetaKey(arguments[1]));
    }
});




var $euAZz = parcelRequire("euAZz");

var $imZ0P = parcelRequire("imZ0P");
var $06aff4ddec86cda8$var$ordinaryHasOwnMetadata = $6db1a3075a969b54$exports.has;
var $06aff4ddec86cda8$var$toMetaKey = $6db1a3075a969b54$exports.key;
var $06aff4ddec86cda8$var$ordinaryHasMetadata = function(MetadataKey, O, P) {
    var hasOwn = $06aff4ddec86cda8$var$ordinaryHasOwnMetadata(MetadataKey, O, P);
    if (hasOwn) return true;
    var parent = $imZ0P(O);
    return parent !== null ? $06aff4ddec86cda8$var$ordinaryHasMetadata(MetadataKey, parent, P) : false;
};
$6db1a3075a969b54$exports.exp({
    hasMetadata: function hasMetadata(metadataKey, target /* , targetKey */ ) {
        return $06aff4ddec86cda8$var$ordinaryHasMetadata(metadataKey, $euAZz(target), arguments.length < 3 ? undefined : $06aff4ddec86cda8$var$toMetaKey(arguments[2]));
    }
});




var $euAZz = parcelRequire("euAZz");
var $d698771ee6ed1e06$var$ordinaryHasOwnMetadata = $6db1a3075a969b54$exports.has;
var $d698771ee6ed1e06$var$toMetaKey = $6db1a3075a969b54$exports.key;
$6db1a3075a969b54$exports.exp({
    hasOwnMetadata: function hasOwnMetadata(metadataKey, target /* , targetKey */ ) {
        return $d698771ee6ed1e06$var$ordinaryHasOwnMetadata(metadataKey, $euAZz(target), arguments.length < 3 ? undefined : $d698771ee6ed1e06$var$toMetaKey(arguments[2]));
    }
});




var $euAZz = parcelRequire("euAZz");

var $1C6Y9 = parcelRequire("1C6Y9");
var $a73fc927fd9675e3$var$toMetaKey = $6db1a3075a969b54$exports.key;
var $a73fc927fd9675e3$var$ordinaryDefineOwnMetadata = $6db1a3075a969b54$exports.set;
$6db1a3075a969b54$exports.exp({
    metadata: function metadata(metadataKey, metadataValue) {
        return function decorator(target, targetKey) {
            $a73fc927fd9675e3$var$ordinaryDefineOwnMetadata(metadataKey, metadataValue, (targetKey !== undefined ? $euAZz : $1C6Y9)(target), $a73fc927fd9675e3$var$toMetaKey(targetKey));
        };
    }
});



var $3B1Ky = parcelRequire("3B1Ky");

var $714fa46a351785f5$var$microtask = (parcelRequire("8Bw9Z"))();

var $gTAze = parcelRequire("gTAze");
var $714fa46a351785f5$require$process = $gTAze.process;

var $714fa46a351785f5$var$isNode = (parcelRequire("bOq6I"))($714fa46a351785f5$require$process) == "process";
$3B1Ky($3B1Ky.G, {
    asap: function asap(fn) {
        var domain = $714fa46a351785f5$var$isNode && $714fa46a351785f5$require$process.domain;
        $714fa46a351785f5$var$microtask(domain ? domain.bind(fn) : fn);
    }
});


"use strict";

var $3B1Ky = parcelRequire("3B1Ky");

var $gTAze = parcelRequire("gTAze");

var $6LdXb = parcelRequire("6LdXb");

var $9920f843f4c80601$var$microtask = (parcelRequire("8Bw9Z"))();

var $9920f843f4c80601$var$OBSERVABLE = (parcelRequire("5i4Lz"))("observable");

var $1C6Y9 = parcelRequire("1C6Y9");

var $euAZz = parcelRequire("euAZz");

var $4UEtt = parcelRequire("4UEtt");

var $hcrCL = parcelRequire("hcrCL");

var $expki = parcelRequire("expki");

var $bXt2A = parcelRequire("bXt2A");
var $9920f843f4c80601$var$RETURN = $bXt2A.RETURN;
var $9920f843f4c80601$var$getMethod = function(fn) {
    return fn == null ? undefined : $1C6Y9(fn);
};
var $9920f843f4c80601$var$cleanupSubscription = function(subscription) {
    var cleanup = subscription._c;
    if (cleanup) {
        subscription._c = undefined;
        cleanup();
    }
};
var $9920f843f4c80601$var$subscriptionClosed = function(subscription) {
    return subscription._o === undefined;
};
var $9920f843f4c80601$var$closeSubscription = function(subscription) {
    if (!$9920f843f4c80601$var$subscriptionClosed(subscription)) {
        subscription._o = undefined;
        $9920f843f4c80601$var$cleanupSubscription(subscription);
    }
};
var $9920f843f4c80601$var$Subscription = function(observer, subscriber) {
    $euAZz(observer);
    this._c = undefined;
    this._o = observer;
    observer = new $9920f843f4c80601$var$SubscriptionObserver(this);
    try {
        var cleanup = subscriber(observer);
        var subscription = cleanup;
        if (cleanup != null) {
            if (typeof cleanup.unsubscribe === "function") cleanup = function() {
                subscription.unsubscribe();
            };
            else $1C6Y9(cleanup);
            this._c = cleanup;
        }
    } catch (e) {
        observer.error(e);
        return;
    }
    if ($9920f843f4c80601$var$subscriptionClosed(this)) $9920f843f4c80601$var$cleanupSubscription(this);
};
$9920f843f4c80601$var$Subscription.prototype = $hcrCL({}, {
    unsubscribe: function unsubscribe() {
        $9920f843f4c80601$var$closeSubscription(this);
    }
});
var $9920f843f4c80601$var$SubscriptionObserver = function(subscription) {
    this._s = subscription;
};
$9920f843f4c80601$var$SubscriptionObserver.prototype = $hcrCL({}, {
    next: function next(value) {
        var subscription = this._s;
        if (!$9920f843f4c80601$var$subscriptionClosed(subscription)) {
            var observer = subscription._o;
            try {
                var m = $9920f843f4c80601$var$getMethod(observer.next);
                if (m) return m.call(observer, value);
            } catch (e) {
                try {
                    $9920f843f4c80601$var$closeSubscription(subscription);
                } finally{
                    throw e;
                }
            }
        }
    },
    error: function error(value) {
        var subscription = this._s;
        if ($9920f843f4c80601$var$subscriptionClosed(subscription)) throw value;
        var observer = subscription._o;
        subscription._o = undefined;
        try {
            var m = $9920f843f4c80601$var$getMethod(observer.error);
            if (!m) throw value;
            value = m.call(observer, value);
        } catch (e) {
            try {
                $9920f843f4c80601$var$cleanupSubscription(subscription);
            } finally{
                throw e;
            }
        }
        $9920f843f4c80601$var$cleanupSubscription(subscription);
        return value;
    },
    complete: function complete(value) {
        var subscription = this._s;
        if (!$9920f843f4c80601$var$subscriptionClosed(subscription)) {
            var observer = subscription._o;
            subscription._o = undefined;
            try {
                var m = $9920f843f4c80601$var$getMethod(observer.complete);
                value = m ? m.call(observer, value) : undefined;
            } catch (e) {
                try {
                    $9920f843f4c80601$var$cleanupSubscription(subscription);
                } finally{
                    throw e;
                }
            }
            $9920f843f4c80601$var$cleanupSubscription(subscription);
            return value;
        }
    }
});
var $9920f843f4c80601$var$$Observable = function Observable(subscriber) {
    $4UEtt(this, $9920f843f4c80601$var$$Observable, "Observable", "_f")._f = $1C6Y9(subscriber);
};
$hcrCL($9920f843f4c80601$var$$Observable.prototype, {
    subscribe: function subscribe(observer) {
        return new $9920f843f4c80601$var$Subscription(observer, this._f);
    },
    forEach: function forEach(fn) {
        var that = this;
        return new ($6LdXb.Promise || $gTAze.Promise)(function(resolve, reject) {
            $1C6Y9(fn);
            var subscription = that.subscribe({
                next: function(value) {
                    try {
                        return fn(value);
                    } catch (e) {
                        reject(e);
                        subscription.unsubscribe();
                    }
                },
                error: reject,
                complete: resolve
            });
        });
    }
});
$hcrCL($9920f843f4c80601$var$$Observable, {
    from: function from(x) {
        var C = typeof this === "function" ? this : $9920f843f4c80601$var$$Observable;
        var method = $9920f843f4c80601$var$getMethod($euAZz(x)[$9920f843f4c80601$var$OBSERVABLE]);
        if (method) {
            var observable = $euAZz(method.call(x));
            return observable.constructor === C ? observable : new C(function(observer) {
                return observable.subscribe(observer);
            });
        }
        return new C(function(observer) {
            var done = false;
            $9920f843f4c80601$var$microtask(function() {
                if (!done) {
                    try {
                        if ($bXt2A(x, false, function(it) {
                            observer.next(it);
                            if (done) return $9920f843f4c80601$var$RETURN;
                        }) === $9920f843f4c80601$var$RETURN) return;
                    } catch (e) {
                        if (done) throw e;
                        observer.error(e);
                        return;
                    }
                    observer.complete();
                }
            });
            return function() {
                done = true;
            };
        });
    },
    of: function of() {
        for(var i = 0, l = arguments.length, items = new Array(l); i < l;)items[i] = arguments[i++];
        return new (typeof this === "function" ? this : $9920f843f4c80601$var$$Observable)(function(observer) {
            var done = false;
            $9920f843f4c80601$var$microtask(function() {
                if (!done) {
                    for(var j = 0; j < items.length; ++j){
                        observer.next(items[j]);
                        if (done) return;
                    }
                    observer.complete();
                }
            });
            return function() {
                done = true;
            };
        });
    }
});
$expki($9920f843f4c80601$var$$Observable.prototype, $9920f843f4c80601$var$OBSERVABLE, function() {
    return this;
});
$3B1Ky($3B1Ky.G, {
    Observable: $9920f843f4c80601$var$$Observable
});

(parcelRequire("epMIB"))("Observable");



var $gTAze = parcelRequire("gTAze");

var $3B1Ky = parcelRequire("3B1Ky");

var $80ab3e1724eeba41$var$slice = [].slice;
var $80ab3e1724eeba41$var$MSIE = /MSIE .\./.test($9e3bd4638ec6853a$exports); // <- dirty ie9- check
var $80ab3e1724eeba41$var$wrap = function(set) {
    return function(fn, time /* , ...args */ ) {
        var boundArgs = arguments.length > 2;
        var args = boundArgs ? $80ab3e1724eeba41$var$slice.call(arguments, 2) : false;
        return set(boundArgs ? function() {
            // eslint-disable-next-line no-new-func
            (typeof fn == "function" ? fn : Function(fn)).apply(this, args);
        } : fn, time);
    };
};
$3B1Ky($3B1Ky.G + $3B1Ky.B + $3B1Ky.F * $80ab3e1724eeba41$var$MSIE, {
    setTimeout: $80ab3e1724eeba41$var$wrap($gTAze.setTimeout),
    setInterval: $80ab3e1724eeba41$var$wrap($gTAze.setInterval)
});



var $3B1Ky = parcelRequire("3B1Ky");

var $lmMSx = parcelRequire("lmMSx");
$3B1Ky($3B1Ky.G + $3B1Ky.B, {
    setImmediate: $lmMSx.set,
    clearImmediate: $lmMSx.clear
});



var $j0YvL = parcelRequire("j0YvL");

var $isffO = parcelRequire("isffO");

var $bRGed = parcelRequire("bRGed");

var $gTAze = parcelRequire("gTAze");

var $expki = parcelRequire("expki");

var $6Zio4 = parcelRequire("6Zio4");

var $5i4Lz = parcelRequire("5i4Lz");
var $d0c53ff5d636100c$var$ITERATOR = $5i4Lz("iterator");
var $d0c53ff5d636100c$var$TO_STRING_TAG = $5i4Lz("toStringTag");
var $d0c53ff5d636100c$var$ArrayValues = $6Zio4.Array;
var $d0c53ff5d636100c$var$DOMIterables = {
    CSSRuleList: true,
    CSSStyleDeclaration: false,
    CSSValueList: false,
    ClientRectList: false,
    DOMRectList: false,
    DOMStringList: false,
    DOMTokenList: true,
    DataTransferItemList: false,
    FileList: false,
    HTMLAllCollection: false,
    HTMLCollection: false,
    HTMLFormElement: false,
    HTMLSelectElement: false,
    MediaList: true,
    MimeTypeArray: false,
    NamedNodeMap: false,
    NodeList: true,
    PaintRequestList: false,
    Plugin: false,
    PluginArray: false,
    SVGLengthList: false,
    SVGNumberList: false,
    SVGPathSegList: false,
    SVGPointList: false,
    SVGStringList: false,
    SVGTransformList: false,
    SourceBufferList: false,
    StyleSheetList: true,
    TextTrackCueList: false,
    TextTrackList: false,
    TouchList: false
};
for(var $d0c53ff5d636100c$var$collections = $isffO($d0c53ff5d636100c$var$DOMIterables), $d0c53ff5d636100c$var$i = 0; $d0c53ff5d636100c$var$i < $d0c53ff5d636100c$var$collections.length; $d0c53ff5d636100c$var$i++){
    var $d0c53ff5d636100c$var$NAME = $d0c53ff5d636100c$var$collections[$d0c53ff5d636100c$var$i];
    var $d0c53ff5d636100c$var$explicit = $d0c53ff5d636100c$var$DOMIterables[$d0c53ff5d636100c$var$NAME];
    var $d0c53ff5d636100c$var$Collection = $gTAze[$d0c53ff5d636100c$var$NAME];
    var $d0c53ff5d636100c$var$proto = $d0c53ff5d636100c$var$Collection && $d0c53ff5d636100c$var$Collection.prototype;
    var $d0c53ff5d636100c$var$key;
    if ($d0c53ff5d636100c$var$proto) {
        if (!$d0c53ff5d636100c$var$proto[$d0c53ff5d636100c$var$ITERATOR]) $expki($d0c53ff5d636100c$var$proto, $d0c53ff5d636100c$var$ITERATOR, $d0c53ff5d636100c$var$ArrayValues);
        if (!$d0c53ff5d636100c$var$proto[$d0c53ff5d636100c$var$TO_STRING_TAG]) $expki($d0c53ff5d636100c$var$proto, $d0c53ff5d636100c$var$TO_STRING_TAG, $d0c53ff5d636100c$var$NAME);
        $6Zio4[$d0c53ff5d636100c$var$NAME] = $d0c53ff5d636100c$var$ArrayValues;
        if ($d0c53ff5d636100c$var$explicit) {
            for($d0c53ff5d636100c$var$key in $j0YvL)if (!$d0c53ff5d636100c$var$proto[$d0c53ff5d636100c$var$key]) $bRGed($d0c53ff5d636100c$var$proto, $d0c53ff5d636100c$var$key, $j0YvL[$d0c53ff5d636100c$var$key], true);
        }
    }
}



$db4c231f7455e9f3$exports = (parcelRequire("6LdXb"));


var $bd4455e161b3623d$exports = {};
/**
 * Copyright (c) 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * https://raw.github.com/facebook/regenerator/master/LICENSE file. An
 * additional grant of patent rights can be found in the PATENTS file in
 * the same directory.
 */ !function(global1) {
    "use strict";
    var Op = Object.prototype;
    var hasOwn = Op.hasOwnProperty;
    var undefined; // More compressible than void 0.
    var $Symbol = typeof Symbol === "function" ? Symbol : {};
    var iteratorSymbol = $Symbol.iterator || "@@iterator";
    var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
    var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
    var inModule = true;
    var runtime = global1.regeneratorRuntime;
    if (runtime) {
        if (inModule) // If regeneratorRuntime is defined globally and we're in a module,
        // make the exports object identical to regeneratorRuntime.
        $bd4455e161b3623d$exports = runtime;
        // Don't bother evaluating the rest of this file if the runtime was
        // already defined globally.
        return;
    }
    // Define the runtime globally (as expected by generated code) as either
    // module.exports (if we're in a module) or a new, empty object.
    runtime = global1.regeneratorRuntime = inModule ? $bd4455e161b3623d$exports : {};
    function wrap(innerFn, outerFn, self1, tryLocsList) {
        // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
        var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
        var generator = Object.create(protoGenerator.prototype);
        var context = new Context(tryLocsList || []);
        // The ._invoke method unifies the implementations of the .next,
        // .throw, and .return methods.
        generator._invoke = makeInvokeMethod(innerFn, self1, context);
        return generator;
    }
    runtime.wrap = wrap;
    // Try/catch helper to minimize deoptimizations. Returns a completion
    // record like context.tryEntries[i].completion. This interface could
    // have been (and was previously) designed to take a closure to be
    // invoked without arguments, but in all the cases we care about we
    // already have an existing method we want to call, so there's no need
    // to create a new function object. We can even get away with assuming
    // the method takes exactly one argument, since that happens to be true
    // in every case, so we don't have to touch the arguments object. The
    // only additional allocation required is the completion record, which
    // has a stable shape and so hopefully should be cheap to allocate.
    function tryCatch(fn, obj, arg) {
        try {
            return {
                type: "normal",
                arg: fn.call(obj, arg)
            };
        } catch (err) {
            return {
                type: "throw",
                arg: err
            };
        }
    }
    var GenStateSuspendedStart = "suspendedStart";
    var GenStateSuspendedYield = "suspendedYield";
    var GenStateExecuting = "executing";
    var GenStateCompleted = "completed";
    // Returning this object from the innerFn has the same effect as
    // breaking out of the dispatch switch statement.
    var ContinueSentinel = {};
    // Dummy constructor functions that we use as the .constructor and
    // .constructor.prototype properties for functions that return Generator
    // objects. For full spec compliance, you may wish to configure your
    // minifier not to mangle the names of these two functions.
    function Generator() {}
    function GeneratorFunction() {}
    function GeneratorFunctionPrototype() {}
    // This is a polyfill for %IteratorPrototype% for environments that
    // don't natively support it.
    var IteratorPrototype = {};
    IteratorPrototype[iteratorSymbol] = function() {
        return this;
    };
    var getProto = Object.getPrototypeOf;
    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
    GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
    GeneratorFunctionPrototype.constructor = GeneratorFunction;
    GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";
    // Helper for defining the .next, .throw, and .return methods of the
    // Iterator interface in terms of a single ._invoke method.
    function defineIteratorMethods(prototype) {
        [
            "next",
            "throw",
            "return"
        ].forEach(function(method) {
            prototype[method] = function(arg) {
                return this._invoke(method, arg);
            };
        });
    }
    runtime.isGeneratorFunction = function(genFun) {
        var ctor = typeof genFun === "function" && genFun.constructor;
        return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
    };
    runtime.mark = function(genFun) {
        if (Object.setPrototypeOf) Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
        else {
            genFun.__proto__ = GeneratorFunctionPrototype;
            if (!(toStringTagSymbol in genFun)) genFun[toStringTagSymbol] = "GeneratorFunction";
        }
        genFun.prototype = Object.create(Gp);
        return genFun;
    };
    // Within the body of any async function, `await x` is transformed to
    // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
    // `hasOwn.call(value, "__await")` to determine if the yielded value is
    // meant to be awaited.
    runtime.awrap = function(arg) {
        return {
            __await: arg
        };
    };
    function AsyncIterator(generator) {
        function invoke(method, arg, resolve, reject) {
            var record = tryCatch(generator[method], generator, arg);
            if (record.type === "throw") reject(record.arg);
            else {
                var result = record.arg;
                var value = result.value;
                if (value && typeof value === "object" && hasOwn.call(value, "__await")) return Promise.resolve(value.__await).then(function(value) {
                    invoke("next", value, resolve, reject);
                }, function(err) {
                    invoke("throw", err, resolve, reject);
                });
                return Promise.resolve(value).then(function(unwrapped) {
                    // When a yielded Promise is resolved, its final value becomes
                    // the .value of the Promise<{value,done}> result for the
                    // current iteration. If the Promise is rejected, however, the
                    // result for this iteration will be rejected with the same
                    // reason. Note that rejections of yielded Promises are not
                    // thrown back into the generator function, as is the case
                    // when an awaited Promise is rejected. This difference in
                    // behavior between yield and await is important, because it
                    // allows the consumer to decide what to do with the yielded
                    // rejection (swallow it and continue, manually .throw it back
                    // into the generator, abandon iteration, whatever). With
                    // await, by contrast, there is no opportunity to examine the
                    // rejection reason outside the generator function, so the
                    // only option is to throw it from the await expression, and
                    // let the generator function handle the exception.
                    result.value = unwrapped;
                    resolve(result);
                }, reject);
            }
        }
        if (typeof global1.process === "object" && global1.process.domain) invoke = global1.process.domain.bind(invoke);
        var previousPromise;
        function enqueue(method, arg) {
            function callInvokeWithMethodAndArg() {
                return new Promise(function(resolve, reject) {
                    invoke(method, arg, resolve, reject);
                });
            }
            return previousPromise = // If enqueue has been called before, then we want to wait until
            // all previous Promises have been resolved before calling invoke,
            // so that results are always delivered in the correct order. If
            // enqueue has not been called before, then it is important to
            // call invoke immediately, without waiting on a callback to fire,
            // so that the async generator function has the opportunity to do
            // any necessary setup in a predictable way. This predictability
            // is why the Promise constructor synchronously invokes its
            // executor callback, and why async functions synchronously
            // execute code before the first await. Since we implement simple
            // async functions in terms of async generators, it is especially
            // important to get this right, even though it requires care.
            previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later
            // invocations of the iterator.
            callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
        }
        // Define the unified helper method that is used to implement .next,
        // .throw, and .return (see defineIteratorMethods).
        this._invoke = enqueue;
    }
    defineIteratorMethods(AsyncIterator.prototype);
    AsyncIterator.prototype[asyncIteratorSymbol] = function() {
        return this;
    };
    runtime.AsyncIterator = AsyncIterator;
    // Note that simple async functions are implemented on top of
    // AsyncIterator objects; they just return a Promise for the value of
    // the final result produced by the iterator.
    runtime.async = function(innerFn, outerFn, self1, tryLocsList) {
        var iter = new AsyncIterator(wrap(innerFn, outerFn, self1, tryLocsList));
        return runtime.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.
         : iter.next().then(function(result) {
            return result.done ? result.value : iter.next();
        });
    };
    function makeInvokeMethod(innerFn, self1, context) {
        var state = GenStateSuspendedStart;
        return function invoke(method, arg) {
            if (state === GenStateExecuting) throw new Error("Generator is already running");
            if (state === GenStateCompleted) {
                if (method === "throw") throw arg;
                // Be forgiving, per 25.3.3.3.3 of the spec:
                // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
                return doneResult();
            }
            context.method = method;
            context.arg = arg;
            while(true){
                var delegate = context.delegate;
                if (delegate) {
                    var delegateResult = maybeInvokeDelegate(delegate, context);
                    if (delegateResult) {
                        if (delegateResult === ContinueSentinel) continue;
                        return delegateResult;
                    }
                }
                if (context.method === "next") // Setting context._sent for legacy support of Babel's
                // function.sent implementation.
                context.sent = context._sent = context.arg;
                else if (context.method === "throw") {
                    if (state === GenStateSuspendedStart) {
                        state = GenStateCompleted;
                        throw context.arg;
                    }
                    context.dispatchException(context.arg);
                } else if (context.method === "return") context.abrupt("return", context.arg);
                state = GenStateExecuting;
                var record = tryCatch(innerFn, self1, context);
                if (record.type === "normal") {
                    // If an exception is thrown from innerFn, we leave state ===
                    // GenStateExecuting and loop back for another invocation.
                    state = context.done ? GenStateCompleted : GenStateSuspendedYield;
                    if (record.arg === ContinueSentinel) continue;
                    return {
                        value: record.arg,
                        done: context.done
                    };
                } else if (record.type === "throw") {
                    state = GenStateCompleted;
                    // Dispatch the exception by looping back around to the
                    // context.dispatchException(context.arg) call above.
                    context.method = "throw";
                    context.arg = record.arg;
                }
            }
        };
    }
    // Call delegate.iterator[context.method](context.arg) and handle the
    // result, either by returning a { value, done } result from the
    // delegate iterator, or by modifying context.method and context.arg,
    // setting context.delegate to null, and returning the ContinueSentinel.
    function maybeInvokeDelegate(delegate, context) {
        var method = delegate.iterator[context.method];
        if (method === undefined) {
            // A .throw or .return when the delegate iterator has no .throw
            // method always terminates the yield* loop.
            context.delegate = null;
            if (context.method === "throw") {
                if (delegate.iterator.return) {
                    // If the delegate iterator has a return method, give it a
                    // chance to clean up.
                    context.method = "return";
                    context.arg = undefined;
                    maybeInvokeDelegate(delegate, context);
                    if (context.method === "throw") // If maybeInvokeDelegate(context) changed context.method from
                    // "return" to "throw", let that override the TypeError below.
                    return ContinueSentinel;
                }
                context.method = "throw";
                context.arg = new TypeError("The iterator does not provide a 'throw' method");
            }
            return ContinueSentinel;
        }
        var record = tryCatch(method, delegate.iterator, context.arg);
        if (record.type === "throw") {
            context.method = "throw";
            context.arg = record.arg;
            context.delegate = null;
            return ContinueSentinel;
        }
        var info = record.arg;
        if (!info) {
            context.method = "throw";
            context.arg = new TypeError("iterator result is not an object");
            context.delegate = null;
            return ContinueSentinel;
        }
        if (info.done) {
            // Assign the result of the finished delegate to the temporary
            // variable specified by delegate.resultName (see delegateYield).
            context[delegate.resultName] = info.value;
            // Resume execution at the desired location (see delegateYield).
            context.next = delegate.nextLoc;
            // If context.method was "throw" but the delegate handled the
            // exception, let the outer generator proceed normally. If
            // context.method was "next", forget context.arg since it has been
            // "consumed" by the delegate iterator. If context.method was
            // "return", allow the original .return call to continue in the
            // outer generator.
            if (context.method !== "return") {
                context.method = "next";
                context.arg = undefined;
            }
        } else // Re-yield the result returned by the delegate method.
        return info;
        // The delegate iterator is finished, so forget it and continue with
        // the outer generator.
        context.delegate = null;
        return ContinueSentinel;
    }
    // Define Generator.prototype.{next,throw,return} in terms of the
    // unified ._invoke helper method.
    defineIteratorMethods(Gp);
    Gp[toStringTagSymbol] = "Generator";
    // A Generator should always return itself as the iterator object when the
    // @@iterator function is called on it. Some browsers' implementations of the
    // iterator prototype chain incorrectly implement this, causing the Generator
    // object to not be returned from this call. This ensures that doesn't happen.
    // See https://github.com/facebook/regenerator/issues/274 for more details.
    Gp[iteratorSymbol] = function() {
        return this;
    };
    Gp.toString = function() {
        return "[object Generator]";
    };
    function pushTryEntry(locs) {
        var entry = {
            tryLoc: locs[0]
        };
        if (1 in locs) entry.catchLoc = locs[1];
        if (2 in locs) {
            entry.finallyLoc = locs[2];
            entry.afterLoc = locs[3];
        }
        this.tryEntries.push(entry);
    }
    function resetTryEntry(entry) {
        var record = entry.completion || {};
        record.type = "normal";
        delete record.arg;
        entry.completion = record;
    }
    function Context(tryLocsList) {
        // The root entry object (effectively a try statement without a catch
        // or a finally block) gives us a place to store values thrown from
        // locations where there is no enclosing try statement.
        this.tryEntries = [
            {
                tryLoc: "root"
            }
        ];
        tryLocsList.forEach(pushTryEntry, this);
        this.reset(true);
    }
    runtime.keys = function(object) {
        var keys = [];
        for(var key in object)keys.push(key);
        keys.reverse();
        // Rather than returning an object with a next method, we keep
        // things simple and return the next function itself.
        return function next() {
            while(keys.length){
                var key = keys.pop();
                if (key in object) {
                    next.value = key;
                    next.done = false;
                    return next;
                }
            }
            // To avoid creating an additional object, we just hang the .value
            // and .done properties off the next function object itself. This
            // also ensures that the minifier will not anonymize the function.
            next.done = true;
            return next;
        };
    };
    function values(iterable) {
        if (iterable) {
            var iteratorMethod = iterable[iteratorSymbol];
            if (iteratorMethod) return iteratorMethod.call(iterable);
            if (typeof iterable.next === "function") return iterable;
            if (!isNaN(iterable.length)) {
                var i = -1, next = function next() {
                    while(++i < iterable.length)if (hasOwn.call(iterable, i)) {
                        next.value = iterable[i];
                        next.done = false;
                        return next;
                    }
                    next.value = undefined;
                    next.done = true;
                    return next;
                };
                return next.next = next;
            }
        }
        // Return an iterator with no values.
        return {
            next: doneResult
        };
    }
    runtime.values = values;
    function doneResult() {
        return {
            value: undefined,
            done: true
        };
    }
    Context.prototype = {
        constructor: Context,
        reset: function(skipTempReset) {
            this.prev = 0;
            this.next = 0;
            // Resetting context._sent for legacy support of Babel's
            // function.sent implementation.
            this.sent = this._sent = undefined;
            this.done = false;
            this.delegate = null;
            this.method = "next";
            this.arg = undefined;
            this.tryEntries.forEach(resetTryEntry);
            if (!skipTempReset) {
                for(var name in this)// Not sure about the optimal order of these conditions:
                if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) this[name] = undefined;
            }
        },
        stop: function() {
            this.done = true;
            var rootEntry = this.tryEntries[0];
            var rootRecord = rootEntry.completion;
            if (rootRecord.type === "throw") throw rootRecord.arg;
            return this.rval;
        },
        dispatchException: function(exception) {
            if (this.done) throw exception;
            var context = this;
            function handle(loc, caught) {
                record.type = "throw";
                record.arg = exception;
                context.next = loc;
                if (caught) {
                    // If the dispatched exception was caught by a catch block,
                    // then let that catch block handle the exception normally.
                    context.method = "next";
                    context.arg = undefined;
                }
                return !!caught;
            }
            for(var i = this.tryEntries.length - 1; i >= 0; --i){
                var entry = this.tryEntries[i];
                var record = entry.completion;
                if (entry.tryLoc === "root") // Exception thrown outside of any try block that could handle
                // it, so set the completion value of the entire function to
                // throw the exception.
                return handle("end");
                if (entry.tryLoc <= this.prev) {
                    var hasCatch = hasOwn.call(entry, "catchLoc");
                    var hasFinally = hasOwn.call(entry, "finallyLoc");
                    if (hasCatch && hasFinally) {
                        if (this.prev < entry.catchLoc) return handle(entry.catchLoc, true);
                        else if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
                    } else if (hasCatch) {
                        if (this.prev < entry.catchLoc) return handle(entry.catchLoc, true);
                    } else if (hasFinally) {
                        if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
                    } else throw new Error("try statement without catch or finally");
                }
            }
        },
        abrupt: function(type, arg) {
            for(var i = this.tryEntries.length - 1; i >= 0; --i){
                var entry = this.tryEntries[i];
                if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
                    var finallyEntry = entry;
                    break;
                }
            }
            if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) // Ignore the finally entry if control is not jumping to a
            // location outside the try/catch block.
            finallyEntry = null;
            var record = finallyEntry ? finallyEntry.completion : {};
            record.type = type;
            record.arg = arg;
            if (finallyEntry) {
                this.method = "next";
                this.next = finallyEntry.finallyLoc;
                return ContinueSentinel;
            }
            return this.complete(record);
        },
        complete: function(record, afterLoc) {
            if (record.type === "throw") throw record.arg;
            if (record.type === "break" || record.type === "continue") this.next = record.arg;
            else if (record.type === "return") {
                this.rval = this.arg = record.arg;
                this.method = "return";
                this.next = "end";
            } else if (record.type === "normal" && afterLoc) this.next = afterLoc;
            return ContinueSentinel;
        },
        finish: function(finallyLoc) {
            for(var i = this.tryEntries.length - 1; i >= 0; --i){
                var entry = this.tryEntries[i];
                if (entry.finallyLoc === finallyLoc) {
                    this.complete(entry.completion, entry.afterLoc);
                    resetTryEntry(entry);
                    return ContinueSentinel;
                }
            }
        },
        "catch": function(tryLoc) {
            for(var i = this.tryEntries.length - 1; i >= 0; --i){
                var entry = this.tryEntries[i];
                if (entry.tryLoc === tryLoc) {
                    var record = entry.completion;
                    if (record.type === "throw") {
                        var thrown = record.arg;
                        resetTryEntry(entry);
                    }
                    return thrown;
                }
            }
            // The context.catch method must only be called with a location
            // argument that corresponds to a known catch block.
            throw new Error("illegal catch attempt");
        },
        delegateYield: function(iterable, resultName, nextLoc) {
            this.delegate = {
                iterator: values(iterable),
                resultName: resultName,
                nextLoc: nextLoc
            };
            if (this.method === "next") // Deliberately forget the last sent value so that we don't
            // accidentally pass it on to the delegate.
            this.arg = undefined;
            return ContinueSentinel;
        }
    };
}(// Among the various tricks for obtaining a reference to the global
// object, this seems to be the most reliable technique that does not
// use indirect eval (which violates Content Security Policy).
typeof $parcel$global === "object" ? $parcel$global : typeof window === "object" ? window : typeof self === "object" ? self : $bd4455e161b3623d$exports);


var $4157f7e6cb8c3f98$exports = {};

var $3B1Ky = parcelRequire("3B1Ky");

var $863a7141d8e0ad47$var$$re = (parcelRequire("gH3rf"))(/[\\^$*+?.()|[\]{}]/g, "\\$&");
$3B1Ky($3B1Ky.S, "RegExp", {
    escape: function escape(it) {
        return $863a7141d8e0ad47$var$$re(it);
    }
});



var $6LdXb = parcelRequire("6LdXb");
$4157f7e6cb8c3f98$exports = $6LdXb.RegExp.escape;


if ($parcel$global._babelPolyfill) throw new Error("only one instance of babel-polyfill is allowed");
$parcel$global._babelPolyfill = true;
var $70ac6e9121c78090$var$DEFINE_PROPERTY = "defineProperty";
function $70ac6e9121c78090$var$define(O, key, value) {
    O[key] || Object[$70ac6e9121c78090$var$DEFINE_PROPERTY](O, key, {
        writable: true,
        configurable: true,
        value: value
    });
}
$70ac6e9121c78090$var$define(String.prototype, "padLeft", "".padStart);
$70ac6e9121c78090$var$define(String.prototype, "padRight", "".padEnd);
"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach(function(key) {
    [][key] && $70ac6e9121c78090$var$define(Array, key, Function.call.bind([][key]));
});


function $604c126a1467fc28$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) resolve(value);
    else Promise.resolve(value).then(_next, _throw);
}
function $604c126a1467fc28$var$_asyncToGenerator(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                $604c126a1467fc28$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                $604c126a1467fc28$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}

window.$ = window.jQuery = (parcelRequire("67fdF"));
var $de30a5582b7e1d9a$exports = {};


/*!
  * Bootstrap v4.3.1 (https://getbootstrap.com/)
  * Copyright 2011-2019 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
  */ !function(t, e) {
    e($de30a5582b7e1d9a$exports, (parcelRequire("fxHk2")), (parcelRequire("9tgSh")));
}($de30a5582b7e1d9a$exports, function(t, g, u) {
    "use strict";
    function i(t, e) {
        for(var n = 0; n < e.length; n++){
            var i = e[n];
            i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(t, i.key, i);
        }
    }
    function s(t, e, n) {
        return e && i(t.prototype, e), n && i(t, n), t;
    }
    function l(o) {
        for(var t = 1; t < arguments.length; t++){
            var r = null != arguments[t] ? arguments[t] : {}, e = Object.keys(r);
            "function" == typeof Object.getOwnPropertySymbols && (e = e.concat(Object.getOwnPropertySymbols(r).filter(function(t) {
                return Object.getOwnPropertyDescriptor(r, t).enumerable;
            }))), e.forEach(function(t) {
                var e, n, i;
                e = o, i = r[n = t], n in e ? Object.defineProperty(e, n, {
                    value: i,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[n] = i;
            });
        }
        return o;
    }
    g = g && g.hasOwnProperty("default") ? g.default : g, u = u && u.hasOwnProperty("default") ? u.default : u;
    var e = "transitionend";
    function n(t) {
        var e = this, n = !1;
        return g(this).one(_.TRANSITION_END, function() {
            n = !0;
        }), setTimeout(function() {
            n || _.triggerTransitionEnd(e);
        }, t), this;
    }
    var _ = {
        TRANSITION_END: "bsTransitionEnd",
        getUID: function(t) {
            for(; t += ~~(1e6 * Math.random()), document.getElementById(t););
            return t;
        },
        getSelectorFromElement: function(t) {
            var e = t.getAttribute("data-target");
            if (!e || "#" === e) {
                var n = t.getAttribute("href");
                e = n && "#" !== n ? n.trim() : "";
            }
            try {
                return document.querySelector(e) ? e : null;
            } catch (t1) {
                return null;
            }
        },
        getTransitionDurationFromElement: function(t) {
            if (!t) return 0;
            var e = g(t).css("transition-duration"), n = g(t).css("transition-delay"), i = parseFloat(e), o = parseFloat(n);
            return i || o ? (e = e.split(",")[0], n = n.split(",")[0], 1e3 * (parseFloat(e) + parseFloat(n))) : 0;
        },
        reflow: function(t) {
            return t.offsetHeight;
        },
        triggerTransitionEnd: function(t) {
            g(t).trigger(e);
        },
        supportsTransitionEnd: function() {
            return Boolean(e);
        },
        isElement: function(t) {
            return (t[0] || t).nodeType;
        },
        typeCheckConfig: function(t, e, n) {
            for(var i in n)if (Object.prototype.hasOwnProperty.call(n, i)) {
                var o = n[i], r = e[i], s = r && _.isElement(r) ? "element" : (a = r, ({}).toString.call(a).match(/\s([a-z]+)/i)[1].toLowerCase());
                if (!new RegExp(o).test(s)) throw new Error(t.toUpperCase() + ': Option "' + i + '" provided type "' + s + '" but expected type "' + o + '".');
            }
            var a;
        },
        findShadowRoot: function(t) {
            if (!document.documentElement.attachShadow) return null;
            if ("function" != typeof t.getRootNode) return t instanceof ShadowRoot ? t : t.parentNode ? _.findShadowRoot(t.parentNode) : null;
            var e = t.getRootNode();
            return e instanceof ShadowRoot ? e : null;
        }
    };
    g.fn.emulateTransitionEnd = n, g.event.special[_.TRANSITION_END] = {
        bindType: e,
        delegateType: e,
        handle: function(t) {
            if (g(t.target).is(this)) return t.handleObj.handler.apply(this, arguments);
        }
    };
    var o = "alert", r = "bs.alert", a = "." + r, c = g.fn[o], h = {
        CLOSE: "close" + a,
        CLOSED: "closed" + a,
        CLICK_DATA_API: "click" + a + ".data-api"
    }, f = "alert", d = "fade", m = "show", p = function() {
        function i(t) {
            this._element = t;
        }
        var t = i.prototype;
        return t.close = function(t) {
            var e = this._element;
            t && (e = this._getRootElement(t)), this._triggerCloseEvent(e).isDefaultPrevented() || this._removeElement(e);
        }, t.dispose = function() {
            g.removeData(this._element, r), this._element = null;
        }, t._getRootElement = function(t) {
            var e = _.getSelectorFromElement(t), n = !1;
            return e && (n = document.querySelector(e)), n || (n = g(t).closest("." + f)[0]), n;
        }, t._triggerCloseEvent = function(t) {
            var e = g.Event(h.CLOSE);
            return g(t).trigger(e), e;
        }, t._removeElement = function(e) {
            var n = this;
            if (g(e).removeClass(m), g(e).hasClass(d)) {
                var t = _.getTransitionDurationFromElement(e);
                g(e).one(_.TRANSITION_END, function(t) {
                    return n._destroyElement(e, t);
                }).emulateTransitionEnd(t);
            } else this._destroyElement(e);
        }, t._destroyElement = function(t) {
            g(t).detach().trigger(h.CLOSED).remove();
        }, i._jQueryInterface = function(n) {
            return this.each(function() {
                var t = g(this), e = t.data(r);
                e || (e = new i(this), t.data(r, e)), "close" === n && e[n](this);
            });
        }, i._handleDismiss = function(e) {
            return function(t) {
                t && t.preventDefault(), e.close(this);
            };
        }, s(i, null, [
            {
                key: "VERSION",
                get: function() {
                    return "4.3.1";
                }
            }
        ]), i;
    }();
    g(document).on(h.CLICK_DATA_API, '[data-dismiss="alert"]', p._handleDismiss(new p)), g.fn[o] = p._jQueryInterface, g.fn[o].Constructor = p, g.fn[o].noConflict = function() {
        return g.fn[o] = c, p._jQueryInterface;
    };
    var v = "button", y = "bs.button", E = "." + y, C = ".data-api", T = g.fn[v], S = "active", b = "btn", I = "focus", D = '[data-toggle^="button"]', w = '[data-toggle="buttons"]', A = 'input:not([type="hidden"])', N = ".active", O = ".btn", k = {
        CLICK_DATA_API: "click" + E + C,
        FOCUS_BLUR_DATA_API: "focus" + E + C + " blur" + E + C
    }, P = function() {
        function n(t) {
            this._element = t;
        }
        var t = n.prototype;
        return t.toggle = function() {
            var t = !0, e = !0, n = g(this._element).closest(w)[0];
            if (n) {
                var i = this._element.querySelector(A);
                if (i) {
                    if ("radio" === i.type) {
                        if (i.checked && this._element.classList.contains(S)) t = !1;
                        else {
                            var o = n.querySelector(N);
                            o && g(o).removeClass(S);
                        }
                    }
                    if (t) {
                        if (i.hasAttribute("disabled") || n.hasAttribute("disabled") || i.classList.contains("disabled") || n.classList.contains("disabled")) return;
                        i.checked = !this._element.classList.contains(S), g(i).trigger("change");
                    }
                    i.focus(), e = !1;
                }
            }
            e && this._element.setAttribute("aria-pressed", !this._element.classList.contains(S)), t && g(this._element).toggleClass(S);
        }, t.dispose = function() {
            g.removeData(this._element, y), this._element = null;
        }, n._jQueryInterface = function(e) {
            return this.each(function() {
                var t = g(this).data(y);
                t || (t = new n(this), g(this).data(y, t)), "toggle" === e && t[e]();
            });
        }, s(n, null, [
            {
                key: "VERSION",
                get: function() {
                    return "4.3.1";
                }
            }
        ]), n;
    }();
    g(document).on(k.CLICK_DATA_API, D, function(t) {
        t.preventDefault();
        var e = t.target;
        g(e).hasClass(b) || (e = g(e).closest(O)), P._jQueryInterface.call(g(e), "toggle");
    }).on(k.FOCUS_BLUR_DATA_API, D, function(t) {
        var e = g(t.target).closest(O)[0];
        g(e).toggleClass(I, /^focus(in)?$/.test(t.type));
    }), g.fn[v] = P._jQueryInterface, g.fn[v].Constructor = P, g.fn[v].noConflict = function() {
        return g.fn[v] = T, P._jQueryInterface;
    };
    var L = "carousel", j = "bs.carousel", H = "." + j, R = ".data-api", x = g.fn[L], F = {
        interval: 5e3,
        keyboard: !0,
        slide: !1,
        pause: "hover",
        wrap: !0,
        touch: !0
    }, U = {
        interval: "(number|boolean)",
        keyboard: "boolean",
        slide: "(boolean|string)",
        pause: "(string|boolean)",
        wrap: "boolean",
        touch: "boolean"
    }, W = "next", q = "prev", M = "left", K = "right", Q = {
        SLIDE: "slide" + H,
        SLID: "slid" + H,
        KEYDOWN: "keydown" + H,
        MOUSEENTER: "mouseenter" + H,
        MOUSELEAVE: "mouseleave" + H,
        TOUCHSTART: "touchstart" + H,
        TOUCHMOVE: "touchmove" + H,
        TOUCHEND: "touchend" + H,
        POINTERDOWN: "pointerdown" + H,
        POINTERUP: "pointerup" + H,
        DRAG_START: "dragstart" + H,
        LOAD_DATA_API: "load" + H + R,
        CLICK_DATA_API: "click" + H + R
    }, B = "carousel", V = "active", Y = "slide", z = "carousel-item-right", X = "carousel-item-left", $ = "carousel-item-next", G = "carousel-item-prev", J = "pointer-event", Z = ".active", tt = ".active.carousel-item", et = ".carousel-item", nt = ".carousel-item img", it = ".carousel-item-next, .carousel-item-prev", ot = ".carousel-indicators", rt = "[data-slide], [data-slide-to]", st = '[data-ride="carousel"]', at = {
        TOUCH: "touch",
        PEN: "pen"
    }, lt = function() {
        function r(t, e) {
            this._items = null, this._interval = null, this._activeElement = null, this._isPaused = !1, this._isSliding = !1, this.touchTimeout = null, this.touchStartX = 0, this.touchDeltaX = 0, this._config = this._getConfig(e), this._element = t, this._indicatorsElement = this._element.querySelector(ot), this._touchSupported = "ontouchstart" in document.documentElement || 0 < navigator.maxTouchPoints, this._pointerEvent = Boolean(window.PointerEvent || window.MSPointerEvent), this._addEventListeners();
        }
        var t = r.prototype;
        return t.next = function() {
            this._isSliding || this._slide(W);
        }, t.nextWhenVisible = function() {
            !document.hidden && g(this._element).is(":visible") && "hidden" !== g(this._element).css("visibility") && this.next();
        }, t.prev = function() {
            this._isSliding || this._slide(q);
        }, t.pause = function(t) {
            t || (this._isPaused = !0), this._element.querySelector(it) && (_.triggerTransitionEnd(this._element), this.cycle(!0)), clearInterval(this._interval), this._interval = null;
        }, t.cycle = function(t) {
            t || (this._isPaused = !1), this._interval && (clearInterval(this._interval), this._interval = null), this._config.interval && !this._isPaused && (this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval));
        }, t.to = function(t) {
            var e = this;
            this._activeElement = this._element.querySelector(tt);
            var n = this._getItemIndex(this._activeElement);
            if (!(t > this._items.length - 1 || t < 0)) {
                if (this._isSliding) g(this._element).one(Q.SLID, function() {
                    return e.to(t);
                });
                else {
                    if (n === t) return this.pause(), void this.cycle();
                    var i = n < t ? W : q;
                    this._slide(i, this._items[t]);
                }
            }
        }, t.dispose = function() {
            g(this._element).off(H), g.removeData(this._element, j), this._items = null, this._config = null, this._element = null, this._interval = null, this._isPaused = null, this._isSliding = null, this._activeElement = null, this._indicatorsElement = null;
        }, t._getConfig = function(t) {
            return t = l({}, F, t), _.typeCheckConfig(L, t, U), t;
        }, t._handleSwipe = function() {
            var t = Math.abs(this.touchDeltaX);
            if (!(t <= 40)) {
                var e = t / this.touchDeltaX;
                0 < e && this.prev(), e < 0 && this.next();
            }
        }, t._addEventListeners = function() {
            var e = this;
            this._config.keyboard && g(this._element).on(Q.KEYDOWN, function(t) {
                return e._keydown(t);
            }), "hover" === this._config.pause && g(this._element).on(Q.MOUSEENTER, function(t) {
                return e.pause(t);
            }).on(Q.MOUSELEAVE, function(t) {
                return e.cycle(t);
            }), this._config.touch && this._addTouchEventListeners();
        }, t._addTouchEventListeners = function() {
            var n = this;
            if (this._touchSupported) {
                var e = function(t) {
                    n._pointerEvent && at[t.originalEvent.pointerType.toUpperCase()] ? n.touchStartX = t.originalEvent.clientX : n._pointerEvent || (n.touchStartX = t.originalEvent.touches[0].clientX);
                }, i = function(t) {
                    n._pointerEvent && at[t.originalEvent.pointerType.toUpperCase()] && (n.touchDeltaX = t.originalEvent.clientX - n.touchStartX), n._handleSwipe(), "hover" === n._config.pause && (n.pause(), n.touchTimeout && clearTimeout(n.touchTimeout), n.touchTimeout = setTimeout(function(t) {
                        return n.cycle(t);
                    }, 500 + n._config.interval));
                };
                g(this._element.querySelectorAll(nt)).on(Q.DRAG_START, function(t) {
                    return t.preventDefault();
                }), this._pointerEvent ? (g(this._element).on(Q.POINTERDOWN, function(t) {
                    return e(t);
                }), g(this._element).on(Q.POINTERUP, function(t) {
                    return i(t);
                }), this._element.classList.add(J)) : (g(this._element).on(Q.TOUCHSTART, function(t) {
                    return e(t);
                }), g(this._element).on(Q.TOUCHMOVE, function(t) {
                    var e;
                    (e = t).originalEvent.touches && 1 < e.originalEvent.touches.length ? n.touchDeltaX = 0 : n.touchDeltaX = e.originalEvent.touches[0].clientX - n.touchStartX;
                }), g(this._element).on(Q.TOUCHEND, function(t) {
                    return i(t);
                }));
            }
        }, t._keydown = function(t) {
            if (!/input|textarea/i.test(t.target.tagName)) switch(t.which){
                case 37:
                    t.preventDefault(), this.prev();
                    break;
                case 39:
                    t.preventDefault(), this.next();
            }
        }, t._getItemIndex = function(t) {
            return this._items = t && t.parentNode ? [].slice.call(t.parentNode.querySelectorAll(et)) : [], this._items.indexOf(t);
        }, t._getItemByDirection = function(t, e) {
            var n = t === W, i = t === q, o = this._getItemIndex(e), r = this._items.length - 1;
            if ((i && 0 === o || n && o === r) && !this._config.wrap) return e;
            var s = (o + (t === q ? -1 : 1)) % this._items.length;
            return -1 === s ? this._items[this._items.length - 1] : this._items[s];
        }, t._triggerSlideEvent = function(t, e) {
            var n = this._getItemIndex(t), i = this._getItemIndex(this._element.querySelector(tt)), o = g.Event(Q.SLIDE, {
                relatedTarget: t,
                direction: e,
                from: i,
                to: n
            });
            return g(this._element).trigger(o), o;
        }, t._setActiveIndicatorElement = function(t) {
            if (this._indicatorsElement) {
                var e = [].slice.call(this._indicatorsElement.querySelectorAll(Z));
                g(e).removeClass(V);
                var n = this._indicatorsElement.children[this._getItemIndex(t)];
                n && g(n).addClass(V);
            }
        }, t._slide = function(t, e) {
            var n, i, o, r = this, s = this._element.querySelector(tt), a = this._getItemIndex(s), l = e || s && this._getItemByDirection(t, s), c = this._getItemIndex(l), h = Boolean(this._interval);
            if (o = t === W ? (n = X, i = $, M) : (n = z, i = G, K), l && g(l).hasClass(V)) this._isSliding = !1;
            else if (!this._triggerSlideEvent(l, o).isDefaultPrevented() && s && l) {
                this._isSliding = !0, h && this.pause(), this._setActiveIndicatorElement(l);
                var u = g.Event(Q.SLID, {
                    relatedTarget: l,
                    direction: o,
                    from: a,
                    to: c
                });
                if (g(this._element).hasClass(Y)) {
                    g(l).addClass(i), _.reflow(l), g(s).addClass(n), g(l).addClass(n);
                    var f = parseInt(l.getAttribute("data-interval"), 10);
                    this._config.interval = f ? (this._config.defaultInterval = this._config.defaultInterval || this._config.interval, f) : this._config.defaultInterval || this._config.interval;
                    var d = _.getTransitionDurationFromElement(s);
                    g(s).one(_.TRANSITION_END, function() {
                        g(l).removeClass(n + " " + i).addClass(V), g(s).removeClass(V + " " + i + " " + n), r._isSliding = !1, setTimeout(function() {
                            return g(r._element).trigger(u);
                        }, 0);
                    }).emulateTransitionEnd(d);
                } else g(s).removeClass(V), g(l).addClass(V), this._isSliding = !1, g(this._element).trigger(u);
                h && this.cycle();
            }
        }, r._jQueryInterface = function(i) {
            return this.each(function() {
                var t = g(this).data(j), e = l({}, F, g(this).data());
                "object" == typeof i && (e = l({}, e, i));
                var n = "string" == typeof i ? i : e.slide;
                if (t || (t = new r(this, e), g(this).data(j, t)), "number" == typeof i) t.to(i);
                else if ("string" == typeof n) {
                    if ("undefined" == typeof t[n]) throw new TypeError('No method named "' + n + '"');
                    t[n]();
                } else e.interval && e.ride && (t.pause(), t.cycle());
            });
        }, r._dataApiClickHandler = function(t) {
            var e = _.getSelectorFromElement(this);
            if (e) {
                var n = g(e)[0];
                if (n && g(n).hasClass(B)) {
                    var i = l({}, g(n).data(), g(this).data()), o = this.getAttribute("data-slide-to");
                    o && (i.interval = !1), r._jQueryInterface.call(g(n), i), o && g(n).data(j).to(o), t.preventDefault();
                }
            }
        }, s(r, null, [
            {
                key: "VERSION",
                get: function() {
                    return "4.3.1";
                }
            },
            {
                key: "Default",
                get: function() {
                    return F;
                }
            }
        ]), r;
    }();
    g(document).on(Q.CLICK_DATA_API, rt, lt._dataApiClickHandler), g(window).on(Q.LOAD_DATA_API, function() {
        for(var t = [].slice.call(document.querySelectorAll(st)), e = 0, n = t.length; e < n; e++){
            var i = g(t[e]);
            lt._jQueryInterface.call(i, i.data());
        }
    }), g.fn[L] = lt._jQueryInterface, g.fn[L].Constructor = lt, g.fn[L].noConflict = function() {
        return g.fn[L] = x, lt._jQueryInterface;
    };
    var ct = "collapse", ht = "bs.collapse", ut = "." + ht, ft = g.fn[ct], dt = {
        toggle: !0,
        parent: ""
    }, gt = {
        toggle: "boolean",
        parent: "(string|element)"
    }, _t = {
        SHOW: "show" + ut,
        SHOWN: "shown" + ut,
        HIDE: "hide" + ut,
        HIDDEN: "hidden" + ut,
        CLICK_DATA_API: "click" + ut + ".data-api"
    }, mt = "show", pt = "collapse", vt = "collapsing", yt = "collapsed", Et = "width", Ct = "height", Tt = ".show, .collapsing", St = '[data-toggle="collapse"]', bt = function() {
        function a(e, t) {
            this._isTransitioning = !1, this._element = e, this._config = this._getConfig(t), this._triggerArray = [].slice.call(document.querySelectorAll('[data-toggle="collapse"][href="#' + e.id + '"],[data-toggle="collapse"][data-target="#' + e.id + '"]'));
            for(var n = [].slice.call(document.querySelectorAll(St)), i = 0, o = n.length; i < o; i++){
                var r = n[i], s = _.getSelectorFromElement(r), a = [].slice.call(document.querySelectorAll(s)).filter(function(t) {
                    return t === e;
                });
                null !== s && 0 < a.length && (this._selector = s, this._triggerArray.push(r));
            }
            this._parent = this._config.parent ? this._getParent() : null, this._config.parent || this._addAriaAndCollapsedClass(this._element, this._triggerArray), this._config.toggle && this.toggle();
        }
        var t = a.prototype;
        return t.toggle = function() {
            g(this._element).hasClass(mt) ? this.hide() : this.show();
        }, t.show = function() {
            var t, e, n = this;
            if (!this._isTransitioning && !g(this._element).hasClass(mt) && (this._parent && 0 === (t = [].slice.call(this._parent.querySelectorAll(Tt)).filter(function(t) {
                return "string" == typeof n._config.parent ? t.getAttribute("data-parent") === n._config.parent : t.classList.contains(pt);
            })).length && (t = null), !(t && (e = g(t).not(this._selector).data(ht)) && e._isTransitioning))) {
                var i = g.Event(_t.SHOW);
                if (g(this._element).trigger(i), !i.isDefaultPrevented()) {
                    t && (a._jQueryInterface.call(g(t).not(this._selector), "hide"), e || g(t).data(ht, null));
                    var o = this._getDimension();
                    g(this._element).removeClass(pt).addClass(vt), this._element.style[o] = 0, this._triggerArray.length && g(this._triggerArray).removeClass(yt).attr("aria-expanded", !0), this.setTransitioning(!0);
                    var r = "scroll" + (o[0].toUpperCase() + o.slice(1)), s = _.getTransitionDurationFromElement(this._element);
                    g(this._element).one(_.TRANSITION_END, function() {
                        g(n._element).removeClass(vt).addClass(pt).addClass(mt), n._element.style[o] = "", n.setTransitioning(!1), g(n._element).trigger(_t.SHOWN);
                    }).emulateTransitionEnd(s), this._element.style[o] = this._element[r] + "px";
                }
            }
        }, t.hide = function() {
            var t = this;
            if (!this._isTransitioning && g(this._element).hasClass(mt)) {
                var e = g.Event(_t.HIDE);
                if (g(this._element).trigger(e), !e.isDefaultPrevented()) {
                    var n = this._getDimension();
                    this._element.style[n] = this._element.getBoundingClientRect()[n] + "px", _.reflow(this._element), g(this._element).addClass(vt).removeClass(pt).removeClass(mt);
                    var i = this._triggerArray.length;
                    if (0 < i) for(var o = 0; o < i; o++){
                        var r = this._triggerArray[o], s = _.getSelectorFromElement(r);
                        if (null !== s) g([].slice.call(document.querySelectorAll(s))).hasClass(mt) || g(r).addClass(yt).attr("aria-expanded", !1);
                    }
                    this.setTransitioning(!0);
                    this._element.style[n] = "";
                    var a = _.getTransitionDurationFromElement(this._element);
                    g(this._element).one(_.TRANSITION_END, function() {
                        t.setTransitioning(!1), g(t._element).removeClass(vt).addClass(pt).trigger(_t.HIDDEN);
                    }).emulateTransitionEnd(a);
                }
            }
        }, t.setTransitioning = function(t) {
            this._isTransitioning = t;
        }, t.dispose = function() {
            g.removeData(this._element, ht), this._config = null, this._parent = null, this._element = null, this._triggerArray = null, this._isTransitioning = null;
        }, t._getConfig = function(t) {
            return (t = l({}, dt, t)).toggle = Boolean(t.toggle), _.typeCheckConfig(ct, t, gt), t;
        }, t._getDimension = function() {
            return g(this._element).hasClass(Et) ? Et : Ct;
        }, t._getParent = function() {
            var t, n = this;
            _.isElement(this._config.parent) ? (t = this._config.parent, "undefined" != typeof this._config.parent.jquery && (t = this._config.parent[0])) : t = document.querySelector(this._config.parent);
            var e = '[data-toggle="collapse"][data-parent="' + this._config.parent + '"]', i = [].slice.call(t.querySelectorAll(e));
            return g(i).each(function(t, e) {
                n._addAriaAndCollapsedClass(a._getTargetFromElement(e), [
                    e
                ]);
            }), t;
        }, t._addAriaAndCollapsedClass = function(t, e) {
            var n = g(t).hasClass(mt);
            e.length && g(e).toggleClass(yt, !n).attr("aria-expanded", n);
        }, a._getTargetFromElement = function(t) {
            var e = _.getSelectorFromElement(t);
            return e ? document.querySelector(e) : null;
        }, a._jQueryInterface = function(i) {
            return this.each(function() {
                var t = g(this), e = t.data(ht), n = l({}, dt, t.data(), "object" == typeof i && i ? i : {});
                if (!e && n.toggle && /show|hide/.test(i) && (n.toggle = !1), e || (e = new a(this, n), t.data(ht, e)), "string" == typeof i) {
                    if ("undefined" == typeof e[i]) throw new TypeError('No method named "' + i + '"');
                    e[i]();
                }
            });
        }, s(a, null, [
            {
                key: "VERSION",
                get: function() {
                    return "4.3.1";
                }
            },
            {
                key: "Default",
                get: function() {
                    return dt;
                }
            }
        ]), a;
    }();
    g(document).on(_t.CLICK_DATA_API, St, function(t) {
        "A" === t.currentTarget.tagName && t.preventDefault();
        var n = g(this), e = _.getSelectorFromElement(this), i = [].slice.call(document.querySelectorAll(e));
        g(i).each(function() {
            var t = g(this), e = t.data(ht) ? "toggle" : n.data();
            bt._jQueryInterface.call(t, e);
        });
    }), g.fn[ct] = bt._jQueryInterface, g.fn[ct].Constructor = bt, g.fn[ct].noConflict = function() {
        return g.fn[ct] = ft, bt._jQueryInterface;
    };
    var It = "dropdown", Dt = "bs.dropdown", wt = "." + Dt, At = ".data-api", Nt = g.fn[It], Ot = new RegExp("38|40|27"), kt = {
        HIDE: "hide" + wt,
        HIDDEN: "hidden" + wt,
        SHOW: "show" + wt,
        SHOWN: "shown" + wt,
        CLICK: "click" + wt,
        CLICK_DATA_API: "click" + wt + At,
        KEYDOWN_DATA_API: "keydown" + wt + At,
        KEYUP_DATA_API: "keyup" + wt + At
    }, Pt = "disabled", Lt = "show", jt = "dropup", Ht = "dropright", Rt = "dropleft", xt = "dropdown-menu-right", Ft = "position-static", Ut = '[data-toggle="dropdown"]', Wt = ".dropdown form", qt = ".dropdown-menu", Mt = ".navbar-nav", Kt = ".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)", Qt = "top-start", Bt = "top-end", Vt = "bottom-start", Yt = "bottom-end", zt = "right-start", Xt = "left-start", $t = {
        offset: 0,
        flip: !0,
        boundary: "scrollParent",
        reference: "toggle",
        display: "dynamic"
    }, Gt = {
        offset: "(number|string|function)",
        flip: "boolean",
        boundary: "(string|element)",
        reference: "(string|element)",
        display: "string"
    }, Jt = function() {
        function c(t, e) {
            this._element = t, this._popper = null, this._config = this._getConfig(e), this._menu = this._getMenuElement(), this._inNavbar = this._detectNavbar(), this._addEventListeners();
        }
        var t = c.prototype;
        return t.toggle = function() {
            if (!this._element.disabled && !g(this._element).hasClass(Pt)) {
                var t = c._getParentFromElement(this._element), e = g(this._menu).hasClass(Lt);
                if (c._clearMenus(), !e) {
                    var n = {
                        relatedTarget: this._element
                    }, i = g.Event(kt.SHOW, n);
                    if (g(t).trigger(i), !i.isDefaultPrevented()) {
                        if (!this._inNavbar) {
                            if ("undefined" == typeof u) throw new TypeError("Bootstrap's dropdowns require Popper.js (https://popper.js.org/)");
                            var o = this._element;
                            "parent" === this._config.reference ? o = t : _.isElement(this._config.reference) && (o = this._config.reference, "undefined" != typeof this._config.reference.jquery && (o = this._config.reference[0])), "scrollParent" !== this._config.boundary && g(t).addClass(Ft), this._popper = new u(o, this._menu, this._getPopperConfig());
                        }
                        "ontouchstart" in document.documentElement && 0 === g(t).closest(Mt).length && g(document.body).children().on("mouseover", null, g.noop), this._element.focus(), this._element.setAttribute("aria-expanded", !0), g(this._menu).toggleClass(Lt), g(t).toggleClass(Lt).trigger(g.Event(kt.SHOWN, n));
                    }
                }
            }
        }, t.show = function() {
            if (!(this._element.disabled || g(this._element).hasClass(Pt) || g(this._menu).hasClass(Lt))) {
                var t = {
                    relatedTarget: this._element
                }, e = g.Event(kt.SHOW, t), n = c._getParentFromElement(this._element);
                g(n).trigger(e), e.isDefaultPrevented() || (g(this._menu).toggleClass(Lt), g(n).toggleClass(Lt).trigger(g.Event(kt.SHOWN, t)));
            }
        }, t.hide = function() {
            if (!this._element.disabled && !g(this._element).hasClass(Pt) && g(this._menu).hasClass(Lt)) {
                var t = {
                    relatedTarget: this._element
                }, e = g.Event(kt.HIDE, t), n = c._getParentFromElement(this._element);
                g(n).trigger(e), e.isDefaultPrevented() || (g(this._menu).toggleClass(Lt), g(n).toggleClass(Lt).trigger(g.Event(kt.HIDDEN, t)));
            }
        }, t.dispose = function() {
            g.removeData(this._element, Dt), g(this._element).off(wt), this._element = null, (this._menu = null) !== this._popper && (this._popper.destroy(), this._popper = null);
        }, t.update = function() {
            this._inNavbar = this._detectNavbar(), null !== this._popper && this._popper.scheduleUpdate();
        }, t._addEventListeners = function() {
            var e = this;
            g(this._element).on(kt.CLICK, function(t) {
                t.preventDefault(), t.stopPropagation(), e.toggle();
            });
        }, t._getConfig = function(t) {
            return t = l({}, this.constructor.Default, g(this._element).data(), t), _.typeCheckConfig(It, t, this.constructor.DefaultType), t;
        }, t._getMenuElement = function() {
            if (!this._menu) {
                var t = c._getParentFromElement(this._element);
                t && (this._menu = t.querySelector(qt));
            }
            return this._menu;
        }, t._getPlacement = function() {
            var t = g(this._element.parentNode), e = Vt;
            return t.hasClass(jt) ? (e = Qt, g(this._menu).hasClass(xt) && (e = Bt)) : t.hasClass(Ht) ? e = zt : t.hasClass(Rt) ? e = Xt : g(this._menu).hasClass(xt) && (e = Yt), e;
        }, t._detectNavbar = function() {
            return 0 < g(this._element).closest(".navbar").length;
        }, t._getOffset = function() {
            var e = this, t = {};
            return "function" == typeof this._config.offset ? t.fn = function(t) {
                return t.offsets = l({}, t.offsets, e._config.offset(t.offsets, e._element) || {}), t;
            } : t.offset = this._config.offset, t;
        }, t._getPopperConfig = function() {
            var t = {
                placement: this._getPlacement(),
                modifiers: {
                    offset: this._getOffset(),
                    flip: {
                        enabled: this._config.flip
                    },
                    preventOverflow: {
                        boundariesElement: this._config.boundary
                    }
                }
            };
            return "static" === this._config.display && (t.modifiers.applyStyle = {
                enabled: !1
            }), t;
        }, c._jQueryInterface = function(e) {
            return this.each(function() {
                var t = g(this).data(Dt);
                if (t || (t = new c(this, "object" == typeof e ? e : null), g(this).data(Dt, t)), "string" == typeof e) {
                    if ("undefined" == typeof t[e]) throw new TypeError('No method named "' + e + '"');
                    t[e]();
                }
            });
        }, c._clearMenus = function(t) {
            if (!t || 3 !== t.which && ("keyup" !== t.type || 9 === t.which)) for(var e = [].slice.call(document.querySelectorAll(Ut)), n = 0, i = e.length; n < i; n++){
                var o = c._getParentFromElement(e[n]), r = g(e[n]).data(Dt), s = {
                    relatedTarget: e[n]
                };
                if (t && "click" === t.type && (s.clickEvent = t), r) {
                    var a = r._menu;
                    if (g(o).hasClass(Lt) && !(t && ("click" === t.type && /input|textarea/i.test(t.target.tagName) || "keyup" === t.type && 9 === t.which) && g.contains(o, t.target))) {
                        var l = g.Event(kt.HIDE, s);
                        g(o).trigger(l), l.isDefaultPrevented() || ("ontouchstart" in document.documentElement && g(document.body).children().off("mouseover", null, g.noop), e[n].setAttribute("aria-expanded", "false"), g(a).removeClass(Lt), g(o).removeClass(Lt).trigger(g.Event(kt.HIDDEN, s)));
                    }
                }
            }
        }, c._getParentFromElement = function(t) {
            var e, n = _.getSelectorFromElement(t);
            return n && (e = document.querySelector(n)), e || t.parentNode;
        }, c._dataApiKeydownHandler = function(t) {
            if ((/input|textarea/i.test(t.target.tagName) ? !(32 === t.which || 27 !== t.which && (40 !== t.which && 38 !== t.which || g(t.target).closest(qt).length)) : Ot.test(t.which)) && (t.preventDefault(), t.stopPropagation(), !this.disabled && !g(this).hasClass(Pt))) {
                var e = c._getParentFromElement(this), n = g(e).hasClass(Lt);
                if (n && (!n || 27 !== t.which && 32 !== t.which)) {
                    var i = [].slice.call(e.querySelectorAll(Kt));
                    if (0 !== i.length) {
                        var o = i.indexOf(t.target);
                        38 === t.which && 0 < o && o--, 40 === t.which && o < i.length - 1 && o++, o < 0 && (o = 0), i[o].focus();
                    }
                } else {
                    if (27 === t.which) {
                        var r = e.querySelector(Ut);
                        g(r).trigger("focus");
                    }
                    g(this).trigger("click");
                }
            }
        }, s(c, null, [
            {
                key: "VERSION",
                get: function() {
                    return "4.3.1";
                }
            },
            {
                key: "Default",
                get: function() {
                    return $t;
                }
            },
            {
                key: "DefaultType",
                get: function() {
                    return Gt;
                }
            }
        ]), c;
    }();
    g(document).on(kt.KEYDOWN_DATA_API, Ut, Jt._dataApiKeydownHandler).on(kt.KEYDOWN_DATA_API, qt, Jt._dataApiKeydownHandler).on(kt.CLICK_DATA_API + " " + kt.KEYUP_DATA_API, Jt._clearMenus).on(kt.CLICK_DATA_API, Ut, function(t) {
        t.preventDefault(), t.stopPropagation(), Jt._jQueryInterface.call(g(this), "toggle");
    }).on(kt.CLICK_DATA_API, Wt, function(t) {
        t.stopPropagation();
    }), g.fn[It] = Jt._jQueryInterface, g.fn[It].Constructor = Jt, g.fn[It].noConflict = function() {
        return g.fn[It] = Nt, Jt._jQueryInterface;
    };
    var Zt = "modal", te = "bs.modal", ee = "." + te, ne = g.fn[Zt], ie = {
        backdrop: !0,
        keyboard: !0,
        focus: !0,
        show: !0
    }, oe = {
        backdrop: "(boolean|string)",
        keyboard: "boolean",
        focus: "boolean",
        show: "boolean"
    }, re = {
        HIDE: "hide" + ee,
        HIDDEN: "hidden" + ee,
        SHOW: "show" + ee,
        SHOWN: "shown" + ee,
        FOCUSIN: "focusin" + ee,
        RESIZE: "resize" + ee,
        CLICK_DISMISS: "click.dismiss" + ee,
        KEYDOWN_DISMISS: "keydown.dismiss" + ee,
        MOUSEUP_DISMISS: "mouseup.dismiss" + ee,
        MOUSEDOWN_DISMISS: "mousedown.dismiss" + ee,
        CLICK_DATA_API: "click" + ee + ".data-api"
    }, se = "modal-dialog-scrollable", ae = "modal-scrollbar-measure", le = "modal-backdrop", ce = "modal-open", he = "fade", ue = "show", fe = ".modal-dialog", de = ".modal-body", ge = '[data-toggle="modal"]', _e = '[data-dismiss="modal"]', me = ".fixed-top, .fixed-bottom, .is-fixed, .sticky-top", pe = ".sticky-top", ve = function() {
        function o(t, e) {
            this._config = this._getConfig(e), this._element = t, this._dialog = t.querySelector(fe), this._backdrop = null, this._isShown = !1, this._isBodyOverflowing = !1, this._ignoreBackdropClick = !1, this._isTransitioning = !1, this._scrollbarWidth = 0;
        }
        var t = o.prototype;
        return t.toggle = function(t) {
            return this._isShown ? this.hide() : this.show(t);
        }, t.show = function(t) {
            var e = this;
            if (!this._isShown && !this._isTransitioning) {
                g(this._element).hasClass(he) && (this._isTransitioning = !0);
                var n = g.Event(re.SHOW, {
                    relatedTarget: t
                });
                g(this._element).trigger(n), this._isShown || n.isDefaultPrevented() || (this._isShown = !0, this._checkScrollbar(), this._setScrollbar(), this._adjustDialog(), this._setEscapeEvent(), this._setResizeEvent(), g(this._element).on(re.CLICK_DISMISS, _e, function(t) {
                    return e.hide(t);
                }), g(this._dialog).on(re.MOUSEDOWN_DISMISS, function() {
                    g(e._element).one(re.MOUSEUP_DISMISS, function(t) {
                        g(t.target).is(e._element) && (e._ignoreBackdropClick = !0);
                    });
                }), this._showBackdrop(function() {
                    return e._showElement(t);
                }));
            }
        }, t.hide = function(t) {
            var e = this;
            if (t && t.preventDefault(), this._isShown && !this._isTransitioning) {
                var n = g.Event(re.HIDE);
                if (g(this._element).trigger(n), this._isShown && !n.isDefaultPrevented()) {
                    this._isShown = !1;
                    var i = g(this._element).hasClass(he);
                    if (i && (this._isTransitioning = !0), this._setEscapeEvent(), this._setResizeEvent(), g(document).off(re.FOCUSIN), g(this._element).removeClass(ue), g(this._element).off(re.CLICK_DISMISS), g(this._dialog).off(re.MOUSEDOWN_DISMISS), i) {
                        var o = _.getTransitionDurationFromElement(this._element);
                        g(this._element).one(_.TRANSITION_END, function(t) {
                            return e._hideModal(t);
                        }).emulateTransitionEnd(o);
                    } else this._hideModal();
                }
            }
        }, t.dispose = function() {
            [
                window,
                this._element,
                this._dialog
            ].forEach(function(t) {
                return g(t).off(ee);
            }), g(document).off(re.FOCUSIN), g.removeData(this._element, te), this._config = null, this._element = null, this._dialog = null, this._backdrop = null, this._isShown = null, this._isBodyOverflowing = null, this._ignoreBackdropClick = null, this._isTransitioning = null, this._scrollbarWidth = null;
        }, t.handleUpdate = function() {
            this._adjustDialog();
        }, t._getConfig = function(t) {
            return t = l({}, ie, t), _.typeCheckConfig(Zt, t, oe), t;
        }, t._showElement = function(t) {
            var e = this, n = g(this._element).hasClass(he);
            this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE || document.body.appendChild(this._element), this._element.style.display = "block", this._element.removeAttribute("aria-hidden"), this._element.setAttribute("aria-modal", !0), g(this._dialog).hasClass(se) ? this._dialog.querySelector(de).scrollTop = 0 : this._element.scrollTop = 0, n && _.reflow(this._element), g(this._element).addClass(ue), this._config.focus && this._enforceFocus();
            var i = g.Event(re.SHOWN, {
                relatedTarget: t
            }), o = function() {
                e._config.focus && e._element.focus(), e._isTransitioning = !1, g(e._element).trigger(i);
            };
            if (n) {
                var r = _.getTransitionDurationFromElement(this._dialog);
                g(this._dialog).one(_.TRANSITION_END, o).emulateTransitionEnd(r);
            } else o();
        }, t._enforceFocus = function() {
            var e = this;
            g(document).off(re.FOCUSIN).on(re.FOCUSIN, function(t) {
                document !== t.target && e._element !== t.target && 0 === g(e._element).has(t.target).length && e._element.focus();
            });
        }, t._setEscapeEvent = function() {
            var e = this;
            this._isShown && this._config.keyboard ? g(this._element).on(re.KEYDOWN_DISMISS, function(t) {
                27 === t.which && (t.preventDefault(), e.hide());
            }) : this._isShown || g(this._element).off(re.KEYDOWN_DISMISS);
        }, t._setResizeEvent = function() {
            var e = this;
            this._isShown ? g(window).on(re.RESIZE, function(t) {
                return e.handleUpdate(t);
            }) : g(window).off(re.RESIZE);
        }, t._hideModal = function() {
            var t = this;
            this._element.style.display = "none", this._element.setAttribute("aria-hidden", !0), this._element.removeAttribute("aria-modal"), this._isTransitioning = !1, this._showBackdrop(function() {
                g(document.body).removeClass(ce), t._resetAdjustments(), t._resetScrollbar(), g(t._element).trigger(re.HIDDEN);
            });
        }, t._removeBackdrop = function() {
            this._backdrop && (g(this._backdrop).remove(), this._backdrop = null);
        }, t._showBackdrop = function(t) {
            var e = this, n = g(this._element).hasClass(he) ? he : "";
            if (this._isShown && this._config.backdrop) {
                if (this._backdrop = document.createElement("div"), this._backdrop.className = le, n && this._backdrop.classList.add(n), g(this._backdrop).appendTo(document.body), g(this._element).on(re.CLICK_DISMISS, function(t) {
                    e._ignoreBackdropClick ? e._ignoreBackdropClick = !1 : t.target === t.currentTarget && ("static" === e._config.backdrop ? e._element.focus() : e.hide());
                }), n && _.reflow(this._backdrop), g(this._backdrop).addClass(ue), !t) return;
                if (!n) return void t();
                var i = _.getTransitionDurationFromElement(this._backdrop);
                g(this._backdrop).one(_.TRANSITION_END, t).emulateTransitionEnd(i);
            } else if (!this._isShown && this._backdrop) {
                g(this._backdrop).removeClass(ue);
                var o = function() {
                    e._removeBackdrop(), t && t();
                };
                if (g(this._element).hasClass(he)) {
                    var r = _.getTransitionDurationFromElement(this._backdrop);
                    g(this._backdrop).one(_.TRANSITION_END, o).emulateTransitionEnd(r);
                } else o();
            } else t && t();
        }, t._adjustDialog = function() {
            var t = this._element.scrollHeight > document.documentElement.clientHeight;
            !this._isBodyOverflowing && t && (this._element.style.paddingLeft = this._scrollbarWidth + "px"), this._isBodyOverflowing && !t && (this._element.style.paddingRight = this._scrollbarWidth + "px");
        }, t._resetAdjustments = function() {
            this._element.style.paddingLeft = "", this._element.style.paddingRight = "";
        }, t._checkScrollbar = function() {
            var t = document.body.getBoundingClientRect();
            this._isBodyOverflowing = t.left + t.right < window.innerWidth, this._scrollbarWidth = this._getScrollbarWidth();
        }, t._setScrollbar = function() {
            var o = this;
            if (this._isBodyOverflowing) {
                var t = [].slice.call(document.querySelectorAll(me)), e = [].slice.call(document.querySelectorAll(pe));
                g(t).each(function(t, e) {
                    var n = e.style.paddingRight, i = g(e).css("padding-right");
                    g(e).data("padding-right", n).css("padding-right", parseFloat(i) + o._scrollbarWidth + "px");
                }), g(e).each(function(t, e) {
                    var n = e.style.marginRight, i = g(e).css("margin-right");
                    g(e).data("margin-right", n).css("margin-right", parseFloat(i) - o._scrollbarWidth + "px");
                });
                var n = document.body.style.paddingRight, i = g(document.body).css("padding-right");
                g(document.body).data("padding-right", n).css("padding-right", parseFloat(i) + this._scrollbarWidth + "px");
            }
            g(document.body).addClass(ce);
        }, t._resetScrollbar = function() {
            var t = [].slice.call(document.querySelectorAll(me));
            g(t).each(function(t, e) {
                var n = g(e).data("padding-right");
                g(e).removeData("padding-right"), e.style.paddingRight = n || "";
            });
            var e = [].slice.call(document.querySelectorAll("" + pe));
            g(e).each(function(t, e) {
                var n = g(e).data("margin-right");
                "undefined" != typeof n && g(e).css("margin-right", n).removeData("margin-right");
            });
            var n = g(document.body).data("padding-right");
            g(document.body).removeData("padding-right"), document.body.style.paddingRight = n || "";
        }, t._getScrollbarWidth = function() {
            var t = document.createElement("div");
            t.className = ae, document.body.appendChild(t);
            var e = t.getBoundingClientRect().width - t.clientWidth;
            return document.body.removeChild(t), e;
        }, o._jQueryInterface = function(n, i) {
            return this.each(function() {
                var t = g(this).data(te), e = l({}, ie, g(this).data(), "object" == typeof n && n ? n : {});
                if (t || (t = new o(this, e), g(this).data(te, t)), "string" == typeof n) {
                    if ("undefined" == typeof t[n]) throw new TypeError('No method named "' + n + '"');
                    t[n](i);
                } else e.show && t.show(i);
            });
        }, s(o, null, [
            {
                key: "VERSION",
                get: function() {
                    return "4.3.1";
                }
            },
            {
                key: "Default",
                get: function() {
                    return ie;
                }
            }
        ]), o;
    }();
    g(document).on(re.CLICK_DATA_API, ge, function(t) {
        var e, n = this, i = _.getSelectorFromElement(this);
        i && (e = document.querySelector(i));
        var o = g(e).data(te) ? "toggle" : l({}, g(e).data(), g(this).data());
        "A" !== this.tagName && "AREA" !== this.tagName || t.preventDefault();
        var r = g(e).one(re.SHOW, function(t) {
            t.isDefaultPrevented() || r.one(re.HIDDEN, function() {
                g(n).is(":visible") && n.focus();
            });
        });
        ve._jQueryInterface.call(g(e), o, this);
    }), g.fn[Zt] = ve._jQueryInterface, g.fn[Zt].Constructor = ve, g.fn[Zt].noConflict = function() {
        return g.fn[Zt] = ne, ve._jQueryInterface;
    };
    var ye = [
        "background",
        "cite",
        "href",
        "itemtype",
        "longdesc",
        "poster",
        "src",
        "xlink:href"
    ], Ee = {
        "*": [
            "class",
            "dir",
            "id",
            "lang",
            "role",
            /^aria-[\w-]*$/i
        ],
        a: [
            "target",
            "href",
            "title",
            "rel"
        ],
        area: [],
        b: [],
        br: [],
        col: [],
        code: [],
        div: [],
        em: [],
        hr: [],
        h1: [],
        h2: [],
        h3: [],
        h4: [],
        h5: [],
        h6: [],
        i: [],
        img: [
            "src",
            "alt",
            "title",
            "width",
            "height"
        ],
        li: [],
        ol: [],
        p: [],
        pre: [],
        s: [],
        small: [],
        span: [],
        sub: [],
        sup: [],
        strong: [],
        u: [],
        ul: []
    }, Ce = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi, Te = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+/]+=*$/i;
    function Se(t, s, e) {
        if (0 === t.length) return t;
        if (e && "function" == typeof e) return e(t);
        for(var n = (new window.DOMParser).parseFromString(t, "text/html"), a = Object.keys(s), l = [].slice.call(n.body.querySelectorAll("*")), i = function(t, e) {
            var n = l[t], i = n.nodeName.toLowerCase();
            if (-1 === a.indexOf(n.nodeName.toLowerCase())) return n.parentNode.removeChild(n), "continue";
            var o = [].slice.call(n.attributes), r = [].concat(s["*"] || [], s[i] || []);
            o.forEach(function(t) {
                (function(t, e) {
                    var n = t.nodeName.toLowerCase();
                    if (-1 !== e.indexOf(n)) return -1 === ye.indexOf(n) || Boolean(t.nodeValue.match(Ce) || t.nodeValue.match(Te));
                    for(var i = e.filter(function(t) {
                        return t instanceof RegExp;
                    }), o = 0, r = i.length; o < r; o++)if (n.match(i[o])) return !0;
                    return !1;
                })(t, r) || n.removeAttribute(t.nodeName);
            });
        }, o = 0, r = l.length; o < r; o++)i(o);
        return n.body.innerHTML;
    }
    var be = "tooltip", Ie = "bs.tooltip", De = "." + Ie, we = g.fn[be], Ae = "bs-tooltip", Ne = new RegExp("(^|\\s)" + Ae + "\\S+", "g"), Oe = [
        "sanitize",
        "whiteList",
        "sanitizeFn"
    ], ke = {
        animation: "boolean",
        template: "string",
        title: "(string|element|function)",
        trigger: "string",
        delay: "(number|object)",
        html: "boolean",
        selector: "(string|boolean)",
        placement: "(string|function)",
        offset: "(number|string|function)",
        container: "(string|element|boolean)",
        fallbackPlacement: "(string|array)",
        boundary: "(string|element)",
        sanitize: "boolean",
        sanitizeFn: "(null|function)",
        whiteList: "object"
    }, Pe = {
        AUTO: "auto",
        TOP: "top",
        RIGHT: "right",
        BOTTOM: "bottom",
        LEFT: "left"
    }, Le = {
        animation: !0,
        template: '<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner"></div></div>',
        trigger: "hover focus",
        title: "",
        delay: 0,
        html: !1,
        selector: !1,
        placement: "top",
        offset: 0,
        container: !1,
        fallbackPlacement: "flip",
        boundary: "scrollParent",
        sanitize: !0,
        sanitizeFn: null,
        whiteList: Ee
    }, je = "show", He = "out", Re = {
        HIDE: "hide" + De,
        HIDDEN: "hidden" + De,
        SHOW: "show" + De,
        SHOWN: "shown" + De,
        INSERTED: "inserted" + De,
        CLICK: "click" + De,
        FOCUSIN: "focusin" + De,
        FOCUSOUT: "focusout" + De,
        MOUSEENTER: "mouseenter" + De,
        MOUSELEAVE: "mouseleave" + De
    }, xe = "fade", Fe = "show", Ue = ".tooltip-inner", We = ".arrow", qe = "hover", Me = "focus", Ke = "click", Qe = "manual", Be = function() {
        function i(t, e) {
            if ("undefined" == typeof u) throw new TypeError("Bootstrap's tooltips require Popper.js (https://popper.js.org/)");
            this._isEnabled = !0, this._timeout = 0, this._hoverState = "", this._activeTrigger = {}, this._popper = null, this.element = t, this.config = this._getConfig(e), this.tip = null, this._setListeners();
        }
        var t = i.prototype;
        return t.enable = function() {
            this._isEnabled = !0;
        }, t.disable = function() {
            this._isEnabled = !1;
        }, t.toggleEnabled = function() {
            this._isEnabled = !this._isEnabled;
        }, t.toggle = function(t) {
            if (this._isEnabled) {
                if (t) {
                    var e = this.constructor.DATA_KEY, n = g(t.currentTarget).data(e);
                    n || (n = new this.constructor(t.currentTarget, this._getDelegateConfig()), g(t.currentTarget).data(e, n)), n._activeTrigger.click = !n._activeTrigger.click, n._isWithActiveTrigger() ? n._enter(null, n) : n._leave(null, n);
                } else {
                    if (g(this.getTipElement()).hasClass(Fe)) return void this._leave(null, this);
                    this._enter(null, this);
                }
            }
        }, t.dispose = function() {
            clearTimeout(this._timeout), g.removeData(this.element, this.constructor.DATA_KEY), g(this.element).off(this.constructor.EVENT_KEY), g(this.element).closest(".modal").off("hide.bs.modal"), this.tip && g(this.tip).remove(), this._isEnabled = null, this._timeout = null, this._hoverState = null, (this._activeTrigger = null) !== this._popper && this._popper.destroy(), this._popper = null, this.element = null, this.config = null, this.tip = null;
        }, t.show = function() {
            var e = this;
            if ("none" === g(this.element).css("display")) throw new Error("Please use show on visible elements");
            var t = g.Event(this.constructor.Event.SHOW);
            if (this.isWithContent() && this._isEnabled) {
                g(this.element).trigger(t);
                var n = _.findShadowRoot(this.element), i = g.contains(null !== n ? n : this.element.ownerDocument.documentElement, this.element);
                if (t.isDefaultPrevented() || !i) return;
                var o = this.getTipElement(), r = _.getUID(this.constructor.NAME);
                o.setAttribute("id", r), this.element.setAttribute("aria-describedby", r), this.setContent(), this.config.animation && g(o).addClass(xe);
                var s = "function" == typeof this.config.placement ? this.config.placement.call(this, o, this.element) : this.config.placement, a = this._getAttachment(s);
                this.addAttachmentClass(a);
                var l = this._getContainer();
                g(o).data(this.constructor.DATA_KEY, this), g.contains(this.element.ownerDocument.documentElement, this.tip) || g(o).appendTo(l), g(this.element).trigger(this.constructor.Event.INSERTED), this._popper = new u(this.element, o, {
                    placement: a,
                    modifiers: {
                        offset: this._getOffset(),
                        flip: {
                            behavior: this.config.fallbackPlacement
                        },
                        arrow: {
                            element: We
                        },
                        preventOverflow: {
                            boundariesElement: this.config.boundary
                        }
                    },
                    onCreate: function(t) {
                        t.originalPlacement !== t.placement && e._handlePopperPlacementChange(t);
                    },
                    onUpdate: function(t) {
                        return e._handlePopperPlacementChange(t);
                    }
                }), g(o).addClass(Fe), "ontouchstart" in document.documentElement && g(document.body).children().on("mouseover", null, g.noop);
                var c = function() {
                    e.config.animation && e._fixTransition();
                    var t = e._hoverState;
                    e._hoverState = null, g(e.element).trigger(e.constructor.Event.SHOWN), t === He && e._leave(null, e);
                };
                if (g(this.tip).hasClass(xe)) {
                    var h = _.getTransitionDurationFromElement(this.tip);
                    g(this.tip).one(_.TRANSITION_END, c).emulateTransitionEnd(h);
                } else c();
            }
        }, t.hide = function(t) {
            var e = this, n = this.getTipElement(), i = g.Event(this.constructor.Event.HIDE), o = function() {
                e._hoverState !== je && n.parentNode && n.parentNode.removeChild(n), e._cleanTipClass(), e.element.removeAttribute("aria-describedby"), g(e.element).trigger(e.constructor.Event.HIDDEN), null !== e._popper && e._popper.destroy(), t && t();
            };
            if (g(this.element).trigger(i), !i.isDefaultPrevented()) {
                if (g(n).removeClass(Fe), "ontouchstart" in document.documentElement && g(document.body).children().off("mouseover", null, g.noop), this._activeTrigger[Ke] = !1, this._activeTrigger[Me] = !1, this._activeTrigger[qe] = !1, g(this.tip).hasClass(xe)) {
                    var r = _.getTransitionDurationFromElement(n);
                    g(n).one(_.TRANSITION_END, o).emulateTransitionEnd(r);
                } else o();
                this._hoverState = "";
            }
        }, t.update = function() {
            null !== this._popper && this._popper.scheduleUpdate();
        }, t.isWithContent = function() {
            return Boolean(this.getTitle());
        }, t.addAttachmentClass = function(t) {
            g(this.getTipElement()).addClass(Ae + "-" + t);
        }, t.getTipElement = function() {
            return this.tip = this.tip || g(this.config.template)[0], this.tip;
        }, t.setContent = function() {
            var t = this.getTipElement();
            this.setElementContent(g(t.querySelectorAll(Ue)), this.getTitle()), g(t).removeClass(xe + " " + Fe);
        }, t.setElementContent = function(t, e) {
            "object" != typeof e || !e.nodeType && !e.jquery ? this.config.html ? (this.config.sanitize && (e = Se(e, this.config.whiteList, this.config.sanitizeFn)), t.html(e)) : t.text(e) : this.config.html ? g(e).parent().is(t) || t.empty().append(e) : t.text(g(e).text());
        }, t.getTitle = function() {
            var t = this.element.getAttribute("data-original-title");
            return t || (t = "function" == typeof this.config.title ? this.config.title.call(this.element) : this.config.title), t;
        }, t._getOffset = function() {
            var e = this, t = {};
            return "function" == typeof this.config.offset ? t.fn = function(t) {
                return t.offsets = l({}, t.offsets, e.config.offset(t.offsets, e.element) || {}), t;
            } : t.offset = this.config.offset, t;
        }, t._getContainer = function() {
            return !1 === this.config.container ? document.body : _.isElement(this.config.container) ? g(this.config.container) : g(document).find(this.config.container);
        }, t._getAttachment = function(t) {
            return Pe[t.toUpperCase()];
        }, t._setListeners = function() {
            var i = this;
            this.config.trigger.split(" ").forEach(function(t) {
                if ("click" === t) g(i.element).on(i.constructor.Event.CLICK, i.config.selector, function(t) {
                    return i.toggle(t);
                });
                else if (t !== Qe) {
                    var e = t === qe ? i.constructor.Event.MOUSEENTER : i.constructor.Event.FOCUSIN, n = t === qe ? i.constructor.Event.MOUSELEAVE : i.constructor.Event.FOCUSOUT;
                    g(i.element).on(e, i.config.selector, function(t) {
                        return i._enter(t);
                    }).on(n, i.config.selector, function(t) {
                        return i._leave(t);
                    });
                }
            }), g(this.element).closest(".modal").on("hide.bs.modal", function() {
                i.element && i.hide();
            }), this.config.selector ? this.config = l({}, this.config, {
                trigger: "manual",
                selector: ""
            }) : this._fixTitle();
        }, t._fixTitle = function() {
            var t = typeof this.element.getAttribute("data-original-title");
            (this.element.getAttribute("title") || "string" !== t) && (this.element.setAttribute("data-original-title", this.element.getAttribute("title") || ""), this.element.setAttribute("title", ""));
        }, t._enter = function(t, e) {
            var n = this.constructor.DATA_KEY;
            (e = e || g(t.currentTarget).data(n)) || (e = new this.constructor(t.currentTarget, this._getDelegateConfig()), g(t.currentTarget).data(n, e)), t && (e._activeTrigger["focusin" === t.type ? Me : qe] = !0), g(e.getTipElement()).hasClass(Fe) || e._hoverState === je ? e._hoverState = je : (clearTimeout(e._timeout), e._hoverState = je, e.config.delay && e.config.delay.show ? e._timeout = setTimeout(function() {
                e._hoverState === je && e.show();
            }, e.config.delay.show) : e.show());
        }, t._leave = function(t, e) {
            var n = this.constructor.DATA_KEY;
            (e = e || g(t.currentTarget).data(n)) || (e = new this.constructor(t.currentTarget, this._getDelegateConfig()), g(t.currentTarget).data(n, e)), t && (e._activeTrigger["focusout" === t.type ? Me : qe] = !1), e._isWithActiveTrigger() || (clearTimeout(e._timeout), e._hoverState = He, e.config.delay && e.config.delay.hide ? e._timeout = setTimeout(function() {
                e._hoverState === He && e.hide();
            }, e.config.delay.hide) : e.hide());
        }, t._isWithActiveTrigger = function() {
            for(var t in this._activeTrigger)if (this._activeTrigger[t]) return !0;
            return !1;
        }, t._getConfig = function(t) {
            var e = g(this.element).data();
            return Object.keys(e).forEach(function(t) {
                -1 !== Oe.indexOf(t) && delete e[t];
            }), "number" == typeof (t = l({}, this.constructor.Default, e, "object" == typeof t && t ? t : {})).delay && (t.delay = {
                show: t.delay,
                hide: t.delay
            }), "number" == typeof t.title && (t.title = t.title.toString()), "number" == typeof t.content && (t.content = t.content.toString()), _.typeCheckConfig(be, t, this.constructor.DefaultType), t.sanitize && (t.template = Se(t.template, t.whiteList, t.sanitizeFn)), t;
        }, t._getDelegateConfig = function() {
            var t = {};
            if (this.config) for(var e in this.config)this.constructor.Default[e] !== this.config[e] && (t[e] = this.config[e]);
            return t;
        }, t._cleanTipClass = function() {
            var t = g(this.getTipElement()), e = t.attr("class").match(Ne);
            null !== e && e.length && t.removeClass(e.join(""));
        }, t._handlePopperPlacementChange = function(t) {
            var e = t.instance;
            this.tip = e.popper, this._cleanTipClass(), this.addAttachmentClass(this._getAttachment(t.placement));
        }, t._fixTransition = function() {
            var t = this.getTipElement(), e = this.config.animation;
            null === t.getAttribute("x-placement") && (g(t).removeClass(xe), this.config.animation = !1, this.hide(), this.show(), this.config.animation = e);
        }, i._jQueryInterface = function(n) {
            return this.each(function() {
                var t = g(this).data(Ie), e = "object" == typeof n && n;
                if ((t || !/dispose|hide/.test(n)) && (t || (t = new i(this, e), g(this).data(Ie, t)), "string" == typeof n)) {
                    if ("undefined" == typeof t[n]) throw new TypeError('No method named "' + n + '"');
                    t[n]();
                }
            });
        }, s(i, null, [
            {
                key: "VERSION",
                get: function() {
                    return "4.3.1";
                }
            },
            {
                key: "Default",
                get: function() {
                    return Le;
                }
            },
            {
                key: "NAME",
                get: function() {
                    return be;
                }
            },
            {
                key: "DATA_KEY",
                get: function() {
                    return Ie;
                }
            },
            {
                key: "Event",
                get: function() {
                    return Re;
                }
            },
            {
                key: "EVENT_KEY",
                get: function() {
                    return De;
                }
            },
            {
                key: "DefaultType",
                get: function() {
                    return ke;
                }
            }
        ]), i;
    }();
    g.fn[be] = Be._jQueryInterface, g.fn[be].Constructor = Be, g.fn[be].noConflict = function() {
        return g.fn[be] = we, Be._jQueryInterface;
    };
    var Ve = "popover", Ye = "bs.popover", ze = "." + Ye, Xe = g.fn[Ve], $e = "bs-popover", Ge = new RegExp("(^|\\s)" + $e + "\\S+", "g"), Je = l({}, Be.Default, {
        placement: "right",
        trigger: "click",
        content: "",
        template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>'
    }), Ze = l({}, Be.DefaultType, {
        content: "(string|element|function)"
    }), tn = "fade", en = "show", nn = ".popover-header", on = ".popover-body", rn = {
        HIDE: "hide" + ze,
        HIDDEN: "hidden" + ze,
        SHOW: "show" + ze,
        SHOWN: "shown" + ze,
        INSERTED: "inserted" + ze,
        CLICK: "click" + ze,
        FOCUSIN: "focusin" + ze,
        FOCUSOUT: "focusout" + ze,
        MOUSEENTER: "mouseenter" + ze,
        MOUSELEAVE: "mouseleave" + ze
    }, sn = function(t) {
        var e, n;
        function i() {
            return t.apply(this, arguments) || this;
        }
        n = t, (e = i).prototype = Object.create(n.prototype), (e.prototype.constructor = e).__proto__ = n;
        var o = i.prototype;
        return o.isWithContent = function() {
            return this.getTitle() || this._getContent();
        }, o.addAttachmentClass = function(t) {
            g(this.getTipElement()).addClass($e + "-" + t);
        }, o.getTipElement = function() {
            return this.tip = this.tip || g(this.config.template)[0], this.tip;
        }, o.setContent = function() {
            var t = g(this.getTipElement());
            this.setElementContent(t.find(nn), this.getTitle());
            var e = this._getContent();
            "function" == typeof e && (e = e.call(this.element)), this.setElementContent(t.find(on), e), t.removeClass(tn + " " + en);
        }, o._getContent = function() {
            return this.element.getAttribute("data-content") || this.config.content;
        }, o._cleanTipClass = function() {
            var t = g(this.getTipElement()), e = t.attr("class").match(Ge);
            null !== e && 0 < e.length && t.removeClass(e.join(""));
        }, i._jQueryInterface = function(n) {
            return this.each(function() {
                var t = g(this).data(Ye), e = "object" == typeof n ? n : null;
                if ((t || !/dispose|hide/.test(n)) && (t || (t = new i(this, e), g(this).data(Ye, t)), "string" == typeof n)) {
                    if ("undefined" == typeof t[n]) throw new TypeError('No method named "' + n + '"');
                    t[n]();
                }
            });
        }, s(i, null, [
            {
                key: "VERSION",
                get: function() {
                    return "4.3.1";
                }
            },
            {
                key: "Default",
                get: function() {
                    return Je;
                }
            },
            {
                key: "NAME",
                get: function() {
                    return Ve;
                }
            },
            {
                key: "DATA_KEY",
                get: function() {
                    return Ye;
                }
            },
            {
                key: "Event",
                get: function() {
                    return rn;
                }
            },
            {
                key: "EVENT_KEY",
                get: function() {
                    return ze;
                }
            },
            {
                key: "DefaultType",
                get: function() {
                    return Ze;
                }
            }
        ]), i;
    }(Be);
    g.fn[Ve] = sn._jQueryInterface, g.fn[Ve].Constructor = sn, g.fn[Ve].noConflict = function() {
        return g.fn[Ve] = Xe, sn._jQueryInterface;
    };
    var an = "scrollspy", ln = "bs.scrollspy", cn = "." + ln, hn = g.fn[an], un = {
        offset: 10,
        method: "auto",
        target: ""
    }, fn = {
        offset: "number",
        method: "string",
        target: "(string|element)"
    }, dn = {
        ACTIVATE: "activate" + cn,
        SCROLL: "scroll" + cn,
        LOAD_DATA_API: "load" + cn + ".data-api"
    }, gn = "dropdown-item", _n = "active", mn = '[data-spy="scroll"]', pn = ".nav, .list-group", vn = ".nav-link", yn = ".nav-item", En = ".list-group-item", Cn = ".dropdown", Tn = ".dropdown-item", Sn = ".dropdown-toggle", bn = "offset", In = "position", Dn = function() {
        function n(t, e) {
            var n = this;
            this._element = t, this._scrollElement = "BODY" === t.tagName ? window : t, this._config = this._getConfig(e), this._selector = this._config.target + " " + vn + "," + this._config.target + " " + En + "," + this._config.target + " " + Tn, this._offsets = [], this._targets = [], this._activeTarget = null, this._scrollHeight = 0, g(this._scrollElement).on(dn.SCROLL, function(t) {
                return n._process(t);
            }), this.refresh(), this._process();
        }
        var t = n.prototype;
        return t.refresh = function() {
            var e = this, t = this._scrollElement === this._scrollElement.window ? bn : In, o = "auto" === this._config.method ? t : this._config.method, r = o === In ? this._getScrollTop() : 0;
            this._offsets = [], this._targets = [], this._scrollHeight = this._getScrollHeight(), [].slice.call(document.querySelectorAll(this._selector)).map(function(t) {
                var e, n = _.getSelectorFromElement(t);
                if (n && (e = document.querySelector(n)), e) {
                    var i = e.getBoundingClientRect();
                    if (i.width || i.height) return [
                        g(e)[o]().top + r,
                        n
                    ];
                }
                return null;
            }).filter(function(t) {
                return t;
            }).sort(function(t, e) {
                return t[0] - e[0];
            }).forEach(function(t) {
                e._offsets.push(t[0]), e._targets.push(t[1]);
            });
        }, t.dispose = function() {
            g.removeData(this._element, ln), g(this._scrollElement).off(cn), this._element = null, this._scrollElement = null, this._config = null, this._selector = null, this._offsets = null, this._targets = null, this._activeTarget = null, this._scrollHeight = null;
        }, t._getConfig = function(t) {
            if ("string" != typeof (t = l({}, un, "object" == typeof t && t ? t : {})).target) {
                var e = g(t.target).attr("id");
                e || (e = _.getUID(an), g(t.target).attr("id", e)), t.target = "#" + e;
            }
            return _.typeCheckConfig(an, t, fn), t;
        }, t._getScrollTop = function() {
            return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop;
        }, t._getScrollHeight = function() {
            return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);
        }, t._getOffsetHeight = function() {
            return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height;
        }, t._process = function() {
            var t = this._getScrollTop() + this._config.offset, e = this._getScrollHeight(), n = this._config.offset + e - this._getOffsetHeight();
            if (this._scrollHeight !== e && this.refresh(), n <= t) {
                var i = this._targets[this._targets.length - 1];
                this._activeTarget !== i && this._activate(i);
            } else {
                if (this._activeTarget && t < this._offsets[0] && 0 < this._offsets[0]) return this._activeTarget = null, void this._clear();
                for(var o = this._offsets.length; o--;)this._activeTarget !== this._targets[o] && t >= this._offsets[o] && ("undefined" == typeof this._offsets[o + 1] || t < this._offsets[o + 1]) && this._activate(this._targets[o]);
            }
        }, t._activate = function(e) {
            this._activeTarget = e, this._clear();
            var t = this._selector.split(",").map(function(t) {
                return t + '[data-target="' + e + '"],' + t + '[href="' + e + '"]';
            }), n = g([].slice.call(document.querySelectorAll(t.join(","))));
            n.hasClass(gn) ? (n.closest(Cn).find(Sn).addClass(_n), n.addClass(_n)) : (n.addClass(_n), n.parents(pn).prev(vn + ", " + En).addClass(_n), n.parents(pn).prev(yn).children(vn).addClass(_n)), g(this._scrollElement).trigger(dn.ACTIVATE, {
                relatedTarget: e
            });
        }, t._clear = function() {
            [].slice.call(document.querySelectorAll(this._selector)).filter(function(t) {
                return t.classList.contains(_n);
            }).forEach(function(t) {
                return t.classList.remove(_n);
            });
        }, n._jQueryInterface = function(e) {
            return this.each(function() {
                var t = g(this).data(ln);
                if (t || (t = new n(this, "object" == typeof e && e), g(this).data(ln, t)), "string" == typeof e) {
                    if ("undefined" == typeof t[e]) throw new TypeError('No method named "' + e + '"');
                    t[e]();
                }
            });
        }, s(n, null, [
            {
                key: "VERSION",
                get: function() {
                    return "4.3.1";
                }
            },
            {
                key: "Default",
                get: function() {
                    return un;
                }
            }
        ]), n;
    }();
    g(window).on(dn.LOAD_DATA_API, function() {
        for(var t = [].slice.call(document.querySelectorAll(mn)), e = t.length; e--;){
            var n = g(t[e]);
            Dn._jQueryInterface.call(n, n.data());
        }
    }), g.fn[an] = Dn._jQueryInterface, g.fn[an].Constructor = Dn, g.fn[an].noConflict = function() {
        return g.fn[an] = hn, Dn._jQueryInterface;
    };
    var wn = "bs.tab", An = "." + wn, Nn = g.fn.tab, On = {
        HIDE: "hide" + An,
        HIDDEN: "hidden" + An,
        SHOW: "show" + An,
        SHOWN: "shown" + An,
        CLICK_DATA_API: "click" + An + ".data-api"
    }, kn = "dropdown-menu", Pn = "active", Ln = "disabled", jn = "fade", Hn = "show", Rn = ".dropdown", xn = ".nav, .list-group", Fn = ".active", Un = "> li > .active", Wn = '[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]', qn = ".dropdown-toggle", Mn = "> .dropdown-menu .active", Kn = function() {
        function i(t) {
            this._element = t;
        }
        var t = i.prototype;
        return t.show = function() {
            var n = this;
            if (!(this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && g(this._element).hasClass(Pn) || g(this._element).hasClass(Ln))) {
                var t, i, e = g(this._element).closest(xn)[0], o = _.getSelectorFromElement(this._element);
                if (e) {
                    var r = "UL" === e.nodeName || "OL" === e.nodeName ? Un : Fn;
                    i = (i = g.makeArray(g(e).find(r)))[i.length - 1];
                }
                var s = g.Event(On.HIDE, {
                    relatedTarget: this._element
                }), a = g.Event(On.SHOW, {
                    relatedTarget: i
                });
                if (i && g(i).trigger(s), g(this._element).trigger(a), !a.isDefaultPrevented() && !s.isDefaultPrevented()) {
                    o && (t = document.querySelector(o)), this._activate(this._element, e);
                    var l = function() {
                        var t = g.Event(On.HIDDEN, {
                            relatedTarget: n._element
                        }), e = g.Event(On.SHOWN, {
                            relatedTarget: i
                        });
                        g(i).trigger(t), g(n._element).trigger(e);
                    };
                    t ? this._activate(t, t.parentNode, l) : l();
                }
            }
        }, t.dispose = function() {
            g.removeData(this._element, wn), this._element = null;
        }, t._activate = function(t, e, n) {
            var i = this, o = (!e || "UL" !== e.nodeName && "OL" !== e.nodeName ? g(e).children(Fn) : g(e).find(Un))[0], r = n && o && g(o).hasClass(jn), s = function() {
                return i._transitionComplete(t, o, n);
            };
            if (o && r) {
                var a = _.getTransitionDurationFromElement(o);
                g(o).removeClass(Hn).one(_.TRANSITION_END, s).emulateTransitionEnd(a);
            } else s();
        }, t._transitionComplete = function(t, e, n) {
            if (e) {
                g(e).removeClass(Pn);
                var i = g(e.parentNode).find(Mn)[0];
                i && g(i).removeClass(Pn), "tab" === e.getAttribute("role") && e.setAttribute("aria-selected", !1);
            }
            if (g(t).addClass(Pn), "tab" === t.getAttribute("role") && t.setAttribute("aria-selected", !0), _.reflow(t), t.classList.contains(jn) && t.classList.add(Hn), t.parentNode && g(t.parentNode).hasClass(kn)) {
                var o = g(t).closest(Rn)[0];
                if (o) {
                    var r = [].slice.call(o.querySelectorAll(qn));
                    g(r).addClass(Pn);
                }
                t.setAttribute("aria-expanded", !0);
            }
            n && n();
        }, i._jQueryInterface = function(n) {
            return this.each(function() {
                var t = g(this), e = t.data(wn);
                if (e || (e = new i(this), t.data(wn, e)), "string" == typeof n) {
                    if ("undefined" == typeof e[n]) throw new TypeError('No method named "' + n + '"');
                    e[n]();
                }
            });
        }, s(i, null, [
            {
                key: "VERSION",
                get: function() {
                    return "4.3.1";
                }
            }
        ]), i;
    }();
    g(document).on(On.CLICK_DATA_API, Wn, function(t) {
        t.preventDefault(), Kn._jQueryInterface.call(g(this), "show");
    }), g.fn.tab = Kn._jQueryInterface, g.fn.tab.Constructor = Kn, g.fn.tab.noConflict = function() {
        return g.fn.tab = Nn, Kn._jQueryInterface;
    };
    var Qn = "toast", Bn = "bs.toast", Vn = "." + Bn, Yn = g.fn[Qn], zn = {
        CLICK_DISMISS: "click.dismiss" + Vn,
        HIDE: "hide" + Vn,
        HIDDEN: "hidden" + Vn,
        SHOW: "show" + Vn,
        SHOWN: "shown" + Vn
    }, Xn = "fade", $n = "hide", Gn = "show", Jn = "showing", Zn = {
        animation: "boolean",
        autohide: "boolean",
        delay: "number"
    }, ti = {
        animation: !0,
        autohide: !0,
        delay: 500
    }, ei = '[data-dismiss="toast"]', ni = function() {
        function i(t, e) {
            this._element = t, this._config = this._getConfig(e), this._timeout = null, this._setListeners();
        }
        var t = i.prototype;
        return t.show = function() {
            var t = this;
            g(this._element).trigger(zn.SHOW), this._config.animation && this._element.classList.add(Xn);
            var e = function() {
                t._element.classList.remove(Jn), t._element.classList.add(Gn), g(t._element).trigger(zn.SHOWN), t._config.autohide && t.hide();
            };
            if (this._element.classList.remove($n), this._element.classList.add(Jn), this._config.animation) {
                var n = _.getTransitionDurationFromElement(this._element);
                g(this._element).one(_.TRANSITION_END, e).emulateTransitionEnd(n);
            } else e();
        }, t.hide = function(t) {
            var e = this;
            this._element.classList.contains(Gn) && (g(this._element).trigger(zn.HIDE), t ? this._close() : this._timeout = setTimeout(function() {
                e._close();
            }, this._config.delay));
        }, t.dispose = function() {
            clearTimeout(this._timeout), this._timeout = null, this._element.classList.contains(Gn) && this._element.classList.remove(Gn), g(this._element).off(zn.CLICK_DISMISS), g.removeData(this._element, Bn), this._element = null, this._config = null;
        }, t._getConfig = function(t) {
            return t = l({}, ti, g(this._element).data(), "object" == typeof t && t ? t : {}), _.typeCheckConfig(Qn, t, this.constructor.DefaultType), t;
        }, t._setListeners = function() {
            var t = this;
            g(this._element).on(zn.CLICK_DISMISS, ei, function() {
                return t.hide(!0);
            });
        }, t._close = function() {
            var t = this, e = function() {
                t._element.classList.add($n), g(t._element).trigger(zn.HIDDEN);
            };
            if (this._element.classList.remove(Gn), this._config.animation) {
                var n = _.getTransitionDurationFromElement(this._element);
                g(this._element).one(_.TRANSITION_END, e).emulateTransitionEnd(n);
            } else e();
        }, i._jQueryInterface = function(n) {
            return this.each(function() {
                var t = g(this), e = t.data(Bn);
                if (e || (e = new i(this, "object" == typeof n && n), t.data(Bn, e)), "string" == typeof n) {
                    if ("undefined" == typeof e[n]) throw new TypeError('No method named "' + n + '"');
                    e[n](this);
                }
            });
        }, s(i, null, [
            {
                key: "VERSION",
                get: function() {
                    return "4.3.1";
                }
            },
            {
                key: "DefaultType",
                get: function() {
                    return Zn;
                }
            },
            {
                key: "Default",
                get: function() {
                    return ti;
                }
            }
        ]), i;
    }();
    g.fn[Qn] = ni._jQueryInterface, g.fn[Qn].Constructor = ni, g.fn[Qn].noConflict = function() {
        return g.fn[Qn] = Yn, ni._jQueryInterface;
    }, function() {
        if ("undefined" == typeof g) throw new TypeError("Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript.");
        var t = g.fn.jquery.split(" ")[0].split(".");
        if (t[0] < 2 && t[1] < 9 || 1 === t[0] && 9 === t[1] && t[2] < 1 || 4 <= t[0]) throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0");
    }(), t.Util = _, t.Alert = p, t.Button = P, t.Carousel = lt, t.Collapse = bt, t.Dropdown = Jt, t.Modal = ve, t.Popover = sn, t.Scrollspy = Dn, t.Tab = Kn, t.Toast = ni, t.Tooltip = Be, Object.defineProperty(t, "__esModule", {
        value: !0
    });
});


/*! jQuery UI - v1.12.1 - 2016-09-14
* http://jqueryui.com
* Includes: widget.js, position.js, data.js, disable-selection.js, effect.js, effects/effect-blind.js, effects/effect-bounce.js, effects/effect-clip.js, effects/effect-drop.js, effects/effect-explode.js, effects/effect-fade.js, effects/effect-fold.js, effects/effect-highlight.js, effects/effect-puff.js, effects/effect-pulsate.js, effects/effect-scale.js, effects/effect-shake.js, effects/effect-size.js, effects/effect-slide.js, effects/effect-transfer.js, focusable.js, form-reset-mixin.js, jquery-1-7.js, keycode.js, labels.js, scroll-parent.js, tabbable.js, unique-id.js, widgets/accordion.js, widgets/autocomplete.js, widgets/button.js, widgets/checkboxradio.js, widgets/controlgroup.js, widgets/datepicker.js, widgets/dialog.js, widgets/draggable.js, widgets/droppable.js, widgets/menu.js, widgets/mouse.js, widgets/progressbar.js, widgets/resizable.js, widgets/selectable.js, widgets/selectmenu.js, widgets/slider.js, widgets/sortable.js, widgets/spinner.js, widgets/tabs.js, widgets/tooltip.js
* Copyright jQuery Foundation and other contributors; Licensed MIT */ (function(factory) {
    if (typeof define === "function" && define.amd) // AMD. Register as an anonymous module.
    define([
        "jquery"
    ], factory);
    else // Browser globals
    factory(jQuery);
})(function($) {
    $.ui = $.ui || {};
    var version = $.ui.version = "1.12.1";
    /*!
 * jQuery UI Widget 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Widget
    //>>group: Core
    //>>description: Provides a factory for creating stateful widgets with a common API.
    //>>docs: http://api.jqueryui.com/jQuery.widget/
    //>>demos: http://jqueryui.com/widget/
    var widgetUuid = 0;
    var widgetSlice = Array.prototype.slice;
    $.cleanData = function(orig) {
        return function(elems) {
            var events, elem, i;
            for(i = 0; (elem = elems[i]) != null; i++)try {
                // Only trigger remove when necessary to save time
                events = $._data(elem, "events");
                if (events && events.remove) $(elem).triggerHandler("remove");
            // Http://bugs.jquery.com/ticket/8235
            } catch (e) {}
            orig(elems);
        };
    }($.cleanData);
    $.widget = function(name, base, prototype) {
        var existingConstructor, constructor, basePrototype;
        // ProxiedPrototype allows the provided prototype to remain unmodified
        // so that it can be used as a mixin for multiple widgets (#8876)
        var proxiedPrototype = {};
        var namespace = name.split(".")[0];
        name = name.split(".")[1];
        var fullName = namespace + "-" + name;
        if (!prototype) {
            prototype = base;
            base = $.Widget;
        }
        if ($.isArray(prototype)) prototype = $.extend.apply(null, [
            {}
        ].concat(prototype));
        // Create selector for plugin
        $.expr[":"][fullName.toLowerCase()] = function(elem) {
            return !!$.data(elem, fullName);
        };
        $[namespace] = $[namespace] || {};
        existingConstructor = $[namespace][name];
        constructor = $[namespace][name] = function(options, element) {
            // Allow instantiation without "new" keyword
            if (!this._createWidget) return new constructor(options, element);
            // Allow instantiation without initializing for simple inheritance
            // must use "new" keyword (the code above always passes args)
            if (arguments.length) this._createWidget(options, element);
        };
        // Extend with the existing constructor to carry over any static properties
        $.extend(constructor, existingConstructor, {
            version: prototype.version,
            // Copy the object used to create the prototype in case we need to
            // redefine the widget later
            _proto: $.extend({}, prototype),
            // Track widgets that inherit from this widget in case this widget is
            // redefined after a widget inherits from it
            _childConstructors: []
        });
        basePrototype = new base();
        // We need to make the options hash a property directly on the new instance
        // otherwise we'll modify the options hash on the prototype that we're
        // inheriting from
        basePrototype.options = $.widget.extend({}, basePrototype.options);
        $.each(prototype, function(prop, value) {
            if (!$.isFunction(value)) {
                proxiedPrototype[prop] = value;
                return;
            }
            proxiedPrototype[prop] = function() {
                function _super() {
                    return base.prototype[prop].apply(this, arguments);
                }
                function _superApply(args) {
                    return base.prototype[prop].apply(this, args);
                }
                return function() {
                    var __super = this._super;
                    var __superApply = this._superApply;
                    var returnValue;
                    this._super = _super;
                    this._superApply = _superApply;
                    returnValue = value.apply(this, arguments);
                    this._super = __super;
                    this._superApply = __superApply;
                    return returnValue;
                };
            }();
        });
        constructor.prototype = $.widget.extend(basePrototype, {
            // TODO: remove support for widgetEventPrefix
            // always use the name + a colon as the prefix, e.g., draggable:start
            // don't prefix for widgets that aren't DOM-based
            widgetEventPrefix: existingConstructor ? basePrototype.widgetEventPrefix || name : name
        }, proxiedPrototype, {
            constructor: constructor,
            namespace: namespace,
            widgetName: name,
            widgetFullName: fullName
        });
        // If this widget is being redefined then we need to find all widgets that
        // are inheriting from it and redefine all of them so that they inherit from
        // the new version of this widget. We're essentially trying to replace one
        // level in the prototype chain.
        if (existingConstructor) {
            $.each(existingConstructor._childConstructors, function(i, child) {
                var childPrototype = child.prototype;
                // Redefine the child widget using the same prototype that was
                // originally used, but inherit from the new version of the base
                $.widget(childPrototype.namespace + "." + childPrototype.widgetName, constructor, child._proto);
            });
            // Remove the list of existing child constructors from the old constructor
            // so the old child constructors can be garbage collected
            delete existingConstructor._childConstructors;
        } else base._childConstructors.push(constructor);
        $.widget.bridge(name, constructor);
        return constructor;
    };
    $.widget.extend = function(target) {
        var input = widgetSlice.call(arguments, 1);
        var inputIndex = 0;
        var inputLength = input.length;
        var key;
        var value;
        for(; inputIndex < inputLength; inputIndex++)for(key in input[inputIndex]){
            value = input[inputIndex][key];
            if (input[inputIndex].hasOwnProperty(key) && value !== undefined) {
                // Clone objects
                if ($.isPlainObject(value)) target[key] = $.isPlainObject(target[key]) ? $.widget.extend({}, target[key], value) : // Don't extend strings, arrays, etc. with objects
                $.widget.extend({}, value);
                else target[key] = value;
            }
        }
        return target;
    };
    $.widget.bridge = function(name, object) {
        var fullName = object.prototype.widgetFullName || name;
        $.fn[name] = function(options) {
            var isMethodCall = typeof options === "string";
            var args = widgetSlice.call(arguments, 1);
            var returnValue = this;
            if (isMethodCall) {
                // If this is an empty collection, we need to have the instance method
                // return undefined instead of the jQuery instance
                if (!this.length && options === "instance") returnValue = undefined;
                else this.each(function() {
                    var methodValue;
                    var instance = $.data(this, fullName);
                    if (options === "instance") {
                        returnValue = instance;
                        return false;
                    }
                    if (!instance) return $.error("cannot call methods on " + name + " prior to initialization; " + "attempted to call method '" + options + "'");
                    if (!$.isFunction(instance[options]) || options.charAt(0) === "_") return $.error("no such method '" + options + "' for " + name + " widget instance");
                    methodValue = instance[options].apply(instance, args);
                    if (methodValue !== instance && methodValue !== undefined) {
                        returnValue = methodValue && methodValue.jquery ? returnValue.pushStack(methodValue.get()) : methodValue;
                        return false;
                    }
                });
            } else {
                // Allow multiple hashes to be passed on init
                if (args.length) options = $.widget.extend.apply(null, [
                    options
                ].concat(args));
                this.each(function() {
                    var instance = $.data(this, fullName);
                    if (instance) {
                        instance.option(options || {});
                        if (instance._init) instance._init();
                    } else $.data(this, fullName, new object(options, this));
                });
            }
            return returnValue;
        };
    };
    $.Widget = function() {};
    $.Widget._childConstructors = [];
    $.Widget.prototype = {
        widgetName: "widget",
        widgetEventPrefix: "",
        defaultElement: "<div>",
        options: {
            classes: {},
            disabled: false,
            // Callbacks
            create: null
        },
        _createWidget: function(options, element) {
            element = $(element || this.defaultElement || this)[0];
            this.element = $(element);
            this.uuid = widgetUuid++;
            this.eventNamespace = "." + this.widgetName + this.uuid;
            this.bindings = $();
            this.hoverable = $();
            this.focusable = $();
            this.classesElementLookup = {};
            if (element !== this) {
                $.data(element, this.widgetFullName, this);
                this._on(true, this.element, {
                    remove: function(event) {
                        if (event.target === element) this.destroy();
                    }
                });
                this.document = $(element.style ? // Element within the document
                element.ownerDocument : // Element is window or document
                element.document || element);
                this.window = $(this.document[0].defaultView || this.document[0].parentWindow);
            }
            this.options = $.widget.extend({}, this.options, this._getCreateOptions(), options);
            this._create();
            if (this.options.disabled) this._setOptionDisabled(this.options.disabled);
            this._trigger("create", null, this._getCreateEventData());
            this._init();
        },
        _getCreateOptions: function() {
            return {};
        },
        _getCreateEventData: $.noop,
        _create: $.noop,
        _init: $.noop,
        destroy: function() {
            var that = this;
            this._destroy();
            $.each(this.classesElementLookup, function(key, value) {
                that._removeClass(value, key);
            });
            // We can probably remove the unbind calls in 2.0
            // all event bindings should go through this._on()
            this.element.off(this.eventNamespace).removeData(this.widgetFullName);
            this.widget().off(this.eventNamespace).removeAttr("aria-disabled");
            // Clean up events and states
            this.bindings.off(this.eventNamespace);
        },
        _destroy: $.noop,
        widget: function() {
            return this.element;
        },
        option: function(key, value) {
            var options = key;
            var parts;
            var curOption;
            var i;
            if (arguments.length === 0) // Don't return a reference to the internal hash
            return $.widget.extend({}, this.options);
            if (typeof key === "string") {
                // Handle nested keys, e.g., "foo.bar" => { foo: { bar: ___ } }
                options = {};
                parts = key.split(".");
                key = parts.shift();
                if (parts.length) {
                    curOption = options[key] = $.widget.extend({}, this.options[key]);
                    for(i = 0; i < parts.length - 1; i++){
                        curOption[parts[i]] = curOption[parts[i]] || {};
                        curOption = curOption[parts[i]];
                    }
                    key = parts.pop();
                    if (arguments.length === 1) return curOption[key] === undefined ? null : curOption[key];
                    curOption[key] = value;
                } else {
                    if (arguments.length === 1) return this.options[key] === undefined ? null : this.options[key];
                    options[key] = value;
                }
            }
            this._setOptions(options);
            return this;
        },
        _setOptions: function(options) {
            var key;
            for(key in options)this._setOption(key, options[key]);
            return this;
        },
        _setOption: function(key, value) {
            if (key === "classes") this._setOptionClasses(value);
            this.options[key] = value;
            if (key === "disabled") this._setOptionDisabled(value);
            return this;
        },
        _setOptionClasses: function(value) {
            var classKey, elements, currentElements;
            for(classKey in value){
                currentElements = this.classesElementLookup[classKey];
                if (value[classKey] === this.options.classes[classKey] || !currentElements || !currentElements.length) continue;
                // We are doing this to create a new jQuery object because the _removeClass() call
                // on the next line is going to destroy the reference to the current elements being
                // tracked. We need to save a copy of this collection so that we can add the new classes
                // below.
                elements = $(currentElements.get());
                this._removeClass(currentElements, classKey);
                // We don't use _addClass() here, because that uses this.options.classes
                // for generating the string of classes. We want to use the value passed in from
                // _setOption(), this is the new value of the classes option which was passed to
                // _setOption(). We pass this value directly to _classes().
                elements.addClass(this._classes({
                    element: elements,
                    keys: classKey,
                    classes: value,
                    add: true
                }));
            }
        },
        _setOptionDisabled: function(value) {
            this._toggleClass(this.widget(), this.widgetFullName + "-disabled", null, !!value);
            // If the widget is becoming disabled, then nothing is interactive
            if (value) {
                this._removeClass(this.hoverable, null, "ui-state-hover");
                this._removeClass(this.focusable, null, "ui-state-focus");
            }
        },
        enable: function() {
            return this._setOptions({
                disabled: false
            });
        },
        disable: function() {
            return this._setOptions({
                disabled: true
            });
        },
        _classes: function(options) {
            var full = [];
            var that = this;
            options = $.extend({
                element: this.element,
                classes: this.options.classes || {}
            }, options);
            function processClassString(classes, checkOption) {
                var current, i;
                for(i = 0; i < classes.length; i++){
                    current = that.classesElementLookup[classes[i]] || $();
                    if (options.add) current = $($.unique(current.get().concat(options.element.get())));
                    else current = $(current.not(options.element).get());
                    that.classesElementLookup[classes[i]] = current;
                    full.push(classes[i]);
                    if (checkOption && options.classes[classes[i]]) full.push(options.classes[classes[i]]);
                }
            }
            this._on(options.element, {
                "remove": "_untrackClassesElement"
            });
            if (options.keys) processClassString(options.keys.match(/\S+/g) || [], true);
            if (options.extra) processClassString(options.extra.match(/\S+/g) || []);
            return full.join(" ");
        },
        _untrackClassesElement: function(event) {
            var that = this;
            $.each(that.classesElementLookup, function(key, value) {
                if ($.inArray(event.target, value) !== -1) that.classesElementLookup[key] = $(value.not(event.target).get());
            });
        },
        _removeClass: function(element, keys, extra) {
            return this._toggleClass(element, keys, extra, false);
        },
        _addClass: function(element, keys, extra) {
            return this._toggleClass(element, keys, extra, true);
        },
        _toggleClass: function(element, keys, extra, add) {
            add = typeof add === "boolean" ? add : extra;
            var shift = typeof element === "string" || element === null, options = {
                extra: shift ? keys : extra,
                keys: shift ? element : keys,
                element: shift ? this.element : element,
                add: add
            };
            options.element.toggleClass(this._classes(options), add);
            return this;
        },
        _on: function(suppressDisabledCheck, element, handlers) {
            var delegateElement;
            var instance = this;
            // No suppressDisabledCheck flag, shuffle arguments
            if (typeof suppressDisabledCheck !== "boolean") {
                handlers = element;
                element = suppressDisabledCheck;
                suppressDisabledCheck = false;
            }
            // No element argument, shuffle and use this.element
            if (!handlers) {
                handlers = element;
                element = this.element;
                delegateElement = this.widget();
            } else {
                element = delegateElement = $(element);
                this.bindings = this.bindings.add(element);
            }
            $.each(handlers, function(event, handler) {
                function handlerProxy() {
                    // Allow widgets to customize the disabled handling
                    // - disabled as an array instead of boolean
                    // - disabled class as method for disabling individual parts
                    if (!suppressDisabledCheck && (instance.options.disabled === true || $(this).hasClass("ui-state-disabled"))) return;
                    return (typeof handler === "string" ? instance[handler] : handler).apply(instance, arguments);
                }
                // Copy the guid so direct unbinding works
                if (typeof handler !== "string") handlerProxy.guid = handler.guid = handler.guid || handlerProxy.guid || $.guid++;
                var match = event.match(/^([\w:-]*)\s*(.*)$/);
                var eventName = match[1] + instance.eventNamespace;
                var selector = match[2];
                if (selector) delegateElement.on(eventName, selector, handlerProxy);
                else element.on(eventName, handlerProxy);
            });
        },
        _off: function(element, eventName) {
            eventName = (eventName || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace;
            element.off(eventName).off(eventName);
            // Clear the stack to avoid memory leaks (#10056)
            this.bindings = $(this.bindings.not(element).get());
            this.focusable = $(this.focusable.not(element).get());
            this.hoverable = $(this.hoverable.not(element).get());
        },
        _delay: function(handler, delay) {
            function handlerProxy() {
                return (typeof handler === "string" ? instance[handler] : handler).apply(instance, arguments);
            }
            var instance = this;
            return setTimeout(handlerProxy, delay || 0);
        },
        _hoverable: function(element) {
            this.hoverable = this.hoverable.add(element);
            this._on(element, {
                mouseenter: function(event) {
                    this._addClass($(event.currentTarget), null, "ui-state-hover");
                },
                mouseleave: function(event) {
                    this._removeClass($(event.currentTarget), null, "ui-state-hover");
                }
            });
        },
        _focusable: function(element) {
            this.focusable = this.focusable.add(element);
            this._on(element, {
                focusin: function(event) {
                    this._addClass($(event.currentTarget), null, "ui-state-focus");
                },
                focusout: function(event) {
                    this._removeClass($(event.currentTarget), null, "ui-state-focus");
                }
            });
        },
        _trigger: function(type, event, data) {
            var prop, orig;
            var callback = this.options[type];
            data = data || {};
            event = $.Event(event);
            event.type = (type === this.widgetEventPrefix ? type : this.widgetEventPrefix + type).toLowerCase();
            // The original event may come from any element
            // so we need to reset the target on the new event
            event.target = this.element[0];
            // Copy original event properties over to the new event
            orig = event.originalEvent;
            if (orig) {
                for(prop in orig)if (!(prop in event)) event[prop] = orig[prop];
            }
            this.element.trigger(event, data);
            return !($.isFunction(callback) && callback.apply(this.element[0], [
                event
            ].concat(data)) === false || event.isDefaultPrevented());
        }
    };
    $.each({
        show: "fadeIn",
        hide: "fadeOut"
    }, function(method, defaultEffect) {
        $.Widget.prototype["_" + method] = function(element, options, callback) {
            if (typeof options === "string") options = {
                effect: options
            };
            var hasOptions;
            var effectName = !options ? method : options === true || typeof options === "number" ? defaultEffect : options.effect || defaultEffect;
            options = options || {};
            if (typeof options === "number") options = {
                duration: options
            };
            hasOptions = !$.isEmptyObject(options);
            options.complete = callback;
            if (options.delay) element.delay(options.delay);
            if (hasOptions && $.effects && $.effects.effect[effectName]) element[method](options);
            else if (effectName !== method && element[effectName]) element[effectName](options.duration, options.easing, callback);
            else element.queue(function(next) {
                $(this)[method]();
                if (callback) callback.call(element[0]);
                next();
            });
        };
    });
    var widget = $.widget;
    /*!
 * jQuery UI Position 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/position/
 */ //>>label: Position
    //>>group: Core
    //>>description: Positions elements relative to other elements.
    //>>docs: http://api.jqueryui.com/position/
    //>>demos: http://jqueryui.com/position/
    (function() {
        var cachedScrollbarWidth, max = Math.max, abs = Math.abs, rhorizontal = /left|center|right/, rvertical = /top|center|bottom/, roffset = /[\+\-]\d+(\.[\d]+)?%?/, rposition = /^\w+/, rpercent = /%$/, _position = $.fn.position;
        function getOffsets(offsets, width, height) {
            return [
                parseFloat(offsets[0]) * (rpercent.test(offsets[0]) ? width / 100 : 1),
                parseFloat(offsets[1]) * (rpercent.test(offsets[1]) ? height / 100 : 1)
            ];
        }
        function parseCss(element, property) {
            return parseInt($.css(element, property), 10) || 0;
        }
        function getDimensions(elem) {
            var raw = elem[0];
            if (raw.nodeType === 9) return {
                width: elem.width(),
                height: elem.height(),
                offset: {
                    top: 0,
                    left: 0
                }
            };
            if ($.isWindow(raw)) return {
                width: elem.width(),
                height: elem.height(),
                offset: {
                    top: elem.scrollTop(),
                    left: elem.scrollLeft()
                }
            };
            if (raw.preventDefault) return {
                width: 0,
                height: 0,
                offset: {
                    top: raw.pageY,
                    left: raw.pageX
                }
            };
            return {
                width: elem.outerWidth(),
                height: elem.outerHeight(),
                offset: elem.offset()
            };
        }
        $.position = {
            scrollbarWidth: function() {
                if (cachedScrollbarWidth !== undefined) return cachedScrollbarWidth;
                var w1, w2, div = $("<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"), innerDiv = div.children()[0];
                $("body").append(div);
                w1 = innerDiv.offsetWidth;
                div.css("overflow", "scroll");
                w2 = innerDiv.offsetWidth;
                if (w1 === w2) w2 = div[0].clientWidth;
                div.remove();
                return cachedScrollbarWidth = w1 - w2;
            },
            getScrollInfo: function(within) {
                var overflowX = within.isWindow || within.isDocument ? "" : within.element.css("overflow-x"), overflowY = within.isWindow || within.isDocument ? "" : within.element.css("overflow-y"), hasOverflowX = overflowX === "scroll" || overflowX === "auto" && within.width < within.element[0].scrollWidth, hasOverflowY = overflowY === "scroll" || overflowY === "auto" && within.height < within.element[0].scrollHeight;
                return {
                    width: hasOverflowY ? $.position.scrollbarWidth() : 0,
                    height: hasOverflowX ? $.position.scrollbarWidth() : 0
                };
            },
            getWithinInfo: function(element) {
                var withinElement = $(element || window), isWindow = $.isWindow(withinElement[0]), isDocument = !!withinElement[0] && withinElement[0].nodeType === 9, hasOffset = !isWindow && !isDocument;
                return {
                    element: withinElement,
                    isWindow: isWindow,
                    isDocument: isDocument,
                    offset: hasOffset ? $(element).offset() : {
                        left: 0,
                        top: 0
                    },
                    scrollLeft: withinElement.scrollLeft(),
                    scrollTop: withinElement.scrollTop(),
                    width: withinElement.outerWidth(),
                    height: withinElement.outerHeight()
                };
            }
        };
        $.fn.position = function(options) {
            if (!options || !options.of) return _position.apply(this, arguments);
            // Make a copy, we don't want to modify arguments
            options = $.extend({}, options);
            var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions, target = $(options.of), within = $.position.getWithinInfo(options.within), scrollInfo = $.position.getScrollInfo(within), collision = (options.collision || "flip").split(" "), offsets = {};
            dimensions = getDimensions(target);
            if (target[0].preventDefault) // Force left top to allow flipping
            options.at = "left top";
            targetWidth = dimensions.width;
            targetHeight = dimensions.height;
            targetOffset = dimensions.offset;
            // Clone to reuse original targetOffset later
            basePosition = $.extend({}, targetOffset);
            // Force my and at to have valid horizontal and vertical positions
            // if a value is missing or invalid, it will be converted to center
            $.each([
                "my",
                "at"
            ], function() {
                var pos = (options[this] || "").split(" "), horizontalOffset, verticalOffset;
                if (pos.length === 1) pos = rhorizontal.test(pos[0]) ? pos.concat([
                    "center"
                ]) : rvertical.test(pos[0]) ? [
                    "center"
                ].concat(pos) : [
                    "center",
                    "center"
                ];
                pos[0] = rhorizontal.test(pos[0]) ? pos[0] : "center";
                pos[1] = rvertical.test(pos[1]) ? pos[1] : "center";
                // Calculate offsets
                horizontalOffset = roffset.exec(pos[0]);
                verticalOffset = roffset.exec(pos[1]);
                offsets[this] = [
                    horizontalOffset ? horizontalOffset[0] : 0,
                    verticalOffset ? verticalOffset[0] : 0
                ];
                // Reduce to just the positions without the offsets
                options[this] = [
                    rposition.exec(pos[0])[0],
                    rposition.exec(pos[1])[0]
                ];
            });
            // Normalize collision option
            if (collision.length === 1) collision[1] = collision[0];
            if (options.at[0] === "right") basePosition.left += targetWidth;
            else if (options.at[0] === "center") basePosition.left += targetWidth / 2;
            if (options.at[1] === "bottom") basePosition.top += targetHeight;
            else if (options.at[1] === "center") basePosition.top += targetHeight / 2;
            atOffset = getOffsets(offsets.at, targetWidth, targetHeight);
            basePosition.left += atOffset[0];
            basePosition.top += atOffset[1];
            return this.each(function() {
                var collisionPosition, using, elem = $(this), elemWidth = elem.outerWidth(), elemHeight = elem.outerHeight(), marginLeft = parseCss(this, "marginLeft"), marginTop = parseCss(this, "marginTop"), collisionWidth = elemWidth + marginLeft + parseCss(this, "marginRight") + scrollInfo.width, collisionHeight = elemHeight + marginTop + parseCss(this, "marginBottom") + scrollInfo.height, position = $.extend({}, basePosition), myOffset = getOffsets(offsets.my, elem.outerWidth(), elem.outerHeight());
                if (options.my[0] === "right") position.left -= elemWidth;
                else if (options.my[0] === "center") position.left -= elemWidth / 2;
                if (options.my[1] === "bottom") position.top -= elemHeight;
                else if (options.my[1] === "center") position.top -= elemHeight / 2;
                position.left += myOffset[0];
                position.top += myOffset[1];
                collisionPosition = {
                    marginLeft: marginLeft,
                    marginTop: marginTop
                };
                $.each([
                    "left",
                    "top"
                ], function(i, dir) {
                    if ($.ui.position[collision[i]]) $.ui.position[collision[i]][dir](position, {
                        targetWidth: targetWidth,
                        targetHeight: targetHeight,
                        elemWidth: elemWidth,
                        elemHeight: elemHeight,
                        collisionPosition: collisionPosition,
                        collisionWidth: collisionWidth,
                        collisionHeight: collisionHeight,
                        offset: [
                            atOffset[0] + myOffset[0],
                            atOffset[1] + myOffset[1]
                        ],
                        my: options.my,
                        at: options.at,
                        within: within,
                        elem: elem
                    });
                });
                if (options.using) // Adds feedback as second argument to using callback, if present
                using = function(props) {
                    var left = targetOffset.left - position.left, right = left + targetWidth - elemWidth, top = targetOffset.top - position.top, bottom = top + targetHeight - elemHeight, feedback = {
                        target: {
                            element: target,
                            left: targetOffset.left,
                            top: targetOffset.top,
                            width: targetWidth,
                            height: targetHeight
                        },
                        element: {
                            element: elem,
                            left: position.left,
                            top: position.top,
                            width: elemWidth,
                            height: elemHeight
                        },
                        horizontal: right < 0 ? "left" : left > 0 ? "right" : "center",
                        vertical: bottom < 0 ? "top" : top > 0 ? "bottom" : "middle"
                    };
                    if (targetWidth < elemWidth && abs(left + right) < targetWidth) feedback.horizontal = "center";
                    if (targetHeight < elemHeight && abs(top + bottom) < targetHeight) feedback.vertical = "middle";
                    if (max(abs(left), abs(right)) > max(abs(top), abs(bottom))) feedback.important = "horizontal";
                    else feedback.important = "vertical";
                    options.using.call(this, props, feedback);
                };
                elem.offset($.extend(position, {
                    using: using
                }));
            });
        };
        $.ui.position = {
            fit: {
                left: function(position, data) {
                    var within = data.within, withinOffset = within.isWindow ? within.scrollLeft : within.offset.left, outerWidth = within.width, collisionPosLeft = position.left - data.collisionPosition.marginLeft, overLeft = withinOffset - collisionPosLeft, overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset, newOverRight;
                    // Element is wider than within
                    if (data.collisionWidth > outerWidth) {
                        // Element is initially over the left side of within
                        if (overLeft > 0 && overRight <= 0) {
                            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth - withinOffset;
                            position.left += overLeft - newOverRight;
                        // Element is initially over right side of within
                        } else if (overRight > 0 && overLeft <= 0) position.left = withinOffset;
                        else if (overLeft > overRight) position.left = withinOffset + outerWidth - data.collisionWidth;
                        else position.left = withinOffset;
                    // Too far left -> align with left edge
                    } else if (overLeft > 0) position.left += overLeft;
                    else if (overRight > 0) position.left -= overRight;
                    else position.left = max(position.left - collisionPosLeft, position.left);
                },
                top: function(position, data) {
                    var within = data.within, withinOffset = within.isWindow ? within.scrollTop : within.offset.top, outerHeight = data.within.height, collisionPosTop = position.top - data.collisionPosition.marginTop, overTop = withinOffset - collisionPosTop, overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset, newOverBottom;
                    // Element is taller than within
                    if (data.collisionHeight > outerHeight) {
                        // Element is initially over the top of within
                        if (overTop > 0 && overBottom <= 0) {
                            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight - withinOffset;
                            position.top += overTop - newOverBottom;
                        // Element is initially over bottom of within
                        } else if (overBottom > 0 && overTop <= 0) position.top = withinOffset;
                        else if (overTop > overBottom) position.top = withinOffset + outerHeight - data.collisionHeight;
                        else position.top = withinOffset;
                    // Too far up -> align with top
                    } else if (overTop > 0) position.top += overTop;
                    else if (overBottom > 0) position.top -= overBottom;
                    else position.top = max(position.top - collisionPosTop, position.top);
                }
            },
            flip: {
                left: function(position, data) {
                    var within = data.within, withinOffset = within.offset.left + within.scrollLeft, outerWidth = within.width, offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left, collisionPosLeft = position.left - data.collisionPosition.marginLeft, overLeft = collisionPosLeft - offsetLeft, overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft, myOffset = data.my[0] === "left" ? -data.elemWidth : data.my[0] === "right" ? data.elemWidth : 0, atOffset = data.at[0] === "left" ? data.targetWidth : data.at[0] === "right" ? -data.targetWidth : 0, offset = -2 * data.offset[0], newOverRight, newOverLeft;
                    if (overLeft < 0) {
                        newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth - outerWidth - withinOffset;
                        if (newOverRight < 0 || newOverRight < abs(overLeft)) position.left += myOffset + atOffset + offset;
                    } else if (overRight > 0) {
                        newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset + atOffset + offset - offsetLeft;
                        if (newOverLeft > 0 || abs(newOverLeft) < overRight) position.left += myOffset + atOffset + offset;
                    }
                },
                top: function(position, data) {
                    var within = data.within, withinOffset = within.offset.top + within.scrollTop, outerHeight = within.height, offsetTop = within.isWindow ? within.scrollTop : within.offset.top, collisionPosTop = position.top - data.collisionPosition.marginTop, overTop = collisionPosTop - offsetTop, overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop, top = data.my[1] === "top", myOffset = top ? -data.elemHeight : data.my[1] === "bottom" ? data.elemHeight : 0, atOffset = data.at[1] === "top" ? data.targetHeight : data.at[1] === "bottom" ? -data.targetHeight : 0, offset = -2 * data.offset[1], newOverTop, newOverBottom;
                    if (overTop < 0) {
                        newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight - outerHeight - withinOffset;
                        if (newOverBottom < 0 || newOverBottom < abs(overTop)) position.top += myOffset + atOffset + offset;
                    } else if (overBottom > 0) {
                        newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset + offset - offsetTop;
                        if (newOverTop > 0 || abs(newOverTop) < overBottom) position.top += myOffset + atOffset + offset;
                    }
                }
            },
            flipfit: {
                left: function() {
                    $.ui.position.flip.left.apply(this, arguments);
                    $.ui.position.fit.left.apply(this, arguments);
                },
                top: function() {
                    $.ui.position.flip.top.apply(this, arguments);
                    $.ui.position.fit.top.apply(this, arguments);
                }
            }
        };
    })();
    var position = $.ui.position;
    /*!
 * jQuery UI :data 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: :data Selector
    //>>group: Core
    //>>description: Selects elements which have data stored under the specified key.
    //>>docs: http://api.jqueryui.com/data-selector/
    var data = $.extend($.expr[":"], {
        data: $.expr.createPseudo ? $.expr.createPseudo(function(dataName) {
            return function(elem) {
                return !!$.data(elem, dataName);
            };
        }) : // Support: jQuery <1.8
        function(elem, i, match) {
            return !!$.data(elem, match[3]);
        }
    });
    /*!
 * jQuery UI Disable Selection 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: disableSelection
    //>>group: Core
    //>>description: Disable selection of text content within the set of matched elements.
    //>>docs: http://api.jqueryui.com/disableSelection/
    // This file is deprecated
    var disableSelection = $.fn.extend({
        disableSelection: function() {
            var eventType = "onselectstart" in document.createElement("div") ? "selectstart" : "mousedown";
            return function() {
                return this.on(eventType + ".ui-disableSelection", function(event) {
                    event.preventDefault();
                });
            };
        }(),
        enableSelection: function() {
            return this.off(".ui-disableSelection");
        }
    });
    /*!
 * jQuery UI Effects 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Effects Core
    //>>group: Effects
    // jscs:disable maximumLineLength
    //>>description: Extends the internal jQuery effects. Includes morphing and easing. Required by all other effects.
    // jscs:enable maximumLineLength
    //>>docs: http://api.jqueryui.com/category/effects-core/
    //>>demos: http://jqueryui.com/effect/
    var dataSpace = "ui-effects-", dataSpaceStyle = "ui-effects-style", dataSpaceAnimated = "ui-effects-animated", // Create a local jQuery because jQuery Color relies on it and the
    // global may not exist with AMD and a custom build (#10199)
    jQuery1 = $;
    $.effects = {
        effect: {}
    };
    /*!
 * jQuery Color Animations v2.1.2
 * https://github.com/jquery/jquery-color
 *
 * Copyright 2014 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * Date: Wed Jan 16 08:47:09 2013 -0600
 */ (function(jQuery1, undefined1) {
        var stepHooks = "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor", // Plusequals test for += 100 -= 100
        rplusequals = /^([\-+])=\s*(\d+\.?\d*)/, // A set of RE's that can match strings and generate color tuples.
        stringParsers = [
            {
                re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
                parse: function(execResult) {
                    return [
                        execResult[1],
                        execResult[2],
                        execResult[3],
                        execResult[4]
                    ];
                }
            },
            {
                re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
                parse: function(execResult) {
                    return [
                        execResult[1] * 2.55,
                        execResult[2] * 2.55,
                        execResult[3] * 2.55,
                        execResult[4]
                    ];
                }
            },
            {
                // This regex ignores A-F because it's compared against an already lowercased string
                re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,
                parse: function(execResult) {
                    return [
                        parseInt(execResult[1], 16),
                        parseInt(execResult[2], 16),
                        parseInt(execResult[3], 16)
                    ];
                }
            },
            {
                // This regex ignores A-F because it's compared against an already lowercased string
                re: /#([a-f0-9])([a-f0-9])([a-f0-9])/,
                parse: function(execResult) {
                    return [
                        parseInt(execResult[1] + execResult[1], 16),
                        parseInt(execResult[2] + execResult[2], 16),
                        parseInt(execResult[3] + execResult[3], 16)
                    ];
                }
            },
            {
                re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
                space: "hsla",
                parse: function(execResult) {
                    return [
                        execResult[1],
                        execResult[2] / 100,
                        execResult[3] / 100,
                        execResult[4]
                    ];
                }
            }
        ], // JQuery.Color( )
        color = jQuery1.Color = function(color, green, blue, alpha) {
            return new jQuery1.Color.fn.parse(color, green, blue, alpha);
        }, spaces = {
            rgba: {
                props: {
                    red: {
                        idx: 0,
                        type: "byte"
                    },
                    green: {
                        idx: 1,
                        type: "byte"
                    },
                    blue: {
                        idx: 2,
                        type: "byte"
                    }
                }
            },
            hsla: {
                props: {
                    hue: {
                        idx: 0,
                        type: "degrees"
                    },
                    saturation: {
                        idx: 1,
                        type: "percent"
                    },
                    lightness: {
                        idx: 2,
                        type: "percent"
                    }
                }
            }
        }, propTypes = {
            "byte": {
                floor: true,
                max: 255
            },
            "percent": {
                max: 1
            },
            "degrees": {
                mod: 360,
                floor: true
            }
        }, support = color.support = {}, // Element for support tests
        supportElem = jQuery1("<p>")[0], // Colors = jQuery.Color.names
        colors, // Local aliases of functions called often
        each = jQuery1.each;
        // Determine rgba support immediately
        supportElem.style.cssText = "background-color:rgba(1,1,1,.5)";
        support.rgba = supportElem.style.backgroundColor.indexOf("rgba") > -1;
        // Define cache name and alpha properties
        // for rgba and hsla spaces
        each(spaces, function(spaceName, space) {
            space.cache = "_" + spaceName;
            space.props.alpha = {
                idx: 3,
                type: "percent",
                def: 1
            };
        });
        function clamp(value, prop, allowEmpty) {
            var type = propTypes[prop.type] || {};
            if (value == null) return allowEmpty || !prop.def ? null : prop.def;
            // ~~ is an short way of doing floor for positive numbers
            value = type.floor ? ~~value : parseFloat(value);
            // IE will pass in empty strings as value for alpha,
            // which will hit this case
            if (isNaN(value)) return prop.def;
            if (type.mod) // We add mod before modding to make sure that negatives values
            // get converted properly: -10 -> 350
            return (value + type.mod) % type.mod;
            // For now all property types without mod have min and max
            return 0 > value ? 0 : type.max < value ? type.max : value;
        }
        function stringParse(string) {
            var inst = color(), rgba = inst._rgba = [];
            string = string.toLowerCase();
            each(stringParsers, function(i, parser) {
                var parsed, match = parser.re.exec(string), values = match && parser.parse(match), spaceName = parser.space || "rgba";
                if (values) {
                    parsed = inst[spaceName](values);
                    // If this was an rgba parse the assignment might happen twice
                    // oh well....
                    inst[spaces[spaceName].cache] = parsed[spaces[spaceName].cache];
                    rgba = inst._rgba = parsed._rgba;
                    // Exit each( stringParsers ) here because we matched
                    return false;
                }
            });
            // Found a stringParser that handled it
            if (rgba.length) {
                // If this came from a parsed string, force "transparent" when alpha is 0
                // chrome, (and maybe others) return "transparent" as rgba(0,0,0,0)
                if (rgba.join() === "0,0,0,0") jQuery1.extend(rgba, colors.transparent);
                return inst;
            }
            // Named colors
            return colors[string];
        }
        color.fn = jQuery1.extend(color.prototype, {
            parse: function(red, green, blue, alpha) {
                if (red === undefined1) {
                    this._rgba = [
                        null,
                        null,
                        null,
                        null
                    ];
                    return this;
                }
                if (red.jquery || red.nodeType) {
                    red = jQuery1(red).css(green);
                    green = undefined1;
                }
                var inst = this, type = jQuery1.type(red), rgba = this._rgba = [];
                // More than 1 argument specified - assume ( red, green, blue, alpha )
                if (green !== undefined1) {
                    red = [
                        red,
                        green,
                        blue,
                        alpha
                    ];
                    type = "array";
                }
                if (type === "string") return this.parse(stringParse(red) || colors._default);
                if (type === "array") {
                    each(spaces.rgba.props, function(key, prop) {
                        rgba[prop.idx] = clamp(red[prop.idx], prop);
                    });
                    return this;
                }
                if (type === "object") {
                    if (red instanceof color) each(spaces, function(spaceName, space) {
                        if (red[space.cache]) inst[space.cache] = red[space.cache].slice();
                    });
                    else each(spaces, function(spaceName, space) {
                        var cache = space.cache;
                        each(space.props, function(key, prop) {
                            // If the cache doesn't exist, and we know how to convert
                            if (!inst[cache] && space.to) {
                                // If the value was null, we don't need to copy it
                                // if the key was alpha, we don't need to copy it either
                                if (key === "alpha" || red[key] == null) return;
                                inst[cache] = space.to(inst._rgba);
                            }
                            // This is the only case where we allow nulls for ALL properties.
                            // call clamp with alwaysAllowEmpty
                            inst[cache][prop.idx] = clamp(red[key], prop, true);
                        });
                        // Everything defined but alpha?
                        if (inst[cache] && jQuery1.inArray(null, inst[cache].slice(0, 3)) < 0) {
                            // Use the default of 1
                            inst[cache][3] = 1;
                            if (space.from) inst._rgba = space.from(inst[cache]);
                        }
                    });
                    return this;
                }
            },
            is: function(compare) {
                var is = color(compare), same = true, inst = this;
                each(spaces, function(_, space) {
                    var localCache, isCache = is[space.cache];
                    if (isCache) {
                        localCache = inst[space.cache] || space.to && space.to(inst._rgba) || [];
                        each(space.props, function(_, prop) {
                            if (isCache[prop.idx] != null) {
                                same = isCache[prop.idx] === localCache[prop.idx];
                                return same;
                            }
                        });
                    }
                    return same;
                });
                return same;
            },
            _space: function() {
                var used = [], inst = this;
                each(spaces, function(spaceName, space) {
                    if (inst[space.cache]) used.push(spaceName);
                });
                return used.pop();
            },
            transition: function(other, distance) {
                var end = color(other), spaceName = end._space(), space = spaces[spaceName], startColor = this.alpha() === 0 ? color("transparent") : this, start = startColor[space.cache] || space.to(startColor._rgba), result = start.slice();
                end = end[space.cache];
                each(space.props, function(key, prop) {
                    var index = prop.idx, startValue = start[index], endValue = end[index], type = propTypes[prop.type] || {};
                    // If null, don't override start value
                    if (endValue === null) return;
                    // If null - use end
                    if (startValue === null) result[index] = endValue;
                    else {
                        if (type.mod) {
                            if (endValue - startValue > type.mod / 2) startValue += type.mod;
                            else if (startValue - endValue > type.mod / 2) startValue -= type.mod;
                        }
                        result[index] = clamp((endValue - startValue) * distance + startValue, prop);
                    }
                });
                return this[spaceName](result);
            },
            blend: function(opaque) {
                // If we are already opaque - return ourself
                if (this._rgba[3] === 1) return this;
                var rgb = this._rgba.slice(), a = rgb.pop(), blend = color(opaque)._rgba;
                return color(jQuery1.map(rgb, function(v, i) {
                    return (1 - a) * blend[i] + a * v;
                }));
            },
            toRgbaString: function() {
                var prefix = "rgba(", rgba = jQuery1.map(this._rgba, function(v, i) {
                    return v == null ? i > 2 ? 1 : 0 : v;
                });
                if (rgba[3] === 1) {
                    rgba.pop();
                    prefix = "rgb(";
                }
                return prefix + rgba.join() + ")";
            },
            toHslaString: function() {
                var prefix = "hsla(", hsla = jQuery1.map(this.hsla(), function(v, i) {
                    if (v == null) v = i > 2 ? 1 : 0;
                    // Catch 1 and 2
                    if (i && i < 3) v = Math.round(v * 100) + "%";
                    return v;
                });
                if (hsla[3] === 1) {
                    hsla.pop();
                    prefix = "hsl(";
                }
                return prefix + hsla.join() + ")";
            },
            toHexString: function(includeAlpha) {
                var rgba = this._rgba.slice(), alpha = rgba.pop();
                if (includeAlpha) rgba.push(~~(alpha * 255));
                return "#" + jQuery1.map(rgba, function(v) {
                    // Default to 0 when nulls exist
                    v = (v || 0).toString(16);
                    return v.length === 1 ? "0" + v : v;
                }).join("");
            },
            toString: function() {
                return this._rgba[3] === 0 ? "transparent" : this.toRgbaString();
            }
        });
        color.fn.parse.prototype = color.fn;
        // Hsla conversions adapted from:
        // https://code.google.com/p/maashaack/source/browse/packages/graphics/trunk/src/graphics/colors/HUE2RGB.as?r=5021
        function hue2rgb(p, q, h) {
            h = (h + 1) % 1;
            if (h * 6 < 1) return p + (q - p) * h * 6;
            if (h * 2 < 1) return q;
            if (h * 3 < 2) return p + (q - p) * (2 / 3 - h) * 6;
            return p;
        }
        spaces.hsla.to = function(rgba) {
            if (rgba[0] == null || rgba[1] == null || rgba[2] == null) return [
                null,
                null,
                null,
                rgba[3]
            ];
            var r = rgba[0] / 255, g = rgba[1] / 255, b = rgba[2] / 255, a = rgba[3], max = Math.max(r, g, b), min = Math.min(r, g, b), diff = max - min, add = max + min, l = add * 0.5, h, s;
            if (min === max) h = 0;
            else if (r === max) h = 60 * (g - b) / diff + 360;
            else if (g === max) h = 60 * (b - r) / diff + 120;
            else h = 60 * (r - g) / diff + 240;
            // Chroma (diff) == 0 means greyscale which, by definition, saturation = 0%
            // otherwise, saturation is based on the ratio of chroma (diff) to lightness (add)
            if (diff === 0) s = 0;
            else if (l <= 0.5) s = diff / add;
            else s = diff / (2 - add);
            return [
                Math.round(h) % 360,
                s,
                l,
                a == null ? 1 : a
            ];
        };
        spaces.hsla.from = function(hsla) {
            if (hsla[0] == null || hsla[1] == null || hsla[2] == null) return [
                null,
                null,
                null,
                hsla[3]
            ];
            var h = hsla[0] / 360, s = hsla[1], l = hsla[2], a = hsla[3], q = l <= 0.5 ? l * (1 + s) : l + s - l * s, p = 2 * l - q;
            return [
                Math.round(hue2rgb(p, q, h + 1 / 3) * 255),
                Math.round(hue2rgb(p, q, h) * 255),
                Math.round(hue2rgb(p, q, h - 1 / 3) * 255),
                a
            ];
        };
        each(spaces, function(spaceName, space) {
            var props = space.props, cache = space.cache, to = space.to, from = space.from;
            // Makes rgba() and hsla()
            color.fn[spaceName] = function(value) {
                // Generate a cache for this space if it doesn't exist
                if (to && !this[cache]) this[cache] = to(this._rgba);
                if (value === undefined1) return this[cache].slice();
                var ret, type = jQuery1.type(value), arr = type === "array" || type === "object" ? value : arguments, local = this[cache].slice();
                each(props, function(key, prop) {
                    var val = arr[type === "object" ? key : prop.idx];
                    if (val == null) val = local[prop.idx];
                    local[prop.idx] = clamp(val, prop);
                });
                if (from) {
                    ret = color(from(local));
                    ret[cache] = local;
                    return ret;
                } else return color(local);
            };
            // Makes red() green() blue() alpha() hue() saturation() lightness()
            each(props, function(key, prop) {
                // Alpha is included in more than one space
                if (color.fn[key]) return;
                color.fn[key] = function(value) {
                    var vtype = jQuery1.type(value), fn = key === "alpha" ? this._hsla ? "hsla" : "rgba" : spaceName, local = this[fn](), cur = local[prop.idx], match;
                    if (vtype === "undefined") return cur;
                    if (vtype === "function") {
                        value = value.call(this, cur);
                        vtype = jQuery1.type(value);
                    }
                    if (value == null && prop.empty) return this;
                    if (vtype === "string") {
                        match = rplusequals.exec(value);
                        if (match) value = cur + parseFloat(match[2]) * (match[1] === "+" ? 1 : -1);
                    }
                    local[prop.idx] = value;
                    return this[fn](local);
                };
            });
        });
        // Add cssHook and .fx.step function for each named hook.
        // accept a space separated string of properties
        color.hook = function(hook) {
            var hooks = hook.split(" ");
            each(hooks, function(i, hook) {
                jQuery1.cssHooks[hook] = {
                    set: function(elem, value) {
                        var parsed, curElem, backgroundColor = "";
                        if (value !== "transparent" && (jQuery1.type(value) !== "string" || (parsed = stringParse(value)))) {
                            value = color(parsed || value);
                            if (!support.rgba && value._rgba[3] !== 1) {
                                curElem = hook === "backgroundColor" ? elem.parentNode : elem;
                                while((backgroundColor === "" || backgroundColor === "transparent") && curElem && curElem.style)try {
                                    backgroundColor = jQuery1.css(curElem, "backgroundColor");
                                    curElem = curElem.parentNode;
                                } catch (e) {}
                                value = value.blend(backgroundColor && backgroundColor !== "transparent" ? backgroundColor : "_default");
                            }
                            value = value.toRgbaString();
                        }
                        try {
                            elem.style[hook] = value;
                        } catch (e1) {
                        // Wrapped to prevent IE from throwing errors on "invalid" values like
                        // 'auto' or 'inherit'
                        }
                    }
                };
                jQuery1.fx.step[hook] = function(fx) {
                    if (!fx.colorInit) {
                        fx.start = color(fx.elem, hook);
                        fx.end = color(fx.end);
                        fx.colorInit = true;
                    }
                    jQuery1.cssHooks[hook].set(fx.elem, fx.start.transition(fx.end, fx.pos));
                };
            });
        };
        color.hook(stepHooks);
        jQuery1.cssHooks.borderColor = {
            expand: function(value) {
                var expanded = {};
                each([
                    "Top",
                    "Right",
                    "Bottom",
                    "Left"
                ], function(i, part) {
                    expanded["border" + part + "Color"] = value;
                });
                return expanded;
            }
        };
        // Basic color names only.
        // Usage of any of the other color names requires adding yourself or including
        // jquery.color.svg-names.js.
        colors = jQuery1.Color.names = {
            // 4.1. Basic color keywords
            aqua: "#00ffff",
            black: "#000000",
            blue: "#0000ff",
            fuchsia: "#ff00ff",
            gray: "#808080",
            green: "#008000",
            lime: "#00ff00",
            maroon: "#800000",
            navy: "#000080",
            olive: "#808000",
            purple: "#800080",
            red: "#ff0000",
            silver: "#c0c0c0",
            teal: "#008080",
            white: "#ffffff",
            yellow: "#ffff00",
            // 4.2.3. "transparent" color keyword
            transparent: [
                null,
                null,
                null,
                0
            ],
            _default: "#ffffff"
        };
    })(jQuery1);
    /******************************************************************************/ /****************************** CLASS ANIMATIONS ******************************/ /******************************************************************************/ (function() {
        var classAnimationActions = [
            "add",
            "remove",
            "toggle"
        ], shorthandStyles = {
            border: 1,
            borderBottom: 1,
            borderColor: 1,
            borderLeft: 1,
            borderRight: 1,
            borderTop: 1,
            borderWidth: 1,
            margin: 1,
            padding: 1
        };
        $.each([
            "borderLeftStyle",
            "borderRightStyle",
            "borderBottomStyle",
            "borderTopStyle"
        ], function(_, prop) {
            $.fx.step[prop] = function(fx) {
                if (fx.end !== "none" && !fx.setAttr || fx.pos === 1 && !fx.setAttr) {
                    jQuery1.style(fx.elem, prop, fx.end);
                    fx.setAttr = true;
                }
            };
        });
        function getElementStyles(elem) {
            var key, len, style = elem.ownerDocument.defaultView ? elem.ownerDocument.defaultView.getComputedStyle(elem, null) : elem.currentStyle, styles = {};
            if (style && style.length && style[0] && style[style[0]]) {
                len = style.length;
                while(len--){
                    key = style[len];
                    if (typeof style[key] === "string") styles[$.camelCase(key)] = style[key];
                }
            // Support: Opera, IE <9
            } else {
                for(key in style)if (typeof style[key] === "string") styles[key] = style[key];
            }
            return styles;
        }
        function styleDifference(oldStyle, newStyle) {
            var diff = {}, name, value;
            for(name in newStyle){
                value = newStyle[name];
                if (oldStyle[name] !== value) {
                    if (!shorthandStyles[name]) {
                        if ($.fx.step[name] || !isNaN(parseFloat(value))) diff[name] = value;
                    }
                }
            }
            return diff;
        }
        // Support: jQuery <1.8
        if (!$.fn.addBack) $.fn.addBack = function(selector) {
            return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));
        };
        $.effects.animateClass = function(value, duration, easing, callback) {
            var o = $.speed(duration, easing, callback);
            return this.queue(function() {
                var animated = $(this), baseClass = animated.attr("class") || "", applyClassChange, allAnimations = o.children ? animated.find("*").addBack() : animated;
                // Map the animated objects to store the original styles.
                allAnimations = allAnimations.map(function() {
                    var el = $(this);
                    return {
                        el: el,
                        start: getElementStyles(this)
                    };
                });
                // Apply class change
                applyClassChange = function() {
                    $.each(classAnimationActions, function(i, action) {
                        if (value[action]) animated[action + "Class"](value[action]);
                    });
                };
                applyClassChange();
                // Map all animated objects again - calculate new styles and diff
                allAnimations = allAnimations.map(function() {
                    this.end = getElementStyles(this.el[0]);
                    this.diff = styleDifference(this.start, this.end);
                    return this;
                });
                // Apply original class
                animated.attr("class", baseClass);
                // Map all animated objects again - this time collecting a promise
                allAnimations = allAnimations.map(function() {
                    var styleInfo = this, dfd = $.Deferred(), opts = $.extend({}, o, {
                        queue: false,
                        complete: function() {
                            dfd.resolve(styleInfo);
                        }
                    });
                    this.el.animate(this.diff, opts);
                    return dfd.promise();
                });
                // Once all animations have completed:
                $.when.apply($, allAnimations.get()).done(function() {
                    // Set the final class
                    applyClassChange();
                    // For each animated element,
                    // clear all css properties that were animated
                    $.each(arguments, function() {
                        var el = this.el;
                        $.each(this.diff, function(key) {
                            el.css(key, "");
                        });
                    });
                    // This is guarnteed to be there if you use jQuery.speed()
                    // it also handles dequeuing the next anim...
                    o.complete.call(animated[0]);
                });
            });
        };
        $.fn.extend({
            addClass: function(orig) {
                return function(classNames, speed, easing, callback) {
                    return speed ? $.effects.animateClass.call(this, {
                        add: classNames
                    }, speed, easing, callback) : orig.apply(this, arguments);
                };
            }($.fn.addClass),
            removeClass: function(orig) {
                return function(classNames, speed, easing, callback) {
                    return arguments.length > 1 ? $.effects.animateClass.call(this, {
                        remove: classNames
                    }, speed, easing, callback) : orig.apply(this, arguments);
                };
            }($.fn.removeClass),
            toggleClass: function(orig) {
                return function(classNames, force, speed, easing, callback) {
                    if (typeof force === "boolean" || force === undefined) {
                        if (!speed) // Without speed parameter
                        return orig.apply(this, arguments);
                        else return $.effects.animateClass.call(this, force ? {
                            add: classNames
                        } : {
                            remove: classNames
                        }, speed, easing, callback);
                    } else // Without force parameter
                    return $.effects.animateClass.call(this, {
                        toggle: classNames
                    }, force, speed, easing);
                };
            }($.fn.toggleClass),
            switchClass: function(remove, add, speed, easing, callback) {
                return $.effects.animateClass.call(this, {
                    add: add,
                    remove: remove
                }, speed, easing, callback);
            }
        });
    })();
    /******************************************************************************/ /*********************************** EFFECTS **********************************/ /******************************************************************************/ (function() {
        if ($.expr && $.expr.filters && $.expr.filters.animated) $.expr.filters.animated = function(orig) {
            return function(elem) {
                return !!$(elem).data(dataSpaceAnimated) || orig(elem);
            };
        }($.expr.filters.animated);
        if ($.uiBackCompat !== false) $.extend($.effects, {
            // Saves a set of properties in a data storage
            save: function(element, set) {
                var i = 0, length = set.length;
                for(; i < length; i++)if (set[i] !== null) element.data(dataSpace + set[i], element[0].style[set[i]]);
            },
            // Restores a set of previously saved properties from a data storage
            restore: function(element, set) {
                var val, i = 0, length = set.length;
                for(; i < length; i++)if (set[i] !== null) {
                    val = element.data(dataSpace + set[i]);
                    element.css(set[i], val);
                }
            },
            setMode: function(el, mode) {
                if (mode === "toggle") mode = el.is(":hidden") ? "show" : "hide";
                return mode;
            },
            // Wraps the element around a wrapper that copies position properties
            createWrapper: function(element) {
                // If the element is already wrapped, return it
                if (element.parent().is(".ui-effects-wrapper")) return element.parent();
                // Wrap the element
                var props = {
                    width: element.outerWidth(true),
                    height: element.outerHeight(true),
                    "float": element.css("float")
                }, wrapper = $("<div></div>").addClass("ui-effects-wrapper").css({
                    fontSize: "100%",
                    background: "transparent",
                    border: "none",
                    margin: 0,
                    padding: 0
                }), // Store the size in case width/height are defined in % - Fixes #5245
                size = {
                    width: element.width(),
                    height: element.height()
                }, active = document.activeElement;
                // Support: Firefox
                // Firefox incorrectly exposes anonymous content
                // https://bugzilla.mozilla.org/show_bug.cgi?id=561664
                try {
                    active.id;
                } catch (e) {
                    active = document.body;
                }
                element.wrap(wrapper);
                // Fixes #7595 - Elements lose focus when wrapped.
                if (element[0] === active || $.contains(element[0], active)) $(active).trigger("focus");
                // Hotfix for jQuery 1.4 since some change in wrap() seems to actually
                // lose the reference to the wrapped element
                wrapper = element.parent();
                // Transfer positioning properties to the wrapper
                if (element.css("position") === "static") {
                    wrapper.css({
                        position: "relative"
                    });
                    element.css({
                        position: "relative"
                    });
                } else {
                    $.extend(props, {
                        position: element.css("position"),
                        zIndex: element.css("z-index")
                    });
                    $.each([
                        "top",
                        "left",
                        "bottom",
                        "right"
                    ], function(i, pos) {
                        props[pos] = element.css(pos);
                        if (isNaN(parseInt(props[pos], 10))) props[pos] = "auto";
                    });
                    element.css({
                        position: "relative",
                        top: 0,
                        left: 0,
                        right: "auto",
                        bottom: "auto"
                    });
                }
                element.css(size);
                return wrapper.css(props).show();
            },
            removeWrapper: function(element) {
                var active = document.activeElement;
                if (element.parent().is(".ui-effects-wrapper")) {
                    element.parent().replaceWith(element);
                    // Fixes #7595 - Elements lose focus when wrapped.
                    if (element[0] === active || $.contains(element[0], active)) $(active).trigger("focus");
                }
                return element;
            }
        });
        $.extend($.effects, {
            version: "1.12.1",
            define: function(name, mode, effect) {
                if (!effect) {
                    effect = mode;
                    mode = "effect";
                }
                $.effects.effect[name] = effect;
                $.effects.effect[name].mode = mode;
                return effect;
            },
            scaledDimensions: function(element, percent, direction) {
                if (percent === 0) return {
                    height: 0,
                    width: 0,
                    outerHeight: 0,
                    outerWidth: 0
                };
                var x = direction !== "horizontal" ? (percent || 100) / 100 : 1, y = direction !== "vertical" ? (percent || 100) / 100 : 1;
                return {
                    height: element.height() * y,
                    width: element.width() * x,
                    outerHeight: element.outerHeight() * y,
                    outerWidth: element.outerWidth() * x
                };
            },
            clipToBox: function(animation) {
                return {
                    width: animation.clip.right - animation.clip.left,
                    height: animation.clip.bottom - animation.clip.top,
                    left: animation.clip.left,
                    top: animation.clip.top
                };
            },
            // Injects recently queued functions to be first in line (after "inprogress")
            unshift: function(element, queueLength, count) {
                var queue = element.queue();
                if (queueLength > 1) queue.splice.apply(queue, [
                    1,
                    0
                ].concat(queue.splice(queueLength, count)));
                element.dequeue();
            },
            saveStyle: function(element) {
                element.data(dataSpaceStyle, element[0].style.cssText);
            },
            restoreStyle: function(element) {
                element[0].style.cssText = element.data(dataSpaceStyle) || "";
                element.removeData(dataSpaceStyle);
            },
            mode: function(element, mode) {
                var hidden = element.is(":hidden");
                if (mode === "toggle") mode = hidden ? "show" : "hide";
                if (hidden ? mode === "hide" : mode === "show") mode = "none";
                return mode;
            },
            // Translates a [top,left] array into a baseline value
            getBaseline: function(origin, original) {
                var y, x;
                switch(origin[0]){
                    case "top":
                        y = 0;
                        break;
                    case "middle":
                        y = 0.5;
                        break;
                    case "bottom":
                        y = 1;
                        break;
                    default:
                        y = origin[0] / original.height;
                }
                switch(origin[1]){
                    case "left":
                        x = 0;
                        break;
                    case "center":
                        x = 0.5;
                        break;
                    case "right":
                        x = 1;
                        break;
                    default:
                        x = origin[1] / original.width;
                }
                return {
                    x: x,
                    y: y
                };
            },
            // Creates a placeholder element so that the original element can be made absolute
            createPlaceholder: function(element) {
                var placeholder, cssPosition = element.css("position"), position = element.position();
                // Lock in margins first to account for form elements, which
                // will change margin if you explicitly set height
                // see: http://jsfiddle.net/JZSMt/3/ https://bugs.webkit.org/show_bug.cgi?id=107380
                // Support: Safari
                element.css({
                    marginTop: element.css("marginTop"),
                    marginBottom: element.css("marginBottom"),
                    marginLeft: element.css("marginLeft"),
                    marginRight: element.css("marginRight")
                }).outerWidth(element.outerWidth()).outerHeight(element.outerHeight());
                if (/^(static|relative)/.test(cssPosition)) {
                    cssPosition = "absolute";
                    placeholder = $("<" + element[0].nodeName + ">").insertAfter(element).css({
                        // Convert inline to inline block to account for inline elements
                        // that turn to inline block based on content (like img)
                        display: /^(inline|ruby)/.test(element.css("display")) ? "inline-block" : "block",
                        visibility: "hidden",
                        // Margins need to be set to account for margin collapse
                        marginTop: element.css("marginTop"),
                        marginBottom: element.css("marginBottom"),
                        marginLeft: element.css("marginLeft"),
                        marginRight: element.css("marginRight"),
                        "float": element.css("float")
                    }).outerWidth(element.outerWidth()).outerHeight(element.outerHeight()).addClass("ui-effects-placeholder");
                    element.data(dataSpace + "placeholder", placeholder);
                }
                element.css({
                    position: cssPosition,
                    left: position.left,
                    top: position.top
                });
                return placeholder;
            },
            removePlaceholder: function(element) {
                var dataKey = dataSpace + "placeholder", placeholder = element.data(dataKey);
                if (placeholder) {
                    placeholder.remove();
                    element.removeData(dataKey);
                }
            },
            // Removes a placeholder if it exists and restores
            // properties that were modified during placeholder creation
            cleanUp: function(element) {
                $.effects.restoreStyle(element);
                $.effects.removePlaceholder(element);
            },
            setTransition: function(element, list, factor, value) {
                value = value || {};
                $.each(list, function(i, x) {
                    var unit = element.cssUnit(x);
                    if (unit[0] > 0) value[x] = unit[0] * factor + unit[1];
                });
                return value;
            }
        });
        // Return an effect options object for the given parameters:
        function _normalizeArguments(effect, options, speed, callback) {
            // Allow passing all options as the first parameter
            if ($.isPlainObject(effect)) {
                options = effect;
                effect = effect.effect;
            }
            // Convert to an object
            effect = {
                effect: effect
            };
            // Catch (effect, null, ...)
            if (options == null) options = {};
            // Catch (effect, callback)
            if ($.isFunction(options)) {
                callback = options;
                speed = null;
                options = {};
            }
            // Catch (effect, speed, ?)
            if (typeof options === "number" || $.fx.speeds[options]) {
                callback = speed;
                speed = options;
                options = {};
            }
            // Catch (effect, options, callback)
            if ($.isFunction(speed)) {
                callback = speed;
                speed = null;
            }
            // Add options to effect
            if (options) $.extend(effect, options);
            speed = speed || options.duration;
            effect.duration = $.fx.off ? 0 : typeof speed === "number" ? speed : speed in $.fx.speeds ? $.fx.speeds[speed] : $.fx.speeds._default;
            effect.complete = callback || options.complete;
            return effect;
        }
        function standardAnimationOption(option) {
            // Valid standard speeds (nothing, number, named speed)
            if (!option || typeof option === "number" || $.fx.speeds[option]) return true;
            // Invalid strings - treat as "normal" speed
            if (typeof option === "string" && !$.effects.effect[option]) return true;
            // Complete callback
            if ($.isFunction(option)) return true;
            // Options hash (but not naming an effect)
            if (typeof option === "object" && !option.effect) return true;
            // Didn't match any standard API
            return false;
        }
        $.fn.extend({
            effect: function() {
                var args = _normalizeArguments.apply(this, arguments), effectMethod = $.effects.effect[args.effect], defaultMode = effectMethod.mode, queue = args.queue, queueName = queue || "fx", complete = args.complete, mode = args.mode, modes = [], prefilter = function(next) {
                    var el = $(this), normalizedMode = $.effects.mode(el, mode) || defaultMode;
                    // Sentinel for duck-punching the :animated psuedo-selector
                    el.data(dataSpaceAnimated, true);
                    // Save effect mode for later use,
                    // we can't just call $.effects.mode again later,
                    // as the .show() below destroys the initial state
                    modes.push(normalizedMode);
                    // See $.uiBackCompat inside of run() for removal of defaultMode in 1.13
                    if (defaultMode && (normalizedMode === "show" || normalizedMode === defaultMode && normalizedMode === "hide")) el.show();
                    if (!defaultMode || normalizedMode !== "none") $.effects.saveStyle(el);
                    if ($.isFunction(next)) next();
                };
                if ($.fx.off || !effectMethod) {
                    // Delegate to the original method (e.g., .show()) if possible
                    if (mode) return this[mode](args.duration, complete);
                    else return this.each(function() {
                        if (complete) complete.call(this);
                    });
                }
                function run(next) {
                    var elem = $(this);
                    function cleanup() {
                        elem.removeData(dataSpaceAnimated);
                        $.effects.cleanUp(elem);
                        if (args.mode === "hide") elem.hide();
                        done();
                    }
                    function done() {
                        if ($.isFunction(complete)) complete.call(elem[0]);
                        if ($.isFunction(next)) next();
                    }
                    // Override mode option on a per element basis,
                    // as toggle can be either show or hide depending on element state
                    args.mode = modes.shift();
                    if ($.uiBackCompat !== false && !defaultMode) {
                        if (elem.is(":hidden") ? mode === "hide" : mode === "show") {
                            // Call the core method to track "olddisplay" properly
                            elem[mode]();
                            done();
                        } else effectMethod.call(elem[0], args, done);
                    } else if (args.mode === "none") {
                        // Call the core method to track "olddisplay" properly
                        elem[mode]();
                        done();
                    } else effectMethod.call(elem[0], args, cleanup);
                }
                // Run prefilter on all elements first to ensure that
                // any showing or hiding happens before placeholder creation,
                // which ensures that any layout changes are correctly captured.
                return queue === false ? this.each(prefilter).each(run) : this.queue(queueName, prefilter).queue(queueName, run);
            },
            show: function(orig) {
                return function(option) {
                    if (standardAnimationOption(option)) return orig.apply(this, arguments);
                    else {
                        var args = _normalizeArguments.apply(this, arguments);
                        args.mode = "show";
                        return this.effect.call(this, args);
                    }
                };
            }($.fn.show),
            hide: function(orig) {
                return function(option) {
                    if (standardAnimationOption(option)) return orig.apply(this, arguments);
                    else {
                        var args = _normalizeArguments.apply(this, arguments);
                        args.mode = "hide";
                        return this.effect.call(this, args);
                    }
                };
            }($.fn.hide),
            toggle: function(orig) {
                return function(option) {
                    if (standardAnimationOption(option) || typeof option === "boolean") return orig.apply(this, arguments);
                    else {
                        var args = _normalizeArguments.apply(this, arguments);
                        args.mode = "toggle";
                        return this.effect.call(this, args);
                    }
                };
            }($.fn.toggle),
            cssUnit: function(key) {
                var style = this.css(key), val = [];
                $.each([
                    "em",
                    "px",
                    "%",
                    "pt"
                ], function(i, unit) {
                    if (style.indexOf(unit) > 0) val = [
                        parseFloat(style),
                        unit
                    ];
                });
                return val;
            },
            cssClip: function(clipObj) {
                if (clipObj) return this.css("clip", "rect(" + clipObj.top + "px " + clipObj.right + "px " + clipObj.bottom + "px " + clipObj.left + "px)");
                return parseClip(this.css("clip"), this);
            },
            transfer: function(options, done) {
                var element = $(this), target = $(options.to), targetFixed = target.css("position") === "fixed", body = $("body"), fixTop = targetFixed ? body.scrollTop() : 0, fixLeft = targetFixed ? body.scrollLeft() : 0, endPosition = target.offset(), animation = {
                    top: endPosition.top - fixTop,
                    left: endPosition.left - fixLeft,
                    height: target.innerHeight(),
                    width: target.innerWidth()
                }, startPosition = element.offset(), transfer = $("<div class='ui-effects-transfer'></div>").appendTo("body").addClass(options.className).css({
                    top: startPosition.top - fixTop,
                    left: startPosition.left - fixLeft,
                    height: element.innerHeight(),
                    width: element.innerWidth(),
                    position: targetFixed ? "fixed" : "absolute"
                }).animate(animation, options.duration, options.easing, function() {
                    transfer.remove();
                    if ($.isFunction(done)) done();
                });
            }
        });
        function parseClip(str, element) {
            var outerWidth = element.outerWidth(), outerHeight = element.outerHeight(), clipRegex = /^rect\((-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto)\)$/, values = clipRegex.exec(str) || [
                "",
                0,
                outerWidth,
                outerHeight,
                0
            ];
            return {
                top: parseFloat(values[1]) || 0,
                right: values[2] === "auto" ? outerWidth : parseFloat(values[2]),
                bottom: values[3] === "auto" ? outerHeight : parseFloat(values[3]),
                left: parseFloat(values[4]) || 0
            };
        }
        $.fx.step.clip = function(fx) {
            if (!fx.clipInit) {
                fx.start = $(fx.elem).cssClip();
                if (typeof fx.end === "string") fx.end = parseClip(fx.end, fx.elem);
                fx.clipInit = true;
            }
            $(fx.elem).cssClip({
                top: fx.pos * (fx.end.top - fx.start.top) + fx.start.top,
                right: fx.pos * (fx.end.right - fx.start.right) + fx.start.right,
                bottom: fx.pos * (fx.end.bottom - fx.start.bottom) + fx.start.bottom,
                left: fx.pos * (fx.end.left - fx.start.left) + fx.start.left
            });
        };
    })();
    /******************************************************************************/ /*********************************** EASING ***********************************/ /******************************************************************************/ (function() {
        // Based on easing equations from Robert Penner (http://www.robertpenner.com/easing)
        var baseEasings = {};
        $.each([
            "Quad",
            "Cubic",
            "Quart",
            "Quint",
            "Expo"
        ], function(i, name) {
            baseEasings[name] = function(p) {
                return Math.pow(p, i + 2);
            };
        });
        $.extend(baseEasings, {
            Sine: function(p) {
                return 1 - Math.cos(p * Math.PI / 2);
            },
            Circ: function(p) {
                return 1 - Math.sqrt(1 - p * p);
            },
            Elastic: function(p) {
                return p === 0 || p === 1 ? p : -Math.pow(2, 8 * (p - 1)) * Math.sin(((p - 1) * 80 - 7.5) * Math.PI / 15);
            },
            Back: function(p) {
                return p * p * (3 * p - 2);
            },
            Bounce: function(p) {
                var pow2, bounce = 4;
                while(p < ((pow2 = Math.pow(2, --bounce)) - 1) / 11);
                return 1 / Math.pow(4, 3 - bounce) - 7.5625 * Math.pow((pow2 * 3 - 2) / 22 - p, 2);
            }
        });
        $.each(baseEasings, function(name, easeIn) {
            $.easing["easeIn" + name] = easeIn;
            $.easing["easeOut" + name] = function(p) {
                return 1 - easeIn(1 - p);
            };
            $.easing["easeInOut" + name] = function(p) {
                return p < 0.5 ? easeIn(p * 2) / 2 : 1 - easeIn(p * -2 + 2) / 2;
            };
        });
    })();
    var effect = $.effects;
    /*!
 * jQuery UI Effects Blind 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Blind Effect
    //>>group: Effects
    //>>description: Blinds the element.
    //>>docs: http://api.jqueryui.com/blind-effect/
    //>>demos: http://jqueryui.com/effect/
    var effectsEffectBlind = $.effects.define("blind", "hide", function(options, done) {
        var map = {
            up: [
                "bottom",
                "top"
            ],
            vertical: [
                "bottom",
                "top"
            ],
            down: [
                "top",
                "bottom"
            ],
            left: [
                "right",
                "left"
            ],
            horizontal: [
                "right",
                "left"
            ],
            right: [
                "left",
                "right"
            ]
        }, element = $(this), direction = options.direction || "up", start = element.cssClip(), animate = {
            clip: $.extend({}, start)
        }, placeholder = $.effects.createPlaceholder(element);
        animate.clip[map[direction][0]] = animate.clip[map[direction][1]];
        if (options.mode === "show") {
            element.cssClip(animate.clip);
            if (placeholder) placeholder.css($.effects.clipToBox(animate));
            animate.clip = start;
        }
        if (placeholder) placeholder.animate($.effects.clipToBox(animate), options.duration, options.easing);
        element.animate(animate, {
            queue: false,
            duration: options.duration,
            easing: options.easing,
            complete: done
        });
    });
    /*!
 * jQuery UI Effects Bounce 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Bounce Effect
    //>>group: Effects
    //>>description: Bounces an element horizontally or vertically n times.
    //>>docs: http://api.jqueryui.com/bounce-effect/
    //>>demos: http://jqueryui.com/effect/
    var effectsEffectBounce = $.effects.define("bounce", function(options, done) {
        var upAnim, downAnim, refValue, element = $(this), // Defaults:
        mode = options.mode, hide = mode === "hide", show = mode === "show", direction = options.direction || "up", distance = options.distance, times = options.times || 5, // Number of internal animations
        anims = times * 2 + (show || hide ? 1 : 0), speed = options.duration / anims, easing = options.easing, // Utility:
        ref = direction === "up" || direction === "down" ? "top" : "left", motion = direction === "up" || direction === "left", i = 0, queuelen = element.queue().length;
        $.effects.createPlaceholder(element);
        refValue = element.css(ref);
        // Default distance for the BIGGEST bounce is the outer Distance / 3
        if (!distance) distance = element[ref === "top" ? "outerHeight" : "outerWidth"]() / 3;
        if (show) {
            downAnim = {
                opacity: 1
            };
            downAnim[ref] = refValue;
            // If we are showing, force opacity 0 and set the initial position
            // then do the "first" animation
            element.css("opacity", 0).css(ref, motion ? -distance * 2 : distance * 2).animate(downAnim, speed, easing);
        }
        // Start at the smallest distance if we are hiding
        if (hide) distance = distance / Math.pow(2, times - 1);
        downAnim = {};
        downAnim[ref] = refValue;
        // Bounces up/down/left/right then back to 0 -- times * 2 animations happen here
        for(; i < times; i++){
            upAnim = {};
            upAnim[ref] = (motion ? "-=" : "+=") + distance;
            element.animate(upAnim, speed, easing).animate(downAnim, speed, easing);
            distance = hide ? distance * 2 : distance / 2;
        }
        // Last Bounce when Hiding
        if (hide) {
            upAnim = {
                opacity: 0
            };
            upAnim[ref] = (motion ? "-=" : "+=") + distance;
            element.animate(upAnim, speed, easing);
        }
        element.queue(done);
        $.effects.unshift(element, queuelen, anims + 1);
    });
    /*!
 * jQuery UI Effects Clip 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Clip Effect
    //>>group: Effects
    //>>description: Clips the element on and off like an old TV.
    //>>docs: http://api.jqueryui.com/clip-effect/
    //>>demos: http://jqueryui.com/effect/
    var effectsEffectClip = $.effects.define("clip", "hide", function(options, done) {
        var start, animate = {}, element = $(this), direction = options.direction || "vertical", both = direction === "both", horizontal = both || direction === "horizontal", vertical = both || direction === "vertical";
        start = element.cssClip();
        animate.clip = {
            top: vertical ? (start.bottom - start.top) / 2 : start.top,
            right: horizontal ? (start.right - start.left) / 2 : start.right,
            bottom: vertical ? (start.bottom - start.top) / 2 : start.bottom,
            left: horizontal ? (start.right - start.left) / 2 : start.left
        };
        $.effects.createPlaceholder(element);
        if (options.mode === "show") {
            element.cssClip(animate.clip);
            animate.clip = start;
        }
        element.animate(animate, {
            queue: false,
            duration: options.duration,
            easing: options.easing,
            complete: done
        });
    });
    /*!
 * jQuery UI Effects Drop 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Drop Effect
    //>>group: Effects
    //>>description: Moves an element in one direction and hides it at the same time.
    //>>docs: http://api.jqueryui.com/drop-effect/
    //>>demos: http://jqueryui.com/effect/
    var effectsEffectDrop = $.effects.define("drop", "hide", function(options, done) {
        var distance, element = $(this), mode = options.mode, show = mode === "show", direction = options.direction || "left", ref = direction === "up" || direction === "down" ? "top" : "left", motion = direction === "up" || direction === "left" ? "-=" : "+=", oppositeMotion = motion === "+=" ? "-=" : "+=", animation = {
            opacity: 0
        };
        $.effects.createPlaceholder(element);
        distance = options.distance || element[ref === "top" ? "outerHeight" : "outerWidth"](true) / 2;
        animation[ref] = motion + distance;
        if (show) {
            element.css(animation);
            animation[ref] = oppositeMotion + distance;
            animation.opacity = 1;
        }
        // Animate
        element.animate(animation, {
            queue: false,
            duration: options.duration,
            easing: options.easing,
            complete: done
        });
    });
    /*!
 * jQuery UI Effects Explode 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Explode Effect
    //>>group: Effects
    // jscs:disable maximumLineLength
    //>>description: Explodes an element in all directions into n pieces. Implodes an element to its original wholeness.
    // jscs:enable maximumLineLength
    //>>docs: http://api.jqueryui.com/explode-effect/
    //>>demos: http://jqueryui.com/effect/
    var effectsEffectExplode = $.effects.define("explode", "hide", function(options, done) {
        var i, j, left, top, mx, my, rows = options.pieces ? Math.round(Math.sqrt(options.pieces)) : 3, cells = rows, element = $(this), mode = options.mode, show = mode === "show", // Show and then visibility:hidden the element before calculating offset
        offset = element.show().css("visibility", "hidden").offset(), // Width and height of a piece
        width = Math.ceil(element.outerWidth() / cells), height = Math.ceil(element.outerHeight() / rows), pieces = [];
        // Children animate complete:
        function childComplete() {
            pieces.push(this);
            if (pieces.length === rows * cells) animComplete();
        }
        // Clone the element for each row and cell.
        for(i = 0; i < rows; i++){
            top = offset.top + i * height;
            my = i - (rows - 1) / 2;
            for(j = 0; j < cells; j++){
                left = offset.left + j * width;
                mx = j - (cells - 1) / 2;
                // Create a clone of the now hidden main element that will be absolute positioned
                // within a wrapper div off the -left and -top equal to size of our pieces
                element.clone().appendTo("body").wrap("<div></div>").css({
                    position: "absolute",
                    visibility: "visible",
                    left: -j * width,
                    top: -i * height
                })// Select the wrapper - make it overflow: hidden and absolute positioned based on
                // where the original was located +left and +top equal to the size of pieces
                .parent().addClass("ui-effects-explode").css({
                    position: "absolute",
                    overflow: "hidden",
                    width: width,
                    height: height,
                    left: left + (show ? mx * width : 0),
                    top: top + (show ? my * height : 0),
                    opacity: show ? 0 : 1
                }).animate({
                    left: left + (show ? 0 : mx * width),
                    top: top + (show ? 0 : my * height),
                    opacity: show ? 1 : 0
                }, options.duration || 500, options.easing, childComplete);
            }
        }
        function animComplete() {
            element.css({
                visibility: "visible"
            });
            $(pieces).remove();
            done();
        }
    });
    /*!
 * jQuery UI Effects Fade 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Fade Effect
    //>>group: Effects
    //>>description: Fades the element.
    //>>docs: http://api.jqueryui.com/fade-effect/
    //>>demos: http://jqueryui.com/effect/
    var effectsEffectFade = $.effects.define("fade", "toggle", function(options, done) {
        var show = options.mode === "show";
        $(this).css("opacity", show ? 0 : 1).animate({
            opacity: show ? 1 : 0
        }, {
            queue: false,
            duration: options.duration,
            easing: options.easing,
            complete: done
        });
    });
    /*!
 * jQuery UI Effects Fold 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Fold Effect
    //>>group: Effects
    //>>description: Folds an element first horizontally and then vertically.
    //>>docs: http://api.jqueryui.com/fold-effect/
    //>>demos: http://jqueryui.com/effect/
    var effectsEffectFold = $.effects.define("fold", "hide", function(options, done) {
        // Create element
        var element = $(this), mode = options.mode, show = mode === "show", hide = mode === "hide", size = options.size || 15, percent = /([0-9]+)%/.exec(size), horizFirst = !!options.horizFirst, ref = horizFirst ? [
            "right",
            "bottom"
        ] : [
            "bottom",
            "right"
        ], duration = options.duration / 2, placeholder = $.effects.createPlaceholder(element), start = element.cssClip(), animation1 = {
            clip: $.extend({}, start)
        }, animation2 = {
            clip: $.extend({}, start)
        }, distance = [
            start[ref[0]],
            start[ref[1]]
        ], queuelen = element.queue().length;
        if (percent) size = parseInt(percent[1], 10) / 100 * distance[hide ? 0 : 1];
        animation1.clip[ref[0]] = size;
        animation2.clip[ref[0]] = size;
        animation2.clip[ref[1]] = 0;
        if (show) {
            element.cssClip(animation2.clip);
            if (placeholder) placeholder.css($.effects.clipToBox(animation2));
            animation2.clip = start;
        }
        // Animate
        element.queue(function(next) {
            if (placeholder) placeholder.animate($.effects.clipToBox(animation1), duration, options.easing).animate($.effects.clipToBox(animation2), duration, options.easing);
            next();
        }).animate(animation1, duration, options.easing).animate(animation2, duration, options.easing).queue(done);
        $.effects.unshift(element, queuelen, 4);
    });
    /*!
 * jQuery UI Effects Highlight 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Highlight Effect
    //>>group: Effects
    //>>description: Highlights the background of an element in a defined color for a custom duration.
    //>>docs: http://api.jqueryui.com/highlight-effect/
    //>>demos: http://jqueryui.com/effect/
    var effectsEffectHighlight = $.effects.define("highlight", "show", function(options, done) {
        var element = $(this), animation = {
            backgroundColor: element.css("backgroundColor")
        };
        if (options.mode === "hide") animation.opacity = 0;
        $.effects.saveStyle(element);
        element.css({
            backgroundImage: "none",
            backgroundColor: options.color || "#ffff99"
        }).animate(animation, {
            queue: false,
            duration: options.duration,
            easing: options.easing,
            complete: done
        });
    });
    /*!
 * jQuery UI Effects Size 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Size Effect
    //>>group: Effects
    //>>description: Resize an element to a specified width and height.
    //>>docs: http://api.jqueryui.com/size-effect/
    //>>demos: http://jqueryui.com/effect/
    var effectsEffectSize = $.effects.define("size", function(options, done) {
        // Create element
        var baseline, factor, temp, element = $(this), // Copy for children
        cProps = [
            "fontSize"
        ], vProps = [
            "borderTopWidth",
            "borderBottomWidth",
            "paddingTop",
            "paddingBottom"
        ], hProps = [
            "borderLeftWidth",
            "borderRightWidth",
            "paddingLeft",
            "paddingRight"
        ], // Set options
        mode = options.mode, restore = mode !== "effect", scale = options.scale || "both", origin = options.origin || [
            "middle",
            "center"
        ], position = element.css("position"), pos = element.position(), original = $.effects.scaledDimensions(element), from = options.from || original, to = options.to || $.effects.scaledDimensions(element, 0);
        $.effects.createPlaceholder(element);
        if (mode === "show") {
            temp = from;
            from = to;
            to = temp;
        }
        // Set scaling factor
        factor = {
            from: {
                y: from.height / original.height,
                x: from.width / original.width
            },
            to: {
                y: to.height / original.height,
                x: to.width / original.width
            }
        };
        // Scale the css box
        if (scale === "box" || scale === "both") {
            // Vertical props scaling
            if (factor.from.y !== factor.to.y) {
                from = $.effects.setTransition(element, vProps, factor.from.y, from);
                to = $.effects.setTransition(element, vProps, factor.to.y, to);
            }
            // Horizontal props scaling
            if (factor.from.x !== factor.to.x) {
                from = $.effects.setTransition(element, hProps, factor.from.x, from);
                to = $.effects.setTransition(element, hProps, factor.to.x, to);
            }
        }
        // Scale the content
        if (scale === "content" || scale === "both") // Vertical props scaling
        {
            if (factor.from.y !== factor.to.y) {
                from = $.effects.setTransition(element, cProps, factor.from.y, from);
                to = $.effects.setTransition(element, cProps, factor.to.y, to);
            }
        }
        // Adjust the position properties based on the provided origin points
        if (origin) {
            baseline = $.effects.getBaseline(origin, original);
            from.top = (original.outerHeight - from.outerHeight) * baseline.y + pos.top;
            from.left = (original.outerWidth - from.outerWidth) * baseline.x + pos.left;
            to.top = (original.outerHeight - to.outerHeight) * baseline.y + pos.top;
            to.left = (original.outerWidth - to.outerWidth) * baseline.x + pos.left;
        }
        element.css(from);
        // Animate the children if desired
        if (scale === "content" || scale === "both") {
            vProps = vProps.concat([
                "marginTop",
                "marginBottom"
            ]).concat(cProps);
            hProps = hProps.concat([
                "marginLeft",
                "marginRight"
            ]);
            // Only animate children with width attributes specified
            // TODO: is this right? should we include anything with css width specified as well
            element.find("*[width]").each(function() {
                var child = $(this), childOriginal = $.effects.scaledDimensions(child), childFrom = {
                    height: childOriginal.height * factor.from.y,
                    width: childOriginal.width * factor.from.x,
                    outerHeight: childOriginal.outerHeight * factor.from.y,
                    outerWidth: childOriginal.outerWidth * factor.from.x
                }, childTo = {
                    height: childOriginal.height * factor.to.y,
                    width: childOriginal.width * factor.to.x,
                    outerHeight: childOriginal.height * factor.to.y,
                    outerWidth: childOriginal.width * factor.to.x
                };
                // Vertical props scaling
                if (factor.from.y !== factor.to.y) {
                    childFrom = $.effects.setTransition(child, vProps, factor.from.y, childFrom);
                    childTo = $.effects.setTransition(child, vProps, factor.to.y, childTo);
                }
                // Horizontal props scaling
                if (factor.from.x !== factor.to.x) {
                    childFrom = $.effects.setTransition(child, hProps, factor.from.x, childFrom);
                    childTo = $.effects.setTransition(child, hProps, factor.to.x, childTo);
                }
                if (restore) $.effects.saveStyle(child);
                // Animate children
                child.css(childFrom);
                child.animate(childTo, options.duration, options.easing, function() {
                    // Restore children
                    if (restore) $.effects.restoreStyle(child);
                });
            });
        }
        // Animate
        element.animate(to, {
            queue: false,
            duration: options.duration,
            easing: options.easing,
            complete: function() {
                var offset = element.offset();
                if (to.opacity === 0) element.css("opacity", from.opacity);
                if (!restore) {
                    element.css("position", position === "static" ? "relative" : position).offset(offset);
                    // Need to save style here so that automatic style restoration
                    // doesn't restore to the original styles from before the animation.
                    $.effects.saveStyle(element);
                }
                done();
            }
        });
    });
    /*!
 * jQuery UI Effects Scale 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Scale Effect
    //>>group: Effects
    //>>description: Grows or shrinks an element and its content.
    //>>docs: http://api.jqueryui.com/scale-effect/
    //>>demos: http://jqueryui.com/effect/
    var effectsEffectScale = $.effects.define("scale", function(options, done) {
        // Create element
        var el = $(this), mode = options.mode, percent = parseInt(options.percent, 10) || (parseInt(options.percent, 10) === 0 ? 0 : mode !== "effect" ? 0 : 100), newOptions = $.extend(true, {
            from: $.effects.scaledDimensions(el),
            to: $.effects.scaledDimensions(el, percent, options.direction || "both"),
            origin: options.origin || [
                "middle",
                "center"
            ]
        }, options);
        // Fade option to support puff
        if (options.fade) {
            newOptions.from.opacity = 1;
            newOptions.to.opacity = 0;
        }
        $.effects.effect.size.call(this, newOptions, done);
    });
    /*!
 * jQuery UI Effects Puff 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Puff Effect
    //>>group: Effects
    //>>description: Creates a puff effect by scaling the element up and hiding it at the same time.
    //>>docs: http://api.jqueryui.com/puff-effect/
    //>>demos: http://jqueryui.com/effect/
    var effectsEffectPuff = $.effects.define("puff", "hide", function(options, done) {
        var newOptions = $.extend(true, {}, options, {
            fade: true,
            percent: parseInt(options.percent, 10) || 150
        });
        $.effects.effect.scale.call(this, newOptions, done);
    });
    /*!
 * jQuery UI Effects Pulsate 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Pulsate Effect
    //>>group: Effects
    //>>description: Pulsates an element n times by changing the opacity to zero and back.
    //>>docs: http://api.jqueryui.com/pulsate-effect/
    //>>demos: http://jqueryui.com/effect/
    var effectsEffectPulsate = $.effects.define("pulsate", "show", function(options, done) {
        var element = $(this), mode = options.mode, show = mode === "show", hide = mode === "hide", showhide = show || hide, // Showing or hiding leaves off the "last" animation
        anims = (options.times || 5) * 2 + (showhide ? 1 : 0), duration = options.duration / anims, animateTo = 0, i = 1, queuelen = element.queue().length;
        if (show || !element.is(":visible")) {
            element.css("opacity", 0).show();
            animateTo = 1;
        }
        // Anims - 1 opacity "toggles"
        for(; i < anims; i++){
            element.animate({
                opacity: animateTo
            }, duration, options.easing);
            animateTo = 1 - animateTo;
        }
        element.animate({
            opacity: animateTo
        }, duration, options.easing);
        element.queue(done);
        $.effects.unshift(element, queuelen, anims + 1);
    });
    /*!
 * jQuery UI Effects Shake 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Shake Effect
    //>>group: Effects
    //>>description: Shakes an element horizontally or vertically n times.
    //>>docs: http://api.jqueryui.com/shake-effect/
    //>>demos: http://jqueryui.com/effect/
    var effectsEffectShake = $.effects.define("shake", function(options, done) {
        var i = 1, element = $(this), direction = options.direction || "left", distance = options.distance || 20, times = options.times || 3, anims = times * 2 + 1, speed = Math.round(options.duration / anims), ref = direction === "up" || direction === "down" ? "top" : "left", positiveMotion = direction === "up" || direction === "left", animation = {}, animation1 = {}, animation2 = {}, queuelen = element.queue().length;
        $.effects.createPlaceholder(element);
        // Animation
        animation[ref] = (positiveMotion ? "-=" : "+=") + distance;
        animation1[ref] = (positiveMotion ? "+=" : "-=") + distance * 2;
        animation2[ref] = (positiveMotion ? "-=" : "+=") + distance * 2;
        // Animate
        element.animate(animation, speed, options.easing);
        // Shakes
        for(; i < times; i++)element.animate(animation1, speed, options.easing).animate(animation2, speed, options.easing);
        element.animate(animation1, speed, options.easing).animate(animation, speed / 2, options.easing).queue(done);
        $.effects.unshift(element, queuelen, anims + 1);
    });
    /*!
 * jQuery UI Effects Slide 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Slide Effect
    //>>group: Effects
    //>>description: Slides an element in and out of the viewport.
    //>>docs: http://api.jqueryui.com/slide-effect/
    //>>demos: http://jqueryui.com/effect/
    var effectsEffectSlide = $.effects.define("slide", "show", function(options, done) {
        var startClip, startRef, element = $(this), map = {
            up: [
                "bottom",
                "top"
            ],
            down: [
                "top",
                "bottom"
            ],
            left: [
                "right",
                "left"
            ],
            right: [
                "left",
                "right"
            ]
        }, mode = options.mode, direction = options.direction || "left", ref = direction === "up" || direction === "down" ? "top" : "left", positiveMotion = direction === "up" || direction === "left", distance = options.distance || element[ref === "top" ? "outerHeight" : "outerWidth"](true), animation = {};
        $.effects.createPlaceholder(element);
        startClip = element.cssClip();
        startRef = element.position()[ref];
        // Define hide animation
        animation[ref] = (positiveMotion ? -1 : 1) * distance + startRef;
        animation.clip = element.cssClip();
        animation.clip[map[direction][1]] = animation.clip[map[direction][0]];
        // Reverse the animation if we're showing
        if (mode === "show") {
            element.cssClip(animation.clip);
            element.css(ref, animation[ref]);
            animation.clip = startClip;
            animation[ref] = startRef;
        }
        // Actually animate
        element.animate(animation, {
            queue: false,
            duration: options.duration,
            easing: options.easing,
            complete: done
        });
    });
    /*!
 * jQuery UI Effects Transfer 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Transfer Effect
    //>>group: Effects
    //>>description: Displays a transfer effect from one element to another.
    //>>docs: http://api.jqueryui.com/transfer-effect/
    //>>demos: http://jqueryui.com/effect/
    var effect;
    if ($.uiBackCompat !== false) effect = $.effects.define("transfer", function(options, done) {
        $(this).transfer(options, done);
    });
    var effectsEffectTransfer = effect;
    /*!
 * jQuery UI Focusable 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: :focusable Selector
    //>>group: Core
    //>>description: Selects elements which can be focused.
    //>>docs: http://api.jqueryui.com/focusable-selector/
    // Selectors
    $.ui.focusable = function(element, hasTabindex) {
        var map, mapName, img, focusableIfVisible, fieldset, nodeName = element.nodeName.toLowerCase();
        if ("area" === nodeName) {
            map = element.parentNode;
            mapName = map.name;
            if (!element.href || !mapName || map.nodeName.toLowerCase() !== "map") return false;
            img = $("img[usemap='#" + mapName + "']");
            return img.length > 0 && img.is(":visible");
        }
        if (/^(input|select|textarea|button|object)$/.test(nodeName)) {
            focusableIfVisible = !element.disabled;
            if (focusableIfVisible) {
                // Form controls within a disabled fieldset are disabled.
                // However, controls within the fieldset's legend do not get disabled.
                // Since controls generally aren't placed inside legends, we skip
                // this portion of the check.
                fieldset = $(element).closest("fieldset")[0];
                if (fieldset) focusableIfVisible = !fieldset.disabled;
            }
        } else if ("a" === nodeName) focusableIfVisible = element.href || hasTabindex;
        else focusableIfVisible = hasTabindex;
        return focusableIfVisible && $(element).is(":visible") && visible($(element));
    };
    // Support: IE 8 only
    // IE 8 doesn't resolve inherit to visible/hidden for computed values
    function visible(element) {
        var visibility = element.css("visibility");
        while(visibility === "inherit"){
            element = element.parent();
            visibility = element.css("visibility");
        }
        return visibility !== "hidden";
    }
    $.extend($.expr[":"], {
        focusable: function(element) {
            return $.ui.focusable(element, $.attr(element, "tabindex") != null);
        }
    });
    var focusable = $.ui.focusable;
    // Support: IE8 Only
    // IE8 does not support the form attribute and when it is supplied. It overwrites the form prop
    // with a string, so we need to find the proper form.
    var form = $.fn.form = function() {
        return typeof this[0].form === "string" ? this.closest("form") : $(this[0].form);
    };
    /*!
 * jQuery UI Form Reset Mixin 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Form Reset Mixin
    //>>group: Core
    //>>description: Refresh input widgets when their form is reset
    //>>docs: http://api.jqueryui.com/form-reset-mixin/
    var formResetMixin = $.ui.formResetMixin = {
        _formResetHandler: function() {
            var form = $(this);
            // Wait for the form reset to actually happen before refreshing
            setTimeout(function() {
                var instances = form.data("ui-form-reset-instances");
                $.each(instances, function() {
                    this.refresh();
                });
            });
        },
        _bindFormResetHandler: function() {
            this.form = this.element.form();
            if (!this.form.length) return;
            var instances = this.form.data("ui-form-reset-instances") || [];
            if (!instances.length) // We don't use _on() here because we use a single event handler per form
            this.form.on("reset.ui-form-reset", this._formResetHandler);
            instances.push(this);
            this.form.data("ui-form-reset-instances", instances);
        },
        _unbindFormResetHandler: function() {
            if (!this.form.length) return;
            var instances = this.form.data("ui-form-reset-instances");
            instances.splice($.inArray(this, instances), 1);
            if (instances.length) this.form.data("ui-form-reset-instances", instances);
            else this.form.removeData("ui-form-reset-instances").off("reset.ui-form-reset");
        }
    };
    /*!
 * jQuery UI Support for jQuery core 1.7.x 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 */ //>>label: jQuery 1.7 Support
    //>>group: Core
    //>>description: Support version 1.7.x of jQuery core
    // Support: jQuery 1.7 only
    // Not a great way to check versions, but since we only support 1.7+ and only
    // need to detect <1.8, this is a simple check that should suffice. Checking
    // for "1.7." would be a bit safer, but the version string is 1.7, not 1.7.0
    // and we'll never reach 1.70.0 (if we do, we certainly won't be supporting
    // 1.7 anymore). See #11197 for why we're not using feature detection.
    if ($.fn.jquery.substring(0, 3) === "1.7") {
        // Setters for .innerWidth(), .innerHeight(), .outerWidth(), .outerHeight()
        // Unlike jQuery Core 1.8+, these only support numeric values to set the
        // dimensions in pixels
        $.each([
            "Width",
            "Height"
        ], function(i, name) {
            var side = name === "Width" ? [
                "Left",
                "Right"
            ] : [
                "Top",
                "Bottom"
            ], type = name.toLowerCase(), orig = {
                innerWidth: $.fn.innerWidth,
                innerHeight: $.fn.innerHeight,
                outerWidth: $.fn.outerWidth,
                outerHeight: $.fn.outerHeight
            };
            function reduce(elem, size, border, margin) {
                $.each(side, function() {
                    size -= parseFloat($.css(elem, "padding" + this)) || 0;
                    if (border) size -= parseFloat($.css(elem, "border" + this + "Width")) || 0;
                    if (margin) size -= parseFloat($.css(elem, "margin" + this)) || 0;
                });
                return size;
            }
            $.fn["inner" + name] = function(size) {
                if (size === undefined) return orig["inner" + name].call(this);
                return this.each(function() {
                    $(this).css(type, reduce(this, size) + "px");
                });
            };
            $.fn["outer" + name] = function(size, margin) {
                if (typeof size !== "number") return orig["outer" + name].call(this, size);
                return this.each(function() {
                    $(this).css(type, reduce(this, size, true, margin) + "px");
                });
            };
        });
        $.fn.addBack = function(selector) {
            return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));
        };
    }
    /*!
 * jQuery UI Keycode 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Keycode
    //>>group: Core
    //>>description: Provide keycodes as keynames
    //>>docs: http://api.jqueryui.com/jQuery.ui.keyCode/
    var keycode = $.ui.keyCode = {
        BACKSPACE: 8,
        COMMA: 188,
        DELETE: 46,
        DOWN: 40,
        END: 35,
        ENTER: 13,
        ESCAPE: 27,
        HOME: 36,
        LEFT: 37,
        PAGE_DOWN: 34,
        PAGE_UP: 33,
        PERIOD: 190,
        RIGHT: 39,
        SPACE: 32,
        TAB: 9,
        UP: 38
    };
    // Internal use only
    var escapeSelector = $.ui.escapeSelector = function() {
        var selectorEscape = /([!"#$%&'()*+,./:;<=>?@[\]^`{|}~])/g;
        return function(selector) {
            return selector.replace(selectorEscape, "\\$1");
        };
    }();
    /*!
 * jQuery UI Labels 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: labels
    //>>group: Core
    //>>description: Find all the labels associated with a given input
    //>>docs: http://api.jqueryui.com/labels/
    var labels = $.fn.labels = function() {
        var ancestor, selector, id, labels, ancestors;
        // Check control.labels first
        if (this[0].labels && this[0].labels.length) return this.pushStack(this[0].labels);
        // Support: IE <= 11, FF <= 37, Android <= 2.3 only
        // Above browsers do not support control.labels. Everything below is to support them
        // as well as document fragments. control.labels does not work on document fragments
        labels = this.eq(0).parents("label");
        // Look for the label based on the id
        id = this.attr("id");
        if (id) {
            // We don't search against the document in case the element
            // is disconnected from the DOM
            ancestor = this.eq(0).parents().last();
            // Get a full set of top level ancestors
            ancestors = ancestor.add(ancestor.length ? ancestor.siblings() : this.siblings());
            // Create a selector for the label based on the id
            selector = "label[for='" + $.ui.escapeSelector(id) + "']";
            labels = labels.add(ancestors.find(selector).addBack(selector));
        }
        // Return whatever we have found for labels
        return this.pushStack(labels);
    };
    /*!
 * jQuery UI Scroll Parent 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: scrollParent
    //>>group: Core
    //>>description: Get the closest ancestor element that is scrollable.
    //>>docs: http://api.jqueryui.com/scrollParent/
    var scrollParent = $.fn.scrollParent = function(includeHidden) {
        var position = this.css("position"), excludeStaticParent = position === "absolute", overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/, scrollParent = this.parents().filter(function() {
            var parent = $(this);
            if (excludeStaticParent && parent.css("position") === "static") return false;
            return overflowRegex.test(parent.css("overflow") + parent.css("overflow-y") + parent.css("overflow-x"));
        }).eq(0);
        return position === "fixed" || !scrollParent.length ? $(this[0].ownerDocument || document) : scrollParent;
    };
    /*!
 * jQuery UI Tabbable 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: :tabbable Selector
    //>>group: Core
    //>>description: Selects elements which can be tabbed to.
    //>>docs: http://api.jqueryui.com/tabbable-selector/
    var tabbable = $.extend($.expr[":"], {
        tabbable: function(element) {
            var tabIndex = $.attr(element, "tabindex"), hasTabindex = tabIndex != null;
            return (!hasTabindex || tabIndex >= 0) && $.ui.focusable(element, hasTabindex);
        }
    });
    /*!
 * jQuery UI Unique ID 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: uniqueId
    //>>group: Core
    //>>description: Functions to generate and remove uniqueId's
    //>>docs: http://api.jqueryui.com/uniqueId/
    var uniqueId = $.fn.extend({
        uniqueId: function() {
            var uuid = 0;
            return function() {
                return this.each(function() {
                    if (!this.id) this.id = "ui-id-" + ++uuid;
                });
            };
        }(),
        removeUniqueId: function() {
            return this.each(function() {
                if (/^ui-id-\d+$/.test(this.id)) $(this).removeAttr("id");
            });
        }
    });
    /*!
 * jQuery UI Accordion 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Accordion
    //>>group: Widgets
    // jscs:disable maximumLineLength
    //>>description: Displays collapsible content panels for presenting information in a limited amount of space.
    // jscs:enable maximumLineLength
    //>>docs: http://api.jqueryui.com/accordion/
    //>>demos: http://jqueryui.com/accordion/
    //>>css.structure: ../../themes/base/core.css
    //>>css.structure: ../../themes/base/accordion.css
    //>>css.theme: ../../themes/base/theme.css
    var widgetsAccordion = $.widget("ui.accordion", {
        version: "1.12.1",
        options: {
            active: 0,
            animate: {},
            classes: {
                "ui-accordion-header": "ui-corner-top",
                "ui-accordion-header-collapsed": "ui-corner-all",
                "ui-accordion-content": "ui-corner-bottom"
            },
            collapsible: false,
            event: "click",
            header: "> li > :first-child, > :not(li):even",
            heightStyle: "auto",
            icons: {
                activeHeader: "ui-icon-triangle-1-s",
                header: "ui-icon-triangle-1-e"
            },
            // Callbacks
            activate: null,
            beforeActivate: null
        },
        hideProps: {
            borderTopWidth: "hide",
            borderBottomWidth: "hide",
            paddingTop: "hide",
            paddingBottom: "hide",
            height: "hide"
        },
        showProps: {
            borderTopWidth: "show",
            borderBottomWidth: "show",
            paddingTop: "show",
            paddingBottom: "show",
            height: "show"
        },
        _create: function() {
            var options = this.options;
            this.prevShow = this.prevHide = $();
            this._addClass("ui-accordion", "ui-widget ui-helper-reset");
            this.element.attr("role", "tablist");
            // Don't allow collapsible: false and active: false / null
            if (!options.collapsible && (options.active === false || options.active == null)) options.active = 0;
            this._processPanels();
            // handle negative values
            if (options.active < 0) options.active += this.headers.length;
            this._refresh();
        },
        _getCreateEventData: function() {
            return {
                header: this.active,
                panel: !this.active.length ? $() : this.active.next()
            };
        },
        _createIcons: function() {
            var icon, children, icons = this.options.icons;
            if (icons) {
                icon = $("<span>");
                this._addClass(icon, "ui-accordion-header-icon", "ui-icon " + icons.header);
                icon.prependTo(this.headers);
                children = this.active.children(".ui-accordion-header-icon");
                this._removeClass(children, icons.header)._addClass(children, null, icons.activeHeader)._addClass(this.headers, "ui-accordion-icons");
            }
        },
        _destroyIcons: function() {
            this._removeClass(this.headers, "ui-accordion-icons");
            this.headers.children(".ui-accordion-header-icon").remove();
        },
        _destroy: function() {
            var contents;
            // Clean up main element
            this.element.removeAttr("role");
            // Clean up headers
            this.headers.removeAttr("role aria-expanded aria-selected aria-controls tabIndex").removeUniqueId();
            this._destroyIcons();
            // Clean up content panels
            contents = this.headers.next().css("display", "").removeAttr("role aria-hidden aria-labelledby").removeUniqueId();
            if (this.options.heightStyle !== "content") contents.css("height", "");
        },
        _setOption: function(key, value) {
            if (key === "active") {
                // _activate() will handle invalid values and update this.options
                this._activate(value);
                return;
            }
            if (key === "event") {
                if (this.options.event) this._off(this.headers, this.options.event);
                this._setupEvents(value);
            }
            this._super(key, value);
            // Setting collapsible: false while collapsed; open first panel
            if (key === "collapsible" && !value && this.options.active === false) this._activate(0);
            if (key === "icons") {
                this._destroyIcons();
                if (value) this._createIcons();
            }
        },
        _setOptionDisabled: function(value) {
            this._super(value);
            this.element.attr("aria-disabled", value);
            // Support: IE8 Only
            // #5332 / #6059 - opacity doesn't cascade to positioned elements in IE
            // so we need to add the disabled class to the headers and panels
            this._toggleClass(null, "ui-state-disabled", !!value);
            this._toggleClass(this.headers.add(this.headers.next()), null, "ui-state-disabled", !!value);
        },
        _keydown: function(event) {
            if (event.altKey || event.ctrlKey) return;
            var keyCode = $.ui.keyCode, length = this.headers.length, currentIndex = this.headers.index(event.target), toFocus = false;
            switch(event.keyCode){
                case keyCode.RIGHT:
                case keyCode.DOWN:
                    toFocus = this.headers[(currentIndex + 1) % length];
                    break;
                case keyCode.LEFT:
                case keyCode.UP:
                    toFocus = this.headers[(currentIndex - 1 + length) % length];
                    break;
                case keyCode.SPACE:
                case keyCode.ENTER:
                    this._eventHandler(event);
                    break;
                case keyCode.HOME:
                    toFocus = this.headers[0];
                    break;
                case keyCode.END:
                    toFocus = this.headers[length - 1];
                    break;
            }
            if (toFocus) {
                $(event.target).attr("tabIndex", -1);
                $(toFocus).attr("tabIndex", 0);
                $(toFocus).trigger("focus");
                event.preventDefault();
            }
        },
        _panelKeyDown: function(event) {
            if (event.keyCode === $.ui.keyCode.UP && event.ctrlKey) $(event.currentTarget).prev().trigger("focus");
        },
        refresh: function() {
            var options = this.options;
            this._processPanels();
            // Was collapsed or no panel
            if (options.active === false && options.collapsible === true || !this.headers.length) {
                options.active = false;
                this.active = $();
            // active false only when collapsible is true
            } else if (options.active === false) this._activate(0);
            else if (this.active.length && !$.contains(this.element[0], this.active[0])) {
                // all remaining panel are disabled
                if (this.headers.length === this.headers.find(".ui-state-disabled").length) {
                    options.active = false;
                    this.active = $();
                // activate previous panel
                } else this._activate(Math.max(0, options.active - 1));
            } else // make sure active index is correct
            options.active = this.headers.index(this.active);
            this._destroyIcons();
            this._refresh();
        },
        _processPanels: function() {
            var prevHeaders = this.headers, prevPanels = this.panels;
            this.headers = this.element.find(this.options.header);
            this._addClass(this.headers, "ui-accordion-header ui-accordion-header-collapsed", "ui-state-default");
            this.panels = this.headers.next().filter(":not(.ui-accordion-content-active)").hide();
            this._addClass(this.panels, "ui-accordion-content", "ui-helper-reset ui-widget-content");
            // Avoid memory leaks (#10056)
            if (prevPanels) {
                this._off(prevHeaders.not(this.headers));
                this._off(prevPanels.not(this.panels));
            }
        },
        _refresh: function() {
            var maxHeight, options = this.options, heightStyle = options.heightStyle, parent = this.element.parent();
            this.active = this._findActive(options.active);
            this._addClass(this.active, "ui-accordion-header-active", "ui-state-active")._removeClass(this.active, "ui-accordion-header-collapsed");
            this._addClass(this.active.next(), "ui-accordion-content-active");
            this.active.next().show();
            this.headers.attr("role", "tab").each(function() {
                var header = $(this), headerId = header.uniqueId().attr("id"), panel = header.next(), panelId = panel.uniqueId().attr("id");
                header.attr("aria-controls", panelId);
                panel.attr("aria-labelledby", headerId);
            }).next().attr("role", "tabpanel");
            this.headers.not(this.active).attr({
                "aria-selected": "false",
                "aria-expanded": "false",
                tabIndex: -1
            }).next().attr({
                "aria-hidden": "true"
            }).hide();
            // Make sure at least one header is in the tab order
            if (!this.active.length) this.headers.eq(0).attr("tabIndex", 0);
            else this.active.attr({
                "aria-selected": "true",
                "aria-expanded": "true",
                tabIndex: 0
            }).next().attr({
                "aria-hidden": "false"
            });
            this._createIcons();
            this._setupEvents(options.event);
            if (heightStyle === "fill") {
                maxHeight = parent.height();
                this.element.siblings(":visible").each(function() {
                    var elem = $(this), position = elem.css("position");
                    if (position === "absolute" || position === "fixed") return;
                    maxHeight -= elem.outerHeight(true);
                });
                this.headers.each(function() {
                    maxHeight -= $(this).outerHeight(true);
                });
                this.headers.next().each(function() {
                    $(this).height(Math.max(0, maxHeight - $(this).innerHeight() + $(this).height()));
                }).css("overflow", "auto");
            } else if (heightStyle === "auto") {
                maxHeight = 0;
                this.headers.next().each(function() {
                    var isVisible = $(this).is(":visible");
                    if (!isVisible) $(this).show();
                    maxHeight = Math.max(maxHeight, $(this).css("height", "").height());
                    if (!isVisible) $(this).hide();
                }).height(maxHeight);
            }
        },
        _activate: function(index) {
            var active = this._findActive(index)[0];
            // Trying to activate the already active panel
            if (active === this.active[0]) return;
            // Trying to collapse, simulate a click on the currently active header
            active = active || this.active[0];
            this._eventHandler({
                target: active,
                currentTarget: active,
                preventDefault: $.noop
            });
        },
        _findActive: function(selector) {
            return typeof selector === "number" ? this.headers.eq(selector) : $();
        },
        _setupEvents: function(event) {
            var events = {
                keydown: "_keydown"
            };
            if (event) $.each(event.split(" "), function(index, eventName) {
                events[eventName] = "_eventHandler";
            });
            this._off(this.headers.add(this.headers.next()));
            this._on(this.headers, events);
            this._on(this.headers.next(), {
                keydown: "_panelKeyDown"
            });
            this._hoverable(this.headers);
            this._focusable(this.headers);
        },
        _eventHandler: function(event) {
            var activeChildren, clickedChildren, options = this.options, active = this.active, clicked = $(event.currentTarget), clickedIsActive = clicked[0] === active[0], collapsing = clickedIsActive && options.collapsible, toShow = collapsing ? $() : clicked.next(), toHide = active.next(), eventData = {
                oldHeader: active,
                oldPanel: toHide,
                newHeader: collapsing ? $() : clicked,
                newPanel: toShow
            };
            event.preventDefault();
            if (// click on active header, but not collapsible
            clickedIsActive && !options.collapsible || this._trigger("beforeActivate", event, eventData) === false) return;
            options.active = collapsing ? false : this.headers.index(clicked);
            // When the call to ._toggle() comes after the class changes
            // it causes a very odd bug in IE 8 (see #6720)
            this.active = clickedIsActive ? $() : clicked;
            this._toggle(eventData);
            // Switch classes
            // corner classes on the previously active header stay after the animation
            this._removeClass(active, "ui-accordion-header-active", "ui-state-active");
            if (options.icons) {
                activeChildren = active.children(".ui-accordion-header-icon");
                this._removeClass(activeChildren, null, options.icons.activeHeader)._addClass(activeChildren, null, options.icons.header);
            }
            if (!clickedIsActive) {
                this._removeClass(clicked, "ui-accordion-header-collapsed")._addClass(clicked, "ui-accordion-header-active", "ui-state-active");
                if (options.icons) {
                    clickedChildren = clicked.children(".ui-accordion-header-icon");
                    this._removeClass(clickedChildren, null, options.icons.header)._addClass(clickedChildren, null, options.icons.activeHeader);
                }
                this._addClass(clicked.next(), "ui-accordion-content-active");
            }
        },
        _toggle: function(data) {
            var toShow = data.newPanel, toHide = this.prevShow.length ? this.prevShow : data.oldPanel;
            // Handle activating a panel during the animation for another activation
            this.prevShow.add(this.prevHide).stop(true, true);
            this.prevShow = toShow;
            this.prevHide = toHide;
            if (this.options.animate) this._animate(toShow, toHide, data);
            else {
                toHide.hide();
                toShow.show();
                this._toggleComplete(data);
            }
            toHide.attr({
                "aria-hidden": "true"
            });
            toHide.prev().attr({
                "aria-selected": "false",
                "aria-expanded": "false"
            });
            // if we're switching panels, remove the old header from the tab order
            // if we're opening from collapsed state, remove the previous header from the tab order
            // if we're collapsing, then keep the collapsing header in the tab order
            if (toShow.length && toHide.length) toHide.prev().attr({
                "tabIndex": -1,
                "aria-expanded": "false"
            });
            else if (toShow.length) this.headers.filter(function() {
                return parseInt($(this).attr("tabIndex"), 10) === 0;
            }).attr("tabIndex", -1);
            toShow.attr("aria-hidden", "false").prev().attr({
                "aria-selected": "true",
                "aria-expanded": "true",
                tabIndex: 0
            });
        },
        _animate: function(toShow, toHide, data) {
            var total, easing, duration, that = this, adjust = 0, boxSizing = toShow.css("box-sizing"), down = toShow.length && (!toHide.length || toShow.index() < toHide.index()), animate = this.options.animate || {}, options = down && animate.down || animate, complete = function() {
                that._toggleComplete(data);
            };
            if (typeof options === "number") duration = options;
            if (typeof options === "string") easing = options;
            // fall back from options to animation in case of partial down settings
            easing = easing || options.easing || animate.easing;
            duration = duration || options.duration || animate.duration;
            if (!toHide.length) return toShow.animate(this.showProps, duration, easing, complete);
            if (!toShow.length) return toHide.animate(this.hideProps, duration, easing, complete);
            total = toShow.show().outerHeight();
            toHide.animate(this.hideProps, {
                duration: duration,
                easing: easing,
                step: function(now, fx) {
                    fx.now = Math.round(now);
                }
            });
            toShow.hide().animate(this.showProps, {
                duration: duration,
                easing: easing,
                complete: complete,
                step: function(now, fx) {
                    fx.now = Math.round(now);
                    if (fx.prop !== "height") {
                        if (boxSizing === "content-box") adjust += fx.now;
                    } else if (that.options.heightStyle !== "content") {
                        fx.now = Math.round(total - toHide.outerHeight() - adjust);
                        adjust = 0;
                    }
                }
            });
        },
        _toggleComplete: function(data) {
            var toHide = data.oldPanel, prev = toHide.prev();
            this._removeClass(toHide, "ui-accordion-content-active");
            this._removeClass(prev, "ui-accordion-header-active")._addClass(prev, "ui-accordion-header-collapsed");
            // Work around for rendering bug in IE (#5421)
            if (toHide.length) toHide.parent()[0].className = toHide.parent()[0].className;
            this._trigger("activate", null, data);
        }
    });
    var safeActiveElement = $.ui.safeActiveElement = function(document1) {
        var activeElement;
        // Support: IE 9 only
        // IE9 throws an "Unspecified error" accessing document.activeElement from an <iframe>
        try {
            activeElement = document1.activeElement;
        } catch (error) {
            activeElement = document1.body;
        }
        // Support: IE 9 - 11 only
        // IE may return null instead of an element
        // Interestingly, this only seems to occur when NOT in an iframe
        if (!activeElement) activeElement = document1.body;
        // Support: IE 11 only
        // IE11 returns a seemingly empty object in some cases when accessing
        // document.activeElement from an <iframe>
        if (!activeElement.nodeName) activeElement = document1.body;
        return activeElement;
    };
    /*!
 * jQuery UI Menu 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Menu
    //>>group: Widgets
    //>>description: Creates nestable menus.
    //>>docs: http://api.jqueryui.com/menu/
    //>>demos: http://jqueryui.com/menu/
    //>>css.structure: ../../themes/base/core.css
    //>>css.structure: ../../themes/base/menu.css
    //>>css.theme: ../../themes/base/theme.css
    var widgetsMenu = $.widget("ui.menu", {
        version: "1.12.1",
        defaultElement: "<ul>",
        delay: 300,
        options: {
            icons: {
                submenu: "ui-icon-caret-1-e"
            },
            items: "> *",
            menus: "ul",
            position: {
                my: "left top",
                at: "right top"
            },
            role: "menu",
            // Callbacks
            blur: null,
            focus: null,
            select: null
        },
        _create: function() {
            this.activeMenu = this.element;
            // Flag used to prevent firing of the click handler
            // as the event bubbles up through nested menus
            this.mouseHandled = false;
            this.element.uniqueId().attr({
                role: this.options.role,
                tabIndex: 0
            });
            this._addClass("ui-menu", "ui-widget ui-widget-content");
            this._on({
                // Prevent focus from sticking to links inside menu after clicking
                // them (focus should always stay on UL during navigation).
                "mousedown .ui-menu-item": function(event) {
                    event.preventDefault();
                },
                "click .ui-menu-item": function(event) {
                    var target = $(event.target);
                    var active = $($.ui.safeActiveElement(this.document[0]));
                    if (!this.mouseHandled && target.not(".ui-state-disabled").length) {
                        this.select(event);
                        // Only set the mouseHandled flag if the event will bubble, see #9469.
                        if (!event.isPropagationStopped()) this.mouseHandled = true;
                        // Open submenu on click
                        if (target.has(".ui-menu").length) this.expand(event);
                        else if (!this.element.is(":focus") && active.closest(".ui-menu").length) {
                            // Redirect focus to the menu
                            this.element.trigger("focus", [
                                true
                            ]);
                            // If the active item is on the top level, let it stay active.
                            // Otherwise, blur the active item since it is no longer visible.
                            if (this.active && this.active.parents(".ui-menu").length === 1) clearTimeout(this.timer);
                        }
                    }
                },
                "mouseenter .ui-menu-item": function(event) {
                    // Ignore mouse events while typeahead is active, see #10458.
                    // Prevents focusing the wrong item when typeahead causes a scroll while the mouse
                    // is over an item in the menu
                    if (this.previousFilter) return;
                    var actualTarget = $(event.target).closest(".ui-menu-item"), target = $(event.currentTarget);
                    // Ignore bubbled events on parent items, see #11641
                    if (actualTarget[0] !== target[0]) return;
                    // Remove ui-state-active class from siblings of the newly focused menu item
                    // to avoid a jump caused by adjacent elements both having a class with a border
                    this._removeClass(target.siblings().children(".ui-state-active"), null, "ui-state-active");
                    this.focus(event, target);
                },
                mouseleave: "collapseAll",
                "mouseleave .ui-menu": "collapseAll",
                focus: function(event, keepActiveItem) {
                    // If there's already an active item, keep it active
                    // If not, activate the first item
                    var item = this.active || this.element.find(this.options.items).eq(0);
                    if (!keepActiveItem) this.focus(event, item);
                },
                blur: function(event) {
                    this._delay(function() {
                        var notContained = !$.contains(this.element[0], $.ui.safeActiveElement(this.document[0]));
                        if (notContained) this.collapseAll(event);
                    });
                },
                keydown: "_keydown"
            });
            this.refresh();
            // Clicks outside of a menu collapse any open menus
            this._on(this.document, {
                click: function(event) {
                    if (this._closeOnDocumentClick(event)) this.collapseAll(event);
                    // Reset the mouseHandled flag
                    this.mouseHandled = false;
                }
            });
        },
        _destroy: function() {
            var items = this.element.find(".ui-menu-item").removeAttr("role aria-disabled"), submenus = items.children(".ui-menu-item-wrapper").removeUniqueId().removeAttr("tabIndex role aria-haspopup");
            // Destroy (sub)menus
            this.element.removeAttr("aria-activedescendant").find(".ui-menu").addBack().removeAttr("role aria-labelledby aria-expanded aria-hidden aria-disabled tabIndex").removeUniqueId().show();
            submenus.children().each(function() {
                var elem = $(this);
                if (elem.data("ui-menu-submenu-caret")) elem.remove();
            });
        },
        _keydown: function(event) {
            var match, prev, character, skip, preventDefault = true;
            switch(event.keyCode){
                case $.ui.keyCode.PAGE_UP:
                    this.previousPage(event);
                    break;
                case $.ui.keyCode.PAGE_DOWN:
                    this.nextPage(event);
                    break;
                case $.ui.keyCode.HOME:
                    this._move("first", "first", event);
                    break;
                case $.ui.keyCode.END:
                    this._move("last", "last", event);
                    break;
                case $.ui.keyCode.UP:
                    this.previous(event);
                    break;
                case $.ui.keyCode.DOWN:
                    this.next(event);
                    break;
                case $.ui.keyCode.LEFT:
                    this.collapse(event);
                    break;
                case $.ui.keyCode.RIGHT:
                    if (this.active && !this.active.is(".ui-state-disabled")) this.expand(event);
                    break;
                case $.ui.keyCode.ENTER:
                case $.ui.keyCode.SPACE:
                    this._activate(event);
                    break;
                case $.ui.keyCode.ESCAPE:
                    this.collapse(event);
                    break;
                default:
                    preventDefault = false;
                    prev = this.previousFilter || "";
                    skip = false;
                    // Support number pad values
                    character = event.keyCode >= 96 && event.keyCode <= 105 ? (event.keyCode - 96).toString() : String.fromCharCode(event.keyCode);
                    clearTimeout(this.filterTimer);
                    if (character === prev) skip = true;
                    else character = prev + character;
                    match = this._filterMenuItems(character);
                    match = skip && match.index(this.active.next()) !== -1 ? this.active.nextAll(".ui-menu-item") : match;
                    // If no matches on the current filter, reset to the last character pressed
                    // to move down the menu to the first item that starts with that character
                    if (!match.length) {
                        character = String.fromCharCode(event.keyCode);
                        match = this._filterMenuItems(character);
                    }
                    if (match.length) {
                        this.focus(event, match);
                        this.previousFilter = character;
                        this.filterTimer = this._delay(function() {
                            delete this.previousFilter;
                        }, 1000);
                    } else delete this.previousFilter;
            }
            if (preventDefault) event.preventDefault();
        },
        _activate: function(event) {
            if (this.active && !this.active.is(".ui-state-disabled")) {
                if (this.active.children("[aria-haspopup='true']").length) this.expand(event);
                else this.select(event);
            }
        },
        refresh: function() {
            var menus, items, newSubmenus, newItems, newWrappers, that = this, icon = this.options.icons.submenu, submenus = this.element.find(this.options.menus);
            this._toggleClass("ui-menu-icons", null, !!this.element.find(".ui-icon").length);
            // Initialize nested menus
            newSubmenus = submenus.filter(":not(.ui-menu)").hide().attr({
                role: this.options.role,
                "aria-hidden": "true",
                "aria-expanded": "false"
            }).each(function() {
                var menu = $(this), item = menu.prev(), submenuCaret = $("<span>").data("ui-menu-submenu-caret", true);
                that._addClass(submenuCaret, "ui-menu-icon", "ui-icon " + icon);
                item.attr("aria-haspopup", "true").prepend(submenuCaret);
                menu.attr("aria-labelledby", item.attr("id"));
            });
            this._addClass(newSubmenus, "ui-menu", "ui-widget ui-widget-content ui-front");
            menus = submenus.add(this.element);
            items = menus.find(this.options.items);
            // Initialize menu-items containing spaces and/or dashes only as dividers
            items.not(".ui-menu-item").each(function() {
                var item = $(this);
                if (that._isDivider(item)) that._addClass(item, "ui-menu-divider", "ui-widget-content");
            });
            // Don't refresh list items that are already adapted
            newItems = items.not(".ui-menu-item, .ui-menu-divider");
            newWrappers = newItems.children().not(".ui-menu").uniqueId().attr({
                tabIndex: -1,
                role: this._itemRole()
            });
            this._addClass(newItems, "ui-menu-item")._addClass(newWrappers, "ui-menu-item-wrapper");
            // Add aria-disabled attribute to any disabled menu item
            items.filter(".ui-state-disabled").attr("aria-disabled", "true");
            // If the active item has been removed, blur the menu
            if (this.active && !$.contains(this.element[0], this.active[0])) this.blur();
        },
        _itemRole: function() {
            return ({
                menu: "menuitem",
                listbox: "option"
            })[this.options.role];
        },
        _setOption: function(key, value) {
            if (key === "icons") {
                var icons = this.element.find(".ui-menu-icon");
                this._removeClass(icons, null, this.options.icons.submenu)._addClass(icons, null, value.submenu);
            }
            this._super(key, value);
        },
        _setOptionDisabled: function(value) {
            this._super(value);
            this.element.attr("aria-disabled", String(value));
            this._toggleClass(null, "ui-state-disabled", !!value);
        },
        focus: function(event, item) {
            var nested, focused, activeParent;
            this.blur(event, event && event.type === "focus");
            this._scrollIntoView(item);
            this.active = item.first();
            focused = this.active.children(".ui-menu-item-wrapper");
            this._addClass(focused, null, "ui-state-active");
            // Only update aria-activedescendant if there's a role
            // otherwise we assume focus is managed elsewhere
            if (this.options.role) this.element.attr("aria-activedescendant", focused.attr("id"));
            // Highlight active parent menu item, if any
            activeParent = this.active.parent().closest(".ui-menu-item").children(".ui-menu-item-wrapper");
            this._addClass(activeParent, null, "ui-state-active");
            if (event && event.type === "keydown") this._close();
            else this.timer = this._delay(function() {
                this._close();
            }, this.delay);
            nested = item.children(".ui-menu");
            if (nested.length && event && /^mouse/.test(event.type)) this._startOpening(nested);
            this.activeMenu = item.parent();
            this._trigger("focus", event, {
                item: item
            });
        },
        _scrollIntoView: function(item) {
            var borderTop, paddingTop, offset, scroll, elementHeight, itemHeight;
            if (this._hasScroll()) {
                borderTop = parseFloat($.css(this.activeMenu[0], "borderTopWidth")) || 0;
                paddingTop = parseFloat($.css(this.activeMenu[0], "paddingTop")) || 0;
                offset = item.offset().top - this.activeMenu.offset().top - borderTop - paddingTop;
                scroll = this.activeMenu.scrollTop();
                elementHeight = this.activeMenu.height();
                itemHeight = item.outerHeight();
                if (offset < 0) this.activeMenu.scrollTop(scroll + offset);
                else if (offset + itemHeight > elementHeight) this.activeMenu.scrollTop(scroll + offset - elementHeight + itemHeight);
            }
        },
        blur: function(event, fromFocus) {
            if (!fromFocus) clearTimeout(this.timer);
            if (!this.active) return;
            this._removeClass(this.active.children(".ui-menu-item-wrapper"), null, "ui-state-active");
            this._trigger("blur", event, {
                item: this.active
            });
            this.active = null;
        },
        _startOpening: function(submenu) {
            clearTimeout(this.timer);
            // Don't open if already open fixes a Firefox bug that caused a .5 pixel
            // shift in the submenu position when mousing over the caret icon
            if (submenu.attr("aria-hidden") !== "true") return;
            this.timer = this._delay(function() {
                this._close();
                this._open(submenu);
            }, this.delay);
        },
        _open: function(submenu) {
            var position = $.extend({
                of: this.active
            }, this.options.position);
            clearTimeout(this.timer);
            this.element.find(".ui-menu").not(submenu.parents(".ui-menu")).hide().attr("aria-hidden", "true");
            submenu.show().removeAttr("aria-hidden").attr("aria-expanded", "true").position(position);
        },
        collapseAll: function(event, all) {
            clearTimeout(this.timer);
            this.timer = this._delay(function() {
                // If we were passed an event, look for the submenu that contains the event
                var currentMenu = all ? this.element : $(event && event.target).closest(this.element.find(".ui-menu"));
                // If we found no valid submenu ancestor, use the main menu to close all
                // sub menus anyway
                if (!currentMenu.length) currentMenu = this.element;
                this._close(currentMenu);
                this.blur(event);
                // Work around active item staying active after menu is blurred
                this._removeClass(currentMenu.find(".ui-state-active"), null, "ui-state-active");
                this.activeMenu = currentMenu;
            }, this.delay);
        },
        // With no arguments, closes the currently active menu - if nothing is active
        // it closes all menus.  If passed an argument, it will search for menus BELOW
        _close: function(startMenu) {
            if (!startMenu) startMenu = this.active ? this.active.parent() : this.element;
            startMenu.find(".ui-menu").hide().attr("aria-hidden", "true").attr("aria-expanded", "false");
        },
        _closeOnDocumentClick: function(event) {
            return !$(event.target).closest(".ui-menu").length;
        },
        _isDivider: function(item) {
            // Match hyphen, em dash, en dash
            return !/[^\-\u2014\u2013\s]/.test(item.text());
        },
        collapse: function(event) {
            var newItem = this.active && this.active.parent().closest(".ui-menu-item", this.element);
            if (newItem && newItem.length) {
                this._close();
                this.focus(event, newItem);
            }
        },
        expand: function(event) {
            var newItem = this.active && this.active.children(".ui-menu ").find(this.options.items).first();
            if (newItem && newItem.length) {
                this._open(newItem.parent());
                // Delay so Firefox will not hide activedescendant change in expanding submenu from AT
                this._delay(function() {
                    this.focus(event, newItem);
                });
            }
        },
        next: function(event) {
            this._move("next", "first", event);
        },
        previous: function(event) {
            this._move("prev", "last", event);
        },
        isFirstItem: function() {
            return this.active && !this.active.prevAll(".ui-menu-item").length;
        },
        isLastItem: function() {
            return this.active && !this.active.nextAll(".ui-menu-item").length;
        },
        _move: function(direction, filter, event) {
            var next;
            if (this.active) {
                if (direction === "first" || direction === "last") next = this.active[direction === "first" ? "prevAll" : "nextAll"](".ui-menu-item").eq(-1);
                else next = this.active[direction + "All"](".ui-menu-item").eq(0);
            }
            if (!next || !next.length || !this.active) next = this.activeMenu.find(this.options.items)[filter]();
            this.focus(event, next);
        },
        nextPage: function(event) {
            var item, base, height;
            if (!this.active) {
                this.next(event);
                return;
            }
            if (this.isLastItem()) return;
            if (this._hasScroll()) {
                base = this.active.offset().top;
                height = this.element.height();
                this.active.nextAll(".ui-menu-item").each(function() {
                    item = $(this);
                    return item.offset().top - base - height < 0;
                });
                this.focus(event, item);
            } else this.focus(event, this.activeMenu.find(this.options.items)[!this.active ? "first" : "last"]());
        },
        previousPage: function(event) {
            var item, base, height;
            if (!this.active) {
                this.next(event);
                return;
            }
            if (this.isFirstItem()) return;
            if (this._hasScroll()) {
                base = this.active.offset().top;
                height = this.element.height();
                this.active.prevAll(".ui-menu-item").each(function() {
                    item = $(this);
                    return item.offset().top - base + height > 0;
                });
                this.focus(event, item);
            } else this.focus(event, this.activeMenu.find(this.options.items).first());
        },
        _hasScroll: function() {
            return this.element.outerHeight() < this.element.prop("scrollHeight");
        },
        select: function(event) {
            // TODO: It should never be possible to not have an active item at this
            // point, but the tests don't trigger mouseenter before click.
            this.active = this.active || $(event.target).closest(".ui-menu-item");
            var ui = {
                item: this.active
            };
            if (!this.active.has(".ui-menu").length) this.collapseAll(event, true);
            this._trigger("select", event, ui);
        },
        _filterMenuItems: function(character) {
            var escapedCharacter = character.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&"), regex = new RegExp("^" + escapedCharacter, "i");
            return this.activeMenu.find(this.options.items)// Only match on items, not dividers or other content (#10571)
            .filter(".ui-menu-item").filter(function() {
                return regex.test($.trim($(this).children(".ui-menu-item-wrapper").text()));
            });
        }
    });
    /*!
 * jQuery UI Autocomplete 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Autocomplete
    //>>group: Widgets
    //>>description: Lists suggested words as the user is typing.
    //>>docs: http://api.jqueryui.com/autocomplete/
    //>>demos: http://jqueryui.com/autocomplete/
    //>>css.structure: ../../themes/base/core.css
    //>>css.structure: ../../themes/base/autocomplete.css
    //>>css.theme: ../../themes/base/theme.css
    $.widget("ui.autocomplete", {
        version: "1.12.1",
        defaultElement: "<input>",
        options: {
            appendTo: null,
            autoFocus: false,
            delay: 300,
            minLength: 1,
            position: {
                my: "left top",
                at: "left bottom",
                collision: "none"
            },
            source: null,
            // Callbacks
            change: null,
            close: null,
            focus: null,
            open: null,
            response: null,
            search: null,
            select: null
        },
        requestIndex: 0,
        pending: 0,
        _create: function() {
            // Some browsers only repeat keydown events, not keypress events,
            // so we use the suppressKeyPress flag to determine if we've already
            // handled the keydown event. #7269
            // Unfortunately the code for & in keypress is the same as the up arrow,
            // so we use the suppressKeyPressRepeat flag to avoid handling keypress
            // events when we know the keydown event was used to modify the
            // search term. #7799
            var suppressKeyPress, suppressKeyPressRepeat, suppressInput, nodeName = this.element[0].nodeName.toLowerCase(), isTextarea = nodeName === "textarea", isInput = nodeName === "input";
            // Textareas are always multi-line
            // Inputs are always single-line, even if inside a contentEditable element
            // IE also treats inputs as contentEditable
            // All other element types are determined by whether or not they're contentEditable
            this.isMultiLine = isTextarea || !isInput && this._isContentEditable(this.element);
            this.valueMethod = this.element[isTextarea || isInput ? "val" : "text"];
            this.isNewMenu = true;
            this._addClass("ui-autocomplete-input");
            this.element.attr("autocomplete", "off");
            this._on(this.element, {
                keydown: function(event) {
                    if (this.element.prop("readOnly")) {
                        suppressKeyPress = true;
                        suppressInput = true;
                        suppressKeyPressRepeat = true;
                        return;
                    }
                    suppressKeyPress = false;
                    suppressInput = false;
                    suppressKeyPressRepeat = false;
                    var keyCode = $.ui.keyCode;
                    switch(event.keyCode){
                        case keyCode.PAGE_UP:
                            suppressKeyPress = true;
                            this._move("previousPage", event);
                            break;
                        case keyCode.PAGE_DOWN:
                            suppressKeyPress = true;
                            this._move("nextPage", event);
                            break;
                        case keyCode.UP:
                            suppressKeyPress = true;
                            this._keyEvent("previous", event);
                            break;
                        case keyCode.DOWN:
                            suppressKeyPress = true;
                            this._keyEvent("next", event);
                            break;
                        case keyCode.ENTER:
                            // when menu is open and has focus
                            if (this.menu.active) {
                                // #6055 - Opera still allows the keypress to occur
                                // which causes forms to submit
                                suppressKeyPress = true;
                                event.preventDefault();
                                this.menu.select(event);
                            }
                            break;
                        case keyCode.TAB:
                            if (this.menu.active) this.menu.select(event);
                            break;
                        case keyCode.ESCAPE:
                            if (this.menu.element.is(":visible")) {
                                if (!this.isMultiLine) this._value(this.term);
                                this.close(event);
                                // Different browsers have different default behavior for escape
                                // Single press can mean undo or clear
                                // Double press in IE means clear the whole form
                                event.preventDefault();
                            }
                            break;
                        default:
                            suppressKeyPressRepeat = true;
                            // search timeout should be triggered before the input value is changed
                            this._searchTimeout(event);
                            break;
                    }
                },
                keypress: function(event) {
                    if (suppressKeyPress) {
                        suppressKeyPress = false;
                        if (!this.isMultiLine || this.menu.element.is(":visible")) event.preventDefault();
                        return;
                    }
                    if (suppressKeyPressRepeat) return;
                    // Replicate some key handlers to allow them to repeat in Firefox and Opera
                    var keyCode = $.ui.keyCode;
                    switch(event.keyCode){
                        case keyCode.PAGE_UP:
                            this._move("previousPage", event);
                            break;
                        case keyCode.PAGE_DOWN:
                            this._move("nextPage", event);
                            break;
                        case keyCode.UP:
                            this._keyEvent("previous", event);
                            break;
                        case keyCode.DOWN:
                            this._keyEvent("next", event);
                            break;
                    }
                },
                input: function(event) {
                    if (suppressInput) {
                        suppressInput = false;
                        event.preventDefault();
                        return;
                    }
                    this._searchTimeout(event);
                },
                focus: function() {
                    this.selectedItem = null;
                    this.previous = this._value();
                },
                blur: function(event) {
                    if (this.cancelBlur) {
                        delete this.cancelBlur;
                        return;
                    }
                    clearTimeout(this.searching);
                    this.close(event);
                    this._change(event);
                }
            });
            this._initSource();
            this.menu = $("<ul>").appendTo(this._appendTo()).menu({
                // disable ARIA support, the live region takes care of that
                role: null
            }).hide().menu("instance");
            this._addClass(this.menu.element, "ui-autocomplete", "ui-front");
            this._on(this.menu.element, {
                mousedown: function(event) {
                    // prevent moving focus out of the text field
                    event.preventDefault();
                    // IE doesn't prevent moving focus even with event.preventDefault()
                    // so we set a flag to know when we should ignore the blur event
                    this.cancelBlur = true;
                    this._delay(function() {
                        delete this.cancelBlur;
                        // Support: IE 8 only
                        // Right clicking a menu item or selecting text from the menu items will
                        // result in focus moving out of the input. However, we've already received
                        // and ignored the blur event because of the cancelBlur flag set above. So
                        // we restore focus to ensure that the menu closes properly based on the user's
                        // next actions.
                        if (this.element[0] !== $.ui.safeActiveElement(this.document[0])) this.element.trigger("focus");
                    });
                },
                menufocus: function(event, ui) {
                    var label, item;
                    // support: Firefox
                    // Prevent accidental activation of menu items in Firefox (#7024 #9118)
                    if (this.isNewMenu) {
                        this.isNewMenu = false;
                        if (event.originalEvent && /^mouse/.test(event.originalEvent.type)) {
                            this.menu.blur();
                            this.document.one("mousemove", function() {
                                $(event.target).trigger(event.originalEvent);
                            });
                            return;
                        }
                    }
                    item = ui.item.data("ui-autocomplete-item");
                    if (false !== this._trigger("focus", event, {
                        item: item
                    })) // use value to match what will end up in the input, if it was a key event
                    {
                        if (event.originalEvent && /^key/.test(event.originalEvent.type)) this._value(item.value);
                    }
                    // Announce the value in the liveRegion
                    label = ui.item.attr("aria-label") || item.value;
                    if (label && $.trim(label).length) {
                        this.liveRegion.children().hide();
                        $("<div>").text(label).appendTo(this.liveRegion);
                    }
                },
                menuselect: function(event, ui) {
                    var item = ui.item.data("ui-autocomplete-item"), previous = this.previous;
                    // Only trigger when focus was lost (click on menu)
                    if (this.element[0] !== $.ui.safeActiveElement(this.document[0])) {
                        this.element.trigger("focus");
                        this.previous = previous;
                        // #6109 - IE triggers two focus events and the second
                        // is asynchronous, so we need to reset the previous
                        // term synchronously and asynchronously :-(
                        this._delay(function() {
                            this.previous = previous;
                            this.selectedItem = item;
                        });
                    }
                    if (false !== this._trigger("select", event, {
                        item: item
                    })) this._value(item.value);
                    // reset the term after the select event
                    // this allows custom select handling to work properly
                    this.term = this._value();
                    this.close(event);
                    this.selectedItem = item;
                }
            });
            this.liveRegion = $("<div>", {
                role: "status",
                "aria-live": "assertive",
                "aria-relevant": "additions"
            }).appendTo(this.document[0].body);
            this._addClass(this.liveRegion, null, "ui-helper-hidden-accessible");
            // Turning off autocomplete prevents the browser from remembering the
            // value when navigating through history, so we re-enable autocomplete
            // if the page is unloaded before the widget is destroyed. #7790
            this._on(this.window, {
                beforeunload: function() {
                    this.element.removeAttr("autocomplete");
                }
            });
        },
        _destroy: function() {
            clearTimeout(this.searching);
            this.element.removeAttr("autocomplete");
            this.menu.element.remove();
            this.liveRegion.remove();
        },
        _setOption: function(key, value) {
            this._super(key, value);
            if (key === "source") this._initSource();
            if (key === "appendTo") this.menu.element.appendTo(this._appendTo());
            if (key === "disabled" && value && this.xhr) this.xhr.abort();
        },
        _isEventTargetInWidget: function(event) {
            var menuElement = this.menu.element[0];
            return event.target === this.element[0] || event.target === menuElement || $.contains(menuElement, event.target);
        },
        _closeOnClickOutside: function(event) {
            if (!this._isEventTargetInWidget(event)) this.close();
        },
        _appendTo: function() {
            var element = this.options.appendTo;
            if (element) element = element.jquery || element.nodeType ? $(element) : this.document.find(element).eq(0);
            if (!element || !element[0]) element = this.element.closest(".ui-front, dialog");
            if (!element.length) element = this.document[0].body;
            return element;
        },
        _initSource: function() {
            var array, url, that = this;
            if ($.isArray(this.options.source)) {
                array = this.options.source;
                this.source = function(request, response) {
                    response($.ui.autocomplete.filter(array, request.term));
                };
            } else if (typeof this.options.source === "string") {
                url = this.options.source;
                this.source = function(request, response) {
                    if (that.xhr) that.xhr.abort();
                    that.xhr = $.ajax({
                        url: url,
                        data: request,
                        dataType: "json",
                        success: function(data) {
                            response(data);
                        },
                        error: function() {
                            response([]);
                        }
                    });
                };
            } else this.source = this.options.source;
        },
        _searchTimeout: function(event) {
            clearTimeout(this.searching);
            this.searching = this._delay(function() {
                // Search if the value has changed, or if the user retypes the same value (see #7434)
                var equalValues = this.term === this._value(), menuVisible = this.menu.element.is(":visible"), modifierKey = event.altKey || event.ctrlKey || event.metaKey || event.shiftKey;
                if (!equalValues || equalValues && !menuVisible && !modifierKey) {
                    this.selectedItem = null;
                    this.search(null, event);
                }
            }, this.options.delay);
        },
        search: function(value, event) {
            value = value != null ? value : this._value();
            // Always save the actual value, not the one passed as an argument
            this.term = this._value();
            if (value.length < this.options.minLength) return this.close(event);
            if (this._trigger("search", event) === false) return;
            return this._search(value);
        },
        _search: function(value) {
            this.pending++;
            this._addClass("ui-autocomplete-loading");
            this.cancelSearch = false;
            this.source({
                term: value
            }, this._response());
        },
        _response: function() {
            var index = ++this.requestIndex;
            return $.proxy(function(content) {
                if (index === this.requestIndex) this.__response(content);
                this.pending--;
                if (!this.pending) this._removeClass("ui-autocomplete-loading");
            }, this);
        },
        __response: function(content) {
            if (content) content = this._normalize(content);
            this._trigger("response", null, {
                content: content
            });
            if (!this.options.disabled && content && content.length && !this.cancelSearch) {
                this._suggest(content);
                this._trigger("open");
            } else // use ._close() instead of .close() so we don't cancel future searches
            this._close();
        },
        close: function(event) {
            this.cancelSearch = true;
            this._close(event);
        },
        _close: function(event) {
            // Remove the handler that closes the menu on outside clicks
            this._off(this.document, "mousedown");
            if (this.menu.element.is(":visible")) {
                this.menu.element.hide();
                this.menu.blur();
                this.isNewMenu = true;
                this._trigger("close", event);
            }
        },
        _change: function(event) {
            if (this.previous !== this._value()) this._trigger("change", event, {
                item: this.selectedItem
            });
        },
        _normalize: function(items) {
            // assume all items have the right format when the first item is complete
            if (items.length && items[0].label && items[0].value) return items;
            return $.map(items, function(item) {
                if (typeof item === "string") return {
                    label: item,
                    value: item
                };
                return $.extend({}, item, {
                    label: item.label || item.value,
                    value: item.value || item.label
                });
            });
        },
        _suggest: function(items) {
            var ul = this.menu.element.empty();
            this._renderMenu(ul, items);
            this.isNewMenu = true;
            this.menu.refresh();
            // Size and position menu
            ul.show();
            this._resizeMenu();
            ul.position($.extend({
                of: this.element
            }, this.options.position));
            if (this.options.autoFocus) this.menu.next();
            // Listen for interactions outside of the widget (#6642)
            this._on(this.document, {
                mousedown: "_closeOnClickOutside"
            });
        },
        _resizeMenu: function() {
            var ul = this.menu.element;
            ul.outerWidth(Math.max(// Firefox wraps long text (possibly a rounding bug)
            // so we add 1px to avoid the wrapping (#7513)
            ul.width("").outerWidth() + 1, this.element.outerWidth()));
        },
        _renderMenu: function(ul, items) {
            var that = this;
            $.each(items, function(index, item) {
                that._renderItemData(ul, item);
            });
        },
        _renderItemData: function(ul, item) {
            return this._renderItem(ul, item).data("ui-autocomplete-item", item);
        },
        _renderItem: function(ul, item) {
            return $("<li>").append($("<div>").text(item.label)).appendTo(ul);
        },
        _move: function(direction, event) {
            if (!this.menu.element.is(":visible")) {
                this.search(null, event);
                return;
            }
            if (this.menu.isFirstItem() && /^previous/.test(direction) || this.menu.isLastItem() && /^next/.test(direction)) {
                if (!this.isMultiLine) this._value(this.term);
                this.menu.blur();
                return;
            }
            this.menu[direction](event);
        },
        widget: function() {
            return this.menu.element;
        },
        _value: function() {
            return this.valueMethod.apply(this.element, arguments);
        },
        _keyEvent: function(keyEvent, event) {
            if (!this.isMultiLine || this.menu.element.is(":visible")) {
                this._move(keyEvent, event);
                // Prevents moving cursor to beginning/end of the text field in some browsers
                event.preventDefault();
            }
        },
        // Support: Chrome <=50
        // We should be able to just use this.element.prop( "isContentEditable" )
        // but hidden elements always report false in Chrome.
        // https://code.google.com/p/chromium/issues/detail?id=313082
        _isContentEditable: function(element) {
            if (!element.length) return false;
            var editable = element.prop("contentEditable");
            if (editable === "inherit") return this._isContentEditable(element.parent());
            return editable === "true";
        }
    });
    $.extend($.ui.autocomplete, {
        escapeRegex: function(value) {
            return value.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
        },
        filter: function(array, term) {
            var matcher = new RegExp($.ui.autocomplete.escapeRegex(term), "i");
            return $.grep(array, function(value) {
                return matcher.test(value.label || value.value || value);
            });
        }
    });
    // Live region extension, adding a `messages` option
    // NOTE: This is an experimental API. We are still investigating
    // a full solution for string manipulation and internationalization.
    $.widget("ui.autocomplete", $.ui.autocomplete, {
        options: {
            messages: {
                noResults: "No search results.",
                results: function(amount) {
                    return amount + (amount > 1 ? " results are" : " result is") + " available, use up and down arrow keys to navigate.";
                }
            }
        },
        __response: function(content) {
            var message;
            this._superApply(arguments);
            if (this.options.disabled || this.cancelSearch) return;
            if (content && content.length) message = this.options.messages.results(content.length);
            else message = this.options.messages.noResults;
            this.liveRegion.children().hide();
            $("<div>").text(message).appendTo(this.liveRegion);
        }
    });
    var widgetsAutocomplete = $.ui.autocomplete;
    /*!
 * jQuery UI Controlgroup 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Controlgroup
    //>>group: Widgets
    //>>description: Visually groups form control widgets
    //>>docs: http://api.jqueryui.com/controlgroup/
    //>>demos: http://jqueryui.com/controlgroup/
    //>>css.structure: ../../themes/base/core.css
    //>>css.structure: ../../themes/base/controlgroup.css
    //>>css.theme: ../../themes/base/theme.css
    var controlgroupCornerRegex = /ui-corner-([a-z]){2,6}/g;
    var widgetsControlgroup = $.widget("ui.controlgroup", {
        version: "1.12.1",
        defaultElement: "<div>",
        options: {
            direction: "horizontal",
            disabled: null,
            onlyVisible: true,
            items: {
                "button": "input[type=button], input[type=submit], input[type=reset], button, a",
                "controlgroupLabel": ".ui-controlgroup-label",
                "checkboxradio": "input[type='checkbox'], input[type='radio']",
                "selectmenu": "select",
                "spinner": ".ui-spinner-input"
            }
        },
        _create: function() {
            this._enhance();
        },
        // To support the enhanced option in jQuery Mobile, we isolate DOM manipulation
        _enhance: function() {
            this.element.attr("role", "toolbar");
            this.refresh();
        },
        _destroy: function() {
            this._callChildMethod("destroy");
            this.childWidgets.removeData("ui-controlgroup-data");
            this.element.removeAttr("role");
            if (this.options.items.controlgroupLabel) this.element.find(this.options.items.controlgroupLabel).find(".ui-controlgroup-label-contents").contents().unwrap();
        },
        _initWidgets: function() {
            var that = this, childWidgets = [];
            // First we iterate over each of the items options
            $.each(this.options.items, function(widget, selector) {
                var labels;
                var options = {};
                // Make sure the widget has a selector set
                if (!selector) return;
                if (widget === "controlgroupLabel") {
                    labels = that.element.find(selector);
                    labels.each(function() {
                        var element = $(this);
                        if (element.children(".ui-controlgroup-label-contents").length) return;
                        element.contents().wrapAll("<span class='ui-controlgroup-label-contents'></span>");
                    });
                    that._addClass(labels, null, "ui-widget ui-widget-content ui-state-default");
                    childWidgets = childWidgets.concat(labels.get());
                    return;
                }
                // Make sure the widget actually exists
                if (!$.fn[widget]) return;
                // We assume everything is in the middle to start because we can't determine
                // first / last elements until all enhancments are done.
                if (that["_" + widget + "Options"]) options = that["_" + widget + "Options"]("middle");
                else options = {
                    classes: {}
                };
                // Find instances of this widget inside controlgroup and init them
                that.element.find(selector).each(function() {
                    var element = $(this);
                    var instance = element[widget]("instance");
                    // We need to clone the default options for this type of widget to avoid
                    // polluting the variable options which has a wider scope than a single widget.
                    var instanceOptions = $.widget.extend({}, options);
                    // If the button is the child of a spinner ignore it
                    // TODO: Find a more generic solution
                    if (widget === "button" && element.parent(".ui-spinner").length) return;
                    // Create the widget if it doesn't exist
                    if (!instance) instance = element[widget]()[widget]("instance");
                    if (instance) instanceOptions.classes = that._resolveClassesValues(instanceOptions.classes, instance);
                    element[widget](instanceOptions);
                    // Store an instance of the controlgroup to be able to reference
                    // from the outermost element for changing options and refresh
                    var widgetElement = element[widget]("widget");
                    $.data(widgetElement[0], "ui-controlgroup-data", instance ? instance : element[widget]("instance"));
                    childWidgets.push(widgetElement[0]);
                });
            });
            this.childWidgets = $($.unique(childWidgets));
            this._addClass(this.childWidgets, "ui-controlgroup-item");
        },
        _callChildMethod: function(method) {
            this.childWidgets.each(function() {
                var element = $(this), data = element.data("ui-controlgroup-data");
                if (data && data[method]) data[method]();
            });
        },
        _updateCornerClass: function(element, position) {
            var remove = "ui-corner-top ui-corner-bottom ui-corner-left ui-corner-right ui-corner-all";
            var add = this._buildSimpleOptions(position, "label").classes.label;
            this._removeClass(element, null, remove);
            this._addClass(element, null, add);
        },
        _buildSimpleOptions: function(position, key) {
            var direction = this.options.direction === "vertical";
            var result = {
                classes: {}
            };
            result.classes[key] = ({
                "middle": "",
                "first": "ui-corner-" + (direction ? "top" : "left"),
                "last": "ui-corner-" + (direction ? "bottom" : "right"),
                "only": "ui-corner-all"
            })[position];
            return result;
        },
        _spinnerOptions: function(position) {
            var options = this._buildSimpleOptions(position, "ui-spinner");
            options.classes["ui-spinner-up"] = "";
            options.classes["ui-spinner-down"] = "";
            return options;
        },
        _buttonOptions: function(position) {
            return this._buildSimpleOptions(position, "ui-button");
        },
        _checkboxradioOptions: function(position) {
            return this._buildSimpleOptions(position, "ui-checkboxradio-label");
        },
        _selectmenuOptions: function(position) {
            var direction = this.options.direction === "vertical";
            return {
                width: direction ? "auto" : false,
                classes: ({
                    middle: {
                        "ui-selectmenu-button-open": "",
                        "ui-selectmenu-button-closed": ""
                    },
                    first: {
                        "ui-selectmenu-button-open": "ui-corner-" + (direction ? "top" : "tl"),
                        "ui-selectmenu-button-closed": "ui-corner-" + (direction ? "top" : "left")
                    },
                    last: {
                        "ui-selectmenu-button-open": direction ? "" : "ui-corner-tr",
                        "ui-selectmenu-button-closed": "ui-corner-" + (direction ? "bottom" : "right")
                    },
                    only: {
                        "ui-selectmenu-button-open": "ui-corner-top",
                        "ui-selectmenu-button-closed": "ui-corner-all"
                    }
                })[position]
            };
        },
        _resolveClassesValues: function(classes, instance) {
            var result = {};
            $.each(classes, function(key) {
                var current = instance.options.classes[key] || "";
                current = $.trim(current.replace(controlgroupCornerRegex, ""));
                result[key] = (current + " " + classes[key]).replace(/\s+/g, " ");
            });
            return result;
        },
        _setOption: function(key, value) {
            if (key === "direction") this._removeClass("ui-controlgroup-" + this.options.direction);
            this._super(key, value);
            if (key === "disabled") {
                this._callChildMethod(value ? "disable" : "enable");
                return;
            }
            this.refresh();
        },
        refresh: function() {
            var children, that = this;
            this._addClass("ui-controlgroup ui-controlgroup-" + this.options.direction);
            if (this.options.direction === "horizontal") this._addClass(null, "ui-helper-clearfix");
            this._initWidgets();
            children = this.childWidgets;
            // We filter here because we need to track all childWidgets not just the visible ones
            if (this.options.onlyVisible) children = children.filter(":visible");
            if (children.length) {
                // We do this last because we need to make sure all enhancment is done
                // before determining first and last
                $.each([
                    "first",
                    "last"
                ], function(index, value) {
                    var instance = children[value]().data("ui-controlgroup-data");
                    if (instance && that["_" + instance.widgetName + "Options"]) {
                        var options = that["_" + instance.widgetName + "Options"](children.length === 1 ? "only" : value);
                        options.classes = that._resolveClassesValues(options.classes, instance);
                        instance.element[instance.widgetName](options);
                    } else that._updateCornerClass(children[value](), value);
                });
                // Finally call the refresh method on each of the child widgets.
                this._callChildMethod("refresh");
            }
        }
    });
    /*!
 * jQuery UI Checkboxradio 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Checkboxradio
    //>>group: Widgets
    //>>description: Enhances a form with multiple themeable checkboxes or radio buttons.
    //>>docs: http://api.jqueryui.com/checkboxradio/
    //>>demos: http://jqueryui.com/checkboxradio/
    //>>css.structure: ../../themes/base/core.css
    //>>css.structure: ../../themes/base/button.css
    //>>css.structure: ../../themes/base/checkboxradio.css
    //>>css.theme: ../../themes/base/theme.css
    $.widget("ui.checkboxradio", [
        $.ui.formResetMixin,
        {
            version: "1.12.1",
            options: {
                disabled: null,
                label: null,
                icon: true,
                classes: {
                    "ui-checkboxradio-label": "ui-corner-all",
                    "ui-checkboxradio-icon": "ui-corner-all"
                }
            },
            _getCreateOptions: function() {
                var disabled, labels;
                var that = this;
                var options = this._super() || {};
                // We read the type here, because it makes more sense to throw a element type error first,
                // rather then the error for lack of a label. Often if its the wrong type, it
                // won't have a label (e.g. calling on a div, btn, etc)
                this._readType();
                labels = this.element.labels();
                // If there are multiple labels, use the last one
                this.label = $(labels[labels.length - 1]);
                if (!this.label.length) $.error("No label found for checkboxradio widget");
                this.originalLabel = "";
                // We need to get the label text but this may also need to make sure it does not contain the
                // input itself.
                this.label.contents().not(this.element[0]).each(function() {
                    // The label contents could be text, html, or a mix. We concat each element to get a
                    // string representation of the label, without the input as part of it.
                    that.originalLabel += this.nodeType === 3 ? $(this).text() : this.outerHTML;
                });
                // Set the label option if we found label text
                if (this.originalLabel) options.label = this.originalLabel;
                disabled = this.element[0].disabled;
                if (disabled != null) options.disabled = disabled;
                return options;
            },
            _create: function() {
                var checked = this.element[0].checked;
                this._bindFormResetHandler();
                if (this.options.disabled == null) this.options.disabled = this.element[0].disabled;
                this._setOption("disabled", this.options.disabled);
                this._addClass("ui-checkboxradio", "ui-helper-hidden-accessible");
                this._addClass(this.label, "ui-checkboxradio-label", "ui-button ui-widget");
                if (this.type === "radio") this._addClass(this.label, "ui-checkboxradio-radio-label");
                if (this.options.label && this.options.label !== this.originalLabel) this._updateLabel();
                else if (this.originalLabel) this.options.label = this.originalLabel;
                this._enhance();
                if (checked) {
                    this._addClass(this.label, "ui-checkboxradio-checked", "ui-state-active");
                    if (this.icon) this._addClass(this.icon, null, "ui-state-hover");
                }
                this._on({
                    change: "_toggleClasses",
                    focus: function() {
                        this._addClass(this.label, null, "ui-state-focus ui-visual-focus");
                    },
                    blur: function() {
                        this._removeClass(this.label, null, "ui-state-focus ui-visual-focus");
                    }
                });
            },
            _readType: function() {
                var nodeName = this.element[0].nodeName.toLowerCase();
                this.type = this.element[0].type;
                if (nodeName !== "input" || !/radio|checkbox/.test(this.type)) $.error("Can't create checkboxradio on element.nodeName=" + nodeName + " and element.type=" + this.type);
            },
            // Support jQuery Mobile enhanced option
            _enhance: function() {
                this._updateIcon(this.element[0].checked);
            },
            widget: function() {
                return this.label;
            },
            _getRadioGroup: function() {
                var group;
                var name = this.element[0].name;
                var nameSelector = "input[name='" + $.ui.escapeSelector(name) + "']";
                if (!name) return $([]);
                if (this.form.length) group = $(this.form[0].elements).filter(nameSelector);
                else // Not inside a form, check all inputs that also are not inside a form
                group = $(nameSelector).filter(function() {
                    return $(this).form().length === 0;
                });
                return group.not(this.element);
            },
            _toggleClasses: function() {
                var checked = this.element[0].checked;
                this._toggleClass(this.label, "ui-checkboxradio-checked", "ui-state-active", checked);
                if (this.options.icon && this.type === "checkbox") this._toggleClass(this.icon, null, "ui-icon-check ui-state-checked", checked)._toggleClass(this.icon, null, "ui-icon-blank", !checked);
                if (this.type === "radio") this._getRadioGroup().each(function() {
                    var instance = $(this).checkboxradio("instance");
                    if (instance) instance._removeClass(instance.label, "ui-checkboxradio-checked", "ui-state-active");
                });
            },
            _destroy: function() {
                this._unbindFormResetHandler();
                if (this.icon) {
                    this.icon.remove();
                    this.iconSpace.remove();
                }
            },
            _setOption: function(key, value) {
                // We don't allow the value to be set to nothing
                if (key === "label" && !value) return;
                this._super(key, value);
                if (key === "disabled") {
                    this._toggleClass(this.label, null, "ui-state-disabled", value);
                    this.element[0].disabled = value;
                    // Don't refresh when setting disabled
                    return;
                }
                this.refresh();
            },
            _updateIcon: function(checked) {
                var toAdd = "ui-icon ui-icon-background ";
                if (this.options.icon) {
                    if (!this.icon) {
                        this.icon = $("<span>");
                        this.iconSpace = $("<span> </span>");
                        this._addClass(this.iconSpace, "ui-checkboxradio-icon-space");
                    }
                    if (this.type === "checkbox") {
                        toAdd += checked ? "ui-icon-check ui-state-checked" : "ui-icon-blank";
                        this._removeClass(this.icon, null, checked ? "ui-icon-blank" : "ui-icon-check");
                    } else toAdd += "ui-icon-blank";
                    this._addClass(this.icon, "ui-checkboxradio-icon", toAdd);
                    if (!checked) this._removeClass(this.icon, null, "ui-icon-check ui-state-checked");
                    this.icon.prependTo(this.label).after(this.iconSpace);
                } else if (this.icon !== undefined) {
                    this.icon.remove();
                    this.iconSpace.remove();
                    delete this.icon;
                }
            },
            _updateLabel: function() {
                // Remove the contents of the label ( minus the icon, icon space, and input )
                var contents = this.label.contents().not(this.element[0]);
                if (this.icon) contents = contents.not(this.icon[0]);
                if (this.iconSpace) contents = contents.not(this.iconSpace[0]);
                contents.remove();
                this.label.append(this.options.label);
            },
            refresh: function() {
                var checked = this.element[0].checked, isDisabled = this.element[0].disabled;
                this._updateIcon(checked);
                this._toggleClass(this.label, "ui-checkboxradio-checked", "ui-state-active", checked);
                if (this.options.label !== null) this._updateLabel();
                if (isDisabled !== this.options.disabled) this._setOptions({
                    "disabled": isDisabled
                });
            }
        }
    ]);
    var widgetsCheckboxradio = $.ui.checkboxradio;
    /*!
 * jQuery UI Button 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Button
    //>>group: Widgets
    //>>description: Enhances a form with themeable buttons.
    //>>docs: http://api.jqueryui.com/button/
    //>>demos: http://jqueryui.com/button/
    //>>css.structure: ../../themes/base/core.css
    //>>css.structure: ../../themes/base/button.css
    //>>css.theme: ../../themes/base/theme.css
    $.widget("ui.button", {
        version: "1.12.1",
        defaultElement: "<button>",
        options: {
            classes: {
                "ui-button": "ui-corner-all"
            },
            disabled: null,
            icon: null,
            iconPosition: "beginning",
            label: null,
            showLabel: true
        },
        _getCreateOptions: function() {
            var disabled, // This is to support cases like in jQuery Mobile where the base widget does have
            // an implementation of _getCreateOptions
            options = this._super() || {};
            this.isInput = this.element.is("input");
            disabled = this.element[0].disabled;
            if (disabled != null) options.disabled = disabled;
            this.originalLabel = this.isInput ? this.element.val() : this.element.html();
            if (this.originalLabel) options.label = this.originalLabel;
            return options;
        },
        _create: function() {
            if (!this.option.showLabel & !this.options.icon) this.options.showLabel = true;
            // We have to check the option again here even though we did in _getCreateOptions,
            // because null may have been passed on init which would override what was set in
            // _getCreateOptions
            if (this.options.disabled == null) this.options.disabled = this.element[0].disabled || false;
            this.hasTitle = !!this.element.attr("title");
            // Check to see if the label needs to be set or if its already correct
            if (this.options.label && this.options.label !== this.originalLabel) {
                if (this.isInput) this.element.val(this.options.label);
                else this.element.html(this.options.label);
            }
            this._addClass("ui-button", "ui-widget");
            this._setOption("disabled", this.options.disabled);
            this._enhance();
            if (this.element.is("a")) this._on({
                "keyup": function(event) {
                    if (event.keyCode === $.ui.keyCode.SPACE) {
                        event.preventDefault();
                        // Support: PhantomJS <= 1.9, IE 8 Only
                        // If a native click is available use it so we actually cause navigation
                        // otherwise just trigger a click event
                        if (this.element[0].click) this.element[0].click();
                        else this.element.trigger("click");
                    }
                }
            });
        },
        _enhance: function() {
            if (!this.element.is("button")) this.element.attr("role", "button");
            if (this.options.icon) {
                this._updateIcon("icon", this.options.icon);
                this._updateTooltip();
            }
        },
        _updateTooltip: function() {
            this.title = this.element.attr("title");
            if (!this.options.showLabel && !this.title) this.element.attr("title", this.options.label);
        },
        _updateIcon: function(option, value) {
            var icon = option !== "iconPosition", position = icon ? this.options.iconPosition : value, displayBlock = position === "top" || position === "bottom";
            // Create icon
            if (!this.icon) {
                this.icon = $("<span>");
                this._addClass(this.icon, "ui-button-icon", "ui-icon");
                if (!this.options.showLabel) this._addClass("ui-button-icon-only");
            } else if (icon) // If we are updating the icon remove the old icon class
            this._removeClass(this.icon, null, this.options.icon);
            // If we are updating the icon add the new icon class
            if (icon) this._addClass(this.icon, null, value);
            this._attachIcon(position);
            // If the icon is on top or bottom we need to add the ui-widget-icon-block class and remove
            // the iconSpace if there is one.
            if (displayBlock) {
                this._addClass(this.icon, null, "ui-widget-icon-block");
                if (this.iconSpace) this.iconSpace.remove();
            } else {
                // Position is beginning or end so remove the ui-widget-icon-block class and add the
                // space if it does not exist
                if (!this.iconSpace) {
                    this.iconSpace = $("<span> </span>");
                    this._addClass(this.iconSpace, "ui-button-icon-space");
                }
                this._removeClass(this.icon, null, "ui-wiget-icon-block");
                this._attachIconSpace(position);
            }
        },
        _destroy: function() {
            this.element.removeAttr("role");
            if (this.icon) this.icon.remove();
            if (this.iconSpace) this.iconSpace.remove();
            if (!this.hasTitle) this.element.removeAttr("title");
        },
        _attachIconSpace: function(iconPosition) {
            this.icon[/^(?:end|bottom)/.test(iconPosition) ? "before" : "after"](this.iconSpace);
        },
        _attachIcon: function(iconPosition) {
            this.element[/^(?:end|bottom)/.test(iconPosition) ? "append" : "prepend"](this.icon);
        },
        _setOptions: function(options) {
            var newShowLabel = options.showLabel === undefined ? this.options.showLabel : options.showLabel, newIcon = options.icon === undefined ? this.options.icon : options.icon;
            if (!newShowLabel && !newIcon) options.showLabel = true;
            this._super(options);
        },
        _setOption: function(key, value) {
            if (key === "icon") {
                if (value) this._updateIcon(key, value);
                else if (this.icon) {
                    this.icon.remove();
                    if (this.iconSpace) this.iconSpace.remove();
                }
            }
            if (key === "iconPosition") this._updateIcon(key, value);
            // Make sure we can't end up with a button that has neither text nor icon
            if (key === "showLabel") {
                this._toggleClass("ui-button-icon-only", null, !value);
                this._updateTooltip();
            }
            if (key === "label") {
                if (this.isInput) this.element.val(value);
                else {
                    // If there is an icon, append it, else nothing then append the value
                    // this avoids removal of the icon when setting label text
                    this.element.html(value);
                    if (this.icon) {
                        this._attachIcon(this.options.iconPosition);
                        this._attachIconSpace(this.options.iconPosition);
                    }
                }
            }
            this._super(key, value);
            if (key === "disabled") {
                this._toggleClass(null, "ui-state-disabled", value);
                this.element[0].disabled = value;
                if (value) this.element.blur();
            }
        },
        refresh: function() {
            // Make sure to only check disabled if its an element that supports this otherwise
            // check for the disabled class to determine state
            var isDisabled = this.element.is("input, button") ? this.element[0].disabled : this.element.hasClass("ui-button-disabled");
            if (isDisabled !== this.options.disabled) this._setOptions({
                disabled: isDisabled
            });
            this._updateTooltip();
        }
    });
    // DEPRECATED
    if ($.uiBackCompat !== false) {
        // Text and Icons options
        $.widget("ui.button", $.ui.button, {
            options: {
                text: true,
                icons: {
                    primary: null,
                    secondary: null
                }
            },
            _create: function() {
                if (this.options.showLabel && !this.options.text) this.options.showLabel = this.options.text;
                if (!this.options.showLabel && this.options.text) this.options.text = this.options.showLabel;
                if (!this.options.icon && (this.options.icons.primary || this.options.icons.secondary)) {
                    if (this.options.icons.primary) this.options.icon = this.options.icons.primary;
                    else {
                        this.options.icon = this.options.icons.secondary;
                        this.options.iconPosition = "end";
                    }
                } else if (this.options.icon) this.options.icons.primary = this.options.icon;
                this._super();
            },
            _setOption: function(key, value) {
                if (key === "text") {
                    this._super("showLabel", value);
                    return;
                }
                if (key === "showLabel") this.options.text = value;
                if (key === "icon") this.options.icons.primary = value;
                if (key === "icons") {
                    if (value.primary) {
                        this._super("icon", value.primary);
                        this._super("iconPosition", "beginning");
                    } else if (value.secondary) {
                        this._super("icon", value.secondary);
                        this._super("iconPosition", "end");
                    }
                }
                this._superApply(arguments);
            }
        });
        $.fn.button = function(orig) {
            return function() {
                if (!this.length || this.length && this[0].tagName !== "INPUT" || this.length && this[0].tagName === "INPUT" && this.attr("type") !== "checkbox" && this.attr("type") !== "radio") return orig.apply(this, arguments);
                if (!$.ui.checkboxradio) $.error("Checkboxradio widget missing");
                if (arguments.length === 0) return this.checkboxradio({
                    "icon": false
                });
                return this.checkboxradio.apply(this, arguments);
            };
        }($.fn.button);
        $.fn.buttonset = function() {
            if (!$.ui.controlgroup) $.error("Controlgroup widget missing");
            if (arguments[0] === "option" && arguments[1] === "items" && arguments[2]) return this.controlgroup.apply(this, [
                arguments[0],
                "items.button",
                arguments[2]
            ]);
            if (arguments[0] === "option" && arguments[1] === "items") return this.controlgroup.apply(this, [
                arguments[0],
                "items.button"
            ]);
            if (typeof arguments[0] === "object" && arguments[0].items) arguments[0].items = {
                button: arguments[0].items
            };
            return this.controlgroup.apply(this, arguments);
        };
    }
    var widgetsButton = $.ui.button;
    // jscs:disable maximumLineLength
    /* jscs:disable requireCamelCaseOrUpperCaseIdentifiers */ /*!
 * jQuery UI Datepicker 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Datepicker
    //>>group: Widgets
    //>>description: Displays a calendar from an input or inline for selecting dates.
    //>>docs: http://api.jqueryui.com/datepicker/
    //>>demos: http://jqueryui.com/datepicker/
    //>>css.structure: ../../themes/base/core.css
    //>>css.structure: ../../themes/base/datepicker.css
    //>>css.theme: ../../themes/base/theme.css
    $.extend($.ui, {
        datepicker: {
            version: "1.12.1"
        }
    });
    var datepicker_instActive;
    function datepicker_getZindex(elem) {
        var position, value;
        while(elem.length && elem[0] !== document){
            // Ignore z-index if position is set to a value where z-index is ignored by the browser
            // This makes behavior of this function consistent across browsers
            // WebKit always returns auto if the element is positioned
            position = elem.css("position");
            if (position === "absolute" || position === "relative" || position === "fixed") {
                // IE returns 0 when zIndex is not specified
                // other browsers return a string
                // we ignore the case of nested elements with an explicit value of 0
                // <div style="z-index: -10;"><div style="z-index: 0;"></div></div>
                value = parseInt(elem.css("zIndex"), 10);
                if (!isNaN(value) && value !== 0) return value;
            }
            elem = elem.parent();
        }
        return 0;
    }
    /* Date picker manager.
   Use the singleton instance of this class, $.datepicker, to interact with the date picker.
   Settings for (groups of) date pickers are maintained in an instance object,
   allowing multiple different settings on the same page. */ function Datepicker() {
        this._curInst = null; // The current instance in use
        this._keyEvent = false; // If the last event was a key event
        this._disabledInputs = []; // List of date picker inputs that have been disabled
        this._datepickerShowing = false; // True if the popup picker is showing , false if not
        this._inDialog = false; // True if showing within a "dialog", false if not
        this._mainDivId = "ui-datepicker-div"; // The ID of the main datepicker division
        this._inlineClass = "ui-datepicker-inline"; // The name of the inline marker class
        this._appendClass = "ui-datepicker-append"; // The name of the append marker class
        this._triggerClass = "ui-datepicker-trigger"; // The name of the trigger marker class
        this._dialogClass = "ui-datepicker-dialog"; // The name of the dialog marker class
        this._disableClass = "ui-datepicker-disabled"; // The name of the disabled covering marker class
        this._unselectableClass = "ui-datepicker-unselectable"; // The name of the unselectable cell marker class
        this._currentClass = "ui-datepicker-current-day"; // The name of the current day marker class
        this._dayOverClass = "ui-datepicker-days-cell-over"; // The name of the day hover marker class
        this.regional = []; // Available regional settings, indexed by language code
        this.regional[""] = {
            closeText: "Done",
            prevText: "Prev",
            nextText: "Next",
            currentText: "Today",
            monthNames: [
                "January",
                "February",
                "March",
                "April",
                "May",
                "June",
                "July",
                "August",
                "September",
                "October",
                "November",
                "December"
            ],
            monthNamesShort: [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Oct",
                "Nov",
                "Dec"
            ],
            dayNames: [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
            ],
            dayNamesShort: [
                "Sun",
                "Mon",
                "Tue",
                "Wed",
                "Thu",
                "Fri",
                "Sat"
            ],
            dayNamesMin: [
                "Su",
                "Mo",
                "Tu",
                "We",
                "Th",
                "Fr",
                "Sa"
            ],
            weekHeader: "Wk",
            dateFormat: "mm/dd/yy",
            firstDay: 0,
            isRTL: false,
            showMonthAfterYear: false,
            yearSuffix: "" // Additional text to append to the year in the month headers
        };
        this._defaults = {
            showOn: "focus",
            // "button" for trigger button, or "both" for either
            showAnim: "fadeIn",
            showOptions: {},
            defaultDate: null,
            // +/-number for offset from today, null for today
            appendText: "",
            buttonText: "...",
            buttonImage: "",
            buttonImageOnly: false,
            hideIfNoPrevNext: false,
            // if not applicable, false to just disable them
            navigationAsDateFormat: false,
            gotoCurrent: false,
            changeMonth: false,
            changeYear: false,
            yearRange: "c-10:c+10",
            // either relative to today's year (-nn:+nn), relative to currently displayed year
            // (c-nn:c+nn), absolute (nnnn:nnnn), or a combination of the above (nnnn:-n)
            showOtherMonths: false,
            selectOtherMonths: false,
            showWeek: false,
            calculateWeek: this.iso8601Week,
            // takes a Date and returns the number of the week for it
            shortYearCutoff: "+10",
            // > this are in the previous century,
            // string value starting with "+" for current year + value
            minDate: null,
            maxDate: null,
            duration: "fast",
            beforeShowDay: null,
            // [0] = true if selectable, false if not, [1] = custom CSS class name(s) or "",
            // [2] = cell title (optional), e.g. $.datepicker.noWeekends
            beforeShow: null,
            // returns a set of custom settings for the date picker
            onSelect: null,
            onChangeMonthYear: null,
            onClose: null,
            numberOfMonths: 1,
            showCurrentAtPos: 0,
            stepMonths: 1,
            stepBigMonths: 12,
            altField: "",
            altFormat: "",
            constrainInput: true,
            showButtonPanel: false,
            autoSize: false,
            disabled: false // The initial disabled state
        };
        $.extend(this._defaults, this.regional[""]);
        this.regional.en = $.extend(true, {}, this.regional[""]);
        this.regional["en-US"] = $.extend(true, {}, this.regional.en);
        this.dpDiv = datepicker_bindHover($("<div id='" + this._mainDivId + "' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"));
    }
    $.extend(Datepicker.prototype, {
        /* Class name added to elements to indicate already configured with a date picker. */ markerClassName: "hasDatepicker",
        //Keep track of the maximum number of rows displayed (see #7043)
        maxRows: 4,
        // TODO rename to "widget" when switching to widget factory
        _widgetDatepicker: function() {
            return this.dpDiv;
        },
        /* Override the default settings for all instances of the date picker.
	 * @param  settings  object - the new settings to use as defaults (anonymous object)
	 * @return the manager object
	 */ setDefaults: function(settings) {
            datepicker_extendRemove(this._defaults, settings || {});
            return this;
        },
        /* Attach the date picker to a jQuery selection.
	 * @param  target	element - the target input field or division or span
	 * @param  settings  object - the new settings to use for this date picker instance (anonymous)
	 */ _attachDatepicker: function(target, settings) {
            var nodeName, inline, inst;
            nodeName = target.nodeName.toLowerCase();
            inline = nodeName === "div" || nodeName === "span";
            if (!target.id) {
                this.uuid += 1;
                target.id = "dp" + this.uuid;
            }
            inst = this._newInst($(target), inline);
            inst.settings = $.extend({}, settings || {});
            if (nodeName === "input") this._connectDatepicker(target, inst);
            else if (inline) this._inlineDatepicker(target, inst);
        },
        /* Create a new instance object. */ _newInst: function(target, inline) {
            var id = target[0].id.replace(/([^A-Za-z0-9_\-])/g, "\\\\$1"); // escape jQuery meta chars
            return {
                id: id,
                input: target,
                selectedDay: 0,
                selectedMonth: 0,
                selectedYear: 0,
                drawMonth: 0,
                drawYear: 0,
                inline: inline,
                dpDiv: !inline ? this.dpDiv : datepicker_bindHover($("<div class='" + this._inlineClass + " ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"))
            };
        },
        /* Attach the date picker to an input field. */ _connectDatepicker: function(target, inst) {
            var input = $(target);
            inst.append = $([]);
            inst.trigger = $([]);
            if (input.hasClass(this.markerClassName)) return;
            this._attachments(input, inst);
            input.addClass(this.markerClassName).on("keydown", this._doKeyDown).on("keypress", this._doKeyPress).on("keyup", this._doKeyUp);
            this._autoSize(inst);
            $.data(target, "datepicker", inst);
            //If disabled option is true, disable the datepicker once it has been attached to the input (see ticket #5665)
            if (inst.settings.disabled) this._disableDatepicker(target);
        },
        /* Make attachments based on settings. */ _attachments: function(input, inst) {
            var showOn, buttonText, buttonImage, appendText = this._get(inst, "appendText"), isRTL = this._get(inst, "isRTL");
            if (inst.append) inst.append.remove();
            if (appendText) {
                inst.append = $("<span class='" + this._appendClass + "'>" + appendText + "</span>");
                input[isRTL ? "before" : "after"](inst.append);
            }
            input.off("focus", this._showDatepicker);
            if (inst.trigger) inst.trigger.remove();
            showOn = this._get(inst, "showOn");
            if (showOn === "focus" || showOn === "both") input.on("focus", this._showDatepicker);
            if (showOn === "button" || showOn === "both") {
                buttonText = this._get(inst, "buttonText");
                buttonImage = this._get(inst, "buttonImage");
                inst.trigger = $(this._get(inst, "buttonImageOnly") ? $("<img/>").addClass(this._triggerClass).attr({
                    src: buttonImage,
                    alt: buttonText,
                    title: buttonText
                }) : $("<button type='button'></button>").addClass(this._triggerClass).html(!buttonImage ? buttonText : $("<img/>").attr({
                    src: buttonImage,
                    alt: buttonText,
                    title: buttonText
                })));
                input[isRTL ? "before" : "after"](inst.trigger);
                inst.trigger.on("click", function() {
                    if ($.datepicker._datepickerShowing && $.datepicker._lastInput === input[0]) $.datepicker._hideDatepicker();
                    else if ($.datepicker._datepickerShowing && $.datepicker._lastInput !== input[0]) {
                        $.datepicker._hideDatepicker();
                        $.datepicker._showDatepicker(input[0]);
                    } else $.datepicker._showDatepicker(input[0]);
                    return false;
                });
            }
        },
        /* Apply the maximum length for the date format. */ _autoSize: function(inst) {
            if (this._get(inst, "autoSize") && !inst.inline) {
                var findMax, max, maxI, i, date = new Date(2009, 11, 20), dateFormat = this._get(inst, "dateFormat");
                if (dateFormat.match(/[DM]/)) {
                    findMax = function(names) {
                        max = 0;
                        maxI = 0;
                        for(i = 0; i < names.length; i++)if (names[i].length > max) {
                            max = names[i].length;
                            maxI = i;
                        }
                        return maxI;
                    };
                    date.setMonth(findMax(this._get(inst, dateFormat.match(/MM/) ? "monthNames" : "monthNamesShort")));
                    date.setDate(findMax(this._get(inst, dateFormat.match(/DD/) ? "dayNames" : "dayNamesShort")) + 20 - date.getDay());
                }
                inst.input.attr("size", this._formatDate(inst, date).length);
            }
        },
        /* Attach an inline date picker to a div. */ _inlineDatepicker: function(target, inst) {
            var divSpan = $(target);
            if (divSpan.hasClass(this.markerClassName)) return;
            divSpan.addClass(this.markerClassName).append(inst.dpDiv);
            $.data(target, "datepicker", inst);
            this._setDate(inst, this._getDefaultDate(inst), true);
            this._updateDatepicker(inst);
            this._updateAlternate(inst);
            //If disabled option is true, disable the datepicker before showing it (see ticket #5665)
            if (inst.settings.disabled) this._disableDatepicker(target);
            // Set display:block in place of inst.dpDiv.show() which won't work on disconnected elements
            // http://bugs.jqueryui.com/ticket/7552 - A Datepicker created on a detached div has zero height
            inst.dpDiv.css("display", "block");
        },
        /* Pop-up the date picker in a "dialog" box.
	 * @param  input element - ignored
	 * @param  date	string or Date - the initial date to display
	 * @param  onSelect  function - the function to call when a date is selected
	 * @param  settings  object - update the dialog date picker instance's settings (anonymous object)
	 * @param  pos int[2] - coordinates for the dialog's position within the screen or
	 *					event - with x/y coordinates or
	 *					leave empty for default (screen centre)
	 * @return the manager object
	 */ _dialogDatepicker: function(input, date, onSelect, settings, pos) {
            var id, browserWidth, browserHeight, scrollX, scrollY, inst = this._dialogInst; // internal instance
            if (!inst) {
                this.uuid += 1;
                id = "dp" + this.uuid;
                this._dialogInput = $("<input type='text' id='" + id + "' style='position: absolute; top: -100px; width: 0px;'/>");
                this._dialogInput.on("keydown", this._doKeyDown);
                $("body").append(this._dialogInput);
                inst = this._dialogInst = this._newInst(this._dialogInput, false);
                inst.settings = {};
                $.data(this._dialogInput[0], "datepicker", inst);
            }
            datepicker_extendRemove(inst.settings, settings || {});
            date = date && date.constructor === Date ? this._formatDate(inst, date) : date;
            this._dialogInput.val(date);
            this._pos = pos ? pos.length ? pos : [
                pos.pageX,
                pos.pageY
            ] : null;
            if (!this._pos) {
                browserWidth = document.documentElement.clientWidth;
                browserHeight = document.documentElement.clientHeight;
                scrollX = document.documentElement.scrollLeft || document.body.scrollLeft;
                scrollY = document.documentElement.scrollTop || document.body.scrollTop;
                this._pos = [
                    browserWidth / 2 - 100 + scrollX,
                    browserHeight / 2 - 150 + scrollY
                ];
            }
            // Move input on screen for focus, but hidden behind dialog
            this._dialogInput.css("left", this._pos[0] + 20 + "px").css("top", this._pos[1] + "px");
            inst.settings.onSelect = onSelect;
            this._inDialog = true;
            this.dpDiv.addClass(this._dialogClass);
            this._showDatepicker(this._dialogInput[0]);
            if ($.blockUI) $.blockUI(this.dpDiv);
            $.data(this._dialogInput[0], "datepicker", inst);
            return this;
        },
        /* Detach a datepicker from its control.
	 * @param  target	element - the target input field or division or span
	 */ _destroyDatepicker: function(target) {
            var nodeName, $target = $(target), inst = $.data(target, "datepicker");
            if (!$target.hasClass(this.markerClassName)) return;
            nodeName = target.nodeName.toLowerCase();
            $.removeData(target, "datepicker");
            if (nodeName === "input") {
                inst.append.remove();
                inst.trigger.remove();
                $target.removeClass(this.markerClassName).off("focus", this._showDatepicker).off("keydown", this._doKeyDown).off("keypress", this._doKeyPress).off("keyup", this._doKeyUp);
            } else if (nodeName === "div" || nodeName === "span") $target.removeClass(this.markerClassName).empty();
            if (datepicker_instActive === inst) datepicker_instActive = null;
        },
        /* Enable the date picker to a jQuery selection.
	 * @param  target	element - the target input field or division or span
	 */ _enableDatepicker: function(target) {
            var nodeName, inline, $target = $(target), inst = $.data(target, "datepicker");
            if (!$target.hasClass(this.markerClassName)) return;
            nodeName = target.nodeName.toLowerCase();
            if (nodeName === "input") {
                target.disabled = false;
                inst.trigger.filter("button").each(function() {
                    this.disabled = false;
                }).end().filter("img").css({
                    opacity: "1.0",
                    cursor: ""
                });
            } else if (nodeName === "div" || nodeName === "span") {
                inline = $target.children("." + this._inlineClass);
                inline.children().removeClass("ui-state-disabled");
                inline.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", false);
            }
            this._disabledInputs = $.map(this._disabledInputs, function(value) {
                return value === target ? null : value;
            }); // delete entry
        },
        /* Disable the date picker to a jQuery selection.
	 * @param  target	element - the target input field or division or span
	 */ _disableDatepicker: function(target) {
            var nodeName, inline, $target = $(target), inst = $.data(target, "datepicker");
            if (!$target.hasClass(this.markerClassName)) return;
            nodeName = target.nodeName.toLowerCase();
            if (nodeName === "input") {
                target.disabled = true;
                inst.trigger.filter("button").each(function() {
                    this.disabled = true;
                }).end().filter("img").css({
                    opacity: "0.5",
                    cursor: "default"
                });
            } else if (nodeName === "div" || nodeName === "span") {
                inline = $target.children("." + this._inlineClass);
                inline.children().addClass("ui-state-disabled");
                inline.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", true);
            }
            this._disabledInputs = $.map(this._disabledInputs, function(value) {
                return value === target ? null : value;
            }); // delete entry
            this._disabledInputs[this._disabledInputs.length] = target;
        },
        /* Is the first field in a jQuery collection disabled as a datepicker?
	 * @param  target	element - the target input field or division or span
	 * @return boolean - true if disabled, false if enabled
	 */ _isDisabledDatepicker: function(target) {
            if (!target) return false;
            for(var i = 0; i < this._disabledInputs.length; i++){
                if (this._disabledInputs[i] === target) return true;
            }
            return false;
        },
        /* Retrieve the instance data for the target control.
	 * @param  target  element - the target input field or division or span
	 * @return  object - the associated instance data
	 * @throws  error if a jQuery problem getting data
	 */ _getInst: function(target) {
            try {
                return $.data(target, "datepicker");
            } catch (err) {
                throw "Missing instance data for this datepicker";
            }
        },
        /* Update or retrieve the settings for a date picker attached to an input field or division.
	 * @param  target  element - the target input field or division or span
	 * @param  name	object - the new settings to update or
	 *				string - the name of the setting to change or retrieve,
	 *				when retrieving also "all" for all instance settings or
	 *				"defaults" for all global defaults
	 * @param  value   any - the new value for the setting
	 *				(omit if above is an object or to retrieve a value)
	 */ _optionDatepicker: function(target, name, value) {
            var settings, date, minDate, maxDate, inst = this._getInst(target);
            if (arguments.length === 2 && typeof name === "string") return name === "defaults" ? $.extend({}, $.datepicker._defaults) : inst ? name === "all" ? $.extend({}, inst.settings) : this._get(inst, name) : null;
            settings = name || {};
            if (typeof name === "string") {
                settings = {};
                settings[name] = value;
            }
            if (inst) {
                if (this._curInst === inst) this._hideDatepicker();
                date = this._getDateDatepicker(target, true);
                minDate = this._getMinMaxDate(inst, "min");
                maxDate = this._getMinMaxDate(inst, "max");
                datepicker_extendRemove(inst.settings, settings);
                // reformat the old minDate/maxDate values if dateFormat changes and a new minDate/maxDate isn't provided
                if (minDate !== null && settings.dateFormat !== undefined && settings.minDate === undefined) inst.settings.minDate = this._formatDate(inst, minDate);
                if (maxDate !== null && settings.dateFormat !== undefined && settings.maxDate === undefined) inst.settings.maxDate = this._formatDate(inst, maxDate);
                if ("disabled" in settings) {
                    if (settings.disabled) this._disableDatepicker(target);
                    else this._enableDatepicker(target);
                }
                this._attachments($(target), inst);
                this._autoSize(inst);
                this._setDate(inst, date);
                this._updateAlternate(inst);
                this._updateDatepicker(inst);
            }
        },
        // Change method deprecated
        _changeDatepicker: function(target, name, value) {
            this._optionDatepicker(target, name, value);
        },
        /* Redraw the date picker attached to an input field or division.
	 * @param  target  element - the target input field or division or span
	 */ _refreshDatepicker: function(target) {
            var inst = this._getInst(target);
            if (inst) this._updateDatepicker(inst);
        },
        /* Set the dates for a jQuery selection.
	 * @param  target element - the target input field or division or span
	 * @param  date	Date - the new date
	 */ _setDateDatepicker: function(target, date) {
            var inst = this._getInst(target);
            if (inst) {
                this._setDate(inst, date);
                this._updateDatepicker(inst);
                this._updateAlternate(inst);
            }
        },
        /* Get the date(s) for the first entry in a jQuery selection.
	 * @param  target element - the target input field or division or span
	 * @param  noDefault boolean - true if no default date is to be used
	 * @return Date - the current date
	 */ _getDateDatepicker: function(target, noDefault) {
            var inst = this._getInst(target);
            if (inst && !inst.inline) this._setDateFromField(inst, noDefault);
            return inst ? this._getDate(inst) : null;
        },
        /* Handle keystrokes. */ _doKeyDown: function(event) {
            var onSelect, dateStr, sel, inst = $.datepicker._getInst(event.target), handled = true, isRTL = inst.dpDiv.is(".ui-datepicker-rtl");
            inst._keyEvent = true;
            if ($.datepicker._datepickerShowing) switch(event.keyCode){
                case 9:
                    $.datepicker._hideDatepicker();
                    handled = false;
                    break; // hide on tab out
                case 13:
                    sel = $("td." + $.datepicker._dayOverClass + ":not(." + $.datepicker._currentClass + ")", inst.dpDiv);
                    if (sel[0]) $.datepicker._selectDay(event.target, inst.selectedMonth, inst.selectedYear, sel[0]);
                    onSelect = $.datepicker._get(inst, "onSelect");
                    if (onSelect) {
                        dateStr = $.datepicker._formatDate(inst);
                        // Trigger custom callback
                        onSelect.apply(inst.input ? inst.input[0] : null, [
                            dateStr,
                            inst
                        ]);
                    } else $.datepicker._hideDatepicker();
                    return false; // don't submit the form
                case 27:
                    $.datepicker._hideDatepicker();
                    break; // hide on escape
                case 33:
                    $.datepicker._adjustDate(event.target, event.ctrlKey ? -$.datepicker._get(inst, "stepBigMonths") : -$.datepicker._get(inst, "stepMonths"), "M");
                    break; // previous month/year on page up/+ ctrl
                case 34:
                    $.datepicker._adjustDate(event.target, event.ctrlKey ? +$.datepicker._get(inst, "stepBigMonths") : +$.datepicker._get(inst, "stepMonths"), "M");
                    break; // next month/year on page down/+ ctrl
                case 35:
                    if (event.ctrlKey || event.metaKey) $.datepicker._clearDate(event.target);
                    handled = event.ctrlKey || event.metaKey;
                    break; // clear on ctrl or command +end
                case 36:
                    if (event.ctrlKey || event.metaKey) $.datepicker._gotoToday(event.target);
                    handled = event.ctrlKey || event.metaKey;
                    break; // current on ctrl or command +home
                case 37:
                    if (event.ctrlKey || event.metaKey) $.datepicker._adjustDate(event.target, isRTL ? 1 : -1, "D");
                    handled = event.ctrlKey || event.metaKey;
                    // -1 day on ctrl or command +left
                    if (event.originalEvent.altKey) $.datepicker._adjustDate(event.target, event.ctrlKey ? -$.datepicker._get(inst, "stepBigMonths") : -$.datepicker._get(inst, "stepMonths"), "M");
                    break;
                case 38:
                    if (event.ctrlKey || event.metaKey) $.datepicker._adjustDate(event.target, -7, "D");
                    handled = event.ctrlKey || event.metaKey;
                    break; // -1 week on ctrl or command +up
                case 39:
                    if (event.ctrlKey || event.metaKey) $.datepicker._adjustDate(event.target, isRTL ? -1 : 1, "D");
                    handled = event.ctrlKey || event.metaKey;
                    // +1 day on ctrl or command +right
                    if (event.originalEvent.altKey) $.datepicker._adjustDate(event.target, event.ctrlKey ? +$.datepicker._get(inst, "stepBigMonths") : +$.datepicker._get(inst, "stepMonths"), "M");
                    break;
                case 40:
                    if (event.ctrlKey || event.metaKey) $.datepicker._adjustDate(event.target, 7, "D");
                    handled = event.ctrlKey || event.metaKey;
                    break; // +1 week on ctrl or command +down
                default:
                    handled = false;
            }
            else if (event.keyCode === 36 && event.ctrlKey) $.datepicker._showDatepicker(this);
            else handled = false;
            if (handled) {
                event.preventDefault();
                event.stopPropagation();
            }
        },
        /* Filter entered characters - based on date format. */ _doKeyPress: function(event) {
            var chars, chr, inst = $.datepicker._getInst(event.target);
            if ($.datepicker._get(inst, "constrainInput")) {
                chars = $.datepicker._possibleChars($.datepicker._get(inst, "dateFormat"));
                chr = String.fromCharCode(event.charCode == null ? event.keyCode : event.charCode);
                return event.ctrlKey || event.metaKey || chr < " " || !chars || chars.indexOf(chr) > -1;
            }
        },
        /* Synchronise manual entry and field/alternate field. */ _doKeyUp: function(event) {
            var date, inst = $.datepicker._getInst(event.target);
            if (inst.input.val() !== inst.lastVal) try {
                date = $.datepicker.parseDate($.datepicker._get(inst, "dateFormat"), inst.input ? inst.input.val() : null, $.datepicker._getFormatConfig(inst));
                if (date) {
                    $.datepicker._setDateFromField(inst);
                    $.datepicker._updateAlternate(inst);
                    $.datepicker._updateDatepicker(inst);
                }
            } catch (err) {}
            return true;
        },
        /* Pop-up the date picker for a given input field.
	 * If false returned from beforeShow event handler do not show.
	 * @param  input  element - the input field attached to the date picker or
	 *					event - if triggered by focus
	 */ _showDatepicker: function(input) {
            input = input.target || input;
            if (input.nodeName.toLowerCase() !== "input") input = $("input", input.parentNode)[0];
            if ($.datepicker._isDisabledDatepicker(input) || $.datepicker._lastInput === input) return;
            var inst, beforeShow, beforeShowSettings, isFixed, offset, showAnim, duration;
            inst = $.datepicker._getInst(input);
            if ($.datepicker._curInst && $.datepicker._curInst !== inst) {
                $.datepicker._curInst.dpDiv.stop(true, true);
                if (inst && $.datepicker._datepickerShowing) $.datepicker._hideDatepicker($.datepicker._curInst.input[0]);
            }
            beforeShow = $.datepicker._get(inst, "beforeShow");
            beforeShowSettings = beforeShow ? beforeShow.apply(input, [
                input,
                inst
            ]) : {};
            if (beforeShowSettings === false) return;
            datepicker_extendRemove(inst.settings, beforeShowSettings);
            inst.lastVal = null;
            $.datepicker._lastInput = input;
            $.datepicker._setDateFromField(inst);
            if ($.datepicker._inDialog) input.value = "";
            if (!$.datepicker._pos) {
                $.datepicker._pos = $.datepicker._findPos(input);
                $.datepicker._pos[1] += input.offsetHeight; // add the height
            }
            isFixed = false;
            $(input).parents().each(function() {
                isFixed |= $(this).css("position") === "fixed";
                return !isFixed;
            });
            offset = {
                left: $.datepicker._pos[0],
                top: $.datepicker._pos[1]
            };
            $.datepicker._pos = null;
            //to avoid flashes on Firefox
            inst.dpDiv.empty();
            // determine sizing offscreen
            inst.dpDiv.css({
                position: "absolute",
                display: "block",
                top: "-1000px"
            });
            $.datepicker._updateDatepicker(inst);
            // fix width for dynamic number of date pickers
            // and adjust position before showing
            offset = $.datepicker._checkOffset(inst, offset, isFixed);
            inst.dpDiv.css({
                position: $.datepicker._inDialog && $.blockUI ? "static" : isFixed ? "fixed" : "absolute",
                display: "none",
                left: offset.left + "px",
                top: offset.top + "px"
            });
            if (!inst.inline) {
                showAnim = $.datepicker._get(inst, "showAnim");
                duration = $.datepicker._get(inst, "duration");
                inst.dpDiv.css("z-index", datepicker_getZindex($(input)) + 1);
                $.datepicker._datepickerShowing = true;
                if ($.effects && $.effects.effect[showAnim]) inst.dpDiv.show(showAnim, $.datepicker._get(inst, "showOptions"), duration);
                else inst.dpDiv[showAnim || "show"](showAnim ? duration : null);
                if ($.datepicker._shouldFocusInput(inst)) inst.input.trigger("focus");
                $.datepicker._curInst = inst;
            }
        },
        /* Generate the date picker content. */ _updateDatepicker: function(inst) {
            this.maxRows = 4; //Reset the max number of rows being displayed (see #7043)
            datepicker_instActive = inst; // for delegate hover events
            inst.dpDiv.empty().append(this._generateHTML(inst));
            this._attachHandlers(inst);
            var origyearshtml, numMonths = this._getNumberOfMonths(inst), cols = numMonths[1], width = 17, activeCell = inst.dpDiv.find("." + this._dayOverClass + " a");
            if (activeCell.length > 0) datepicker_handleMouseover.apply(activeCell.get(0));
            inst.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width("");
            if (cols > 1) inst.dpDiv.addClass("ui-datepicker-multi-" + cols).css("width", width * cols + "em");
            inst.dpDiv[(numMonths[0] !== 1 || numMonths[1] !== 1 ? "add" : "remove") + "Class"]("ui-datepicker-multi");
            inst.dpDiv[(this._get(inst, "isRTL") ? "add" : "remove") + "Class"]("ui-datepicker-rtl");
            if (inst === $.datepicker._curInst && $.datepicker._datepickerShowing && $.datepicker._shouldFocusInput(inst)) inst.input.trigger("focus");
            // Deffered render of the years select (to avoid flashes on Firefox)
            if (inst.yearshtml) {
                origyearshtml = inst.yearshtml;
                setTimeout(function() {
                    //assure that inst.yearshtml didn't change.
                    if (origyearshtml === inst.yearshtml && inst.yearshtml) inst.dpDiv.find("select.ui-datepicker-year:first").replaceWith(inst.yearshtml);
                    origyearshtml = inst.yearshtml = null;
                }, 0);
            }
        },
        // #6694 - don't focus the input if it's already focused
        // this breaks the change event in IE
        // Support: IE and jQuery <1.9
        _shouldFocusInput: function(inst) {
            return inst.input && inst.input.is(":visible") && !inst.input.is(":disabled") && !inst.input.is(":focus");
        },
        /* Check positioning to remain on screen. */ _checkOffset: function(inst, offset, isFixed) {
            var dpWidth = inst.dpDiv.outerWidth(), dpHeight = inst.dpDiv.outerHeight(), inputWidth = inst.input ? inst.input.outerWidth() : 0, inputHeight = inst.input ? inst.input.outerHeight() : 0, viewWidth = document.documentElement.clientWidth + (isFixed ? 0 : $(document).scrollLeft()), viewHeight = document.documentElement.clientHeight + (isFixed ? 0 : $(document).scrollTop());
            offset.left -= this._get(inst, "isRTL") ? dpWidth - inputWidth : 0;
            offset.left -= isFixed && offset.left === inst.input.offset().left ? $(document).scrollLeft() : 0;
            offset.top -= isFixed && offset.top === inst.input.offset().top + inputHeight ? $(document).scrollTop() : 0;
            // Now check if datepicker is showing outside window viewport - move to a better place if so.
            offset.left -= Math.min(offset.left, offset.left + dpWidth > viewWidth && viewWidth > dpWidth ? Math.abs(offset.left + dpWidth - viewWidth) : 0);
            offset.top -= Math.min(offset.top, offset.top + dpHeight > viewHeight && viewHeight > dpHeight ? Math.abs(dpHeight + inputHeight) : 0);
            return offset;
        },
        /* Find an object's position on the screen. */ _findPos: function(obj) {
            var position, inst = this._getInst(obj), isRTL = this._get(inst, "isRTL");
            while(obj && (obj.type === "hidden" || obj.nodeType !== 1 || $.expr.filters.hidden(obj)))obj = obj[isRTL ? "previousSibling" : "nextSibling"];
            position = $(obj).offset();
            return [
                position.left,
                position.top
            ];
        },
        /* Hide the date picker from view.
	 * @param  input  element - the input field attached to the date picker
	 */ _hideDatepicker: function(input) {
            var showAnim, duration, postProcess, onClose, inst = this._curInst;
            if (!inst || input && inst !== $.data(input, "datepicker")) return;
            if (this._datepickerShowing) {
                showAnim = this._get(inst, "showAnim");
                duration = this._get(inst, "duration");
                postProcess = function() {
                    $.datepicker._tidyDialog(inst);
                };
                // DEPRECATED: after BC for 1.8.x $.effects[ showAnim ] is not needed
                if ($.effects && ($.effects.effect[showAnim] || $.effects[showAnim])) inst.dpDiv.hide(showAnim, $.datepicker._get(inst, "showOptions"), duration, postProcess);
                else inst.dpDiv[showAnim === "slideDown" ? "slideUp" : showAnim === "fadeIn" ? "fadeOut" : "hide"](showAnim ? duration : null, postProcess);
                if (!showAnim) postProcess();
                this._datepickerShowing = false;
                onClose = this._get(inst, "onClose");
                if (onClose) onClose.apply(inst.input ? inst.input[0] : null, [
                    inst.input ? inst.input.val() : "",
                    inst
                ]);
                this._lastInput = null;
                if (this._inDialog) {
                    this._dialogInput.css({
                        position: "absolute",
                        left: "0",
                        top: "-100px"
                    });
                    if ($.blockUI) {
                        $.unblockUI();
                        $("body").append(this.dpDiv);
                    }
                }
                this._inDialog = false;
            }
        },
        /* Tidy up after a dialog display. */ _tidyDialog: function(inst) {
            inst.dpDiv.removeClass(this._dialogClass).off(".ui-datepicker-calendar");
        },
        /* Close date picker if clicked elsewhere. */ _checkExternalClick: function(event) {
            if (!$.datepicker._curInst) return;
            var $target = $(event.target), inst = $.datepicker._getInst($target[0]);
            if ($target[0].id !== $.datepicker._mainDivId && $target.parents("#" + $.datepicker._mainDivId).length === 0 && !$target.hasClass($.datepicker.markerClassName) && !$target.closest("." + $.datepicker._triggerClass).length && $.datepicker._datepickerShowing && !($.datepicker._inDialog && $.blockUI) || $target.hasClass($.datepicker.markerClassName) && $.datepicker._curInst !== inst) $.datepicker._hideDatepicker();
        },
        /* Adjust one of the date sub-fields. */ _adjustDate: function(id, offset, period) {
            var target = $(id), inst = this._getInst(target[0]);
            if (this._isDisabledDatepicker(target[0])) return;
            this._adjustInstDate(inst, offset + (period === "M" ? this._get(inst, "showCurrentAtPos") : 0), period);
            this._updateDatepicker(inst);
        },
        /* Action for current link. */ _gotoToday: function(id) {
            var date, target = $(id), inst = this._getInst(target[0]);
            if (this._get(inst, "gotoCurrent") && inst.currentDay) {
                inst.selectedDay = inst.currentDay;
                inst.drawMonth = inst.selectedMonth = inst.currentMonth;
                inst.drawYear = inst.selectedYear = inst.currentYear;
            } else {
                date = new Date();
                inst.selectedDay = date.getDate();
                inst.drawMonth = inst.selectedMonth = date.getMonth();
                inst.drawYear = inst.selectedYear = date.getFullYear();
            }
            this._notifyChange(inst);
            this._adjustDate(target);
        },
        /* Action for selecting a new month/year. */ _selectMonthYear: function(id, select, period) {
            var target = $(id), inst = this._getInst(target[0]);
            inst["selected" + (period === "M" ? "Month" : "Year")] = inst["draw" + (period === "M" ? "Month" : "Year")] = parseInt(select.options[select.selectedIndex].value, 10);
            this._notifyChange(inst);
            this._adjustDate(target);
        },
        /* Action for selecting a day. */ _selectDay: function(id, month, year, td) {
            var inst, target = $(id);
            if ($(td).hasClass(this._unselectableClass) || this._isDisabledDatepicker(target[0])) return;
            inst = this._getInst(target[0]);
            inst.selectedDay = inst.currentDay = $("a", td).html();
            inst.selectedMonth = inst.currentMonth = month;
            inst.selectedYear = inst.currentYear = year;
            this._selectDate(id, this._formatDate(inst, inst.currentDay, inst.currentMonth, inst.currentYear));
        },
        /* Erase the input field and hide the date picker. */ _clearDate: function(id) {
            var target = $(id);
            this._selectDate(target, "");
        },
        /* Update the input field with the selected date. */ _selectDate: function(id, dateStr) {
            var onSelect, target = $(id), inst = this._getInst(target[0]);
            dateStr = dateStr != null ? dateStr : this._formatDate(inst);
            if (inst.input) inst.input.val(dateStr);
            this._updateAlternate(inst);
            onSelect = this._get(inst, "onSelect");
            if (onSelect) onSelect.apply(inst.input ? inst.input[0] : null, [
                dateStr,
                inst
            ]); // trigger custom callback
            else if (inst.input) inst.input.trigger("change"); // fire the change event
            if (inst.inline) this._updateDatepicker(inst);
            else {
                this._hideDatepicker();
                this._lastInput = inst.input[0];
                if (typeof inst.input[0] !== "object") inst.input.trigger("focus"); // restore focus
                this._lastInput = null;
            }
        },
        /* Update any alternate field to synchronise with the main field. */ _updateAlternate: function(inst) {
            var altFormat, date, dateStr, altField = this._get(inst, "altField");
            if (altField) {
                altFormat = this._get(inst, "altFormat") || this._get(inst, "dateFormat");
                date = this._getDate(inst);
                dateStr = this.formatDate(altFormat, date, this._getFormatConfig(inst));
                $(altField).val(dateStr);
            }
        },
        /* Set as beforeShowDay function to prevent selection of weekends.
	 * @param  date  Date - the date to customise
	 * @return [boolean, string] - is this date selectable?, what is its CSS class?
	 */ noWeekends: function(date) {
            var day = date.getDay();
            return [
                day > 0 && day < 6,
                ""
            ];
        },
        /* Set as calculateWeek to determine the week of the year based on the ISO 8601 definition.
	 * @param  date  Date - the date to get the week for
	 * @return  number - the number of the week within the year that contains this date
	 */ iso8601Week: function(date) {
            var time, checkDate = new Date(date.getTime());
            // Find Thursday of this week starting on Monday
            checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7));
            time = checkDate.getTime();
            checkDate.setMonth(0); // Compare with Jan 1
            checkDate.setDate(1);
            return Math.floor(Math.round((time - checkDate) / 86400000) / 7) + 1;
        },
        /* Parse a string value into a date object.
	 * See formatDate below for the possible formats.
	 *
	 * @param  format string - the expected format of the date
	 * @param  value string - the date in the above format
	 * @param  settings Object - attributes include:
	 *					shortYearCutoff  number - the cutoff year for determining the century (optional)
	 *					dayNamesShort	string[7] - abbreviated names of the days from Sunday (optional)
	 *					dayNames		string[7] - names of the days from Sunday (optional)
	 *					monthNamesShort string[12] - abbreviated names of the months (optional)
	 *					monthNames		string[12] - names of the months (optional)
	 * @return  Date - the extracted date value or null if value is blank
	 */ parseDate: function(format, value, settings) {
            if (format == null || value == null) throw "Invalid arguments";
            value = typeof value === "object" ? value.toString() : value + "";
            if (value === "") return null;
            var iFormat, dim, extra, iValue = 0, shortYearCutoffTemp = (settings ? settings.shortYearCutoff : null) || this._defaults.shortYearCutoff, shortYearCutoff = typeof shortYearCutoffTemp !== "string" ? shortYearCutoffTemp : new Date().getFullYear() % 100 + parseInt(shortYearCutoffTemp, 10), dayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort, dayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames, monthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort, monthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames, year = -1, month = -1, day = -1, doy = -1, literal = false, date, // Check whether a format character is doubled
            lookAhead = function(match) {
                var matches = iFormat + 1 < format.length && format.charAt(iFormat + 1) === match;
                if (matches) iFormat++;
                return matches;
            }, // Extract a number from the string value
            getNumber = function(match) {
                var isDoubled = lookAhead(match), size = match === "@" ? 14 : match === "!" ? 20 : match === "y" && isDoubled ? 4 : match === "o" ? 3 : 2, minSize = match === "y" ? size : 1, digits = new RegExp("^\\d{" + minSize + "," + size + "}"), num = value.substring(iValue).match(digits);
                if (!num) throw "Missing number at position " + iValue;
                iValue += num[0].length;
                return parseInt(num[0], 10);
            }, // Extract a name from the string value and convert to an index
            getName = function(match, shortNames, longNames) {
                var index = -1, names = $.map(lookAhead(match) ? longNames : shortNames, function(v, k) {
                    return [
                        [
                            k,
                            v
                        ]
                    ];
                }).sort(function(a, b) {
                    return -(a[1].length - b[1].length);
                });
                $.each(names, function(i, pair) {
                    var name = pair[1];
                    if (value.substr(iValue, name.length).toLowerCase() === name.toLowerCase()) {
                        index = pair[0];
                        iValue += name.length;
                        return false;
                    }
                });
                if (index !== -1) return index + 1;
                else throw "Unknown name at position " + iValue;
            }, // Confirm that a literal character matches the string value
            checkLiteral = function() {
                if (value.charAt(iValue) !== format.charAt(iFormat)) throw "Unexpected literal at position " + iValue;
                iValue++;
            };
            for(iFormat = 0; iFormat < format.length; iFormat++)if (literal) {
                if (format.charAt(iFormat) === "'" && !lookAhead("'")) literal = false;
                else checkLiteral();
            } else switch(format.charAt(iFormat)){
                case "d":
                    day = getNumber("d");
                    break;
                case "D":
                    getName("D", dayNamesShort, dayNames);
                    break;
                case "o":
                    doy = getNumber("o");
                    break;
                case "m":
                    month = getNumber("m");
                    break;
                case "M":
                    month = getName("M", monthNamesShort, monthNames);
                    break;
                case "y":
                    year = getNumber("y");
                    break;
                case "@":
                    date = new Date(getNumber("@"));
                    year = date.getFullYear();
                    month = date.getMonth() + 1;
                    day = date.getDate();
                    break;
                case "!":
                    date = new Date((getNumber("!") - this._ticksTo1970) / 10000);
                    year = date.getFullYear();
                    month = date.getMonth() + 1;
                    day = date.getDate();
                    break;
                case "'":
                    if (lookAhead("'")) checkLiteral();
                    else literal = true;
                    break;
                default:
                    checkLiteral();
            }
            if (iValue < value.length) {
                extra = value.substr(iValue);
                if (!/^\s+/.test(extra)) throw "Extra/unparsed characters found in date: " + extra;
            }
            if (year === -1) year = new Date().getFullYear();
            else if (year < 100) year += new Date().getFullYear() - new Date().getFullYear() % 100 + (year <= shortYearCutoff ? 0 : -100);
            if (doy > -1) {
                month = 1;
                day = doy;
                do {
                    dim = this._getDaysInMonth(year, month - 1);
                    if (day <= dim) break;
                    month++;
                    day -= dim;
                }while (true);
            }
            date = this._daylightSavingAdjust(new Date(year, month - 1, day));
            if (date.getFullYear() !== year || date.getMonth() + 1 !== month || date.getDate() !== day) throw "Invalid date"; // E.g. 31/02/00
            return date;
        },
        /* Standard date formats. */ ATOM: "yy-mm-dd",
        COOKIE: "D, dd M yy",
        ISO_8601: "yy-mm-dd",
        RFC_822: "D, d M y",
        RFC_850: "DD, dd-M-y",
        RFC_1036: "D, d M y",
        RFC_1123: "D, d M yy",
        RFC_2822: "D, d M yy",
        RSS: "D, d M y",
        TICKS: "!",
        TIMESTAMP: "@",
        W3C: "yy-mm-dd",
        _ticksTo1970: (718685 + Math.floor(492.5) - Math.floor(19.7) + Math.floor(4.925)) * 864000000000,
        /* Format a date object into a string value.
	 * The format can be combinations of the following:
	 * d  - day of month (no leading zero)
	 * dd - day of month (two digit)
	 * o  - day of year (no leading zeros)
	 * oo - day of year (three digit)
	 * D  - day name short
	 * DD - day name long
	 * m  - month of year (no leading zero)
	 * mm - month of year (two digit)
	 * M  - month name short
	 * MM - month name long
	 * y  - year (two digit)
	 * yy - year (four digit)
	 * @ - Unix timestamp (ms since 01/01/1970)
	 * ! - Windows ticks (100ns since 01/01/0001)
	 * "..." - literal text
	 * '' - single quote
	 *
	 * @param  format string - the desired format of the date
	 * @param  date Date - the date value to format
	 * @param  settings Object - attributes include:
	 *					dayNamesShort	string[7] - abbreviated names of the days from Sunday (optional)
	 *					dayNames		string[7] - names of the days from Sunday (optional)
	 *					monthNamesShort string[12] - abbreviated names of the months (optional)
	 *					monthNames		string[12] - names of the months (optional)
	 * @return  string - the date in the above format
	 */ formatDate: function(format, date, settings) {
            if (!date) return "";
            var iFormat, dayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort, dayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames, monthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort, monthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames, // Check whether a format character is doubled
            lookAhead = function(match) {
                var matches = iFormat + 1 < format.length && format.charAt(iFormat + 1) === match;
                if (matches) iFormat++;
                return matches;
            }, // Format a number, with leading zero if necessary
            formatNumber = function(match, value, len) {
                var num = "" + value;
                if (lookAhead(match)) while(num.length < len)num = "0" + num;
                return num;
            }, // Format a name, short or long as requested
            formatName = function(match, value, shortNames, longNames) {
                return lookAhead(match) ? longNames[value] : shortNames[value];
            }, output = "", literal = false;
            if (date) {
                for(iFormat = 0; iFormat < format.length; iFormat++)if (literal) {
                    if (format.charAt(iFormat) === "'" && !lookAhead("'")) literal = false;
                    else output += format.charAt(iFormat);
                } else switch(format.charAt(iFormat)){
                    case "d":
                        output += formatNumber("d", date.getDate(), 2);
                        break;
                    case "D":
                        output += formatName("D", date.getDay(), dayNamesShort, dayNames);
                        break;
                    case "o":
                        output += formatNumber("o", Math.round((new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime() - new Date(date.getFullYear(), 0, 0).getTime()) / 86400000), 3);
                        break;
                    case "m":
                        output += formatNumber("m", date.getMonth() + 1, 2);
                        break;
                    case "M":
                        output += formatName("M", date.getMonth(), monthNamesShort, monthNames);
                        break;
                    case "y":
                        output += lookAhead("y") ? date.getFullYear() : (date.getFullYear() % 100 < 10 ? "0" : "") + date.getFullYear() % 100;
                        break;
                    case "@":
                        output += date.getTime();
                        break;
                    case "!":
                        output += date.getTime() * 10000 + this._ticksTo1970;
                        break;
                    case "'":
                        if (lookAhead("'")) output += "'";
                        else literal = true;
                        break;
                    default:
                        output += format.charAt(iFormat);
                }
            }
            return output;
        },
        /* Extract all possible characters from the date format. */ _possibleChars: function(format) {
            var iFormat, chars = "", literal = false, // Check whether a format character is doubled
            lookAhead = function(match) {
                var matches = iFormat + 1 < format.length && format.charAt(iFormat + 1) === match;
                if (matches) iFormat++;
                return matches;
            };
            for(iFormat = 0; iFormat < format.length; iFormat++)if (literal) {
                if (format.charAt(iFormat) === "'" && !lookAhead("'")) literal = false;
                else chars += format.charAt(iFormat);
            } else switch(format.charAt(iFormat)){
                case "d":
                case "m":
                case "y":
                case "@":
                    chars += "0123456789";
                    break;
                case "D":
                case "M":
                    return null; // Accept anything
                case "'":
                    if (lookAhead("'")) chars += "'";
                    else literal = true;
                    break;
                default:
                    chars += format.charAt(iFormat);
            }
            return chars;
        },
        /* Get a setting value, defaulting if necessary. */ _get: function(inst, name) {
            return inst.settings[name] !== undefined ? inst.settings[name] : this._defaults[name];
        },
        /* Parse existing date and initialise date picker. */ _setDateFromField: function(inst, noDefault) {
            if (inst.input.val() === inst.lastVal) return;
            var dateFormat = this._get(inst, "dateFormat"), dates = inst.lastVal = inst.input ? inst.input.val() : null, defaultDate = this._getDefaultDate(inst), date = defaultDate, settings = this._getFormatConfig(inst);
            try {
                date = this.parseDate(dateFormat, dates, settings) || defaultDate;
            } catch (event) {
                dates = noDefault ? "" : dates;
            }
            inst.selectedDay = date.getDate();
            inst.drawMonth = inst.selectedMonth = date.getMonth();
            inst.drawYear = inst.selectedYear = date.getFullYear();
            inst.currentDay = dates ? date.getDate() : 0;
            inst.currentMonth = dates ? date.getMonth() : 0;
            inst.currentYear = dates ? date.getFullYear() : 0;
            this._adjustInstDate(inst);
        },
        /* Retrieve the default date shown on opening. */ _getDefaultDate: function(inst) {
            return this._restrictMinMax(inst, this._determineDate(inst, this._get(inst, "defaultDate"), new Date()));
        },
        /* A date may be specified as an exact value or a relative one. */ _determineDate: function(inst, date, defaultDate) {
            var offsetNumeric = function(offset) {
                var date = new Date();
                date.setDate(date.getDate() + offset);
                return date;
            }, offsetString = function(offset) {
                try {
                    return $.datepicker.parseDate($.datepicker._get(inst, "dateFormat"), offset, $.datepicker._getFormatConfig(inst));
                } catch (e) {
                // Ignore
                }
                var date = (offset.toLowerCase().match(/^c/) ? $.datepicker._getDate(inst) : null) || new Date(), year = date.getFullYear(), month = date.getMonth(), day = date.getDate(), pattern = /([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g, matches = pattern.exec(offset);
                while(matches){
                    switch(matches[2] || "d"){
                        case "d":
                        case "D":
                            day += parseInt(matches[1], 10);
                            break;
                        case "w":
                        case "W":
                            day += parseInt(matches[1], 10) * 7;
                            break;
                        case "m":
                        case "M":
                            month += parseInt(matches[1], 10);
                            day = Math.min(day, $.datepicker._getDaysInMonth(year, month));
                            break;
                        case "y":
                        case "Y":
                            year += parseInt(matches[1], 10);
                            day = Math.min(day, $.datepicker._getDaysInMonth(year, month));
                            break;
                    }
                    matches = pattern.exec(offset);
                }
                return new Date(year, month, day);
            }, newDate = date == null || date === "" ? defaultDate : typeof date === "string" ? offsetString(date) : typeof date === "number" ? isNaN(date) ? defaultDate : offsetNumeric(date) : new Date(date.getTime());
            newDate = newDate && newDate.toString() === "Invalid Date" ? defaultDate : newDate;
            if (newDate) {
                newDate.setHours(0);
                newDate.setMinutes(0);
                newDate.setSeconds(0);
                newDate.setMilliseconds(0);
            }
            return this._daylightSavingAdjust(newDate);
        },
        /* Handle switch to/from daylight saving.
	 * Hours may be non-zero on daylight saving cut-over:
	 * > 12 when midnight changeover, but then cannot generate
	 * midnight datetime, so jump to 1AM, otherwise reset.
	 * @param  date  (Date) the date to check
	 * @return  (Date) the corrected date
	 */ _daylightSavingAdjust: function(date) {
            if (!date) return null;
            date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);
            return date;
        },
        /* Set the date(s) directly. */ _setDate: function(inst, date, noChange) {
            var clear = !date, origMonth = inst.selectedMonth, origYear = inst.selectedYear, newDate = this._restrictMinMax(inst, this._determineDate(inst, date, new Date()));
            inst.selectedDay = inst.currentDay = newDate.getDate();
            inst.drawMonth = inst.selectedMonth = inst.currentMonth = newDate.getMonth();
            inst.drawYear = inst.selectedYear = inst.currentYear = newDate.getFullYear();
            if ((origMonth !== inst.selectedMonth || origYear !== inst.selectedYear) && !noChange) this._notifyChange(inst);
            this._adjustInstDate(inst);
            if (inst.input) inst.input.val(clear ? "" : this._formatDate(inst));
        },
        /* Retrieve the date(s) directly. */ _getDate: function(inst) {
            var startDate = !inst.currentYear || inst.input && inst.input.val() === "" ? null : this._daylightSavingAdjust(new Date(inst.currentYear, inst.currentMonth, inst.currentDay));
            return startDate;
        },
        /* Attach the onxxx handlers.  These are declared statically so
	 * they work with static code transformers like Caja.
	 */ _attachHandlers: function(inst) {
            var stepMonths = this._get(inst, "stepMonths"), id = "#" + inst.id.replace(/\\\\/g, "\\");
            inst.dpDiv.find("[data-handler]").map(function() {
                var handler = {
                    prev: function() {
                        $.datepicker._adjustDate(id, -stepMonths, "M");
                    },
                    next: function() {
                        $.datepicker._adjustDate(id, +stepMonths, "M");
                    },
                    hide: function() {
                        $.datepicker._hideDatepicker();
                    },
                    today: function() {
                        $.datepicker._gotoToday(id);
                    },
                    selectDay: function() {
                        $.datepicker._selectDay(id, +this.getAttribute("data-month"), +this.getAttribute("data-year"), this);
                        return false;
                    },
                    selectMonth: function() {
                        $.datepicker._selectMonthYear(id, this, "M");
                        return false;
                    },
                    selectYear: function() {
                        $.datepicker._selectMonthYear(id, this, "Y");
                        return false;
                    }
                };
                $(this).on(this.getAttribute("data-event"), handler[this.getAttribute("data-handler")]);
            });
        },
        /* Generate the HTML for the current state of the date picker. */ _generateHTML: function(inst) {
            var maxDraw, prevText, prev, nextText, next, currentText, gotoDate, controls, buttonPanel, firstDay, showWeek, dayNames, dayNamesMin, monthNames, monthNamesShort, beforeShowDay, showOtherMonths, selectOtherMonths, defaultDate, html, dow, row, group, col, selectedDate, cornerClass, calender, thead, day, daysInMonth, leadDays, curRows, numRows, printDate, dRow, tbody, daySettings, otherMonth, unselectable, tempDate = new Date(), today = this._daylightSavingAdjust(new Date(tempDate.getFullYear(), tempDate.getMonth(), tempDate.getDate())), isRTL = this._get(inst, "isRTL"), showButtonPanel = this._get(inst, "showButtonPanel"), hideIfNoPrevNext = this._get(inst, "hideIfNoPrevNext"), navigationAsDateFormat = this._get(inst, "navigationAsDateFormat"), numMonths = this._getNumberOfMonths(inst), showCurrentAtPos = this._get(inst, "showCurrentAtPos"), stepMonths = this._get(inst, "stepMonths"), isMultiMonth = numMonths[0] !== 1 || numMonths[1] !== 1, currentDate = this._daylightSavingAdjust(!inst.currentDay ? new Date(9999, 9, 9) : new Date(inst.currentYear, inst.currentMonth, inst.currentDay)), minDate = this._getMinMaxDate(inst, "min"), maxDate = this._getMinMaxDate(inst, "max"), drawMonth = inst.drawMonth - showCurrentAtPos, drawYear = inst.drawYear;
            if (drawMonth < 0) {
                drawMonth += 12;
                drawYear--;
            }
            if (maxDate) {
                maxDraw = this._daylightSavingAdjust(new Date(maxDate.getFullYear(), maxDate.getMonth() - numMonths[0] * numMonths[1] + 1, maxDate.getDate()));
                maxDraw = minDate && maxDraw < minDate ? minDate : maxDraw;
                while(this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1)) > maxDraw){
                    drawMonth--;
                    if (drawMonth < 0) {
                        drawMonth = 11;
                        drawYear--;
                    }
                }
            }
            inst.drawMonth = drawMonth;
            inst.drawYear = drawYear;
            prevText = this._get(inst, "prevText");
            prevText = !navigationAsDateFormat ? prevText : this.formatDate(prevText, this._daylightSavingAdjust(new Date(drawYear, drawMonth - stepMonths, 1)), this._getFormatConfig(inst));
            prev = this._canAdjustMonth(inst, -1, drawYear, drawMonth) ? "<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='" + prevText + "'><span class='ui-icon ui-icon-circle-triangle-" + (isRTL ? "e" : "w") + "'>" + prevText + "</span></a>" : hideIfNoPrevNext ? "" : "<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='" + prevText + "'><span class='ui-icon ui-icon-circle-triangle-" + (isRTL ? "e" : "w") + "'>" + prevText + "</span></a>";
            nextText = this._get(inst, "nextText");
            nextText = !navigationAsDateFormat ? nextText : this.formatDate(nextText, this._daylightSavingAdjust(new Date(drawYear, drawMonth + stepMonths, 1)), this._getFormatConfig(inst));
            next = this._canAdjustMonth(inst, 1, drawYear, drawMonth) ? "<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='" + nextText + "'><span class='ui-icon ui-icon-circle-triangle-" + (isRTL ? "w" : "e") + "'>" + nextText + "</span></a>" : hideIfNoPrevNext ? "" : "<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='" + nextText + "'><span class='ui-icon ui-icon-circle-triangle-" + (isRTL ? "w" : "e") + "'>" + nextText + "</span></a>";
            currentText = this._get(inst, "currentText");
            gotoDate = this._get(inst, "gotoCurrent") && inst.currentDay ? currentDate : today;
            currentText = !navigationAsDateFormat ? currentText : this.formatDate(currentText, gotoDate, this._getFormatConfig(inst));
            controls = !inst.inline ? "<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>" + this._get(inst, "closeText") + "</button>" : "";
            buttonPanel = showButtonPanel ? "<div class='ui-datepicker-buttonpane ui-widget-content'>" + (isRTL ? controls : "") + (this._isInRange(inst, gotoDate) ? "<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>" + currentText + "</button>" : "") + (isRTL ? "" : controls) + "</div>" : "";
            firstDay = parseInt(this._get(inst, "firstDay"), 10);
            firstDay = isNaN(firstDay) ? 0 : firstDay;
            showWeek = this._get(inst, "showWeek");
            dayNames = this._get(inst, "dayNames");
            dayNamesMin = this._get(inst, "dayNamesMin");
            monthNames = this._get(inst, "monthNames");
            monthNamesShort = this._get(inst, "monthNamesShort");
            beforeShowDay = this._get(inst, "beforeShowDay");
            showOtherMonths = this._get(inst, "showOtherMonths");
            selectOtherMonths = this._get(inst, "selectOtherMonths");
            defaultDate = this._getDefaultDate(inst);
            html = "";
            for(row = 0; row < numMonths[0]; row++){
                group = "";
                this.maxRows = 4;
                for(col = 0; col < numMonths[1]; col++){
                    selectedDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, inst.selectedDay));
                    cornerClass = " ui-corner-all";
                    calender = "";
                    if (isMultiMonth) {
                        calender += "<div class='ui-datepicker-group";
                        if (numMonths[1] > 1) switch(col){
                            case 0:
                                calender += " ui-datepicker-group-first";
                                cornerClass = " ui-corner-" + (isRTL ? "right" : "left");
                                break;
                            case numMonths[1] - 1:
                                calender += " ui-datepicker-group-last";
                                cornerClass = " ui-corner-" + (isRTL ? "left" : "right");
                                break;
                            default:
                                calender += " ui-datepicker-group-middle";
                                cornerClass = "";
                                break;
                        }
                        calender += "'>";
                    }
                    calender += "<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix" + cornerClass + "'>" + (/all|left/.test(cornerClass) && row === 0 ? isRTL ? next : prev : "") + (/all|right/.test(cornerClass) && row === 0 ? isRTL ? prev : next : "") + this._generateMonthYearHeader(inst, drawMonth, drawYear, minDate, maxDate, row > 0 || col > 0, monthNames, monthNamesShort) + "</div><table class='ui-datepicker-calendar'><thead>" + "<tr>";
                    thead = showWeek ? "<th class='ui-datepicker-week-col'>" + this._get(inst, "weekHeader") + "</th>" : "";
                    for(dow = 0; dow < 7; dow++){
                        day = (dow + firstDay) % 7;
                        thead += "<th scope='col'" + ((dow + firstDay + 6) % 7 >= 5 ? " class='ui-datepicker-week-end'" : "") + ">" + "<span title='" + dayNames[day] + "'>" + dayNamesMin[day] + "</span></th>";
                    }
                    calender += thead + "</tr></thead><tbody>";
                    daysInMonth = this._getDaysInMonth(drawYear, drawMonth);
                    if (drawYear === inst.selectedYear && drawMonth === inst.selectedMonth) inst.selectedDay = Math.min(inst.selectedDay, daysInMonth);
                    leadDays = (this._getFirstDayOfMonth(drawYear, drawMonth) - firstDay + 7) % 7;
                    curRows = Math.ceil((leadDays + daysInMonth) / 7); // calculate the number of rows to generate
                    numRows = isMultiMonth ? this.maxRows > curRows ? this.maxRows : curRows : curRows; //If multiple months, use the higher number of rows (see #7043)
                    this.maxRows = numRows;
                    printDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1 - leadDays));
                    for(dRow = 0; dRow < numRows; dRow++){
                        calender += "<tr>";
                        tbody = !showWeek ? "" : "<td class='ui-datepicker-week-col'>" + this._get(inst, "calculateWeek")(printDate) + "</td>";
                        for(dow = 0; dow < 7; dow++){
                            daySettings = beforeShowDay ? beforeShowDay.apply(inst.input ? inst.input[0] : null, [
                                printDate
                            ]) : [
                                true,
                                ""
                            ];
                            otherMonth = printDate.getMonth() !== drawMonth;
                            unselectable = otherMonth && !selectOtherMonths || !daySettings[0] || minDate && printDate < minDate || maxDate && printDate > maxDate;
                            tbody += "<td class='" + ((dow + firstDay + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") + (otherMonth ? " ui-datepicker-other-month" : "") + (printDate.getTime() === selectedDate.getTime() && drawMonth === inst.selectedMonth && inst._keyEvent || defaultDate.getTime() === printDate.getTime() && defaultDate.getTime() === selectedDate.getTime() ? // or defaultDate is current printedDate and defaultDate is selectedDate
                            " " + this._dayOverClass : "") + (unselectable ? " " + this._unselectableClass + " ui-state-disabled" : "") + (otherMonth && !showOtherMonths ? "" : " " + daySettings[1] + (printDate.getTime() === currentDate.getTime() ? " " + this._currentClass : "") + (printDate.getTime() === today.getTime() ? " ui-datepicker-today" : "")) + "'" + ((!otherMonth || showOtherMonths) && daySettings[2] ? " title='" + daySettings[2].replace(/'/g, "&#39;") + "'" : "") + (unselectable ? "" : " data-handler='selectDay' data-event='click' data-month='" + printDate.getMonth() + "' data-year='" + printDate.getFullYear() + "'") + ">" + (otherMonth && !showOtherMonths ? "&#xa0;" : unselectable ? "<span class='ui-state-default'>" + printDate.getDate() + "</span>" : "<a class='ui-state-default" + (printDate.getTime() === today.getTime() ? " ui-state-highlight" : "") + (printDate.getTime() === currentDate.getTime() ? " ui-state-active" : "") + (otherMonth ? " ui-priority-secondary" : "") + "' href='#'>" + printDate.getDate() + "</a>") + "</td>"; // display selectable date
                            printDate.setDate(printDate.getDate() + 1);
                            printDate = this._daylightSavingAdjust(printDate);
                        }
                        calender += tbody + "</tr>";
                    }
                    drawMonth++;
                    if (drawMonth > 11) {
                        drawMonth = 0;
                        drawYear++;
                    }
                    calender += "</tbody></table>" + (isMultiMonth ? "</div>" + (numMonths[0] > 0 && col === numMonths[1] - 1 ? "<div class='ui-datepicker-row-break'></div>" : "") : "");
                    group += calender;
                }
                html += group;
            }
            html += buttonPanel;
            inst._keyEvent = false;
            return html;
        },
        /* Generate the month and year header. */ _generateMonthYearHeader: function(inst, drawMonth, drawYear, minDate, maxDate, secondary, monthNames, monthNamesShort) {
            var inMinYear, inMaxYear, month, years, thisYear, determineYear, year, endYear, changeMonth = this._get(inst, "changeMonth"), changeYear = this._get(inst, "changeYear"), showMonthAfterYear = this._get(inst, "showMonthAfterYear"), html = "<div class='ui-datepicker-title'>", monthHtml = "";
            // Month selection
            if (secondary || !changeMonth) monthHtml += "<span class='ui-datepicker-month'>" + monthNames[drawMonth] + "</span>";
            else {
                inMinYear = minDate && minDate.getFullYear() === drawYear;
                inMaxYear = maxDate && maxDate.getFullYear() === drawYear;
                monthHtml += "<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>";
                for(month = 0; month < 12; month++)if ((!inMinYear || month >= minDate.getMonth()) && (!inMaxYear || month <= maxDate.getMonth())) monthHtml += "<option value='" + month + "'" + (month === drawMonth ? " selected='selected'" : "") + ">" + monthNamesShort[month] + "</option>";
                monthHtml += "</select>";
            }
            if (!showMonthAfterYear) html += monthHtml + (secondary || !(changeMonth && changeYear) ? "&#xa0;" : "");
            // Year selection
            if (!inst.yearshtml) {
                inst.yearshtml = "";
                if (secondary || !changeYear) html += "<span class='ui-datepicker-year'>" + drawYear + "</span>";
                else {
                    // determine range of years to display
                    years = this._get(inst, "yearRange").split(":");
                    thisYear = new Date().getFullYear();
                    determineYear = function(value) {
                        var year = value.match(/c[+\-].*/) ? drawYear + parseInt(value.substring(1), 10) : value.match(/[+\-].*/) ? thisYear + parseInt(value, 10) : parseInt(value, 10);
                        return isNaN(year) ? thisYear : year;
                    };
                    year = determineYear(years[0]);
                    endYear = Math.max(year, determineYear(years[1] || ""));
                    year = minDate ? Math.max(year, minDate.getFullYear()) : year;
                    endYear = maxDate ? Math.min(endYear, maxDate.getFullYear()) : endYear;
                    inst.yearshtml += "<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>";
                    for(; year <= endYear; year++)inst.yearshtml += "<option value='" + year + "'" + (year === drawYear ? " selected='selected'" : "") + ">" + year + "</option>";
                    inst.yearshtml += "</select>";
                    html += inst.yearshtml;
                    inst.yearshtml = null;
                }
            }
            html += this._get(inst, "yearSuffix");
            if (showMonthAfterYear) html += (secondary || !(changeMonth && changeYear) ? "&#xa0;" : "") + monthHtml;
            html += "</div>"; // Close datepicker_header
            return html;
        },
        /* Adjust one of the date sub-fields. */ _adjustInstDate: function(inst, offset, period) {
            var year = inst.selectedYear + (period === "Y" ? offset : 0), month = inst.selectedMonth + (period === "M" ? offset : 0), day = Math.min(inst.selectedDay, this._getDaysInMonth(year, month)) + (period === "D" ? offset : 0), date = this._restrictMinMax(inst, this._daylightSavingAdjust(new Date(year, month, day)));
            inst.selectedDay = date.getDate();
            inst.drawMonth = inst.selectedMonth = date.getMonth();
            inst.drawYear = inst.selectedYear = date.getFullYear();
            if (period === "M" || period === "Y") this._notifyChange(inst);
        },
        /* Ensure a date is within any min/max bounds. */ _restrictMinMax: function(inst, date) {
            var minDate = this._getMinMaxDate(inst, "min"), maxDate = this._getMinMaxDate(inst, "max"), newDate = minDate && date < minDate ? minDate : date;
            return maxDate && newDate > maxDate ? maxDate : newDate;
        },
        /* Notify change of month/year. */ _notifyChange: function(inst) {
            var onChange = this._get(inst, "onChangeMonthYear");
            if (onChange) onChange.apply(inst.input ? inst.input[0] : null, [
                inst.selectedYear,
                inst.selectedMonth + 1,
                inst
            ]);
        },
        /* Determine the number of months to show. */ _getNumberOfMonths: function(inst) {
            var numMonths = this._get(inst, "numberOfMonths");
            return numMonths == null ? [
                1,
                1
            ] : typeof numMonths === "number" ? [
                1,
                numMonths
            ] : numMonths;
        },
        /* Determine the current maximum date - ensure no time components are set. */ _getMinMaxDate: function(inst, minMax) {
            return this._determineDate(inst, this._get(inst, minMax + "Date"), null);
        },
        /* Find the number of days in a given month. */ _getDaysInMonth: function(year, month) {
            return 32 - this._daylightSavingAdjust(new Date(year, month, 32)).getDate();
        },
        /* Find the day of the week of the first of a month. */ _getFirstDayOfMonth: function(year, month) {
            return new Date(year, month, 1).getDay();
        },
        /* Determines if we should allow a "next/prev" month display change. */ _canAdjustMonth: function(inst, offset, curYear, curMonth) {
            var numMonths = this._getNumberOfMonths(inst), date = this._daylightSavingAdjust(new Date(curYear, curMonth + (offset < 0 ? offset : numMonths[0] * numMonths[1]), 1));
            if (offset < 0) date.setDate(this._getDaysInMonth(date.getFullYear(), date.getMonth()));
            return this._isInRange(inst, date);
        },
        /* Is the given date in the accepted range? */ _isInRange: function(inst, date) {
            var yearSplit, currentYear, minDate = this._getMinMaxDate(inst, "min"), maxDate = this._getMinMaxDate(inst, "max"), minYear = null, maxYear = null, years = this._get(inst, "yearRange");
            if (years) {
                yearSplit = years.split(":");
                currentYear = new Date().getFullYear();
                minYear = parseInt(yearSplit[0], 10);
                maxYear = parseInt(yearSplit[1], 10);
                if (yearSplit[0].match(/[+\-].*/)) minYear += currentYear;
                if (yearSplit[1].match(/[+\-].*/)) maxYear += currentYear;
            }
            return (!minDate || date.getTime() >= minDate.getTime()) && (!maxDate || date.getTime() <= maxDate.getTime()) && (!minYear || date.getFullYear() >= minYear) && (!maxYear || date.getFullYear() <= maxYear);
        },
        /* Provide the configuration settings for formatting/parsing. */ _getFormatConfig: function(inst) {
            var shortYearCutoff = this._get(inst, "shortYearCutoff");
            shortYearCutoff = typeof shortYearCutoff !== "string" ? shortYearCutoff : new Date().getFullYear() % 100 + parseInt(shortYearCutoff, 10);
            return {
                shortYearCutoff: shortYearCutoff,
                dayNamesShort: this._get(inst, "dayNamesShort"),
                dayNames: this._get(inst, "dayNames"),
                monthNamesShort: this._get(inst, "monthNamesShort"),
                monthNames: this._get(inst, "monthNames")
            };
        },
        /* Format the given date for display. */ _formatDate: function(inst, day, month, year) {
            if (!day) {
                inst.currentDay = inst.selectedDay;
                inst.currentMonth = inst.selectedMonth;
                inst.currentYear = inst.selectedYear;
            }
            var date = day ? typeof day === "object" ? day : this._daylightSavingAdjust(new Date(year, month, day)) : this._daylightSavingAdjust(new Date(inst.currentYear, inst.currentMonth, inst.currentDay));
            return this.formatDate(this._get(inst, "dateFormat"), date, this._getFormatConfig(inst));
        }
    });
    /*
 * Bind hover events for datepicker elements.
 * Done via delegate so the binding only occurs once in the lifetime of the parent div.
 * Global datepicker_instActive, set by _updateDatepicker allows the handlers to find their way back to the active picker.
 */ function datepicker_bindHover(dpDiv) {
        var selector = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
        return dpDiv.on("mouseout", selector, function() {
            $(this).removeClass("ui-state-hover");
            if (this.className.indexOf("ui-datepicker-prev") !== -1) $(this).removeClass("ui-datepicker-prev-hover");
            if (this.className.indexOf("ui-datepicker-next") !== -1) $(this).removeClass("ui-datepicker-next-hover");
        }).on("mouseover", selector, datepicker_handleMouseover);
    }
    function datepicker_handleMouseover() {
        if (!$.datepicker._isDisabledDatepicker(datepicker_instActive.inline ? datepicker_instActive.dpDiv.parent()[0] : datepicker_instActive.input[0])) {
            $(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover");
            $(this).addClass("ui-state-hover");
            if (this.className.indexOf("ui-datepicker-prev") !== -1) $(this).addClass("ui-datepicker-prev-hover");
            if (this.className.indexOf("ui-datepicker-next") !== -1) $(this).addClass("ui-datepicker-next-hover");
        }
    }
    /* jQuery extend now ignores nulls! */ function datepicker_extendRemove(target, props) {
        $.extend(target, props);
        for(var name in props)if (props[name] == null) target[name] = props[name];
        return target;
    }
    /* Invoke the datepicker functionality.
   @param  options  string - a command, optionally followed by additional parameters or
					Object - settings for attaching new datepicker functionality
   @return  jQuery object */ $.fn.datepicker = function(options) {
        /* Verify an empty collection wasn't passed - Fixes #6976 */ if (!this.length) return this;
        /* Initialise the date picker. */ if (!$.datepicker.initialized) {
            $(document).on("mousedown", $.datepicker._checkExternalClick);
            $.datepicker.initialized = true;
        }
        /* Append datepicker main container to body if not exist. */ if ($("#" + $.datepicker._mainDivId).length === 0) $("body").append($.datepicker.dpDiv);
        var otherArgs = Array.prototype.slice.call(arguments, 1);
        if (typeof options === "string" && (options === "isDisabled" || options === "getDate" || options === "widget")) return $.datepicker["_" + options + "Datepicker"].apply($.datepicker, [
            this[0]
        ].concat(otherArgs));
        if (options === "option" && arguments.length === 2 && typeof arguments[1] === "string") return $.datepicker["_" + options + "Datepicker"].apply($.datepicker, [
            this[0]
        ].concat(otherArgs));
        return this.each(function() {
            typeof options === "string" ? $.datepicker["_" + options + "Datepicker"].apply($.datepicker, [
                this
            ].concat(otherArgs)) : $.datepicker._attachDatepicker(this, options);
        });
    };
    $.datepicker = new Datepicker(); // singleton instance
    $.datepicker.initialized = false;
    $.datepicker.uuid = new Date().getTime();
    $.datepicker.version = "1.12.1";
    var widgetsDatepicker = $.datepicker;
    // This file is deprecated
    var ie = $.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase());
    /*!
 * jQuery UI Mouse 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Mouse
    //>>group: Widgets
    //>>description: Abstracts mouse-based interactions to assist in creating certain widgets.
    //>>docs: http://api.jqueryui.com/mouse/
    var mouseHandled = false;
    $(document).on("mouseup", function() {
        mouseHandled = false;
    });
    var widgetsMouse = $.widget("ui.mouse", {
        version: "1.12.1",
        options: {
            cancel: "input, textarea, button, select, option",
            distance: 1,
            delay: 0
        },
        _mouseInit: function() {
            var that = this;
            this.element.on("mousedown." + this.widgetName, function(event) {
                return that._mouseDown(event);
            }).on("click." + this.widgetName, function(event) {
                if (true === $.data(event.target, that.widgetName + ".preventClickEvent")) {
                    $.removeData(event.target, that.widgetName + ".preventClickEvent");
                    event.stopImmediatePropagation();
                    return false;
                }
            });
            this.started = false;
        },
        // TODO: make sure destroying one instance of mouse doesn't mess with
        // other instances of mouse
        _mouseDestroy: function() {
            this.element.off("." + this.widgetName);
            if (this._mouseMoveDelegate) this.document.off("mousemove." + this.widgetName, this._mouseMoveDelegate).off("mouseup." + this.widgetName, this._mouseUpDelegate);
        },
        _mouseDown: function(event) {
            // don't let more than one widget handle mouseStart
            if (mouseHandled) return;
            this._mouseMoved = false;
            this._mouseStarted && this._mouseUp(event);
            this._mouseDownEvent = event;
            var that = this, btnIsLeft = event.which === 1, // event.target.nodeName works around a bug in IE 8 with
            // disabled inputs (#7620)
            elIsCancel = typeof this.options.cancel === "string" && event.target.nodeName ? $(event.target).closest(this.options.cancel).length : false;
            if (!btnIsLeft || elIsCancel || !this._mouseCapture(event)) return true;
            this.mouseDelayMet = !this.options.delay;
            if (!this.mouseDelayMet) this._mouseDelayTimer = setTimeout(function() {
                that.mouseDelayMet = true;
            }, this.options.delay);
            if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {
                this._mouseStarted = this._mouseStart(event) !== false;
                if (!this._mouseStarted) {
                    event.preventDefault();
                    return true;
                }
            }
            // Click event may never have fired (Gecko & Opera)
            if (true === $.data(event.target, this.widgetName + ".preventClickEvent")) $.removeData(event.target, this.widgetName + ".preventClickEvent");
            // These delegates are required to keep context
            this._mouseMoveDelegate = function(event) {
                return that._mouseMove(event);
            };
            this._mouseUpDelegate = function(event) {
                return that._mouseUp(event);
            };
            this.document.on("mousemove." + this.widgetName, this._mouseMoveDelegate).on("mouseup." + this.widgetName, this._mouseUpDelegate);
            event.preventDefault();
            mouseHandled = true;
            return true;
        },
        _mouseMove: function(event) {
            // Only check for mouseups outside the document if you've moved inside the document
            // at least once. This prevents the firing of mouseup in the case of IE<9, which will
            // fire a mousemove event if content is placed under the cursor. See #7778
            // Support: IE <9
            if (this._mouseMoved) {
                // IE mouseup check - mouseup happened when mouse was out of window
                if ($.ui.ie && (!document.documentMode || document.documentMode < 9) && !event.button) return this._mouseUp(event);
                else if (!event.which) {
                    // Support: Safari <=8 - 9
                    // Safari sets which to 0 if you press any of the following keys
                    // during a drag (#14461)
                    if (event.originalEvent.altKey || event.originalEvent.ctrlKey || event.originalEvent.metaKey || event.originalEvent.shiftKey) this.ignoreMissingWhich = true;
                    else if (!this.ignoreMissingWhich) return this._mouseUp(event);
                }
            }
            if (event.which || event.button) this._mouseMoved = true;
            if (this._mouseStarted) {
                this._mouseDrag(event);
                return event.preventDefault();
            }
            if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {
                this._mouseStarted = this._mouseStart(this._mouseDownEvent, event) !== false;
                this._mouseStarted ? this._mouseDrag(event) : this._mouseUp(event);
            }
            return !this._mouseStarted;
        },
        _mouseUp: function(event) {
            this.document.off("mousemove." + this.widgetName, this._mouseMoveDelegate).off("mouseup." + this.widgetName, this._mouseUpDelegate);
            if (this._mouseStarted) {
                this._mouseStarted = false;
                if (event.target === this._mouseDownEvent.target) $.data(event.target, this.widgetName + ".preventClickEvent", true);
                this._mouseStop(event);
            }
            if (this._mouseDelayTimer) {
                clearTimeout(this._mouseDelayTimer);
                delete this._mouseDelayTimer;
            }
            this.ignoreMissingWhich = false;
            mouseHandled = false;
            event.preventDefault();
        },
        _mouseDistanceMet: function(event) {
            return Math.max(Math.abs(this._mouseDownEvent.pageX - event.pageX), Math.abs(this._mouseDownEvent.pageY - event.pageY)) >= this.options.distance;
        },
        _mouseDelayMet: function() {
            return this.mouseDelayMet;
        },
        // These are placeholder methods, to be overriden by extending plugin
        _mouseStart: function() {},
        _mouseDrag: function() {},
        _mouseStop: function() {},
        _mouseCapture: function() {
            return true;
        }
    });
    // $.ui.plugin is deprecated. Use $.widget() extensions instead.
    var plugin = $.ui.plugin = {
        add: function(module, option, set) {
            var i, proto = $.ui[module].prototype;
            for(i in set){
                proto.plugins[i] = proto.plugins[i] || [];
                proto.plugins[i].push([
                    option,
                    set[i]
                ]);
            }
        },
        call: function(instance, name, args, allowDisconnected) {
            var i, set = instance.plugins[name];
            if (!set) return;
            if (!allowDisconnected && (!instance.element[0].parentNode || instance.element[0].parentNode.nodeType === 11)) return;
            for(i = 0; i < set.length; i++)if (instance.options[set[i][0]]) set[i][1].apply(instance.element, args);
        }
    };
    var safeBlur = $.ui.safeBlur = function(element) {
        // Support: IE9 - 10 only
        // If the <body> is blurred, IE will switch windows, see #9420
        if (element && element.nodeName.toLowerCase() !== "body") $(element).trigger("blur");
    };
    /*!
 * jQuery UI Draggable 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Draggable
    //>>group: Interactions
    //>>description: Enables dragging functionality for any element.
    //>>docs: http://api.jqueryui.com/draggable/
    //>>demos: http://jqueryui.com/draggable/
    //>>css.structure: ../../themes/base/draggable.css
    $.widget("ui.draggable", $.ui.mouse, {
        version: "1.12.1",
        widgetEventPrefix: "drag",
        options: {
            addClasses: true,
            appendTo: "parent",
            axis: false,
            connectToSortable: false,
            containment: false,
            cursor: "auto",
            cursorAt: false,
            grid: false,
            handle: false,
            helper: "original",
            iframeFix: false,
            opacity: false,
            refreshPositions: false,
            revert: false,
            revertDuration: 500,
            scope: "default",
            scroll: true,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            snap: false,
            snapMode: "both",
            snapTolerance: 20,
            stack: false,
            zIndex: false,
            // Callbacks
            drag: null,
            start: null,
            stop: null
        },
        _create: function() {
            if (this.options.helper === "original") this._setPositionRelative();
            if (this.options.addClasses) this._addClass("ui-draggable");
            this._setHandleClassName();
            this._mouseInit();
        },
        _setOption: function(key, value) {
            this._super(key, value);
            if (key === "handle") {
                this._removeHandleClassName();
                this._setHandleClassName();
            }
        },
        _destroy: function() {
            if ((this.helper || this.element).is(".ui-draggable-dragging")) {
                this.destroyOnClear = true;
                return;
            }
            this._removeHandleClassName();
            this._mouseDestroy();
        },
        _mouseCapture: function(event) {
            var o = this.options;
            // Among others, prevent a drag on a resizable-handle
            if (this.helper || o.disabled || $(event.target).closest(".ui-resizable-handle").length > 0) return false;
            //Quit if we're not on a valid handle
            this.handle = this._getHandle(event);
            if (!this.handle) return false;
            this._blurActiveElement(event);
            this._blockFrames(o.iframeFix === true ? "iframe" : o.iframeFix);
            return true;
        },
        _blockFrames: function(selector) {
            this.iframeBlocks = this.document.find(selector).map(function() {
                var iframe = $(this);
                return $("<div>").css("position", "absolute").appendTo(iframe.parent()).outerWidth(iframe.outerWidth()).outerHeight(iframe.outerHeight()).offset(iframe.offset())[0];
            });
        },
        _unblockFrames: function() {
            if (this.iframeBlocks) {
                this.iframeBlocks.remove();
                delete this.iframeBlocks;
            }
        },
        _blurActiveElement: function(event) {
            var activeElement = $.ui.safeActiveElement(this.document[0]), target = $(event.target);
            // Don't blur if the event occurred on an element that is within
            // the currently focused element
            // See #10527, #12472
            if (target.closest(activeElement).length) return;
            // Blur any element that currently has focus, see #4261
            $.ui.safeBlur(activeElement);
        },
        _mouseStart: function(event) {
            var o = this.options;
            //Create and append the visible helper
            this.helper = this._createHelper(event);
            this._addClass(this.helper, "ui-draggable-dragging");
            //Cache the helper size
            this._cacheHelperProportions();
            //If ddmanager is used for droppables, set the global draggable
            if ($.ui.ddmanager) $.ui.ddmanager.current = this;
            /*
		 * - Position generation -
		 * This block generates everything position related - it's the core of draggables.
		 */ //Cache the margins of the original element
            this._cacheMargins();
            //Store the helper's css position
            this.cssPosition = this.helper.css("position");
            this.scrollParent = this.helper.scrollParent(true);
            this.offsetParent = this.helper.offsetParent();
            this.hasFixedAncestor = this.helper.parents().filter(function() {
                return $(this).css("position") === "fixed";
            }).length > 0;
            //The element's absolute position on the page minus margins
            this.positionAbs = this.element.offset();
            this._refreshOffsets(event);
            //Generate the original position
            this.originalPosition = this.position = this._generatePosition(event, false);
            this.originalPageX = event.pageX;
            this.originalPageY = event.pageY;
            o.cursorAt && this._adjustOffsetFromHelper(o.cursorAt);
            //Set a containment if given in the options
            this._setContainment();
            //Trigger event + callbacks
            if (this._trigger("start", event) === false) {
                this._clear();
                return false;
            }
            //Recache the helper size
            this._cacheHelperProportions();
            //Prepare the droppable offsets
            if ($.ui.ddmanager && !o.dropBehaviour) $.ui.ddmanager.prepareOffsets(this, event);
            // Execute the drag once - this causes the helper not to be visible before getting its
            // correct position
            this._mouseDrag(event, true);
            // If the ddmanager is used for droppables, inform the manager that dragging has started
            // (see #5003)
            if ($.ui.ddmanager) $.ui.ddmanager.dragStart(this, event);
            return true;
        },
        _refreshOffsets: function(event) {
            this.offset = {
                top: this.positionAbs.top - this.margins.top,
                left: this.positionAbs.left - this.margins.left,
                scroll: false,
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset()
            };
            this.offset.click = {
                left: event.pageX - this.offset.left,
                top: event.pageY - this.offset.top
            };
        },
        _mouseDrag: function(event, noPropagation) {
            // reset any necessary cached properties (see #5009)
            if (this.hasFixedAncestor) this.offset.parent = this._getParentOffset();
            //Compute the helpers position
            this.position = this._generatePosition(event, true);
            this.positionAbs = this._convertPositionTo("absolute");
            //Call plugins and callbacks and use the resulting position if something is returned
            if (!noPropagation) {
                var ui = this._uiHash();
                if (this._trigger("drag", event, ui) === false) {
                    this._mouseUp(new $.Event("mouseup", event));
                    return false;
                }
                this.position = ui.position;
            }
            this.helper[0].style.left = this.position.left + "px";
            this.helper[0].style.top = this.position.top + "px";
            if ($.ui.ddmanager) $.ui.ddmanager.drag(this, event);
            return false;
        },
        _mouseStop: function(event) {
            //If we are using droppables, inform the manager about the drop
            var that = this, dropped = false;
            if ($.ui.ddmanager && !this.options.dropBehaviour) dropped = $.ui.ddmanager.drop(this, event);
            //if a drop comes from outside (a sortable)
            if (this.dropped) {
                dropped = this.dropped;
                this.dropped = false;
            }
            if (this.options.revert === "invalid" && !dropped || this.options.revert === "valid" && dropped || this.options.revert === true || $.isFunction(this.options.revert) && this.options.revert.call(this.element, dropped)) $(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function() {
                if (that._trigger("stop", event) !== false) that._clear();
            });
            else if (this._trigger("stop", event) !== false) this._clear();
            return false;
        },
        _mouseUp: function(event) {
            this._unblockFrames();
            // If the ddmanager is used for droppables, inform the manager that dragging has stopped
            // (see #5003)
            if ($.ui.ddmanager) $.ui.ddmanager.dragStop(this, event);
            // Only need to focus if the event occurred on the draggable itself, see #10527
            if (this.handleElement.is(event.target)) // The interaction is over; whether or not the click resulted in a drag,
            // focus the element
            this.element.trigger("focus");
            return $.ui.mouse.prototype._mouseUp.call(this, event);
        },
        cancel: function() {
            if (this.helper.is(".ui-draggable-dragging")) this._mouseUp(new $.Event("mouseup", {
                target: this.element[0]
            }));
            else this._clear();
            return this;
        },
        _getHandle: function(event) {
            return this.options.handle ? !!$(event.target).closest(this.element.find(this.options.handle)).length : true;
        },
        _setHandleClassName: function() {
            this.handleElement = this.options.handle ? this.element.find(this.options.handle) : this.element;
            this._addClass(this.handleElement, "ui-draggable-handle");
        },
        _removeHandleClassName: function() {
            this._removeClass(this.handleElement, "ui-draggable-handle");
        },
        _createHelper: function(event) {
            var o = this.options, helperIsFunction = $.isFunction(o.helper), helper = helperIsFunction ? $(o.helper.apply(this.element[0], [
                event
            ])) : o.helper === "clone" ? this.element.clone().removeAttr("id") : this.element;
            if (!helper.parents("body").length) helper.appendTo(o.appendTo === "parent" ? this.element[0].parentNode : o.appendTo);
            // Http://bugs.jqueryui.com/ticket/9446
            // a helper function can return the original element
            // which wouldn't have been set to relative in _create
            if (helperIsFunction && helper[0] === this.element[0]) this._setPositionRelative();
            if (helper[0] !== this.element[0] && !/(fixed|absolute)/.test(helper.css("position"))) helper.css("position", "absolute");
            return helper;
        },
        _setPositionRelative: function() {
            if (!/^(?:r|a|f)/.test(this.element.css("position"))) this.element[0].style.position = "relative";
        },
        _adjustOffsetFromHelper: function(obj) {
            if (typeof obj === "string") obj = obj.split(" ");
            if ($.isArray(obj)) obj = {
                left: +obj[0],
                top: +obj[1] || 0
            };
            if ("left" in obj) this.offset.click.left = obj.left + this.margins.left;
            if ("right" in obj) this.offset.click.left = this.helperProportions.width - obj.right + this.margins.left;
            if ("top" in obj) this.offset.click.top = obj.top + this.margins.top;
            if ("bottom" in obj) this.offset.click.top = this.helperProportions.height - obj.bottom + this.margins.top;
        },
        _isRootNode: function(element) {
            return /(html|body)/i.test(element.tagName) || element === this.document[0];
        },
        _getParentOffset: function() {
            //Get the offsetParent and cache its position
            var po = this.offsetParent.offset(), document1 = this.document[0];
            // This is a special case where we need to modify a offset calculated on start, since the
            // following happened:
            // 1. The position of the helper is absolute, so it's position is calculated based on the
            // next positioned parent
            // 2. The actual offset parent is a child of the scroll parent, and the scroll parent isn't
            // the document, which means that the scroll is included in the initial calculation of the
            // offset of the parent, and never recalculated upon drag
            if (this.cssPosition === "absolute" && this.scrollParent[0] !== document1 && $.contains(this.scrollParent[0], this.offsetParent[0])) {
                po.left += this.scrollParent.scrollLeft();
                po.top += this.scrollParent.scrollTop();
            }
            if (this._isRootNode(this.offsetParent[0])) po = {
                top: 0,
                left: 0
            };
            return {
                top: po.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: po.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            };
        },
        _getRelativeOffset: function() {
            if (this.cssPosition !== "relative") return {
                top: 0,
                left: 0
            };
            var p = this.element.position(), scrollIsRootNode = this._isRootNode(this.scrollParent[0]);
            return {
                top: p.top - (parseInt(this.helper.css("top"), 10) || 0) + (!scrollIsRootNode ? this.scrollParent.scrollTop() : 0),
                left: p.left - (parseInt(this.helper.css("left"), 10) || 0) + (!scrollIsRootNode ? this.scrollParent.scrollLeft() : 0)
            };
        },
        _cacheMargins: function() {
            this.margins = {
                left: parseInt(this.element.css("marginLeft"), 10) || 0,
                top: parseInt(this.element.css("marginTop"), 10) || 0,
                right: parseInt(this.element.css("marginRight"), 10) || 0,
                bottom: parseInt(this.element.css("marginBottom"), 10) || 0
            };
        },
        _cacheHelperProportions: function() {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            };
        },
        _setContainment: function() {
            var isUserScrollable, c, ce, o = this.options, document1 = this.document[0];
            this.relativeContainer = null;
            if (!o.containment) {
                this.containment = null;
                return;
            }
            if (o.containment === "window") {
                this.containment = [
                    $(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left,
                    $(window).scrollTop() - this.offset.relative.top - this.offset.parent.top,
                    $(window).scrollLeft() + $(window).width() - this.helperProportions.width - this.margins.left,
                    $(window).scrollTop() + ($(window).height() || document1.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top
                ];
                return;
            }
            if (o.containment === "document") {
                this.containment = [
                    0,
                    0,
                    $(document1).width() - this.helperProportions.width - this.margins.left,
                    ($(document1).height() || document1.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top
                ];
                return;
            }
            if (o.containment.constructor === Array) {
                this.containment = o.containment;
                return;
            }
            if (o.containment === "parent") o.containment = this.helper[0].parentNode;
            c = $(o.containment);
            ce = c[0];
            if (!ce) return;
            isUserScrollable = /(scroll|auto)/.test(c.css("overflow"));
            this.containment = [
                (parseInt(c.css("borderLeftWidth"), 10) || 0) + (parseInt(c.css("paddingLeft"), 10) || 0),
                (parseInt(c.css("borderTopWidth"), 10) || 0) + (parseInt(c.css("paddingTop"), 10) || 0),
                (isUserScrollable ? Math.max(ce.scrollWidth, ce.offsetWidth) : ce.offsetWidth) - (parseInt(c.css("borderRightWidth"), 10) || 0) - (parseInt(c.css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right,
                (isUserScrollable ? Math.max(ce.scrollHeight, ce.offsetHeight) : ce.offsetHeight) - (parseInt(c.css("borderBottomWidth"), 10) || 0) - (parseInt(c.css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom
            ];
            this.relativeContainer = c;
        },
        _convertPositionTo: function(d, pos) {
            if (!pos) pos = this.position;
            var mod = d === "absolute" ? 1 : -1, scrollIsRootNode = this._isRootNode(this.scrollParent[0]);
            return {
                top: // The absolute mouse position
                pos.top + // Only for relative positioned nodes: Relative offset from element to offset parent
                this.offset.relative.top * mod + // The offsetParent's offset without borders (offset + border)
                this.offset.parent.top * mod - (this.cssPosition === "fixed" ? -this.offset.scroll.top : scrollIsRootNode ? 0 : this.offset.scroll.top) * mod,
                left: // The absolute mouse position
                pos.left + // Only for relative positioned nodes: Relative offset from element to offset parent
                this.offset.relative.left * mod + // The offsetParent's offset without borders (offset + border)
                this.offset.parent.left * mod - (this.cssPosition === "fixed" ? -this.offset.scroll.left : scrollIsRootNode ? 0 : this.offset.scroll.left) * mod
            };
        },
        _generatePosition: function(event, constrainPosition) {
            var containment, co, top, left, o = this.options, scrollIsRootNode = this._isRootNode(this.scrollParent[0]), pageX = event.pageX, pageY = event.pageY;
            // Cache the scroll
            if (!scrollIsRootNode || !this.offset.scroll) this.offset.scroll = {
                top: this.scrollParent.scrollTop(),
                left: this.scrollParent.scrollLeft()
            };
            /*
		 * - Position constraining -
		 * Constrain the position to a mix of grid, containment.
		 */ // If we are not dragging yet, we won't check for options
            if (constrainPosition) {
                if (this.containment) {
                    if (this.relativeContainer) {
                        co = this.relativeContainer.offset();
                        containment = [
                            this.containment[0] + co.left,
                            this.containment[1] + co.top,
                            this.containment[2] + co.left,
                            this.containment[3] + co.top
                        ];
                    } else containment = this.containment;
                    if (event.pageX - this.offset.click.left < containment[0]) pageX = containment[0] + this.offset.click.left;
                    if (event.pageY - this.offset.click.top < containment[1]) pageY = containment[1] + this.offset.click.top;
                    if (event.pageX - this.offset.click.left > containment[2]) pageX = containment[2] + this.offset.click.left;
                    if (event.pageY - this.offset.click.top > containment[3]) pageY = containment[3] + this.offset.click.top;
                }
                if (o.grid) {
                    //Check for grid elements set to 0 to prevent divide by 0 error causing invalid
                    // argument errors in IE (see ticket #6950)
                    top = o.grid[1] ? this.originalPageY + Math.round((pageY - this.originalPageY) / o.grid[1]) * o.grid[1] : this.originalPageY;
                    pageY = containment ? top - this.offset.click.top >= containment[1] || top - this.offset.click.top > containment[3] ? top : top - this.offset.click.top >= containment[1] ? top - o.grid[1] : top + o.grid[1] : top;
                    left = o.grid[0] ? this.originalPageX + Math.round((pageX - this.originalPageX) / o.grid[0]) * o.grid[0] : this.originalPageX;
                    pageX = containment ? left - this.offset.click.left >= containment[0] || left - this.offset.click.left > containment[2] ? left : left - this.offset.click.left >= containment[0] ? left - o.grid[0] : left + o.grid[0] : left;
                }
                if (o.axis === "y") pageX = this.originalPageX;
                if (o.axis === "x") pageY = this.originalPageY;
            }
            return {
                top: // The absolute mouse position
                pageY - // Click offset (relative to the element)
                this.offset.click.top - // Only for relative positioned nodes: Relative offset from element to offset parent
                this.offset.relative.top - // The offsetParent's offset without borders (offset + border)
                this.offset.parent.top + (this.cssPosition === "fixed" ? -this.offset.scroll.top : scrollIsRootNode ? 0 : this.offset.scroll.top),
                left: // The absolute mouse position
                pageX - // Click offset (relative to the element)
                this.offset.click.left - // Only for relative positioned nodes: Relative offset from element to offset parent
                this.offset.relative.left - // The offsetParent's offset without borders (offset + border)
                this.offset.parent.left + (this.cssPosition === "fixed" ? -this.offset.scroll.left : scrollIsRootNode ? 0 : this.offset.scroll.left)
            };
        },
        _clear: function() {
            this._removeClass(this.helper, "ui-draggable-dragging");
            if (this.helper[0] !== this.element[0] && !this.cancelHelperRemoval) this.helper.remove();
            this.helper = null;
            this.cancelHelperRemoval = false;
            if (this.destroyOnClear) this.destroy();
        },
        // From now on bulk stuff - mainly helpers
        _trigger: function(type, event, ui) {
            ui = ui || this._uiHash();
            $.ui.plugin.call(this, type, [
                event,
                ui,
                this
            ], true);
            // Absolute position and offset (see #6884 ) have to be recalculated after plugins
            if (/^(drag|start|stop)/.test(type)) {
                this.positionAbs = this._convertPositionTo("absolute");
                ui.offset = this.positionAbs;
            }
            return $.Widget.prototype._trigger.call(this, type, event, ui);
        },
        plugins: {},
        _uiHash: function() {
            return {
                helper: this.helper,
                position: this.position,
                originalPosition: this.originalPosition,
                offset: this.positionAbs
            };
        }
    });
    $.ui.plugin.add("draggable", "connectToSortable", {
        start: function(event, ui, draggable) {
            var uiSortable = $.extend({}, ui, {
                item: draggable.element
            });
            draggable.sortables = [];
            $(draggable.options.connectToSortable).each(function() {
                var sortable = $(this).sortable("instance");
                if (sortable && !sortable.options.disabled) {
                    draggable.sortables.push(sortable);
                    // RefreshPositions is called at drag start to refresh the containerCache
                    // which is used in drag. This ensures it's initialized and synchronized
                    // with any changes that might have happened on the page since initialization.
                    sortable.refreshPositions();
                    sortable._trigger("activate", event, uiSortable);
                }
            });
        },
        stop: function(event, ui, draggable) {
            var uiSortable = $.extend({}, ui, {
                item: draggable.element
            });
            draggable.cancelHelperRemoval = false;
            $.each(draggable.sortables, function() {
                var sortable = this;
                if (sortable.isOver) {
                    sortable.isOver = 0;
                    // Allow this sortable to handle removing the helper
                    draggable.cancelHelperRemoval = true;
                    sortable.cancelHelperRemoval = false;
                    // Use _storedCSS To restore properties in the sortable,
                    // as this also handles revert (#9675) since the draggable
                    // may have modified them in unexpected ways (#8809)
                    sortable._storedCSS = {
                        position: sortable.placeholder.css("position"),
                        top: sortable.placeholder.css("top"),
                        left: sortable.placeholder.css("left")
                    };
                    sortable._mouseStop(event);
                    // Once drag has ended, the sortable should return to using
                    // its original helper, not the shared helper from draggable
                    sortable.options.helper = sortable.options._helper;
                } else {
                    // Prevent this Sortable from removing the helper.
                    // However, don't set the draggable to remove the helper
                    // either as another connected Sortable may yet handle the removal.
                    sortable.cancelHelperRemoval = true;
                    sortable._trigger("deactivate", event, uiSortable);
                }
            });
        },
        drag: function(event, ui, draggable) {
            $.each(draggable.sortables, function() {
                var innermostIntersecting = false, sortable = this;
                // Copy over variables that sortable's _intersectsWith uses
                sortable.positionAbs = draggable.positionAbs;
                sortable.helperProportions = draggable.helperProportions;
                sortable.offset.click = draggable.offset.click;
                if (sortable._intersectsWith(sortable.containerCache)) {
                    innermostIntersecting = true;
                    $.each(draggable.sortables, function() {
                        // Copy over variables that sortable's _intersectsWith uses
                        this.positionAbs = draggable.positionAbs;
                        this.helperProportions = draggable.helperProportions;
                        this.offset.click = draggable.offset.click;
                        if (this !== sortable && this._intersectsWith(this.containerCache) && $.contains(sortable.element[0], this.element[0])) innermostIntersecting = false;
                        return innermostIntersecting;
                    });
                }
                if (innermostIntersecting) {
                    // If it intersects, we use a little isOver variable and set it once,
                    // so that the move-in stuff gets fired only once.
                    if (!sortable.isOver) {
                        sortable.isOver = 1;
                        // Store draggable's parent in case we need to reappend to it later.
                        draggable._parent = ui.helper.parent();
                        sortable.currentItem = ui.helper.appendTo(sortable.element).data("ui-sortable-item", true);
                        // Store helper option to later restore it
                        sortable.options._helper = sortable.options.helper;
                        sortable.options.helper = function() {
                            return ui.helper[0];
                        };
                        // Fire the start events of the sortable with our passed browser event,
                        // and our own helper (so it doesn't create a new one)
                        event.target = sortable.currentItem[0];
                        sortable._mouseCapture(event, true);
                        sortable._mouseStart(event, true, true);
                        // Because the browser event is way off the new appended portlet,
                        // modify necessary variables to reflect the changes
                        sortable.offset.click.top = draggable.offset.click.top;
                        sortable.offset.click.left = draggable.offset.click.left;
                        sortable.offset.parent.left -= draggable.offset.parent.left - sortable.offset.parent.left;
                        sortable.offset.parent.top -= draggable.offset.parent.top - sortable.offset.parent.top;
                        draggable._trigger("toSortable", event);
                        // Inform draggable that the helper is in a valid drop zone,
                        // used solely in the revert option to handle "valid/invalid".
                        draggable.dropped = sortable.element;
                        // Need to refreshPositions of all sortables in the case that
                        // adding to one sortable changes the location of the other sortables (#9675)
                        $.each(draggable.sortables, function() {
                            this.refreshPositions();
                        });
                        // Hack so receive/update callbacks work (mostly)
                        draggable.currentItem = draggable.element;
                        sortable.fromOutside = draggable;
                    }
                    if (sortable.currentItem) {
                        sortable._mouseDrag(event);
                        // Copy the sortable's position because the draggable's can potentially reflect
                        // a relative position, while sortable is always absolute, which the dragged
                        // element has now become. (#8809)
                        ui.position = sortable.position;
                    }
                } else // If it doesn't intersect with the sortable, and it intersected before,
                // we fake the drag stop of the sortable, but make sure it doesn't remove
                // the helper by using cancelHelperRemoval.
                if (sortable.isOver) {
                    sortable.isOver = 0;
                    sortable.cancelHelperRemoval = true;
                    // Calling sortable's mouseStop would trigger a revert,
                    // so revert must be temporarily false until after mouseStop is called.
                    sortable.options._revert = sortable.options.revert;
                    sortable.options.revert = false;
                    sortable._trigger("out", event, sortable._uiHash(sortable));
                    sortable._mouseStop(event, true);
                    // Restore sortable behaviors that were modfied
                    // when the draggable entered the sortable area (#9481)
                    sortable.options.revert = sortable.options._revert;
                    sortable.options.helper = sortable.options._helper;
                    if (sortable.placeholder) sortable.placeholder.remove();
                    // Restore and recalculate the draggable's offset considering the sortable
                    // may have modified them in unexpected ways. (#8809, #10669)
                    ui.helper.appendTo(draggable._parent);
                    draggable._refreshOffsets(event);
                    ui.position = draggable._generatePosition(event, true);
                    draggable._trigger("fromSortable", event);
                    // Inform draggable that the helper is no longer in a valid drop zone
                    draggable.dropped = false;
                    // Need to refreshPositions of all sortables just in case removing
                    // from one sortable changes the location of other sortables (#9675)
                    $.each(draggable.sortables, function() {
                        this.refreshPositions();
                    });
                }
            });
        }
    });
    $.ui.plugin.add("draggable", "cursor", {
        start: function(event, ui, instance) {
            var t = $("body"), o = instance.options;
            if (t.css("cursor")) o._cursor = t.css("cursor");
            t.css("cursor", o.cursor);
        },
        stop: function(event, ui, instance) {
            var o = instance.options;
            if (o._cursor) $("body").css("cursor", o._cursor);
        }
    });
    $.ui.plugin.add("draggable", "opacity", {
        start: function(event, ui, instance) {
            var t = $(ui.helper), o = instance.options;
            if (t.css("opacity")) o._opacity = t.css("opacity");
            t.css("opacity", o.opacity);
        },
        stop: function(event, ui, instance) {
            var o = instance.options;
            if (o._opacity) $(ui.helper).css("opacity", o._opacity);
        }
    });
    $.ui.plugin.add("draggable", "scroll", {
        start: function(event, ui, i) {
            if (!i.scrollParentNotHidden) i.scrollParentNotHidden = i.helper.scrollParent(false);
            if (i.scrollParentNotHidden[0] !== i.document[0] && i.scrollParentNotHidden[0].tagName !== "HTML") i.overflowOffset = i.scrollParentNotHidden.offset();
        },
        drag: function(event, ui, i) {
            var o = i.options, scrolled = false, scrollParent = i.scrollParentNotHidden[0], document1 = i.document[0];
            if (scrollParent !== document1 && scrollParent.tagName !== "HTML") {
                if (!o.axis || o.axis !== "x") {
                    if (i.overflowOffset.top + scrollParent.offsetHeight - event.pageY < o.scrollSensitivity) scrollParent.scrollTop = scrolled = scrollParent.scrollTop + o.scrollSpeed;
                    else if (event.pageY - i.overflowOffset.top < o.scrollSensitivity) scrollParent.scrollTop = scrolled = scrollParent.scrollTop - o.scrollSpeed;
                }
                if (!o.axis || o.axis !== "y") {
                    if (i.overflowOffset.left + scrollParent.offsetWidth - event.pageX < o.scrollSensitivity) scrollParent.scrollLeft = scrolled = scrollParent.scrollLeft + o.scrollSpeed;
                    else if (event.pageX - i.overflowOffset.left < o.scrollSensitivity) scrollParent.scrollLeft = scrolled = scrollParent.scrollLeft - o.scrollSpeed;
                }
            } else {
                if (!o.axis || o.axis !== "x") {
                    if (event.pageY - $(document1).scrollTop() < o.scrollSensitivity) scrolled = $(document1).scrollTop($(document1).scrollTop() - o.scrollSpeed);
                    else if ($(window).height() - (event.pageY - $(document1).scrollTop()) < o.scrollSensitivity) scrolled = $(document1).scrollTop($(document1).scrollTop() + o.scrollSpeed);
                }
                if (!o.axis || o.axis !== "y") {
                    if (event.pageX - $(document1).scrollLeft() < o.scrollSensitivity) scrolled = $(document1).scrollLeft($(document1).scrollLeft() - o.scrollSpeed);
                    else if ($(window).width() - (event.pageX - $(document1).scrollLeft()) < o.scrollSensitivity) scrolled = $(document1).scrollLeft($(document1).scrollLeft() + o.scrollSpeed);
                }
            }
            if (scrolled !== false && $.ui.ddmanager && !o.dropBehaviour) $.ui.ddmanager.prepareOffsets(i, event);
        }
    });
    $.ui.plugin.add("draggable", "snap", {
        start: function(event, ui, i) {
            var o = i.options;
            i.snapElements = [];
            $(o.snap.constructor !== String ? o.snap.items || ":data(ui-draggable)" : o.snap).each(function() {
                var $t = $(this), $o = $t.offset();
                if (this !== i.element[0]) i.snapElements.push({
                    item: this,
                    width: $t.outerWidth(),
                    height: $t.outerHeight(),
                    top: $o.top,
                    left: $o.left
                });
            });
        },
        drag: function(event, ui, inst) {
            var ts, bs, ls, rs, l, r, t, b, i, first, o = inst.options, d = o.snapTolerance, x1 = ui.offset.left, x2 = x1 + inst.helperProportions.width, y1 = ui.offset.top, y2 = y1 + inst.helperProportions.height;
            for(i = inst.snapElements.length - 1; i >= 0; i--){
                l = inst.snapElements[i].left - inst.margins.left;
                r = l + inst.snapElements[i].width;
                t = inst.snapElements[i].top - inst.margins.top;
                b = t + inst.snapElements[i].height;
                if (x2 < l - d || x1 > r + d || y2 < t - d || y1 > b + d || !$.contains(inst.snapElements[i].item.ownerDocument, inst.snapElements[i].item)) {
                    if (inst.snapElements[i].snapping) inst.options.snap.release && inst.options.snap.release.call(inst.element, event, $.extend(inst._uiHash(), {
                        snapItem: inst.snapElements[i].item
                    }));
                    inst.snapElements[i].snapping = false;
                    continue;
                }
                if (o.snapMode !== "inner") {
                    ts = Math.abs(t - y2) <= d;
                    bs = Math.abs(b - y1) <= d;
                    ls = Math.abs(l - x2) <= d;
                    rs = Math.abs(r - x1) <= d;
                    if (ts) ui.position.top = inst._convertPositionTo("relative", {
                        top: t - inst.helperProportions.height,
                        left: 0
                    }).top;
                    if (bs) ui.position.top = inst._convertPositionTo("relative", {
                        top: b,
                        left: 0
                    }).top;
                    if (ls) ui.position.left = inst._convertPositionTo("relative", {
                        top: 0,
                        left: l - inst.helperProportions.width
                    }).left;
                    if (rs) ui.position.left = inst._convertPositionTo("relative", {
                        top: 0,
                        left: r
                    }).left;
                }
                first = ts || bs || ls || rs;
                if (o.snapMode !== "outer") {
                    ts = Math.abs(t - y1) <= d;
                    bs = Math.abs(b - y2) <= d;
                    ls = Math.abs(l - x1) <= d;
                    rs = Math.abs(r - x2) <= d;
                    if (ts) ui.position.top = inst._convertPositionTo("relative", {
                        top: t,
                        left: 0
                    }).top;
                    if (bs) ui.position.top = inst._convertPositionTo("relative", {
                        top: b - inst.helperProportions.height,
                        left: 0
                    }).top;
                    if (ls) ui.position.left = inst._convertPositionTo("relative", {
                        top: 0,
                        left: l
                    }).left;
                    if (rs) ui.position.left = inst._convertPositionTo("relative", {
                        top: 0,
                        left: r - inst.helperProportions.width
                    }).left;
                }
                if (!inst.snapElements[i].snapping && (ts || bs || ls || rs || first)) inst.options.snap.snap && inst.options.snap.snap.call(inst.element, event, $.extend(inst._uiHash(), {
                    snapItem: inst.snapElements[i].item
                }));
                inst.snapElements[i].snapping = ts || bs || ls || rs || first;
            }
        }
    });
    $.ui.plugin.add("draggable", "stack", {
        start: function(event, ui, instance) {
            var min, o = instance.options, group = $.makeArray($(o.stack)).sort(function(a, b) {
                return (parseInt($(a).css("zIndex"), 10) || 0) - (parseInt($(b).css("zIndex"), 10) || 0);
            });
            if (!group.length) return;
            min = parseInt($(group[0]).css("zIndex"), 10) || 0;
            $(group).each(function(i) {
                $(this).css("zIndex", min + i);
            });
            this.css("zIndex", min + group.length);
        }
    });
    $.ui.plugin.add("draggable", "zIndex", {
        start: function(event, ui, instance) {
            var t = $(ui.helper), o = instance.options;
            if (t.css("zIndex")) o._zIndex = t.css("zIndex");
            t.css("zIndex", o.zIndex);
        },
        stop: function(event, ui, instance) {
            var o = instance.options;
            if (o._zIndex) $(ui.helper).css("zIndex", o._zIndex);
        }
    });
    var widgetsDraggable = $.ui.draggable;
    /*!
 * jQuery UI Resizable 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Resizable
    //>>group: Interactions
    //>>description: Enables resize functionality for any element.
    //>>docs: http://api.jqueryui.com/resizable/
    //>>demos: http://jqueryui.com/resizable/
    //>>css.structure: ../../themes/base/core.css
    //>>css.structure: ../../themes/base/resizable.css
    //>>css.theme: ../../themes/base/theme.css
    $.widget("ui.resizable", $.ui.mouse, {
        version: "1.12.1",
        widgetEventPrefix: "resize",
        options: {
            alsoResize: false,
            animate: false,
            animateDuration: "slow",
            animateEasing: "swing",
            aspectRatio: false,
            autoHide: false,
            classes: {
                "ui-resizable-se": "ui-icon ui-icon-gripsmall-diagonal-se"
            },
            containment: false,
            ghost: false,
            grid: false,
            handles: "e,s,se",
            helper: false,
            maxHeight: null,
            maxWidth: null,
            minHeight: 10,
            minWidth: 10,
            // See #7960
            zIndex: 90,
            // Callbacks
            resize: null,
            start: null,
            stop: null
        },
        _num: function(value) {
            return parseFloat(value) || 0;
        },
        _isNumber: function(value) {
            return !isNaN(parseFloat(value));
        },
        _hasScroll: function(el, a) {
            if ($(el).css("overflow") === "hidden") return false;
            var scroll = a && a === "left" ? "scrollLeft" : "scrollTop", has = false;
            if (el[scroll] > 0) return true;
            // TODO: determine which cases actually cause this to happen
            // if the element doesn't have the scroll set, see if it's possible to
            // set the scroll
            el[scroll] = 1;
            has = el[scroll] > 0;
            el[scroll] = 0;
            return has;
        },
        _create: function() {
            var margins, o = this.options, that = this;
            this._addClass("ui-resizable");
            $.extend(this, {
                _aspectRatio: !!o.aspectRatio,
                aspectRatio: o.aspectRatio,
                originalElement: this.element,
                _proportionallyResizeElements: [],
                _helper: o.helper || o.ghost || o.animate ? o.helper || "ui-resizable-helper" : null
            });
            // Wrap the element if it cannot hold child nodes
            if (this.element[0].nodeName.match(/^(canvas|textarea|input|select|button|img)$/i)) {
                this.element.wrap($("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({
                    position: this.element.css("position"),
                    width: this.element.outerWidth(),
                    height: this.element.outerHeight(),
                    top: this.element.css("top"),
                    left: this.element.css("left")
                }));
                this.element = this.element.parent().data("ui-resizable", this.element.resizable("instance"));
                this.elementIsWrapper = true;
                margins = {
                    marginTop: this.originalElement.css("marginTop"),
                    marginRight: this.originalElement.css("marginRight"),
                    marginBottom: this.originalElement.css("marginBottom"),
                    marginLeft: this.originalElement.css("marginLeft")
                };
                this.element.css(margins);
                this.originalElement.css("margin", 0);
                // support: Safari
                // Prevent Safari textarea resize
                this.originalResizeStyle = this.originalElement.css("resize");
                this.originalElement.css("resize", "none");
                this._proportionallyResizeElements.push(this.originalElement.css({
                    position: "static",
                    zoom: 1,
                    display: "block"
                }));
                // Support: IE9
                // avoid IE jump (hard set the margin)
                this.originalElement.css(margins);
                this._proportionallyResize();
            }
            this._setupHandles();
            if (o.autoHide) $(this.element).on("mouseenter", function() {
                if (o.disabled) return;
                that._removeClass("ui-resizable-autohide");
                that._handles.show();
            }).on("mouseleave", function() {
                if (o.disabled) return;
                if (!that.resizing) {
                    that._addClass("ui-resizable-autohide");
                    that._handles.hide();
                }
            });
            this._mouseInit();
        },
        _destroy: function() {
            this._mouseDestroy();
            var wrapper, _destroy = function(exp) {
                $(exp).removeData("resizable").removeData("ui-resizable").off(".resizable").find(".ui-resizable-handle").remove();
            };
            // TODO: Unwrap at same DOM position
            if (this.elementIsWrapper) {
                _destroy(this.element);
                wrapper = this.element;
                this.originalElement.css({
                    position: wrapper.css("position"),
                    width: wrapper.outerWidth(),
                    height: wrapper.outerHeight(),
                    top: wrapper.css("top"),
                    left: wrapper.css("left")
                }).insertAfter(wrapper);
                wrapper.remove();
            }
            this.originalElement.css("resize", this.originalResizeStyle);
            _destroy(this.originalElement);
            return this;
        },
        _setOption: function(key, value) {
            this._super(key, value);
            switch(key){
                case "handles":
                    this._removeHandles();
                    this._setupHandles();
                    break;
                default:
                    break;
            }
        },
        _setupHandles: function() {
            var o = this.options, handle, i, n, hname, axis, that = this;
            this.handles = o.handles || (!$(".ui-resizable-handle", this.element).length ? "e,s,se" : {
                n: ".ui-resizable-n",
                e: ".ui-resizable-e",
                s: ".ui-resizable-s",
                w: ".ui-resizable-w",
                se: ".ui-resizable-se",
                sw: ".ui-resizable-sw",
                ne: ".ui-resizable-ne",
                nw: ".ui-resizable-nw"
            });
            this._handles = $();
            if (this.handles.constructor === String) {
                if (this.handles === "all") this.handles = "n,e,s,w,se,sw,ne,nw";
                n = this.handles.split(",");
                this.handles = {};
                for(i = 0; i < n.length; i++){
                    handle = $.trim(n[i]);
                    hname = "ui-resizable-" + handle;
                    axis = $("<div>");
                    this._addClass(axis, "ui-resizable-handle " + hname);
                    axis.css({
                        zIndex: o.zIndex
                    });
                    this.handles[handle] = ".ui-resizable-" + handle;
                    this.element.append(axis);
                }
            }
            this._renderAxis = function(target) {
                var i, axis, padPos, padWrapper;
                target = target || this.element;
                for(i in this.handles){
                    if (this.handles[i].constructor === String) this.handles[i] = this.element.children(this.handles[i]).first().show();
                    else if (this.handles[i].jquery || this.handles[i].nodeType) {
                        this.handles[i] = $(this.handles[i]);
                        this._on(this.handles[i], {
                            "mousedown": that._mouseDown
                        });
                    }
                    if (this.elementIsWrapper && this.originalElement[0].nodeName.match(/^(textarea|input|select|button)$/i)) {
                        axis = $(this.handles[i], this.element);
                        padWrapper = /sw|ne|nw|se|n|s/.test(i) ? axis.outerHeight() : axis.outerWidth();
                        padPos = [
                            "padding",
                            /ne|nw|n/.test(i) ? "Top" : /se|sw|s/.test(i) ? "Bottom" : /^e$/.test(i) ? "Right" : "Left"
                        ].join("");
                        target.css(padPos, padWrapper);
                        this._proportionallyResize();
                    }
                    this._handles = this._handles.add(this.handles[i]);
                }
            };
            // TODO: make renderAxis a prototype function
            this._renderAxis(this.element);
            this._handles = this._handles.add(this.element.find(".ui-resizable-handle"));
            this._handles.disableSelection();
            this._handles.on("mouseover", function() {
                if (!that.resizing) {
                    if (this.className) axis = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i);
                    that.axis = axis && axis[1] ? axis[1] : "se";
                }
            });
            if (o.autoHide) {
                this._handles.hide();
                this._addClass("ui-resizable-autohide");
            }
        },
        _removeHandles: function() {
            this._handles.remove();
        },
        _mouseCapture: function(event) {
            var i, handle, capture = false;
            for(i in this.handles){
                handle = $(this.handles[i])[0];
                if (handle === event.target || $.contains(handle, event.target)) capture = true;
            }
            return !this.options.disabled && capture;
        },
        _mouseStart: function(event) {
            var curleft, curtop, cursor, o = this.options, el = this.element;
            this.resizing = true;
            this._renderProxy();
            curleft = this._num(this.helper.css("left"));
            curtop = this._num(this.helper.css("top"));
            if (o.containment) {
                curleft += $(o.containment).scrollLeft() || 0;
                curtop += $(o.containment).scrollTop() || 0;
            }
            this.offset = this.helper.offset();
            this.position = {
                left: curleft,
                top: curtop
            };
            this.size = this._helper ? {
                width: this.helper.width(),
                height: this.helper.height()
            } : {
                width: el.width(),
                height: el.height()
            };
            this.originalSize = this._helper ? {
                width: el.outerWidth(),
                height: el.outerHeight()
            } : {
                width: el.width(),
                height: el.height()
            };
            this.sizeDiff = {
                width: el.outerWidth() - el.width(),
                height: el.outerHeight() - el.height()
            };
            this.originalPosition = {
                left: curleft,
                top: curtop
            };
            this.originalMousePosition = {
                left: event.pageX,
                top: event.pageY
            };
            this.aspectRatio = typeof o.aspectRatio === "number" ? o.aspectRatio : this.originalSize.width / this.originalSize.height || 1;
            cursor = $(".ui-resizable-" + this.axis).css("cursor");
            $("body").css("cursor", cursor === "auto" ? this.axis + "-resize" : cursor);
            this._addClass("ui-resizable-resizing");
            this._propagate("start", event);
            return true;
        },
        _mouseDrag: function(event) {
            var data, props, smp = this.originalMousePosition, a = this.axis, dx = event.pageX - smp.left || 0, dy = event.pageY - smp.top || 0, trigger = this._change[a];
            this._updatePrevProperties();
            if (!trigger) return false;
            data = trigger.apply(this, [
                event,
                dx,
                dy
            ]);
            this._updateVirtualBoundaries(event.shiftKey);
            if (this._aspectRatio || event.shiftKey) data = this._updateRatio(data, event);
            data = this._respectSize(data, event);
            this._updateCache(data);
            this._propagate("resize", event);
            props = this._applyChanges();
            if (!this._helper && this._proportionallyResizeElements.length) this._proportionallyResize();
            if (!$.isEmptyObject(props)) {
                this._updatePrevProperties();
                this._trigger("resize", event, this.ui());
                this._applyChanges();
            }
            return false;
        },
        _mouseStop: function(event) {
            this.resizing = false;
            var pr, ista, soffseth, soffsetw, s, left, top, o = this.options, that = this;
            if (this._helper) {
                pr = this._proportionallyResizeElements;
                ista = pr.length && /textarea/i.test(pr[0].nodeName);
                soffseth = ista && this._hasScroll(pr[0], "left") ? 0 : that.sizeDiff.height;
                soffsetw = ista ? 0 : that.sizeDiff.width;
                s = {
                    width: that.helper.width() - soffsetw,
                    height: that.helper.height() - soffseth
                };
                left = parseFloat(that.element.css("left")) + (that.position.left - that.originalPosition.left) || null;
                top = parseFloat(that.element.css("top")) + (that.position.top - that.originalPosition.top) || null;
                if (!o.animate) this.element.css($.extend(s, {
                    top: top,
                    left: left
                }));
                that.helper.height(that.size.height);
                that.helper.width(that.size.width);
                if (this._helper && !o.animate) this._proportionallyResize();
            }
            $("body").css("cursor", "auto");
            this._removeClass("ui-resizable-resizing");
            this._propagate("stop", event);
            if (this._helper) this.helper.remove();
            return false;
        },
        _updatePrevProperties: function() {
            this.prevPosition = {
                top: this.position.top,
                left: this.position.left
            };
            this.prevSize = {
                width: this.size.width,
                height: this.size.height
            };
        },
        _applyChanges: function() {
            var props = {};
            if (this.position.top !== this.prevPosition.top) props.top = this.position.top + "px";
            if (this.position.left !== this.prevPosition.left) props.left = this.position.left + "px";
            if (this.size.width !== this.prevSize.width) props.width = this.size.width + "px";
            if (this.size.height !== this.prevSize.height) props.height = this.size.height + "px";
            this.helper.css(props);
            return props;
        },
        _updateVirtualBoundaries: function(forceAspectRatio) {
            var pMinWidth, pMaxWidth, pMinHeight, pMaxHeight, b, o = this.options;
            b = {
                minWidth: this._isNumber(o.minWidth) ? o.minWidth : 0,
                maxWidth: this._isNumber(o.maxWidth) ? o.maxWidth : Infinity,
                minHeight: this._isNumber(o.minHeight) ? o.minHeight : 0,
                maxHeight: this._isNumber(o.maxHeight) ? o.maxHeight : Infinity
            };
            if (this._aspectRatio || forceAspectRatio) {
                pMinWidth = b.minHeight * this.aspectRatio;
                pMinHeight = b.minWidth / this.aspectRatio;
                pMaxWidth = b.maxHeight * this.aspectRatio;
                pMaxHeight = b.maxWidth / this.aspectRatio;
                if (pMinWidth > b.minWidth) b.minWidth = pMinWidth;
                if (pMinHeight > b.minHeight) b.minHeight = pMinHeight;
                if (pMaxWidth < b.maxWidth) b.maxWidth = pMaxWidth;
                if (pMaxHeight < b.maxHeight) b.maxHeight = pMaxHeight;
            }
            this._vBoundaries = b;
        },
        _updateCache: function(data) {
            this.offset = this.helper.offset();
            if (this._isNumber(data.left)) this.position.left = data.left;
            if (this._isNumber(data.top)) this.position.top = data.top;
            if (this._isNumber(data.height)) this.size.height = data.height;
            if (this._isNumber(data.width)) this.size.width = data.width;
        },
        _updateRatio: function(data) {
            var cpos = this.position, csize = this.size, a = this.axis;
            if (this._isNumber(data.height)) data.width = data.height * this.aspectRatio;
            else if (this._isNumber(data.width)) data.height = data.width / this.aspectRatio;
            if (a === "sw") {
                data.left = cpos.left + (csize.width - data.width);
                data.top = null;
            }
            if (a === "nw") {
                data.top = cpos.top + (csize.height - data.height);
                data.left = cpos.left + (csize.width - data.width);
            }
            return data;
        },
        _respectSize: function(data) {
            var o = this._vBoundaries, a = this.axis, ismaxw = this._isNumber(data.width) && o.maxWidth && o.maxWidth < data.width, ismaxh = this._isNumber(data.height) && o.maxHeight && o.maxHeight < data.height, isminw = this._isNumber(data.width) && o.minWidth && o.minWidth > data.width, isminh = this._isNumber(data.height) && o.minHeight && o.minHeight > data.height, dw = this.originalPosition.left + this.originalSize.width, dh = this.originalPosition.top + this.originalSize.height, cw = /sw|nw|w/.test(a), ch = /nw|ne|n/.test(a);
            if (isminw) data.width = o.minWidth;
            if (isminh) data.height = o.minHeight;
            if (ismaxw) data.width = o.maxWidth;
            if (ismaxh) data.height = o.maxHeight;
            if (isminw && cw) data.left = dw - o.minWidth;
            if (ismaxw && cw) data.left = dw - o.maxWidth;
            if (isminh && ch) data.top = dh - o.minHeight;
            if (ismaxh && ch) data.top = dh - o.maxHeight;
            // Fixing jump error on top/left - bug #2330
            if (!data.width && !data.height && !data.left && data.top) data.top = null;
            else if (!data.width && !data.height && !data.top && data.left) data.left = null;
            return data;
        },
        _getPaddingPlusBorderDimensions: function(element) {
            var i = 0, widths = [], borders = [
                element.css("borderTopWidth"),
                element.css("borderRightWidth"),
                element.css("borderBottomWidth"),
                element.css("borderLeftWidth")
            ], paddings = [
                element.css("paddingTop"),
                element.css("paddingRight"),
                element.css("paddingBottom"),
                element.css("paddingLeft")
            ];
            for(; i < 4; i++){
                widths[i] = parseFloat(borders[i]) || 0;
                widths[i] += parseFloat(paddings[i]) || 0;
            }
            return {
                height: widths[0] + widths[2],
                width: widths[1] + widths[3]
            };
        },
        _proportionallyResize: function() {
            if (!this._proportionallyResizeElements.length) return;
            var prel, i = 0, element = this.helper || this.element;
            for(; i < this._proportionallyResizeElements.length; i++){
                prel = this._proportionallyResizeElements[i];
                // TODO: Seems like a bug to cache this.outerDimensions
                // considering that we are in a loop.
                if (!this.outerDimensions) this.outerDimensions = this._getPaddingPlusBorderDimensions(prel);
                prel.css({
                    height: element.height() - this.outerDimensions.height || 0,
                    width: element.width() - this.outerDimensions.width || 0
                });
            }
        },
        _renderProxy: function() {
            var el = this.element, o = this.options;
            this.elementOffset = el.offset();
            if (this._helper) {
                this.helper = this.helper || $("<div style='overflow:hidden;'></div>");
                this._addClass(this.helper, this._helper);
                this.helper.css({
                    width: this.element.outerWidth(),
                    height: this.element.outerHeight(),
                    position: "absolute",
                    left: this.elementOffset.left + "px",
                    top: this.elementOffset.top + "px",
                    zIndex: ++o.zIndex //TODO: Don't modify option
                });
                this.helper.appendTo("body").disableSelection();
            } else this.helper = this.element;
        },
        _change: {
            e: function(event, dx) {
                return {
                    width: this.originalSize.width + dx
                };
            },
            w: function(event, dx) {
                var cs = this.originalSize, sp = this.originalPosition;
                return {
                    left: sp.left + dx,
                    width: cs.width - dx
                };
            },
            n: function(event, dx, dy) {
                var cs = this.originalSize, sp = this.originalPosition;
                return {
                    top: sp.top + dy,
                    height: cs.height - dy
                };
            },
            s: function(event, dx, dy) {
                return {
                    height: this.originalSize.height + dy
                };
            },
            se: function(event, dx, dy) {
                return $.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [
                    event,
                    dx,
                    dy
                ]));
            },
            sw: function(event, dx, dy) {
                return $.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [
                    event,
                    dx,
                    dy
                ]));
            },
            ne: function(event, dx, dy) {
                return $.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [
                    event,
                    dx,
                    dy
                ]));
            },
            nw: function(event, dx, dy) {
                return $.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [
                    event,
                    dx,
                    dy
                ]));
            }
        },
        _propagate: function(n, event) {
            $.ui.plugin.call(this, n, [
                event,
                this.ui()
            ]);
            n !== "resize" && this._trigger(n, event, this.ui());
        },
        plugins: {},
        ui: function() {
            return {
                originalElement: this.originalElement,
                element: this.element,
                helper: this.helper,
                position: this.position,
                size: this.size,
                originalSize: this.originalSize,
                originalPosition: this.originalPosition
            };
        }
    });
    /*
 * Resizable Extensions
 */ $.ui.plugin.add("resizable", "animate", {
        stop: function(event) {
            var that = $(this).resizable("instance"), o = that.options, pr = that._proportionallyResizeElements, ista = pr.length && /textarea/i.test(pr[0].nodeName), soffseth = ista && that._hasScroll(pr[0], "left") ? 0 : that.sizeDiff.height, soffsetw = ista ? 0 : that.sizeDiff.width, style = {
                width: that.size.width - soffsetw,
                height: that.size.height - soffseth
            }, left = parseFloat(that.element.css("left")) + (that.position.left - that.originalPosition.left) || null, top = parseFloat(that.element.css("top")) + (that.position.top - that.originalPosition.top) || null;
            that.element.animate($.extend(style, top && left ? {
                top: top,
                left: left
            } : {}), {
                duration: o.animateDuration,
                easing: o.animateEasing,
                step: function() {
                    var data = {
                        width: parseFloat(that.element.css("width")),
                        height: parseFloat(that.element.css("height")),
                        top: parseFloat(that.element.css("top")),
                        left: parseFloat(that.element.css("left"))
                    };
                    if (pr && pr.length) $(pr[0]).css({
                        width: data.width,
                        height: data.height
                    });
                    // Propagating resize, and updating values for each animation step
                    that._updateCache(data);
                    that._propagate("resize", event);
                }
            });
        }
    });
    $.ui.plugin.add("resizable", "containment", {
        start: function() {
            var element, p, co, ch, cw, width, height, that = $(this).resizable("instance"), o = that.options, el = that.element, oc = o.containment, ce = oc instanceof $ ? oc.get(0) : /parent/.test(oc) ? el.parent().get(0) : oc;
            if (!ce) return;
            that.containerElement = $(ce);
            if (/document/.test(oc) || oc === document) {
                that.containerOffset = {
                    left: 0,
                    top: 0
                };
                that.containerPosition = {
                    left: 0,
                    top: 0
                };
                that.parentData = {
                    element: $(document),
                    left: 0,
                    top: 0,
                    width: $(document).width(),
                    height: $(document).height() || document.body.parentNode.scrollHeight
                };
            } else {
                element = $(ce);
                p = [];
                $([
                    "Top",
                    "Right",
                    "Left",
                    "Bottom"
                ]).each(function(i, name) {
                    p[i] = that._num(element.css("padding" + name));
                });
                that.containerOffset = element.offset();
                that.containerPosition = element.position();
                that.containerSize = {
                    height: element.innerHeight() - p[3],
                    width: element.innerWidth() - p[1]
                };
                co = that.containerOffset;
                ch = that.containerSize.height;
                cw = that.containerSize.width;
                width = that._hasScroll(ce, "left") ? ce.scrollWidth : cw;
                height = that._hasScroll(ce) ? ce.scrollHeight : ch;
                that.parentData = {
                    element: ce,
                    left: co.left,
                    top: co.top,
                    width: width,
                    height: height
                };
            }
        },
        resize: function(event) {
            var woset, hoset, isParent, isOffsetRelative, that = $(this).resizable("instance"), o = that.options, co = that.containerOffset, cp = that.position, pRatio = that._aspectRatio || event.shiftKey, cop = {
                top: 0,
                left: 0
            }, ce = that.containerElement, continueResize = true;
            if (ce[0] !== document && /static/.test(ce.css("position"))) cop = co;
            if (cp.left < (that._helper ? co.left : 0)) {
                that.size.width = that.size.width + (that._helper ? that.position.left - co.left : that.position.left - cop.left);
                if (pRatio) {
                    that.size.height = that.size.width / that.aspectRatio;
                    continueResize = false;
                }
                that.position.left = o.helper ? co.left : 0;
            }
            if (cp.top < (that._helper ? co.top : 0)) {
                that.size.height = that.size.height + (that._helper ? that.position.top - co.top : that.position.top);
                if (pRatio) {
                    that.size.width = that.size.height * that.aspectRatio;
                    continueResize = false;
                }
                that.position.top = that._helper ? co.top : 0;
            }
            isParent = that.containerElement.get(0) === that.element.parent().get(0);
            isOffsetRelative = /relative|absolute/.test(that.containerElement.css("position"));
            if (isParent && isOffsetRelative) {
                that.offset.left = that.parentData.left + that.position.left;
                that.offset.top = that.parentData.top + that.position.top;
            } else {
                that.offset.left = that.element.offset().left;
                that.offset.top = that.element.offset().top;
            }
            woset = Math.abs(that.sizeDiff.width + (that._helper ? that.offset.left - cop.left : that.offset.left - co.left));
            hoset = Math.abs(that.sizeDiff.height + (that._helper ? that.offset.top - cop.top : that.offset.top - co.top));
            if (woset + that.size.width >= that.parentData.width) {
                that.size.width = that.parentData.width - woset;
                if (pRatio) {
                    that.size.height = that.size.width / that.aspectRatio;
                    continueResize = false;
                }
            }
            if (hoset + that.size.height >= that.parentData.height) {
                that.size.height = that.parentData.height - hoset;
                if (pRatio) {
                    that.size.width = that.size.height * that.aspectRatio;
                    continueResize = false;
                }
            }
            if (!continueResize) {
                that.position.left = that.prevPosition.left;
                that.position.top = that.prevPosition.top;
                that.size.width = that.prevSize.width;
                that.size.height = that.prevSize.height;
            }
        },
        stop: function() {
            var that = $(this).resizable("instance"), o = that.options, co = that.containerOffset, cop = that.containerPosition, ce = that.containerElement, helper = $(that.helper), ho = helper.offset(), w = helper.outerWidth() - that.sizeDiff.width, h = helper.outerHeight() - that.sizeDiff.height;
            if (that._helper && !o.animate && /relative/.test(ce.css("position"))) $(this).css({
                left: ho.left - cop.left - co.left,
                width: w,
                height: h
            });
            if (that._helper && !o.animate && /static/.test(ce.css("position"))) $(this).css({
                left: ho.left - cop.left - co.left,
                width: w,
                height: h
            });
        }
    });
    $.ui.plugin.add("resizable", "alsoResize", {
        start: function() {
            var that = $(this).resizable("instance"), o = that.options;
            $(o.alsoResize).each(function() {
                var el = $(this);
                el.data("ui-resizable-alsoresize", {
                    width: parseFloat(el.width()),
                    height: parseFloat(el.height()),
                    left: parseFloat(el.css("left")),
                    top: parseFloat(el.css("top"))
                });
            });
        },
        resize: function(event, ui) {
            var that = $(this).resizable("instance"), o = that.options, os = that.originalSize, op = that.originalPosition, delta = {
                height: that.size.height - os.height || 0,
                width: that.size.width - os.width || 0,
                top: that.position.top - op.top || 0,
                left: that.position.left - op.left || 0
            };
            $(o.alsoResize).each(function() {
                var el = $(this), start = $(this).data("ui-resizable-alsoresize"), style = {}, css = el.parents(ui.originalElement[0]).length ? [
                    "width",
                    "height"
                ] : [
                    "width",
                    "height",
                    "top",
                    "left"
                ];
                $.each(css, function(i, prop) {
                    var sum = (start[prop] || 0) + (delta[prop] || 0);
                    if (sum && sum >= 0) style[prop] = sum || null;
                });
                el.css(style);
            });
        },
        stop: function() {
            $(this).removeData("ui-resizable-alsoresize");
        }
    });
    $.ui.plugin.add("resizable", "ghost", {
        start: function() {
            var that = $(this).resizable("instance"), cs = that.size;
            that.ghost = that.originalElement.clone();
            that.ghost.css({
                opacity: 0.25,
                display: "block",
                position: "relative",
                height: cs.height,
                width: cs.width,
                margin: 0,
                left: 0,
                top: 0
            });
            that._addClass(that.ghost, "ui-resizable-ghost");
            // DEPRECATED
            // TODO: remove after 1.12
            if ($.uiBackCompat !== false && typeof that.options.ghost === "string") // Ghost option
            that.ghost.addClass(this.options.ghost);
            that.ghost.appendTo(that.helper);
        },
        resize: function() {
            var that = $(this).resizable("instance");
            if (that.ghost) that.ghost.css({
                position: "relative",
                height: that.size.height,
                width: that.size.width
            });
        },
        stop: function() {
            var that = $(this).resizable("instance");
            if (that.ghost && that.helper) that.helper.get(0).removeChild(that.ghost.get(0));
        }
    });
    $.ui.plugin.add("resizable", "grid", {
        resize: function() {
            var outerDimensions, that = $(this).resizable("instance"), o = that.options, cs = that.size, os = that.originalSize, op = that.originalPosition, a = that.axis, grid = typeof o.grid === "number" ? [
                o.grid,
                o.grid
            ] : o.grid, gridX = grid[0] || 1, gridY = grid[1] || 1, ox = Math.round((cs.width - os.width) / gridX) * gridX, oy = Math.round((cs.height - os.height) / gridY) * gridY, newWidth = os.width + ox, newHeight = os.height + oy, isMaxWidth = o.maxWidth && o.maxWidth < newWidth, isMaxHeight = o.maxHeight && o.maxHeight < newHeight, isMinWidth = o.minWidth && o.minWidth > newWidth, isMinHeight = o.minHeight && o.minHeight > newHeight;
            o.grid = grid;
            if (isMinWidth) newWidth += gridX;
            if (isMinHeight) newHeight += gridY;
            if (isMaxWidth) newWidth -= gridX;
            if (isMaxHeight) newHeight -= gridY;
            if (/^(se|s|e)$/.test(a)) {
                that.size.width = newWidth;
                that.size.height = newHeight;
            } else if (/^(ne)$/.test(a)) {
                that.size.width = newWidth;
                that.size.height = newHeight;
                that.position.top = op.top - oy;
            } else if (/^(sw)$/.test(a)) {
                that.size.width = newWidth;
                that.size.height = newHeight;
                that.position.left = op.left - ox;
            } else {
                if (newHeight - gridY <= 0 || newWidth - gridX <= 0) outerDimensions = that._getPaddingPlusBorderDimensions(this);
                if (newHeight - gridY > 0) {
                    that.size.height = newHeight;
                    that.position.top = op.top - oy;
                } else {
                    newHeight = gridY - outerDimensions.height;
                    that.size.height = newHeight;
                    that.position.top = op.top + os.height - newHeight;
                }
                if (newWidth - gridX > 0) {
                    that.size.width = newWidth;
                    that.position.left = op.left - ox;
                } else {
                    newWidth = gridX - outerDimensions.width;
                    that.size.width = newWidth;
                    that.position.left = op.left + os.width - newWidth;
                }
            }
        }
    });
    var widgetsResizable = $.ui.resizable;
    /*!
 * jQuery UI Dialog 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Dialog
    //>>group: Widgets
    //>>description: Displays customizable dialog windows.
    //>>docs: http://api.jqueryui.com/dialog/
    //>>demos: http://jqueryui.com/dialog/
    //>>css.structure: ../../themes/base/core.css
    //>>css.structure: ../../themes/base/dialog.css
    //>>css.theme: ../../themes/base/theme.css
    $.widget("ui.dialog", {
        version: "1.12.1",
        options: {
            appendTo: "body",
            autoOpen: true,
            buttons: [],
            classes: {
                "ui-dialog": "ui-corner-all",
                "ui-dialog-titlebar": "ui-corner-all"
            },
            closeOnEscape: true,
            closeText: "Close",
            draggable: true,
            hide: null,
            height: "auto",
            maxHeight: null,
            maxWidth: null,
            minHeight: 150,
            minWidth: 150,
            modal: false,
            position: {
                my: "center",
                at: "center",
                of: window,
                collision: "fit",
                // Ensure the titlebar is always visible
                using: function(pos) {
                    var topOffset = $(this).css(pos).offset().top;
                    if (topOffset < 0) $(this).css("top", pos.top - topOffset);
                }
            },
            resizable: true,
            show: null,
            title: null,
            width: 300,
            // Callbacks
            beforeClose: null,
            close: null,
            drag: null,
            dragStart: null,
            dragStop: null,
            focus: null,
            open: null,
            resize: null,
            resizeStart: null,
            resizeStop: null
        },
        sizeRelatedOptions: {
            buttons: true,
            height: true,
            maxHeight: true,
            maxWidth: true,
            minHeight: true,
            minWidth: true,
            width: true
        },
        resizableRelatedOptions: {
            maxHeight: true,
            maxWidth: true,
            minHeight: true,
            minWidth: true
        },
        _create: function() {
            this.originalCss = {
                display: this.element[0].style.display,
                width: this.element[0].style.width,
                minHeight: this.element[0].style.minHeight,
                maxHeight: this.element[0].style.maxHeight,
                height: this.element[0].style.height
            };
            this.originalPosition = {
                parent: this.element.parent(),
                index: this.element.parent().children().index(this.element)
            };
            this.originalTitle = this.element.attr("title");
            if (this.options.title == null && this.originalTitle != null) this.options.title = this.originalTitle;
            // Dialogs can't be disabled
            if (this.options.disabled) this.options.disabled = false;
            this._createWrapper();
            this.element.show().removeAttr("title").appendTo(this.uiDialog);
            this._addClass("ui-dialog-content", "ui-widget-content");
            this._createTitlebar();
            this._createButtonPane();
            if (this.options.draggable && $.fn.draggable) this._makeDraggable();
            if (this.options.resizable && $.fn.resizable) this._makeResizable();
            this._isOpen = false;
            this._trackFocus();
        },
        _init: function() {
            if (this.options.autoOpen) this.open();
        },
        _appendTo: function() {
            var element = this.options.appendTo;
            if (element && (element.jquery || element.nodeType)) return $(element);
            return this.document.find(element || "body").eq(0);
        },
        _destroy: function() {
            var next, originalPosition = this.originalPosition;
            this._untrackInstance();
            this._destroyOverlay();
            this.element.removeUniqueId().css(this.originalCss)// Without detaching first, the following becomes really slow
            .detach();
            this.uiDialog.remove();
            if (this.originalTitle) this.element.attr("title", this.originalTitle);
            next = originalPosition.parent.children().eq(originalPosition.index);
            // Don't try to place the dialog next to itself (#8613)
            if (next.length && next[0] !== this.element[0]) next.before(this.element);
            else originalPosition.parent.append(this.element);
        },
        widget: function() {
            return this.uiDialog;
        },
        disable: $.noop,
        enable: $.noop,
        close: function(event) {
            var that = this;
            if (!this._isOpen || this._trigger("beforeClose", event) === false) return;
            this._isOpen = false;
            this._focusedElement = null;
            this._destroyOverlay();
            this._untrackInstance();
            if (!this.opener.filter(":focusable").trigger("focus").length) // Hiding a focused element doesn't trigger blur in WebKit
            // so in case we have nothing to focus on, explicitly blur the active element
            // https://bugs.webkit.org/show_bug.cgi?id=47182
            $.ui.safeBlur($.ui.safeActiveElement(this.document[0]));
            this._hide(this.uiDialog, this.options.hide, function() {
                that._trigger("close", event);
            });
        },
        isOpen: function() {
            return this._isOpen;
        },
        moveToTop: function() {
            this._moveToTop();
        },
        _moveToTop: function(event, silent) {
            var moved = false, zIndices = this.uiDialog.siblings(".ui-front:visible").map(function() {
                return +$(this).css("z-index");
            }).get(), zIndexMax = Math.max.apply(null, zIndices);
            if (zIndexMax >= +this.uiDialog.css("z-index")) {
                this.uiDialog.css("z-index", zIndexMax + 1);
                moved = true;
            }
            if (moved && !silent) this._trigger("focus", event);
            return moved;
        },
        open: function() {
            var that = this;
            if (this._isOpen) {
                if (this._moveToTop()) this._focusTabbable();
                return;
            }
            this._isOpen = true;
            this.opener = $($.ui.safeActiveElement(this.document[0]));
            this._size();
            this._position();
            this._createOverlay();
            this._moveToTop(null, true);
            // Ensure the overlay is moved to the top with the dialog, but only when
            // opening. The overlay shouldn't move after the dialog is open so that
            // modeless dialogs opened after the modal dialog stack properly.
            if (this.overlay) this.overlay.css("z-index", this.uiDialog.css("z-index") - 1);
            this._show(this.uiDialog, this.options.show, function() {
                that._focusTabbable();
                that._trigger("focus");
            });
            // Track the dialog immediately upon openening in case a focus event
            // somehow occurs outside of the dialog before an element inside the
            // dialog is focused (#10152)
            this._makeFocusTarget();
            this._trigger("open");
        },
        _focusTabbable: function() {
            // Set focus to the first match:
            // 1. An element that was focused previously
            // 2. First element inside the dialog matching [autofocus]
            // 3. Tabbable element inside the content element
            // 4. Tabbable element inside the buttonpane
            // 5. The close button
            // 6. The dialog itself
            var hasFocus = this._focusedElement;
            if (!hasFocus) hasFocus = this.element.find("[autofocus]");
            if (!hasFocus.length) hasFocus = this.element.find(":tabbable");
            if (!hasFocus.length) hasFocus = this.uiDialogButtonPane.find(":tabbable");
            if (!hasFocus.length) hasFocus = this.uiDialogTitlebarClose.filter(":tabbable");
            if (!hasFocus.length) hasFocus = this.uiDialog;
            hasFocus.eq(0).trigger("focus");
        },
        _keepFocus: function(event) {
            function checkFocus() {
                var activeElement = $.ui.safeActiveElement(this.document[0]), isActive = this.uiDialog[0] === activeElement || $.contains(this.uiDialog[0], activeElement);
                if (!isActive) this._focusTabbable();
            }
            event.preventDefault();
            checkFocus.call(this);
            // support: IE
            // IE <= 8 doesn't prevent moving focus even with event.preventDefault()
            // so we check again later
            this._delay(checkFocus);
        },
        _createWrapper: function() {
            this.uiDialog = $("<div>").hide().attr({
                // Setting tabIndex makes the div focusable
                tabIndex: -1,
                role: "dialog"
            }).appendTo(this._appendTo());
            this._addClass(this.uiDialog, "ui-dialog", "ui-widget ui-widget-content ui-front");
            this._on(this.uiDialog, {
                keydown: function(event) {
                    if (this.options.closeOnEscape && !event.isDefaultPrevented() && event.keyCode && event.keyCode === $.ui.keyCode.ESCAPE) {
                        event.preventDefault();
                        this.close(event);
                        return;
                    }
                    // Prevent tabbing out of dialogs
                    if (event.keyCode !== $.ui.keyCode.TAB || event.isDefaultPrevented()) return;
                    var tabbables = this.uiDialog.find(":tabbable"), first = tabbables.filter(":first"), last = tabbables.filter(":last");
                    if ((event.target === last[0] || event.target === this.uiDialog[0]) && !event.shiftKey) {
                        this._delay(function() {
                            first.trigger("focus");
                        });
                        event.preventDefault();
                    } else if ((event.target === first[0] || event.target === this.uiDialog[0]) && event.shiftKey) {
                        this._delay(function() {
                            last.trigger("focus");
                        });
                        event.preventDefault();
                    }
                },
                mousedown: function(event) {
                    if (this._moveToTop(event)) this._focusTabbable();
                }
            });
            // We assume that any existing aria-describedby attribute means
            // that the dialog content is marked up properly
            // otherwise we brute force the content as the description
            if (!this.element.find("[aria-describedby]").length) this.uiDialog.attr({
                "aria-describedby": this.element.uniqueId().attr("id")
            });
        },
        _createTitlebar: function() {
            var uiDialogTitle;
            this.uiDialogTitlebar = $("<div>");
            this._addClass(this.uiDialogTitlebar, "ui-dialog-titlebar", "ui-widget-header ui-helper-clearfix");
            this._on(this.uiDialogTitlebar, {
                mousedown: function(event) {
                    // Don't prevent click on close button (#8838)
                    // Focusing a dialog that is partially scrolled out of view
                    // causes the browser to scroll it into view, preventing the click event
                    if (!$(event.target).closest(".ui-dialog-titlebar-close")) // Dialog isn't getting focus when dragging (#8063)
                    this.uiDialog.trigger("focus");
                }
            });
            // Support: IE
            // Use type="button" to prevent enter keypresses in textboxes from closing the
            // dialog in IE (#9312)
            this.uiDialogTitlebarClose = $("<button type='button'></button>").button({
                label: $("<a>").text(this.options.closeText).html(),
                icon: "ui-icon-closethick",
                showLabel: false
            }).appendTo(this.uiDialogTitlebar);
            this._addClass(this.uiDialogTitlebarClose, "ui-dialog-titlebar-close");
            this._on(this.uiDialogTitlebarClose, {
                click: function(event) {
                    event.preventDefault();
                    this.close(event);
                }
            });
            uiDialogTitle = $("<span>").uniqueId().prependTo(this.uiDialogTitlebar);
            this._addClass(uiDialogTitle, "ui-dialog-title");
            this._title(uiDialogTitle);
            this.uiDialogTitlebar.prependTo(this.uiDialog);
            this.uiDialog.attr({
                "aria-labelledby": uiDialogTitle.attr("id")
            });
        },
        _title: function(title) {
            if (this.options.title) title.text(this.options.title);
            else title.html("&#160;");
        },
        _createButtonPane: function() {
            this.uiDialogButtonPane = $("<div>");
            this._addClass(this.uiDialogButtonPane, "ui-dialog-buttonpane", "ui-widget-content ui-helper-clearfix");
            this.uiButtonSet = $("<div>").appendTo(this.uiDialogButtonPane);
            this._addClass(this.uiButtonSet, "ui-dialog-buttonset");
            this._createButtons();
        },
        _createButtons: function() {
            var that = this, buttons = this.options.buttons;
            // If we already have a button pane, remove it
            this.uiDialogButtonPane.remove();
            this.uiButtonSet.empty();
            if ($.isEmptyObject(buttons) || $.isArray(buttons) && !buttons.length) {
                this._removeClass(this.uiDialog, "ui-dialog-buttons");
                return;
            }
            $.each(buttons, function(name, props) {
                var click, buttonOptions;
                props = $.isFunction(props) ? {
                    click: props,
                    text: name
                } : props;
                // Default to a non-submitting button
                props = $.extend({
                    type: "button"
                }, props);
                // Change the context for the click callback to be the main element
                click = props.click;
                buttonOptions = {
                    icon: props.icon,
                    iconPosition: props.iconPosition,
                    showLabel: props.showLabel,
                    // Deprecated options
                    icons: props.icons,
                    text: props.text
                };
                delete props.click;
                delete props.icon;
                delete props.iconPosition;
                delete props.showLabel;
                // Deprecated options
                delete props.icons;
                if (typeof props.text === "boolean") delete props.text;
                $("<button></button>", props).button(buttonOptions).appendTo(that.uiButtonSet).on("click", function() {
                    click.apply(that.element[0], arguments);
                });
            });
            this._addClass(this.uiDialog, "ui-dialog-buttons");
            this.uiDialogButtonPane.appendTo(this.uiDialog);
        },
        _makeDraggable: function() {
            var that = this, options = this.options;
            function filteredUi(ui) {
                return {
                    position: ui.position,
                    offset: ui.offset
                };
            }
            this.uiDialog.draggable({
                cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",
                handle: ".ui-dialog-titlebar",
                containment: "document",
                start: function(event, ui) {
                    that._addClass($(this), "ui-dialog-dragging");
                    that._blockFrames();
                    that._trigger("dragStart", event, filteredUi(ui));
                },
                drag: function(event, ui) {
                    that._trigger("drag", event, filteredUi(ui));
                },
                stop: function(event, ui) {
                    var left = ui.offset.left - that.document.scrollLeft(), top = ui.offset.top - that.document.scrollTop();
                    options.position = {
                        my: "left top",
                        at: "left" + (left >= 0 ? "+" : "") + left + " " + "top" + (top >= 0 ? "+" : "") + top,
                        of: that.window
                    };
                    that._removeClass($(this), "ui-dialog-dragging");
                    that._unblockFrames();
                    that._trigger("dragStop", event, filteredUi(ui));
                }
            });
        },
        _makeResizable: function() {
            var that = this, options = this.options, handles = options.resizable, // .ui-resizable has position: relative defined in the stylesheet
            // but dialogs have to use absolute or fixed positioning
            position = this.uiDialog.css("position"), resizeHandles = typeof handles === "string" ? handles : "n,e,s,w,se,sw,ne,nw";
            function filteredUi(ui) {
                return {
                    originalPosition: ui.originalPosition,
                    originalSize: ui.originalSize,
                    position: ui.position,
                    size: ui.size
                };
            }
            this.uiDialog.resizable({
                cancel: ".ui-dialog-content",
                containment: "document",
                alsoResize: this.element,
                maxWidth: options.maxWidth,
                maxHeight: options.maxHeight,
                minWidth: options.minWidth,
                minHeight: this._minHeight(),
                handles: resizeHandles,
                start: function(event, ui) {
                    that._addClass($(this), "ui-dialog-resizing");
                    that._blockFrames();
                    that._trigger("resizeStart", event, filteredUi(ui));
                },
                resize: function(event, ui) {
                    that._trigger("resize", event, filteredUi(ui));
                },
                stop: function(event, ui) {
                    var offset = that.uiDialog.offset(), left = offset.left - that.document.scrollLeft(), top = offset.top - that.document.scrollTop();
                    options.height = that.uiDialog.height();
                    options.width = that.uiDialog.width();
                    options.position = {
                        my: "left top",
                        at: "left" + (left >= 0 ? "+" : "") + left + " " + "top" + (top >= 0 ? "+" : "") + top,
                        of: that.window
                    };
                    that._removeClass($(this), "ui-dialog-resizing");
                    that._unblockFrames();
                    that._trigger("resizeStop", event, filteredUi(ui));
                }
            }).css("position", position);
        },
        _trackFocus: function() {
            this._on(this.widget(), {
                focusin: function(event) {
                    this._makeFocusTarget();
                    this._focusedElement = $(event.target);
                }
            });
        },
        _makeFocusTarget: function() {
            this._untrackInstance();
            this._trackingInstances().unshift(this);
        },
        _untrackInstance: function() {
            var instances = this._trackingInstances(), exists = $.inArray(this, instances);
            if (exists !== -1) instances.splice(exists, 1);
        },
        _trackingInstances: function() {
            var instances = this.document.data("ui-dialog-instances");
            if (!instances) {
                instances = [];
                this.document.data("ui-dialog-instances", instances);
            }
            return instances;
        },
        _minHeight: function() {
            var options = this.options;
            return options.height === "auto" ? options.minHeight : Math.min(options.minHeight, options.height);
        },
        _position: function() {
            // Need to show the dialog to get the actual offset in the position plugin
            var isVisible = this.uiDialog.is(":visible");
            if (!isVisible) this.uiDialog.show();
            this.uiDialog.position(this.options.position);
            if (!isVisible) this.uiDialog.hide();
        },
        _setOptions: function(options) {
            var that = this, resize = false, resizableOptions = {};
            $.each(options, function(key, value) {
                that._setOption(key, value);
                if (key in that.sizeRelatedOptions) resize = true;
                if (key in that.resizableRelatedOptions) resizableOptions[key] = value;
            });
            if (resize) {
                this._size();
                this._position();
            }
            if (this.uiDialog.is(":data(ui-resizable)")) this.uiDialog.resizable("option", resizableOptions);
        },
        _setOption: function(key, value) {
            var isDraggable, isResizable, uiDialog = this.uiDialog;
            if (key === "disabled") return;
            this._super(key, value);
            if (key === "appendTo") this.uiDialog.appendTo(this._appendTo());
            if (key === "buttons") this._createButtons();
            if (key === "closeText") this.uiDialogTitlebarClose.button({
                // Ensure that we always pass a string
                label: $("<a>").text("" + this.options.closeText).html()
            });
            if (key === "draggable") {
                isDraggable = uiDialog.is(":data(ui-draggable)");
                if (isDraggable && !value) uiDialog.draggable("destroy");
                if (!isDraggable && value) this._makeDraggable();
            }
            if (key === "position") this._position();
            if (key === "resizable") {
                // currently resizable, becoming non-resizable
                isResizable = uiDialog.is(":data(ui-resizable)");
                if (isResizable && !value) uiDialog.resizable("destroy");
                // Currently resizable, changing handles
                if (isResizable && typeof value === "string") uiDialog.resizable("option", "handles", value);
                // Currently non-resizable, becoming resizable
                if (!isResizable && value !== false) this._makeResizable();
            }
            if (key === "title") this._title(this.uiDialogTitlebar.find(".ui-dialog-title"));
        },
        _size: function() {
            // If the user has resized the dialog, the .ui-dialog and .ui-dialog-content
            // divs will both have width and height set, so we need to reset them
            var nonContentHeight, minContentHeight, maxContentHeight, options = this.options;
            // Reset content sizing
            this.element.show().css({
                width: "auto",
                minHeight: 0,
                maxHeight: "none",
                height: 0
            });
            if (options.minWidth > options.width) options.width = options.minWidth;
            // Reset wrapper sizing
            // determine the height of all the non-content elements
            nonContentHeight = this.uiDialog.css({
                height: "auto",
                width: options.width
            }).outerHeight();
            minContentHeight = Math.max(0, options.minHeight - nonContentHeight);
            maxContentHeight = typeof options.maxHeight === "number" ? Math.max(0, options.maxHeight - nonContentHeight) : "none";
            if (options.height === "auto") this.element.css({
                minHeight: minContentHeight,
                maxHeight: maxContentHeight,
                height: "auto"
            });
            else this.element.height(Math.max(0, options.height - nonContentHeight));
            if (this.uiDialog.is(":data(ui-resizable)")) this.uiDialog.resizable("option", "minHeight", this._minHeight());
        },
        _blockFrames: function() {
            this.iframeBlocks = this.document.find("iframe").map(function() {
                var iframe = $(this);
                return $("<div>").css({
                    position: "absolute",
                    width: iframe.outerWidth(),
                    height: iframe.outerHeight()
                }).appendTo(iframe.parent()).offset(iframe.offset())[0];
            });
        },
        _unblockFrames: function() {
            if (this.iframeBlocks) {
                this.iframeBlocks.remove();
                delete this.iframeBlocks;
            }
        },
        _allowInteraction: function(event) {
            if ($(event.target).closest(".ui-dialog").length) return true;
            // TODO: Remove hack when datepicker implements
            // the .ui-front logic (#8989)
            return !!$(event.target).closest(".ui-datepicker").length;
        },
        _createOverlay: function() {
            if (!this.options.modal) return;
            // We use a delay in case the overlay is created from an
            // event that we're going to be cancelling (#2804)
            var isOpening = true;
            this._delay(function() {
                isOpening = false;
            });
            if (!this.document.data("ui-dialog-overlays")) // Prevent use of anchors and inputs
            // Using _on() for an event handler shared across many instances is
            // safe because the dialogs stack and must be closed in reverse order
            this._on(this.document, {
                focusin: function(event) {
                    if (isOpening) return;
                    if (!this._allowInteraction(event)) {
                        event.preventDefault();
                        this._trackingInstances()[0]._focusTabbable();
                    }
                }
            });
            this.overlay = $("<div>").appendTo(this._appendTo());
            this._addClass(this.overlay, null, "ui-widget-overlay ui-front");
            this._on(this.overlay, {
                mousedown: "_keepFocus"
            });
            this.document.data("ui-dialog-overlays", (this.document.data("ui-dialog-overlays") || 0) + 1);
        },
        _destroyOverlay: function() {
            if (!this.options.modal) return;
            if (this.overlay) {
                var overlays = this.document.data("ui-dialog-overlays") - 1;
                if (!overlays) {
                    this._off(this.document, "focusin");
                    this.document.removeData("ui-dialog-overlays");
                } else this.document.data("ui-dialog-overlays", overlays);
                this.overlay.remove();
                this.overlay = null;
            }
        }
    });
    // DEPRECATED
    // TODO: switch return back to widget declaration at top of file when this is removed
    if ($.uiBackCompat !== false) // Backcompat for dialogClass option
    $.widget("ui.dialog", $.ui.dialog, {
        options: {
            dialogClass: ""
        },
        _createWrapper: function() {
            this._super();
            this.uiDialog.addClass(this.options.dialogClass);
        },
        _setOption: function(key, value) {
            if (key === "dialogClass") this.uiDialog.removeClass(this.options.dialogClass).addClass(value);
            this._superApply(arguments);
        }
    });
    var widgetsDialog = $.ui.dialog;
    /*!
 * jQuery UI Droppable 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Droppable
    //>>group: Interactions
    //>>description: Enables drop targets for draggable elements.
    //>>docs: http://api.jqueryui.com/droppable/
    //>>demos: http://jqueryui.com/droppable/
    $.widget("ui.droppable", {
        version: "1.12.1",
        widgetEventPrefix: "drop",
        options: {
            accept: "*",
            addClasses: true,
            greedy: false,
            scope: "default",
            tolerance: "intersect",
            // Callbacks
            activate: null,
            deactivate: null,
            drop: null,
            out: null,
            over: null
        },
        _create: function() {
            var proportions, o = this.options, accept = o.accept;
            this.isover = false;
            this.isout = true;
            this.accept = $.isFunction(accept) ? accept : function(d) {
                return d.is(accept);
            };
            this.proportions = function() {
                if (arguments.length) // Store the droppable's proportions
                proportions = arguments[0];
                else // Retrieve or derive the droppable's proportions
                return proportions ? proportions : proportions = {
                    width: this.element[0].offsetWidth,
                    height: this.element[0].offsetHeight
                };
            };
            this._addToManager(o.scope);
            o.addClasses && this._addClass("ui-droppable");
        },
        _addToManager: function(scope) {
            // Add the reference and positions to the manager
            $.ui.ddmanager.droppables[scope] = $.ui.ddmanager.droppables[scope] || [];
            $.ui.ddmanager.droppables[scope].push(this);
        },
        _splice: function(drop) {
            var i = 0;
            for(; i < drop.length; i++)if (drop[i] === this) drop.splice(i, 1);
        },
        _destroy: function() {
            var drop = $.ui.ddmanager.droppables[this.options.scope];
            this._splice(drop);
        },
        _setOption: function(key, value) {
            if (key === "accept") this.accept = $.isFunction(value) ? value : function(d) {
                return d.is(value);
            };
            else if (key === "scope") {
                var drop = $.ui.ddmanager.droppables[this.options.scope];
                this._splice(drop);
                this._addToManager(value);
            }
            this._super(key, value);
        },
        _activate: function(event) {
            var draggable = $.ui.ddmanager.current;
            this._addActiveClass();
            if (draggable) this._trigger("activate", event, this.ui(draggable));
        },
        _deactivate: function(event) {
            var draggable = $.ui.ddmanager.current;
            this._removeActiveClass();
            if (draggable) this._trigger("deactivate", event, this.ui(draggable));
        },
        _over: function(event) {
            var draggable = $.ui.ddmanager.current;
            // Bail if draggable and droppable are same element
            if (!draggable || (draggable.currentItem || draggable.element)[0] === this.element[0]) return;
            if (this.accept.call(this.element[0], draggable.currentItem || draggable.element)) {
                this._addHoverClass();
                this._trigger("over", event, this.ui(draggable));
            }
        },
        _out: function(event) {
            var draggable = $.ui.ddmanager.current;
            // Bail if draggable and droppable are same element
            if (!draggable || (draggable.currentItem || draggable.element)[0] === this.element[0]) return;
            if (this.accept.call(this.element[0], draggable.currentItem || draggable.element)) {
                this._removeHoverClass();
                this._trigger("out", event, this.ui(draggable));
            }
        },
        _drop: function(event, custom) {
            var draggable = custom || $.ui.ddmanager.current, childrenIntersection = false;
            // Bail if draggable and droppable are same element
            if (!draggable || (draggable.currentItem || draggable.element)[0] === this.element[0]) return false;
            this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each(function() {
                var inst = $(this).droppable("instance");
                if (inst.options.greedy && !inst.options.disabled && inst.options.scope === draggable.options.scope && inst.accept.call(inst.element[0], draggable.currentItem || draggable.element) && intersect(draggable, $.extend(inst, {
                    offset: inst.element.offset()
                }), inst.options.tolerance, event)) {
                    childrenIntersection = true;
                    return false;
                }
            });
            if (childrenIntersection) return false;
            if (this.accept.call(this.element[0], draggable.currentItem || draggable.element)) {
                this._removeActiveClass();
                this._removeHoverClass();
                this._trigger("drop", event, this.ui(draggable));
                return this.element;
            }
            return false;
        },
        ui: function(c) {
            return {
                draggable: c.currentItem || c.element,
                helper: c.helper,
                position: c.position,
                offset: c.positionAbs
            };
        },
        // Extension points just to make backcompat sane and avoid duplicating logic
        // TODO: Remove in 1.13 along with call to it below
        _addHoverClass: function() {
            this._addClass("ui-droppable-hover");
        },
        _removeHoverClass: function() {
            this._removeClass("ui-droppable-hover");
        },
        _addActiveClass: function() {
            this._addClass("ui-droppable-active");
        },
        _removeActiveClass: function() {
            this._removeClass("ui-droppable-active");
        }
    });
    var intersect = $.ui.intersect = function() {
        function isOverAxis(x, reference, size) {
            return x >= reference && x < reference + size;
        }
        return function(draggable, droppable, toleranceMode, event) {
            if (!droppable.offset) return false;
            var x1 = (draggable.positionAbs || draggable.position.absolute).left + draggable.margins.left, y1 = (draggable.positionAbs || draggable.position.absolute).top + draggable.margins.top, x2 = x1 + draggable.helperProportions.width, y2 = y1 + draggable.helperProportions.height, l = droppable.offset.left, t = droppable.offset.top, r = l + droppable.proportions().width, b = t + droppable.proportions().height;
            switch(toleranceMode){
                case "fit":
                    return l <= x1 && x2 <= r && t <= y1 && y2 <= b;
                case "intersect":
                    return l < x1 + draggable.helperProportions.width / 2 && x2 - draggable.helperProportions.width / 2 < r && t < y1 + draggable.helperProportions.height / 2 && y2 - draggable.helperProportions.height / 2 < b; // Top Half
                case "pointer":
                    return isOverAxis(event.pageY, t, droppable.proportions().height) && isOverAxis(event.pageX, l, droppable.proportions().width);
                case "touch":
                    return (y1 >= t && y1 <= b || y2 >= t && y2 <= b || y1 < t && y2 > b // Surrounded vertically
                    ) && (x1 >= l && x1 <= r || x2 >= l && x2 <= r || x1 < l && x2 > r // Surrounded horizontally
                    );
                default:
                    return false;
            }
        };
    }();
    /*
	This manager tracks offsets of draggables and droppables
*/ $.ui.ddmanager = {
        current: null,
        droppables: {
            "default": []
        },
        prepareOffsets: function(t, event) {
            var i, j, m = $.ui.ddmanager.droppables[t.options.scope] || [], type = event ? event.type : null, list = (t.currentItem || t.element).find(":data(ui-droppable)").addBack();
            droppablesLoop: for(i = 0; i < m.length; i++){
                // No disabled and non-accepted
                if (m[i].options.disabled || t && !m[i].accept.call(m[i].element[0], t.currentItem || t.element)) continue;
                // Filter out elements in the current dragged item
                for(j = 0; j < list.length; j++)if (list[j] === m[i].element[0]) {
                    m[i].proportions().height = 0;
                    continue droppablesLoop;
                }
                m[i].visible = m[i].element.css("display") !== "none";
                if (!m[i].visible) continue;
                // Activate the droppable if used directly from draggables
                if (type === "mousedown") m[i]._activate.call(m[i], event);
                m[i].offset = m[i].element.offset();
                m[i].proportions({
                    width: m[i].element[0].offsetWidth,
                    height: m[i].element[0].offsetHeight
                });
            }
        },
        drop: function(draggable, event) {
            var dropped = false;
            // Create a copy of the droppables in case the list changes during the drop (#9116)
            $.each(($.ui.ddmanager.droppables[draggable.options.scope] || []).slice(), function() {
                if (!this.options) return;
                if (!this.options.disabled && this.visible && intersect(draggable, this, this.options.tolerance, event)) dropped = this._drop.call(this, event) || dropped;
                if (!this.options.disabled && this.visible && this.accept.call(this.element[0], draggable.currentItem || draggable.element)) {
                    this.isout = true;
                    this.isover = false;
                    this._deactivate.call(this, event);
                }
            });
            return dropped;
        },
        dragStart: function(draggable, event) {
            // Listen for scrolling so that if the dragging causes scrolling the position of the
            // droppables can be recalculated (see #5003)
            draggable.element.parentsUntil("body").on("scroll.droppable", function() {
                if (!draggable.options.refreshPositions) $.ui.ddmanager.prepareOffsets(draggable, event);
            });
        },
        drag: function(draggable, event) {
            // If you have a highly dynamic page, you might try this option. It renders positions
            // every time you move the mouse.
            if (draggable.options.refreshPositions) $.ui.ddmanager.prepareOffsets(draggable, event);
            // Run through all droppables and check their positions based on specific tolerance options
            $.each($.ui.ddmanager.droppables[draggable.options.scope] || [], function() {
                if (this.options.disabled || this.greedyChild || !this.visible) return;
                var parentInstance, scope, parent, intersects = intersect(draggable, this, this.options.tolerance, event), c = !intersects && this.isover ? "isout" : intersects && !this.isover ? "isover" : null;
                if (!c) return;
                if (this.options.greedy) {
                    // find droppable parents with same scope
                    scope = this.options.scope;
                    parent = this.element.parents(":data(ui-droppable)").filter(function() {
                        return $(this).droppable("instance").options.scope === scope;
                    });
                    if (parent.length) {
                        parentInstance = $(parent[0]).droppable("instance");
                        parentInstance.greedyChild = c === "isover";
                    }
                }
                // We just moved into a greedy child
                if (parentInstance && c === "isover") {
                    parentInstance.isover = false;
                    parentInstance.isout = true;
                    parentInstance._out.call(parentInstance, event);
                }
                this[c] = true;
                this[c === "isout" ? "isover" : "isout"] = false;
                this[c === "isover" ? "_over" : "_out"].call(this, event);
                // We just moved out of a greedy child
                if (parentInstance && c === "isout") {
                    parentInstance.isout = false;
                    parentInstance.isover = true;
                    parentInstance._over.call(parentInstance, event);
                }
            });
        },
        dragStop: function(draggable, event) {
            draggable.element.parentsUntil("body").off("scroll.droppable");
            // Call prepareOffsets one final time since IE does not fire return scroll events when
            // overflow was caused by drag (see #5003)
            if (!draggable.options.refreshPositions) $.ui.ddmanager.prepareOffsets(draggable, event);
        }
    };
    // DEPRECATED
    // TODO: switch return back to widget declaration at top of file when this is removed
    if ($.uiBackCompat !== false) // Backcompat for activeClass and hoverClass options
    $.widget("ui.droppable", $.ui.droppable, {
        options: {
            hoverClass: false,
            activeClass: false
        },
        _addActiveClass: function() {
            this._super();
            if (this.options.activeClass) this.element.addClass(this.options.activeClass);
        },
        _removeActiveClass: function() {
            this._super();
            if (this.options.activeClass) this.element.removeClass(this.options.activeClass);
        },
        _addHoverClass: function() {
            this._super();
            if (this.options.hoverClass) this.element.addClass(this.options.hoverClass);
        },
        _removeHoverClass: function() {
            this._super();
            if (this.options.hoverClass) this.element.removeClass(this.options.hoverClass);
        }
    });
    var widgetsDroppable = $.ui.droppable;
    /*!
 * jQuery UI Progressbar 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Progressbar
    //>>group: Widgets
    // jscs:disable maximumLineLength
    //>>description: Displays a status indicator for loading state, standard percentage, and other progress indicators.
    // jscs:enable maximumLineLength
    //>>docs: http://api.jqueryui.com/progressbar/
    //>>demos: http://jqueryui.com/progressbar/
    //>>css.structure: ../../themes/base/core.css
    //>>css.structure: ../../themes/base/progressbar.css
    //>>css.theme: ../../themes/base/theme.css
    var widgetsProgressbar = $.widget("ui.progressbar", {
        version: "1.12.1",
        options: {
            classes: {
                "ui-progressbar": "ui-corner-all",
                "ui-progressbar-value": "ui-corner-left",
                "ui-progressbar-complete": "ui-corner-right"
            },
            max: 100,
            value: 0,
            change: null,
            complete: null
        },
        min: 0,
        _create: function() {
            // Constrain initial value
            this.oldValue = this.options.value = this._constrainedValue();
            this.element.attr({
                // Only set static values; aria-valuenow and aria-valuemax are
                // set inside _refreshValue()
                role: "progressbar",
                "aria-valuemin": this.min
            });
            this._addClass("ui-progressbar", "ui-widget ui-widget-content");
            this.valueDiv = $("<div>").appendTo(this.element);
            this._addClass(this.valueDiv, "ui-progressbar-value", "ui-widget-header");
            this._refreshValue();
        },
        _destroy: function() {
            this.element.removeAttr("role aria-valuemin aria-valuemax aria-valuenow");
            this.valueDiv.remove();
        },
        value: function(newValue) {
            if (newValue === undefined) return this.options.value;
            this.options.value = this._constrainedValue(newValue);
            this._refreshValue();
        },
        _constrainedValue: function(newValue) {
            if (newValue === undefined) newValue = this.options.value;
            this.indeterminate = newValue === false;
            // Sanitize value
            if (typeof newValue !== "number") newValue = 0;
            return this.indeterminate ? false : Math.min(this.options.max, Math.max(this.min, newValue));
        },
        _setOptions: function(options) {
            // Ensure "value" option is set after other values (like max)
            var value = options.value;
            delete options.value;
            this._super(options);
            this.options.value = this._constrainedValue(value);
            this._refreshValue();
        },
        _setOption: function(key, value) {
            if (key === "max") // Don't allow a max less than min
            value = Math.max(this.min, value);
            this._super(key, value);
        },
        _setOptionDisabled: function(value) {
            this._super(value);
            this.element.attr("aria-disabled", value);
            this._toggleClass(null, "ui-state-disabled", !!value);
        },
        _percentage: function() {
            return this.indeterminate ? 100 : 100 * (this.options.value - this.min) / (this.options.max - this.min);
        },
        _refreshValue: function() {
            var value = this.options.value, percentage = this._percentage();
            this.valueDiv.toggle(this.indeterminate || value > this.min).width(percentage.toFixed(0) + "%");
            this._toggleClass(this.valueDiv, "ui-progressbar-complete", null, value === this.options.max)._toggleClass("ui-progressbar-indeterminate", null, this.indeterminate);
            if (this.indeterminate) {
                this.element.removeAttr("aria-valuenow");
                if (!this.overlayDiv) {
                    this.overlayDiv = $("<div>").appendTo(this.valueDiv);
                    this._addClass(this.overlayDiv, "ui-progressbar-overlay");
                }
            } else {
                this.element.attr({
                    "aria-valuemax": this.options.max,
                    "aria-valuenow": value
                });
                if (this.overlayDiv) {
                    this.overlayDiv.remove();
                    this.overlayDiv = null;
                }
            }
            if (this.oldValue !== value) {
                this.oldValue = value;
                this._trigger("change");
            }
            if (value === this.options.max) this._trigger("complete");
        }
    });
    /*!
 * jQuery UI Selectable 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Selectable
    //>>group: Interactions
    //>>description: Allows groups of elements to be selected with the mouse.
    //>>docs: http://api.jqueryui.com/selectable/
    //>>demos: http://jqueryui.com/selectable/
    //>>css.structure: ../../themes/base/selectable.css
    var widgetsSelectable = $.widget("ui.selectable", $.ui.mouse, {
        version: "1.12.1",
        options: {
            appendTo: "body",
            autoRefresh: true,
            distance: 0,
            filter: "*",
            tolerance: "touch",
            // Callbacks
            selected: null,
            selecting: null,
            start: null,
            stop: null,
            unselected: null,
            unselecting: null
        },
        _create: function() {
            var that = this;
            this._addClass("ui-selectable");
            this.dragged = false;
            // Cache selectee children based on filter
            this.refresh = function() {
                that.elementPos = $(that.element[0]).offset();
                that.selectees = $(that.options.filter, that.element[0]);
                that._addClass(that.selectees, "ui-selectee");
                that.selectees.each(function() {
                    var $this = $(this), selecteeOffset = $this.offset(), pos = {
                        left: selecteeOffset.left - that.elementPos.left,
                        top: selecteeOffset.top - that.elementPos.top
                    };
                    $.data(this, "selectable-item", {
                        element: this,
                        $element: $this,
                        left: pos.left,
                        top: pos.top,
                        right: pos.left + $this.outerWidth(),
                        bottom: pos.top + $this.outerHeight(),
                        startselected: false,
                        selected: $this.hasClass("ui-selected"),
                        selecting: $this.hasClass("ui-selecting"),
                        unselecting: $this.hasClass("ui-unselecting")
                    });
                });
            };
            this.refresh();
            this._mouseInit();
            this.helper = $("<div>");
            this._addClass(this.helper, "ui-selectable-helper");
        },
        _destroy: function() {
            this.selectees.removeData("selectable-item");
            this._mouseDestroy();
        },
        _mouseStart: function(event) {
            var that = this, options = this.options;
            this.opos = [
                event.pageX,
                event.pageY
            ];
            this.elementPos = $(this.element[0]).offset();
            if (this.options.disabled) return;
            this.selectees = $(options.filter, this.element[0]);
            this._trigger("start", event);
            $(options.appendTo).append(this.helper);
            // position helper (lasso)
            this.helper.css({
                "left": event.pageX,
                "top": event.pageY,
                "width": 0,
                "height": 0
            });
            if (options.autoRefresh) this.refresh();
            this.selectees.filter(".ui-selected").each(function() {
                var selectee = $.data(this, "selectable-item");
                selectee.startselected = true;
                if (!event.metaKey && !event.ctrlKey) {
                    that._removeClass(selectee.$element, "ui-selected");
                    selectee.selected = false;
                    that._addClass(selectee.$element, "ui-unselecting");
                    selectee.unselecting = true;
                    // selectable UNSELECTING callback
                    that._trigger("unselecting", event, {
                        unselecting: selectee.element
                    });
                }
            });
            $(event.target).parents().addBack().each(function() {
                var doSelect, selectee = $.data(this, "selectable-item");
                if (selectee) {
                    doSelect = !event.metaKey && !event.ctrlKey || !selectee.$element.hasClass("ui-selected");
                    that._removeClass(selectee.$element, doSelect ? "ui-unselecting" : "ui-selected")._addClass(selectee.$element, doSelect ? "ui-selecting" : "ui-unselecting");
                    selectee.unselecting = !doSelect;
                    selectee.selecting = doSelect;
                    selectee.selected = doSelect;
                    // selectable (UN)SELECTING callback
                    if (doSelect) that._trigger("selecting", event, {
                        selecting: selectee.element
                    });
                    else that._trigger("unselecting", event, {
                        unselecting: selectee.element
                    });
                    return false;
                }
            });
        },
        _mouseDrag: function(event) {
            this.dragged = true;
            if (this.options.disabled) return;
            var tmp, that = this, options = this.options, x1 = this.opos[0], y1 = this.opos[1], x2 = event.pageX, y2 = event.pageY;
            if (x1 > x2) {
                tmp = x2;
                x2 = x1;
                x1 = tmp;
            }
            if (y1 > y2) {
                tmp = y2;
                y2 = y1;
                y1 = tmp;
            }
            this.helper.css({
                left: x1,
                top: y1,
                width: x2 - x1,
                height: y2 - y1
            });
            this.selectees.each(function() {
                var selectee = $.data(this, "selectable-item"), hit = false, offset = {};
                //prevent helper from being selected if appendTo: selectable
                if (!selectee || selectee.element === that.element[0]) return;
                offset.left = selectee.left + that.elementPos.left;
                offset.right = selectee.right + that.elementPos.left;
                offset.top = selectee.top + that.elementPos.top;
                offset.bottom = selectee.bottom + that.elementPos.top;
                if (options.tolerance === "touch") hit = !(offset.left > x2 || offset.right < x1 || offset.top > y2 || offset.bottom < y1);
                else if (options.tolerance === "fit") hit = offset.left > x1 && offset.right < x2 && offset.top > y1 && offset.bottom < y2;
                if (hit) {
                    // SELECT
                    if (selectee.selected) {
                        that._removeClass(selectee.$element, "ui-selected");
                        selectee.selected = false;
                    }
                    if (selectee.unselecting) {
                        that._removeClass(selectee.$element, "ui-unselecting");
                        selectee.unselecting = false;
                    }
                    if (!selectee.selecting) {
                        that._addClass(selectee.$element, "ui-selecting");
                        selectee.selecting = true;
                        // selectable SELECTING callback
                        that._trigger("selecting", event, {
                            selecting: selectee.element
                        });
                    }
                } else {
                    // UNSELECT
                    if (selectee.selecting) {
                        if ((event.metaKey || event.ctrlKey) && selectee.startselected) {
                            that._removeClass(selectee.$element, "ui-selecting");
                            selectee.selecting = false;
                            that._addClass(selectee.$element, "ui-selected");
                            selectee.selected = true;
                        } else {
                            that._removeClass(selectee.$element, "ui-selecting");
                            selectee.selecting = false;
                            if (selectee.startselected) {
                                that._addClass(selectee.$element, "ui-unselecting");
                                selectee.unselecting = true;
                            }
                            // selectable UNSELECTING callback
                            that._trigger("unselecting", event, {
                                unselecting: selectee.element
                            });
                        }
                    }
                    if (selectee.selected) {
                        if (!event.metaKey && !event.ctrlKey && !selectee.startselected) {
                            that._removeClass(selectee.$element, "ui-selected");
                            selectee.selected = false;
                            that._addClass(selectee.$element, "ui-unselecting");
                            selectee.unselecting = true;
                            // selectable UNSELECTING callback
                            that._trigger("unselecting", event, {
                                unselecting: selectee.element
                            });
                        }
                    }
                }
            });
            return false;
        },
        _mouseStop: function(event) {
            var that = this;
            this.dragged = false;
            $(".ui-unselecting", this.element[0]).each(function() {
                var selectee = $.data(this, "selectable-item");
                that._removeClass(selectee.$element, "ui-unselecting");
                selectee.unselecting = false;
                selectee.startselected = false;
                that._trigger("unselected", event, {
                    unselected: selectee.element
                });
            });
            $(".ui-selecting", this.element[0]).each(function() {
                var selectee = $.data(this, "selectable-item");
                that._removeClass(selectee.$element, "ui-selecting")._addClass(selectee.$element, "ui-selected");
                selectee.selecting = false;
                selectee.selected = true;
                selectee.startselected = true;
                that._trigger("selected", event, {
                    selected: selectee.element
                });
            });
            this._trigger("stop", event);
            this.helper.remove();
            return false;
        }
    });
    /*!
 * jQuery UI Selectmenu 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Selectmenu
    //>>group: Widgets
    // jscs:disable maximumLineLength
    //>>description: Duplicates and extends the functionality of a native HTML select element, allowing it to be customizable in behavior and appearance far beyond the limitations of a native select.
    // jscs:enable maximumLineLength
    //>>docs: http://api.jqueryui.com/selectmenu/
    //>>demos: http://jqueryui.com/selectmenu/
    //>>css.structure: ../../themes/base/core.css
    //>>css.structure: ../../themes/base/selectmenu.css, ../../themes/base/button.css
    //>>css.theme: ../../themes/base/theme.css
    var widgetsSelectmenu = $.widget("ui.selectmenu", [
        $.ui.formResetMixin,
        {
            version: "1.12.1",
            defaultElement: "<select>",
            options: {
                appendTo: null,
                classes: {
                    "ui-selectmenu-button-open": "ui-corner-top",
                    "ui-selectmenu-button-closed": "ui-corner-all"
                },
                disabled: null,
                icons: {
                    button: "ui-icon-triangle-1-s"
                },
                position: {
                    my: "left top",
                    at: "left bottom",
                    collision: "none"
                },
                width: false,
                // Callbacks
                change: null,
                close: null,
                focus: null,
                open: null,
                select: null
            },
            _create: function() {
                var selectmenuId = this.element.uniqueId().attr("id");
                this.ids = {
                    element: selectmenuId,
                    button: selectmenuId + "-button",
                    menu: selectmenuId + "-menu"
                };
                this._drawButton();
                this._drawMenu();
                this._bindFormResetHandler();
                this._rendered = false;
                this.menuItems = $();
            },
            _drawButton: function() {
                var icon, that = this, item = this._parseOption(this.element.find("option:selected"), this.element[0].selectedIndex);
                // Associate existing label with the new button
                this.labels = this.element.labels().attr("for", this.ids.button);
                this._on(this.labels, {
                    click: function(event) {
                        this.button.focus();
                        event.preventDefault();
                    }
                });
                // Hide original select element
                this.element.hide();
                // Create button
                this.button = $("<span>", {
                    tabindex: this.options.disabled ? -1 : 0,
                    id: this.ids.button,
                    role: "combobox",
                    "aria-expanded": "false",
                    "aria-autocomplete": "list",
                    "aria-owns": this.ids.menu,
                    "aria-haspopup": "true",
                    title: this.element.attr("title")
                }).insertAfter(this.element);
                this._addClass(this.button, "ui-selectmenu-button ui-selectmenu-button-closed", "ui-button ui-widget");
                icon = $("<span>").appendTo(this.button);
                this._addClass(icon, "ui-selectmenu-icon", "ui-icon " + this.options.icons.button);
                this.buttonItem = this._renderButtonItem(item).appendTo(this.button);
                if (this.options.width !== false) this._resizeButton();
                this._on(this.button, this._buttonEvents);
                this.button.one("focusin", function() {
                    // Delay rendering the menu items until the button receives focus.
                    // The menu may have already been rendered via a programmatic open.
                    if (!that._rendered) that._refreshMenu();
                });
            },
            _drawMenu: function() {
                var that = this;
                // Create menu
                this.menu = $("<ul>", {
                    "aria-hidden": "true",
                    "aria-labelledby": this.ids.button,
                    id: this.ids.menu
                });
                // Wrap menu
                this.menuWrap = $("<div>").append(this.menu);
                this._addClass(this.menuWrap, "ui-selectmenu-menu", "ui-front");
                this.menuWrap.appendTo(this._appendTo());
                // Initialize menu widget
                this.menuInstance = this.menu.menu({
                    classes: {
                        "ui-menu": "ui-corner-bottom"
                    },
                    role: "listbox",
                    select: function(event, ui) {
                        event.preventDefault();
                        // Support: IE8
                        // If the item was selected via a click, the text selection
                        // will be destroyed in IE
                        that._setSelection();
                        that._select(ui.item.data("ui-selectmenu-item"), event);
                    },
                    focus: function(event, ui) {
                        var item = ui.item.data("ui-selectmenu-item");
                        // Prevent inital focus from firing and check if its a newly focused item
                        if (that.focusIndex != null && item.index !== that.focusIndex) {
                            that._trigger("focus", event, {
                                item: item
                            });
                            if (!that.isOpen) that._select(item, event);
                        }
                        that.focusIndex = item.index;
                        that.button.attr("aria-activedescendant", that.menuItems.eq(item.index).attr("id"));
                    }
                }).menu("instance");
                // Don't close the menu on mouseleave
                this.menuInstance._off(this.menu, "mouseleave");
                // Cancel the menu's collapseAll on document click
                this.menuInstance._closeOnDocumentClick = function() {
                    return false;
                };
                // Selects often contain empty items, but never contain dividers
                this.menuInstance._isDivider = function() {
                    return false;
                };
            },
            refresh: function() {
                this._refreshMenu();
                this.buttonItem.replaceWith(this.buttonItem = this._renderButtonItem(// Fall back to an empty object in case there are no options
                this._getSelectedItem().data("ui-selectmenu-item") || {}));
                if (this.options.width === null) this._resizeButton();
            },
            _refreshMenu: function() {
                var item, options = this.element.find("option");
                this.menu.empty();
                this._parseOptions(options);
                this._renderMenu(this.menu, this.items);
                this.menuInstance.refresh();
                this.menuItems = this.menu.find("li").not(".ui-selectmenu-optgroup").find(".ui-menu-item-wrapper");
                this._rendered = true;
                if (!options.length) return;
                item = this._getSelectedItem();
                // Update the menu to have the correct item focused
                this.menuInstance.focus(null, item);
                this._setAria(item.data("ui-selectmenu-item"));
                // Set disabled state
                this._setOption("disabled", this.element.prop("disabled"));
            },
            open: function(event) {
                if (this.options.disabled) return;
                // If this is the first time the menu is being opened, render the items
                if (!this._rendered) this._refreshMenu();
                else {
                    // Menu clears focus on close, reset focus to selected item
                    this._removeClass(this.menu.find(".ui-state-active"), null, "ui-state-active");
                    this.menuInstance.focus(null, this._getSelectedItem());
                }
                // If there are no options, don't open the menu
                if (!this.menuItems.length) return;
                this.isOpen = true;
                this._toggleAttr();
                this._resizeMenu();
                this._position();
                this._on(this.document, this._documentClick);
                this._trigger("open", event);
            },
            _position: function() {
                this.menuWrap.position($.extend({
                    of: this.button
                }, this.options.position));
            },
            close: function(event) {
                if (!this.isOpen) return;
                this.isOpen = false;
                this._toggleAttr();
                this.range = null;
                this._off(this.document);
                this._trigger("close", event);
            },
            widget: function() {
                return this.button;
            },
            menuWidget: function() {
                return this.menu;
            },
            _renderButtonItem: function(item) {
                var buttonItem = $("<span>");
                this._setText(buttonItem, item.label);
                this._addClass(buttonItem, "ui-selectmenu-text");
                return buttonItem;
            },
            _renderMenu: function(ul, items) {
                var that = this, currentOptgroup = "";
                $.each(items, function(index, item) {
                    var li;
                    if (item.optgroup !== currentOptgroup) {
                        li = $("<li>", {
                            text: item.optgroup
                        });
                        that._addClass(li, "ui-selectmenu-optgroup", "ui-menu-divider" + (item.element.parent("optgroup").prop("disabled") ? " ui-state-disabled" : ""));
                        li.appendTo(ul);
                        currentOptgroup = item.optgroup;
                    }
                    that._renderItemData(ul, item);
                });
            },
            _renderItemData: function(ul, item) {
                return this._renderItem(ul, item).data("ui-selectmenu-item", item);
            },
            _renderItem: function(ul, item) {
                var li = $("<li>"), wrapper = $("<div>", {
                    title: item.element.attr("title")
                });
                if (item.disabled) this._addClass(li, null, "ui-state-disabled");
                this._setText(wrapper, item.label);
                return li.append(wrapper).appendTo(ul);
            },
            _setText: function(element, value) {
                if (value) element.text(value);
                else element.html("&#160;");
            },
            _move: function(direction, event) {
                var item, next, filter = ".ui-menu-item";
                if (this.isOpen) item = this.menuItems.eq(this.focusIndex).parent("li");
                else {
                    item = this.menuItems.eq(this.element[0].selectedIndex).parent("li");
                    filter += ":not(.ui-state-disabled)";
                }
                if (direction === "first" || direction === "last") next = item[direction === "first" ? "prevAll" : "nextAll"](filter).eq(-1);
                else next = item[direction + "All"](filter).eq(0);
                if (next.length) this.menuInstance.focus(event, next);
            },
            _getSelectedItem: function() {
                return this.menuItems.eq(this.element[0].selectedIndex).parent("li");
            },
            _toggle: function(event) {
                this[this.isOpen ? "close" : "open"](event);
            },
            _setSelection: function() {
                var selection;
                if (!this.range) return;
                if (window.getSelection) {
                    selection = window.getSelection();
                    selection.removeAllRanges();
                    selection.addRange(this.range);
                // Support: IE8
                } else this.range.select();
                // Support: IE
                // Setting the text selection kills the button focus in IE, but
                // restoring the focus doesn't kill the selection.
                this.button.focus();
            },
            _documentClick: {
                mousedown: function(event) {
                    if (!this.isOpen) return;
                    if (!$(event.target).closest(".ui-selectmenu-menu, #" + $.ui.escapeSelector(this.ids.button)).length) this.close(event);
                }
            },
            _buttonEvents: {
                // Prevent text selection from being reset when interacting with the selectmenu (#10144)
                mousedown: function() {
                    var selection;
                    if (window.getSelection) {
                        selection = window.getSelection();
                        if (selection.rangeCount) this.range = selection.getRangeAt(0);
                    // Support: IE8
                    } else this.range = document.selection.createRange();
                },
                click: function(event) {
                    this._setSelection();
                    this._toggle(event);
                },
                keydown: function(event) {
                    var preventDefault = true;
                    switch(event.keyCode){
                        case $.ui.keyCode.TAB:
                        case $.ui.keyCode.ESCAPE:
                            this.close(event);
                            preventDefault = false;
                            break;
                        case $.ui.keyCode.ENTER:
                            if (this.isOpen) this._selectFocusedItem(event);
                            break;
                        case $.ui.keyCode.UP:
                            if (event.altKey) this._toggle(event);
                            else this._move("prev", event);
                            break;
                        case $.ui.keyCode.DOWN:
                            if (event.altKey) this._toggle(event);
                            else this._move("next", event);
                            break;
                        case $.ui.keyCode.SPACE:
                            if (this.isOpen) this._selectFocusedItem(event);
                            else this._toggle(event);
                            break;
                        case $.ui.keyCode.LEFT:
                            this._move("prev", event);
                            break;
                        case $.ui.keyCode.RIGHT:
                            this._move("next", event);
                            break;
                        case $.ui.keyCode.HOME:
                        case $.ui.keyCode.PAGE_UP:
                            this._move("first", event);
                            break;
                        case $.ui.keyCode.END:
                        case $.ui.keyCode.PAGE_DOWN:
                            this._move("last", event);
                            break;
                        default:
                            this.menu.trigger(event);
                            preventDefault = false;
                    }
                    if (preventDefault) event.preventDefault();
                }
            },
            _selectFocusedItem: function(event) {
                var item = this.menuItems.eq(this.focusIndex).parent("li");
                if (!item.hasClass("ui-state-disabled")) this._select(item.data("ui-selectmenu-item"), event);
            },
            _select: function(item, event) {
                var oldIndex = this.element[0].selectedIndex;
                // Change native select element
                this.element[0].selectedIndex = item.index;
                this.buttonItem.replaceWith(this.buttonItem = this._renderButtonItem(item));
                this._setAria(item);
                this._trigger("select", event, {
                    item: item
                });
                if (item.index !== oldIndex) this._trigger("change", event, {
                    item: item
                });
                this.close(event);
            },
            _setAria: function(item) {
                var id = this.menuItems.eq(item.index).attr("id");
                this.button.attr({
                    "aria-labelledby": id,
                    "aria-activedescendant": id
                });
                this.menu.attr("aria-activedescendant", id);
            },
            _setOption: function(key, value) {
                if (key === "icons") {
                    var icon = this.button.find("span.ui-icon");
                    this._removeClass(icon, null, this.options.icons.button)._addClass(icon, null, value.button);
                }
                this._super(key, value);
                if (key === "appendTo") this.menuWrap.appendTo(this._appendTo());
                if (key === "width") this._resizeButton();
            },
            _setOptionDisabled: function(value) {
                this._super(value);
                this.menuInstance.option("disabled", value);
                this.button.attr("aria-disabled", value);
                this._toggleClass(this.button, null, "ui-state-disabled", value);
                this.element.prop("disabled", value);
                if (value) {
                    this.button.attr("tabindex", -1);
                    this.close();
                } else this.button.attr("tabindex", 0);
            },
            _appendTo: function() {
                var element = this.options.appendTo;
                if (element) element = element.jquery || element.nodeType ? $(element) : this.document.find(element).eq(0);
                if (!element || !element[0]) element = this.element.closest(".ui-front, dialog");
                if (!element.length) element = this.document[0].body;
                return element;
            },
            _toggleAttr: function() {
                this.button.attr("aria-expanded", this.isOpen);
                // We can't use two _toggleClass() calls here, because we need to make sure
                // we always remove classes first and add them second, otherwise if both classes have the
                // same theme class, it will be removed after we add it.
                this._removeClass(this.button, "ui-selectmenu-button-" + (this.isOpen ? "closed" : "open"))._addClass(this.button, "ui-selectmenu-button-" + (this.isOpen ? "open" : "closed"))._toggleClass(this.menuWrap, "ui-selectmenu-open", null, this.isOpen);
                this.menu.attr("aria-hidden", !this.isOpen);
            },
            _resizeButton: function() {
                var width = this.options.width;
                // For `width: false`, just remove inline style and stop
                if (width === false) {
                    this.button.css("width", "");
                    return;
                }
                // For `width: null`, match the width of the original element
                if (width === null) {
                    width = this.element.show().outerWidth();
                    this.element.hide();
                }
                this.button.outerWidth(width);
            },
            _resizeMenu: function() {
                this.menu.outerWidth(Math.max(this.button.outerWidth(), // Support: IE10
                // IE10 wraps long text (possibly a rounding bug)
                // so we add 1px to avoid the wrapping
                this.menu.width("").outerWidth() + 1));
            },
            _getCreateOptions: function() {
                var options = this._super();
                options.disabled = this.element.prop("disabled");
                return options;
            },
            _parseOptions: function(options) {
                var that = this, data = [];
                options.each(function(index, item) {
                    data.push(that._parseOption($(item), index));
                });
                this.items = data;
            },
            _parseOption: function(option, index) {
                var optgroup = option.parent("optgroup");
                return {
                    element: option,
                    index: index,
                    value: option.val(),
                    label: option.text(),
                    optgroup: optgroup.attr("label") || "",
                    disabled: optgroup.prop("disabled") || option.prop("disabled")
                };
            },
            _destroy: function() {
                this._unbindFormResetHandler();
                this.menuWrap.remove();
                this.button.remove();
                this.element.show();
                this.element.removeUniqueId();
                this.labels.attr("for", this.ids.element);
            }
        }
    ]);
    /*!
 * jQuery UI Slider 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Slider
    //>>group: Widgets
    //>>description: Displays a flexible slider with ranges and accessibility via keyboard.
    //>>docs: http://api.jqueryui.com/slider/
    //>>demos: http://jqueryui.com/slider/
    //>>css.structure: ../../themes/base/core.css
    //>>css.structure: ../../themes/base/slider.css
    //>>css.theme: ../../themes/base/theme.css
    var widgetsSlider = $.widget("ui.slider", $.ui.mouse, {
        version: "1.12.1",
        widgetEventPrefix: "slide",
        options: {
            animate: false,
            classes: {
                "ui-slider": "ui-corner-all",
                "ui-slider-handle": "ui-corner-all",
                // Note: ui-widget-header isn't the most fittingly semantic framework class for this
                // element, but worked best visually with a variety of themes
                "ui-slider-range": "ui-corner-all ui-widget-header"
            },
            distance: 0,
            max: 100,
            min: 0,
            orientation: "horizontal",
            range: false,
            step: 1,
            value: 0,
            values: null,
            // Callbacks
            change: null,
            slide: null,
            start: null,
            stop: null
        },
        // Number of pages in a slider
        // (how many times can you page up/down to go through the whole range)
        numPages: 5,
        _create: function() {
            this._keySliding = false;
            this._mouseSliding = false;
            this._animateOff = true;
            this._handleIndex = null;
            this._detectOrientation();
            this._mouseInit();
            this._calculateNewMax();
            this._addClass("ui-slider ui-slider-" + this.orientation, "ui-widget ui-widget-content");
            this._refresh();
            this._animateOff = false;
        },
        _refresh: function() {
            this._createRange();
            this._createHandles();
            this._setupEvents();
            this._refreshValue();
        },
        _createHandles: function() {
            var i, handleCount, options = this.options, existingHandles = this.element.find(".ui-slider-handle"), handle = "<span tabindex='0'></span>", handles = [];
            handleCount = options.values && options.values.length || 1;
            if (existingHandles.length > handleCount) {
                existingHandles.slice(handleCount).remove();
                existingHandles = existingHandles.slice(0, handleCount);
            }
            for(i = existingHandles.length; i < handleCount; i++)handles.push(handle);
            this.handles = existingHandles.add($(handles.join("")).appendTo(this.element));
            this._addClass(this.handles, "ui-slider-handle", "ui-state-default");
            this.handle = this.handles.eq(0);
            this.handles.each(function(i) {
                $(this).data("ui-slider-handle-index", i).attr("tabIndex", 0);
            });
        },
        _createRange: function() {
            var options = this.options;
            if (options.range) {
                if (options.range === true) {
                    if (!options.values) options.values = [
                        this._valueMin(),
                        this._valueMin()
                    ];
                    else if (options.values.length && options.values.length !== 2) options.values = [
                        options.values[0],
                        options.values[0]
                    ];
                    else if ($.isArray(options.values)) options.values = options.values.slice(0);
                }
                if (!this.range || !this.range.length) {
                    this.range = $("<div>").appendTo(this.element);
                    this._addClass(this.range, "ui-slider-range");
                } else {
                    this._removeClass(this.range, "ui-slider-range-min ui-slider-range-max");
                    // Handle range switching from true to min/max
                    this.range.css({
                        "left": "",
                        "bottom": ""
                    });
                }
                if (options.range === "min" || options.range === "max") this._addClass(this.range, "ui-slider-range-" + options.range);
            } else {
                if (this.range) this.range.remove();
                this.range = null;
            }
        },
        _setupEvents: function() {
            this._off(this.handles);
            this._on(this.handles, this._handleEvents);
            this._hoverable(this.handles);
            this._focusable(this.handles);
        },
        _destroy: function() {
            this.handles.remove();
            if (this.range) this.range.remove();
            this._mouseDestroy();
        },
        _mouseCapture: function(event) {
            var position, normValue, distance, closestHandle, index, allowed, offset, mouseOverHandle, that = this, o = this.options;
            if (o.disabled) return false;
            this.elementSize = {
                width: this.element.outerWidth(),
                height: this.element.outerHeight()
            };
            this.elementOffset = this.element.offset();
            position = {
                x: event.pageX,
                y: event.pageY
            };
            normValue = this._normValueFromMouse(position);
            distance = this._valueMax() - this._valueMin() + 1;
            this.handles.each(function(i) {
                var thisDistance = Math.abs(normValue - that.values(i));
                if (distance > thisDistance || distance === thisDistance && (i === that._lastChangedValue || that.values(i) === o.min)) {
                    distance = thisDistance;
                    closestHandle = $(this);
                    index = i;
                }
            });
            allowed = this._start(event, index);
            if (allowed === false) return false;
            this._mouseSliding = true;
            this._handleIndex = index;
            this._addClass(closestHandle, null, "ui-state-active");
            closestHandle.trigger("focus");
            offset = closestHandle.offset();
            mouseOverHandle = !$(event.target).parents().addBack().is(".ui-slider-handle");
            this._clickOffset = mouseOverHandle ? {
                left: 0,
                top: 0
            } : {
                left: event.pageX - offset.left - closestHandle.width() / 2,
                top: event.pageY - offset.top - closestHandle.height() / 2 - (parseInt(closestHandle.css("borderTopWidth"), 10) || 0) - (parseInt(closestHandle.css("borderBottomWidth"), 10) || 0) + (parseInt(closestHandle.css("marginTop"), 10) || 0)
            };
            if (!this.handles.hasClass("ui-state-hover")) this._slide(event, index, normValue);
            this._animateOff = true;
            return true;
        },
        _mouseStart: function() {
            return true;
        },
        _mouseDrag: function(event) {
            var position = {
                x: event.pageX,
                y: event.pageY
            }, normValue = this._normValueFromMouse(position);
            this._slide(event, this._handleIndex, normValue);
            return false;
        },
        _mouseStop: function(event) {
            this._removeClass(this.handles, null, "ui-state-active");
            this._mouseSliding = false;
            this._stop(event, this._handleIndex);
            this._change(event, this._handleIndex);
            this._handleIndex = null;
            this._clickOffset = null;
            this._animateOff = false;
            return false;
        },
        _detectOrientation: function() {
            this.orientation = this.options.orientation === "vertical" ? "vertical" : "horizontal";
        },
        _normValueFromMouse: function(position) {
            var pixelTotal, pixelMouse, percentMouse, valueTotal, valueMouse;
            if (this.orientation === "horizontal") {
                pixelTotal = this.elementSize.width;
                pixelMouse = position.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0);
            } else {
                pixelTotal = this.elementSize.height;
                pixelMouse = position.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0);
            }
            percentMouse = pixelMouse / pixelTotal;
            if (percentMouse > 1) percentMouse = 1;
            if (percentMouse < 0) percentMouse = 0;
            if (this.orientation === "vertical") percentMouse = 1 - percentMouse;
            valueTotal = this._valueMax() - this._valueMin();
            valueMouse = this._valueMin() + percentMouse * valueTotal;
            return this._trimAlignValue(valueMouse);
        },
        _uiHash: function(index, value, values) {
            var uiHash = {
                handle: this.handles[index],
                handleIndex: index,
                value: value !== undefined ? value : this.value()
            };
            if (this._hasMultipleValues()) {
                uiHash.value = value !== undefined ? value : this.values(index);
                uiHash.values = values || this.values();
            }
            return uiHash;
        },
        _hasMultipleValues: function() {
            return this.options.values && this.options.values.length;
        },
        _start: function(event, index) {
            return this._trigger("start", event, this._uiHash(index));
        },
        _slide: function(event, index, newVal) {
            var allowed, otherVal, currentValue = this.value(), newValues = this.values();
            if (this._hasMultipleValues()) {
                otherVal = this.values(index ? 0 : 1);
                currentValue = this.values(index);
                if (this.options.values.length === 2 && this.options.range === true) newVal = index === 0 ? Math.min(otherVal, newVal) : Math.max(otherVal, newVal);
                newValues[index] = newVal;
            }
            if (newVal === currentValue) return;
            allowed = this._trigger("slide", event, this._uiHash(index, newVal, newValues));
            // A slide can be canceled by returning false from the slide callback
            if (allowed === false) return;
            if (this._hasMultipleValues()) this.values(index, newVal);
            else this.value(newVal);
        },
        _stop: function(event, index) {
            this._trigger("stop", event, this._uiHash(index));
        },
        _change: function(event, index) {
            if (!this._keySliding && !this._mouseSliding) {
                //store the last changed value index for reference when handles overlap
                this._lastChangedValue = index;
                this._trigger("change", event, this._uiHash(index));
            }
        },
        value: function(newValue) {
            if (arguments.length) {
                this.options.value = this._trimAlignValue(newValue);
                this._refreshValue();
                this._change(null, 0);
                return;
            }
            return this._value();
        },
        values: function(index, newValue) {
            var vals, newValues, i;
            if (arguments.length > 1) {
                this.options.values[index] = this._trimAlignValue(newValue);
                this._refreshValue();
                this._change(null, index);
                return;
            }
            if (arguments.length) {
                if ($.isArray(arguments[0])) {
                    vals = this.options.values;
                    newValues = arguments[0];
                    for(i = 0; i < vals.length; i += 1){
                        vals[i] = this._trimAlignValue(newValues[i]);
                        this._change(null, i);
                    }
                    this._refreshValue();
                } else {
                    if (this._hasMultipleValues()) return this._values(index);
                    else return this.value();
                }
            } else return this._values();
        },
        _setOption: function(key, value) {
            var i, valsLength = 0;
            if (key === "range" && this.options.range === true) {
                if (value === "min") {
                    this.options.value = this._values(0);
                    this.options.values = null;
                } else if (value === "max") {
                    this.options.value = this._values(this.options.values.length - 1);
                    this.options.values = null;
                }
            }
            if ($.isArray(this.options.values)) valsLength = this.options.values.length;
            this._super(key, value);
            switch(key){
                case "orientation":
                    this._detectOrientation();
                    this._removeClass("ui-slider-horizontal ui-slider-vertical")._addClass("ui-slider-" + this.orientation);
                    this._refreshValue();
                    if (this.options.range) this._refreshRange(value);
                    // Reset positioning from previous orientation
                    this.handles.css(value === "horizontal" ? "bottom" : "left", "");
                    break;
                case "value":
                    this._animateOff = true;
                    this._refreshValue();
                    this._change(null, 0);
                    this._animateOff = false;
                    break;
                case "values":
                    this._animateOff = true;
                    this._refreshValue();
                    // Start from the last handle to prevent unreachable handles (#9046)
                    for(i = valsLength - 1; i >= 0; i--)this._change(null, i);
                    this._animateOff = false;
                    break;
                case "step":
                case "min":
                case "max":
                    this._animateOff = true;
                    this._calculateNewMax();
                    this._refreshValue();
                    this._animateOff = false;
                    break;
                case "range":
                    this._animateOff = true;
                    this._refresh();
                    this._animateOff = false;
                    break;
            }
        },
        _setOptionDisabled: function(value) {
            this._super(value);
            this._toggleClass(null, "ui-state-disabled", !!value);
        },
        //internal value getter
        // _value() returns value trimmed by min and max, aligned by step
        _value: function() {
            var val = this.options.value;
            val = this._trimAlignValue(val);
            return val;
        },
        //internal values getter
        // _values() returns array of values trimmed by min and max, aligned by step
        // _values( index ) returns single value trimmed by min and max, aligned by step
        _values: function(index) {
            var val, vals, i;
            if (arguments.length) {
                val = this.options.values[index];
                val = this._trimAlignValue(val);
                return val;
            } else if (this._hasMultipleValues()) {
                // .slice() creates a copy of the array
                // this copy gets trimmed by min and max and then returned
                vals = this.options.values.slice();
                for(i = 0; i < vals.length; i += 1)vals[i] = this._trimAlignValue(vals[i]);
                return vals;
            } else return [];
        },
        // Returns the step-aligned value that val is closest to, between (inclusive) min and max
        _trimAlignValue: function(val) {
            if (val <= this._valueMin()) return this._valueMin();
            if (val >= this._valueMax()) return this._valueMax();
            var step = this.options.step > 0 ? this.options.step : 1, valModStep = (val - this._valueMin()) % step, alignValue = val - valModStep;
            if (Math.abs(valModStep) * 2 >= step) alignValue += valModStep > 0 ? step : -step;
            // Since JavaScript has problems with large floats, round
            // the final value to 5 digits after the decimal point (see #4124)
            return parseFloat(alignValue.toFixed(5));
        },
        _calculateNewMax: function() {
            var max = this.options.max, min = this._valueMin(), step = this.options.step, aboveMin = Math.round((max - min) / step) * step;
            max = aboveMin + min;
            if (max > this.options.max) //If max is not divisible by step, rounding off may increase its value
            max -= step;
            this.max = parseFloat(max.toFixed(this._precision()));
        },
        _precision: function() {
            var precision = this._precisionOf(this.options.step);
            if (this.options.min !== null) precision = Math.max(precision, this._precisionOf(this.options.min));
            return precision;
        },
        _precisionOf: function(num) {
            var str = num.toString(), decimal = str.indexOf(".");
            return decimal === -1 ? 0 : str.length - decimal - 1;
        },
        _valueMin: function() {
            return this.options.min;
        },
        _valueMax: function() {
            return this.max;
        },
        _refreshRange: function(orientation) {
            if (orientation === "vertical") this.range.css({
                "width": "",
                "left": ""
            });
            if (orientation === "horizontal") this.range.css({
                "height": "",
                "bottom": ""
            });
        },
        _refreshValue: function() {
            var lastValPercent, valPercent, value, valueMin, valueMax, oRange = this.options.range, o = this.options, that = this, animate = !this._animateOff ? o.animate : false, _set = {};
            if (this._hasMultipleValues()) this.handles.each(function(i) {
                valPercent = (that.values(i) - that._valueMin()) / (that._valueMax() - that._valueMin()) * 100;
                _set[that.orientation === "horizontal" ? "left" : "bottom"] = valPercent + "%";
                $(this).stop(1, 1)[animate ? "animate" : "css"](_set, o.animate);
                if (that.options.range === true) {
                    if (that.orientation === "horizontal") {
                        if (i === 0) that.range.stop(1, 1)[animate ? "animate" : "css"]({
                            left: valPercent + "%"
                        }, o.animate);
                        if (i === 1) that.range[animate ? "animate" : "css"]({
                            width: valPercent - lastValPercent + "%"
                        }, {
                            queue: false,
                            duration: o.animate
                        });
                    } else {
                        if (i === 0) that.range.stop(1, 1)[animate ? "animate" : "css"]({
                            bottom: valPercent + "%"
                        }, o.animate);
                        if (i === 1) that.range[animate ? "animate" : "css"]({
                            height: valPercent - lastValPercent + "%"
                        }, {
                            queue: false,
                            duration: o.animate
                        });
                    }
                }
                lastValPercent = valPercent;
            });
            else {
                value = this.value();
                valueMin = this._valueMin();
                valueMax = this._valueMax();
                valPercent = valueMax !== valueMin ? (value - valueMin) / (valueMax - valueMin) * 100 : 0;
                _set[this.orientation === "horizontal" ? "left" : "bottom"] = valPercent + "%";
                this.handle.stop(1, 1)[animate ? "animate" : "css"](_set, o.animate);
                if (oRange === "min" && this.orientation === "horizontal") this.range.stop(1, 1)[animate ? "animate" : "css"]({
                    width: valPercent + "%"
                }, o.animate);
                if (oRange === "max" && this.orientation === "horizontal") this.range.stop(1, 1)[animate ? "animate" : "css"]({
                    width: 100 - valPercent + "%"
                }, o.animate);
                if (oRange === "min" && this.orientation === "vertical") this.range.stop(1, 1)[animate ? "animate" : "css"]({
                    height: valPercent + "%"
                }, o.animate);
                if (oRange === "max" && this.orientation === "vertical") this.range.stop(1, 1)[animate ? "animate" : "css"]({
                    height: 100 - valPercent + "%"
                }, o.animate);
            }
        },
        _handleEvents: {
            keydown: function(event) {
                var allowed, curVal, newVal, step, index = $(event.target).data("ui-slider-handle-index");
                switch(event.keyCode){
                    case $.ui.keyCode.HOME:
                    case $.ui.keyCode.END:
                    case $.ui.keyCode.PAGE_UP:
                    case $.ui.keyCode.PAGE_DOWN:
                    case $.ui.keyCode.UP:
                    case $.ui.keyCode.RIGHT:
                    case $.ui.keyCode.DOWN:
                    case $.ui.keyCode.LEFT:
                        event.preventDefault();
                        if (!this._keySliding) {
                            this._keySliding = true;
                            this._addClass($(event.target), null, "ui-state-active");
                            allowed = this._start(event, index);
                            if (allowed === false) return;
                        }
                        break;
                }
                step = this.options.step;
                if (this._hasMultipleValues()) curVal = newVal = this.values(index);
                else curVal = newVal = this.value();
                switch(event.keyCode){
                    case $.ui.keyCode.HOME:
                        newVal = this._valueMin();
                        break;
                    case $.ui.keyCode.END:
                        newVal = this._valueMax();
                        break;
                    case $.ui.keyCode.PAGE_UP:
                        newVal = this._trimAlignValue(curVal + (this._valueMax() - this._valueMin()) / this.numPages);
                        break;
                    case $.ui.keyCode.PAGE_DOWN:
                        newVal = this._trimAlignValue(curVal - (this._valueMax() - this._valueMin()) / this.numPages);
                        break;
                    case $.ui.keyCode.UP:
                    case $.ui.keyCode.RIGHT:
                        if (curVal === this._valueMax()) return;
                        newVal = this._trimAlignValue(curVal + step);
                        break;
                    case $.ui.keyCode.DOWN:
                    case $.ui.keyCode.LEFT:
                        if (curVal === this._valueMin()) return;
                        newVal = this._trimAlignValue(curVal - step);
                        break;
                }
                this._slide(event, index, newVal);
            },
            keyup: function(event) {
                var index = $(event.target).data("ui-slider-handle-index");
                if (this._keySliding) {
                    this._keySliding = false;
                    this._stop(event, index);
                    this._change(event, index);
                    this._removeClass($(event.target), null, "ui-state-active");
                }
            }
        }
    });
    /*!
 * jQuery UI Sortable 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Sortable
    //>>group: Interactions
    //>>description: Enables items in a list to be sorted using the mouse.
    //>>docs: http://api.jqueryui.com/sortable/
    //>>demos: http://jqueryui.com/sortable/
    //>>css.structure: ../../themes/base/sortable.css
    var widgetsSortable = $.widget("ui.sortable", $.ui.mouse, {
        version: "1.12.1",
        widgetEventPrefix: "sort",
        ready: false,
        options: {
            appendTo: "parent",
            axis: false,
            connectWith: false,
            containment: false,
            cursor: "auto",
            cursorAt: false,
            dropOnEmpty: true,
            forcePlaceholderSize: false,
            forceHelperSize: false,
            grid: false,
            handle: false,
            helper: "original",
            items: "> *",
            opacity: false,
            placeholder: false,
            revert: false,
            scroll: true,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            scope: "default",
            tolerance: "intersect",
            zIndex: 1000,
            // Callbacks
            activate: null,
            beforeStop: null,
            change: null,
            deactivate: null,
            out: null,
            over: null,
            receive: null,
            remove: null,
            sort: null,
            start: null,
            stop: null,
            update: null
        },
        _isOverAxis: function(x, reference, size) {
            return x >= reference && x < reference + size;
        },
        _isFloating: function(item) {
            return /left|right/.test(item.css("float")) || /inline|table-cell/.test(item.css("display"));
        },
        _create: function() {
            this.containerCache = {};
            this._addClass("ui-sortable");
            //Get the items
            this.refresh();
            //Let's determine the parent's offset
            this.offset = this.element.offset();
            //Initialize mouse events for interaction
            this._mouseInit();
            this._setHandleClassName();
            //We're ready to go
            this.ready = true;
        },
        _setOption: function(key, value) {
            this._super(key, value);
            if (key === "handle") this._setHandleClassName();
        },
        _setHandleClassName: function() {
            var that = this;
            this._removeClass(this.element.find(".ui-sortable-handle"), "ui-sortable-handle");
            $.each(this.items, function() {
                that._addClass(this.instance.options.handle ? this.item.find(this.instance.options.handle) : this.item, "ui-sortable-handle");
            });
        },
        _destroy: function() {
            this._mouseDestroy();
            for(var i = this.items.length - 1; i >= 0; i--)this.items[i].item.removeData(this.widgetName + "-item");
            return this;
        },
        _mouseCapture: function(event, overrideHandle) {
            var currentItem = null, validHandle = false, that = this;
            if (this.reverting) return false;
            if (this.options.disabled || this.options.type === "static") return false;
            //We have to refresh the items data once first
            this._refreshItems(event);
            //Find out if the clicked node (or one of its parents) is a actual item in this.items
            $(event.target).parents().each(function() {
                if ($.data(this, that.widgetName + "-item") === that) {
                    currentItem = $(this);
                    return false;
                }
            });
            if ($.data(event.target, that.widgetName + "-item") === that) currentItem = $(event.target);
            if (!currentItem) return false;
            if (this.options.handle && !overrideHandle) {
                $(this.options.handle, currentItem).find("*").addBack().each(function() {
                    if (this === event.target) validHandle = true;
                });
                if (!validHandle) return false;
            }
            this.currentItem = currentItem;
            this._removeCurrentsFromItems();
            return true;
        },
        _mouseStart: function(event, overrideHandle, noActivation) {
            var i, body, o = this.options;
            this.currentContainer = this;
            //We only need to call refreshPositions, because the refreshItems call has been moved to
            // mouseCapture
            this.refreshPositions();
            //Create and append the visible helper
            this.helper = this._createHelper(event);
            //Cache the helper size
            this._cacheHelperProportions();
            /*
		 * - Position generation -
		 * This block generates everything position related - it's the core of draggables.
		 */ //Cache the margins of the original element
            this._cacheMargins();
            //Get the next scrolling parent
            this.scrollParent = this.helper.scrollParent();
            //The element's absolute position on the page minus margins
            this.offset = this.currentItem.offset();
            this.offset = {
                top: this.offset.top - this.margins.top,
                left: this.offset.left - this.margins.left
            };
            $.extend(this.offset, {
                click: {
                    left: event.pageX - this.offset.left,
                    top: event.pageY - this.offset.top
                },
                parent: this._getParentOffset(),
                // This is a relative to absolute position minus the actual position calculation -
                // only used for relative positioned helper
                relative: this._getRelativeOffset()
            });
            // Only after we got the offset, we can change the helper's position to absolute
            // TODO: Still need to figure out a way to make relative sorting possible
            this.helper.css("position", "absolute");
            this.cssPosition = this.helper.css("position");
            //Generate the original position
            this.originalPosition = this._generatePosition(event);
            this.originalPageX = event.pageX;
            this.originalPageY = event.pageY;
            o.cursorAt && this._adjustOffsetFromHelper(o.cursorAt);
            //Cache the former DOM position
            this.domPosition = {
                prev: this.currentItem.prev()[0],
                parent: this.currentItem.parent()[0]
            };
            // If the helper is not the original, hide the original so it's not playing any role during
            // the drag, won't cause anything bad this way
            if (this.helper[0] !== this.currentItem[0]) this.currentItem.hide();
            //Create the placeholder
            this._createPlaceholder();
            //Set a containment if given in the options
            if (o.containment) this._setContainment();
            if (o.cursor && o.cursor !== "auto") {
                body = this.document.find("body");
                // Support: IE
                this.storedCursor = body.css("cursor");
                body.css("cursor", o.cursor);
                this.storedStylesheet = $("<style>*{ cursor: " + o.cursor + " !important; }</style>").appendTo(body);
            }
            if (o.opacity) {
                if (this.helper.css("opacity")) this._storedOpacity = this.helper.css("opacity");
                this.helper.css("opacity", o.opacity);
            }
            if (o.zIndex) {
                if (this.helper.css("zIndex")) this._storedZIndex = this.helper.css("zIndex");
                this.helper.css("zIndex", o.zIndex);
            }
            //Prepare scrolling
            if (this.scrollParent[0] !== this.document[0] && this.scrollParent[0].tagName !== "HTML") this.overflowOffset = this.scrollParent.offset();
            //Call callbacks
            this._trigger("start", event, this._uiHash());
            //Recache the helper size
            if (!this._preserveHelperProportions) this._cacheHelperProportions();
            //Post "activate" events to possible containers
            if (!noActivation) for(i = this.containers.length - 1; i >= 0; i--)this.containers[i]._trigger("activate", event, this._uiHash(this));
            //Prepare possible droppables
            if ($.ui.ddmanager) $.ui.ddmanager.current = this;
            if ($.ui.ddmanager && !o.dropBehaviour) $.ui.ddmanager.prepareOffsets(this, event);
            this.dragging = true;
            this._addClass(this.helper, "ui-sortable-helper");
            // Execute the drag once - this causes the helper not to be visiblebefore getting its
            // correct position
            this._mouseDrag(event);
            return true;
        },
        _mouseDrag: function(event) {
            var i, item, itemElement, intersection, o = this.options, scrolled = false;
            //Compute the helpers position
            this.position = this._generatePosition(event);
            this.positionAbs = this._convertPositionTo("absolute");
            if (!this.lastPositionAbs) this.lastPositionAbs = this.positionAbs;
            //Do scrolling
            if (this.options.scroll) {
                if (this.scrollParent[0] !== this.document[0] && this.scrollParent[0].tagName !== "HTML") {
                    if (this.overflowOffset.top + this.scrollParent[0].offsetHeight - event.pageY < o.scrollSensitivity) this.scrollParent[0].scrollTop = scrolled = this.scrollParent[0].scrollTop + o.scrollSpeed;
                    else if (event.pageY - this.overflowOffset.top < o.scrollSensitivity) this.scrollParent[0].scrollTop = scrolled = this.scrollParent[0].scrollTop - o.scrollSpeed;
                    if (this.overflowOffset.left + this.scrollParent[0].offsetWidth - event.pageX < o.scrollSensitivity) this.scrollParent[0].scrollLeft = scrolled = this.scrollParent[0].scrollLeft + o.scrollSpeed;
                    else if (event.pageX - this.overflowOffset.left < o.scrollSensitivity) this.scrollParent[0].scrollLeft = scrolled = this.scrollParent[0].scrollLeft - o.scrollSpeed;
                } else {
                    if (event.pageY - this.document.scrollTop() < o.scrollSensitivity) scrolled = this.document.scrollTop(this.document.scrollTop() - o.scrollSpeed);
                    else if (this.window.height() - (event.pageY - this.document.scrollTop()) < o.scrollSensitivity) scrolled = this.document.scrollTop(this.document.scrollTop() + o.scrollSpeed);
                    if (event.pageX - this.document.scrollLeft() < o.scrollSensitivity) scrolled = this.document.scrollLeft(this.document.scrollLeft() - o.scrollSpeed);
                    else if (this.window.width() - (event.pageX - this.document.scrollLeft()) < o.scrollSensitivity) scrolled = this.document.scrollLeft(this.document.scrollLeft() + o.scrollSpeed);
                }
                if (scrolled !== false && $.ui.ddmanager && !o.dropBehaviour) $.ui.ddmanager.prepareOffsets(this, event);
            }
            //Regenerate the absolute position used for position checks
            this.positionAbs = this._convertPositionTo("absolute");
            //Set the helper position
            if (!this.options.axis || this.options.axis !== "y") this.helper[0].style.left = this.position.left + "px";
            if (!this.options.axis || this.options.axis !== "x") this.helper[0].style.top = this.position.top + "px";
            //Rearrange
            for(i = this.items.length - 1; i >= 0; i--){
                //Cache variables and intersection, continue if no intersection
                item = this.items[i];
                itemElement = item.item[0];
                intersection = this._intersectsWithPointer(item);
                if (!intersection) continue;
                // Only put the placeholder inside the current Container, skip all
                // items from other containers. This works because when moving
                // an item from one container to another the
                // currentContainer is switched before the placeholder is moved.
                //
                // Without this, moving items in "sub-sortables" can cause
                // the placeholder to jitter between the outer and inner container.
                if (item.instance !== this.currentContainer) continue;
                // Cannot intersect with itself
                // no useless actions that have been done before
                // no action if the item moved is the parent of the item checked
                if (itemElement !== this.currentItem[0] && this.placeholder[intersection === 1 ? "next" : "prev"]()[0] !== itemElement && !$.contains(this.placeholder[0], itemElement) && (this.options.type === "semi-dynamic" ? !$.contains(this.element[0], itemElement) : true)) {
                    this.direction = intersection === 1 ? "down" : "up";
                    if (this.options.tolerance === "pointer" || this._intersectsWithSides(item)) this._rearrange(event, item);
                    else break;
                    this._trigger("change", event, this._uiHash());
                    break;
                }
            }
            //Post events to containers
            this._contactContainers(event);
            //Interconnect with droppables
            if ($.ui.ddmanager) $.ui.ddmanager.drag(this, event);
            //Call callbacks
            this._trigger("sort", event, this._uiHash());
            this.lastPositionAbs = this.positionAbs;
            return false;
        },
        _mouseStop: function(event, noPropagation) {
            if (!event) return;
            //If we are using droppables, inform the manager about the drop
            if ($.ui.ddmanager && !this.options.dropBehaviour) $.ui.ddmanager.drop(this, event);
            if (this.options.revert) {
                var that = this, cur = this.placeholder.offset(), axis = this.options.axis, animation = {};
                if (!axis || axis === "x") animation.left = cur.left - this.offset.parent.left - this.margins.left + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollLeft);
                if (!axis || axis === "y") animation.top = cur.top - this.offset.parent.top - this.margins.top + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollTop);
                this.reverting = true;
                $(this.helper).animate(animation, parseInt(this.options.revert, 10) || 500, function() {
                    that._clear(event);
                });
            } else this._clear(event, noPropagation);
            return false;
        },
        cancel: function() {
            if (this.dragging) {
                this._mouseUp(new $.Event("mouseup", {
                    target: null
                }));
                if (this.options.helper === "original") {
                    this.currentItem.css(this._storedCSS);
                    this._removeClass(this.currentItem, "ui-sortable-helper");
                } else this.currentItem.show();
                //Post deactivating events to containers
                for(var i = this.containers.length - 1; i >= 0; i--){
                    this.containers[i]._trigger("deactivate", null, this._uiHash(this));
                    if (this.containers[i].containerCache.over) {
                        this.containers[i]._trigger("out", null, this._uiHash(this));
                        this.containers[i].containerCache.over = 0;
                    }
                }
            }
            if (this.placeholder) {
                //$(this.placeholder[0]).remove(); would have been the jQuery way - unfortunately,
                // it unbinds ALL events from the original node!
                if (this.placeholder[0].parentNode) this.placeholder[0].parentNode.removeChild(this.placeholder[0]);
                if (this.options.helper !== "original" && this.helper && this.helper[0].parentNode) this.helper.remove();
                $.extend(this, {
                    helper: null,
                    dragging: false,
                    reverting: false,
                    _noFinalSort: null
                });
                if (this.domPosition.prev) $(this.domPosition.prev).after(this.currentItem);
                else $(this.domPosition.parent).prepend(this.currentItem);
            }
            return this;
        },
        serialize: function(o) {
            var items = this._getItemsAsjQuery(o && o.connected), str = [];
            o = o || {};
            $(items).each(function() {
                var res = ($(o.item || this).attr(o.attribute || "id") || "").match(o.expression || /(.+)[\-=_](.+)/);
                if (res) str.push((o.key || res[1] + "[]") + "=" + (o.key && o.expression ? res[1] : res[2]));
            });
            if (!str.length && o.key) str.push(o.key + "=");
            return str.join("&");
        },
        toArray: function(o) {
            var items = this._getItemsAsjQuery(o && o.connected), ret = [];
            o = o || {};
            items.each(function() {
                ret.push($(o.item || this).attr(o.attribute || "id") || "");
            });
            return ret;
        },
        /* Be careful with the following core functions */ _intersectsWith: function(item) {
            var x1 = this.positionAbs.left, x2 = x1 + this.helperProportions.width, y1 = this.positionAbs.top, y2 = y1 + this.helperProportions.height, l = item.left, r = l + item.width, t = item.top, b = t + item.height, dyClick = this.offset.click.top, dxClick = this.offset.click.left, isOverElementHeight = this.options.axis === "x" || y1 + dyClick > t && y1 + dyClick < b, isOverElementWidth = this.options.axis === "y" || x1 + dxClick > l && x1 + dxClick < r, isOverElement = isOverElementHeight && isOverElementWidth;
            if (this.options.tolerance === "pointer" || this.options.forcePointerForContainers || this.options.tolerance !== "pointer" && this.helperProportions[this.floating ? "width" : "height"] > item[this.floating ? "width" : "height"]) return isOverElement;
            else return l < x1 + this.helperProportions.width / 2 && x2 - this.helperProportions.width / 2 < r && t < y1 + this.helperProportions.height / 2 && y2 - this.helperProportions.height / 2 < b; // Top Half
        },
        _intersectsWithPointer: function(item) {
            var verticalDirection, horizontalDirection, isOverElementHeight = this.options.axis === "x" || this._isOverAxis(this.positionAbs.top + this.offset.click.top, item.top, item.height), isOverElementWidth = this.options.axis === "y" || this._isOverAxis(this.positionAbs.left + this.offset.click.left, item.left, item.width), isOverElement = isOverElementHeight && isOverElementWidth;
            if (!isOverElement) return false;
            verticalDirection = this._getDragVerticalDirection();
            horizontalDirection = this._getDragHorizontalDirection();
            return this.floating ? horizontalDirection === "right" || verticalDirection === "down" ? 2 : 1 : verticalDirection && (verticalDirection === "down" ? 2 : 1);
        },
        _intersectsWithSides: function(item) {
            var isOverBottomHalf = this._isOverAxis(this.positionAbs.top + this.offset.click.top, item.top + item.height / 2, item.height), isOverRightHalf = this._isOverAxis(this.positionAbs.left + this.offset.click.left, item.left + item.width / 2, item.width), verticalDirection = this._getDragVerticalDirection(), horizontalDirection = this._getDragHorizontalDirection();
            if (this.floating && horizontalDirection) return horizontalDirection === "right" && isOverRightHalf || horizontalDirection === "left" && !isOverRightHalf;
            else return verticalDirection && (verticalDirection === "down" && isOverBottomHalf || verticalDirection === "up" && !isOverBottomHalf);
        },
        _getDragVerticalDirection: function() {
            var delta = this.positionAbs.top - this.lastPositionAbs.top;
            return delta !== 0 && (delta > 0 ? "down" : "up");
        },
        _getDragHorizontalDirection: function() {
            var delta = this.positionAbs.left - this.lastPositionAbs.left;
            return delta !== 0 && (delta > 0 ? "right" : "left");
        },
        refresh: function(event) {
            this._refreshItems(event);
            this._setHandleClassName();
            this.refreshPositions();
            return this;
        },
        _connectWith: function() {
            var options = this.options;
            return options.connectWith.constructor === String ? [
                options.connectWith
            ] : options.connectWith;
        },
        _getItemsAsjQuery: function(connected) {
            var i, j, cur, inst, items = [], queries = [], connectWith = this._connectWith();
            if (connectWith && connected) for(i = connectWith.length - 1; i >= 0; i--){
                cur = $(connectWith[i], this.document[0]);
                for(j = cur.length - 1; j >= 0; j--){
                    inst = $.data(cur[j], this.widgetFullName);
                    if (inst && inst !== this && !inst.options.disabled) queries.push([
                        $.isFunction(inst.options.items) ? inst.options.items.call(inst.element) : $(inst.options.items, inst.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),
                        inst
                    ]);
                }
            }
            queries.push([
                $.isFunction(this.options.items) ? this.options.items.call(this.element, null, {
                    options: this.options,
                    item: this.currentItem
                }) : $(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),
                this
            ]);
            function addItems() {
                items.push(this);
            }
            for(i = queries.length - 1; i >= 0; i--)queries[i][0].each(addItems);
            return $(items);
        },
        _removeCurrentsFromItems: function() {
            var list = this.currentItem.find(":data(" + this.widgetName + "-item)");
            this.items = $.grep(this.items, function(item) {
                for(var j = 0; j < list.length; j++){
                    if (list[j] === item.item[0]) return false;
                }
                return true;
            });
        },
        _refreshItems: function(event) {
            this.items = [];
            this.containers = [
                this
            ];
            var i, j, cur, inst, targetData, _queries, item, queriesLength, items = this.items, queries = [
                [
                    $.isFunction(this.options.items) ? this.options.items.call(this.element[0], event, {
                        item: this.currentItem
                    }) : $(this.options.items, this.element),
                    this
                ]
            ], connectWith = this._connectWith();
            //Shouldn't be run the first time through due to massive slow-down
            if (connectWith && this.ready) for(i = connectWith.length - 1; i >= 0; i--){
                cur = $(connectWith[i], this.document[0]);
                for(j = cur.length - 1; j >= 0; j--){
                    inst = $.data(cur[j], this.widgetFullName);
                    if (inst && inst !== this && !inst.options.disabled) {
                        queries.push([
                            $.isFunction(inst.options.items) ? inst.options.items.call(inst.element[0], event, {
                                item: this.currentItem
                            }) : $(inst.options.items, inst.element),
                            inst
                        ]);
                        this.containers.push(inst);
                    }
                }
            }
            for(i = queries.length - 1; i >= 0; i--){
                targetData = queries[i][1];
                _queries = queries[i][0];
                for(j = 0, queriesLength = _queries.length; j < queriesLength; j++){
                    item = $(_queries[j]);
                    // Data for target checking (mouse manager)
                    item.data(this.widgetName + "-item", targetData);
                    items.push({
                        item: item,
                        instance: targetData,
                        width: 0,
                        height: 0,
                        left: 0,
                        top: 0
                    });
                }
            }
        },
        refreshPositions: function(fast) {
            // Determine whether items are being displayed horizontally
            this.floating = this.items.length ? this.options.axis === "x" || this._isFloating(this.items[0].item) : false;
            //This has to be redone because due to the item being moved out/into the offsetParent,
            // the offsetParent's position will change
            if (this.offsetParent && this.helper) this.offset.parent = this._getParentOffset();
            var i, item, t, p;
            for(i = this.items.length - 1; i >= 0; i--){
                item = this.items[i];
                //We ignore calculating positions of all connected containers when we're not over them
                if (item.instance !== this.currentContainer && this.currentContainer && item.item[0] !== this.currentItem[0]) continue;
                t = this.options.toleranceElement ? $(this.options.toleranceElement, item.item) : item.item;
                if (!fast) {
                    item.width = t.outerWidth();
                    item.height = t.outerHeight();
                }
                p = t.offset();
                item.left = p.left;
                item.top = p.top;
            }
            if (this.options.custom && this.options.custom.refreshContainers) this.options.custom.refreshContainers.call(this);
            else for(i = this.containers.length - 1; i >= 0; i--){
                p = this.containers[i].element.offset();
                this.containers[i].containerCache.left = p.left;
                this.containers[i].containerCache.top = p.top;
                this.containers[i].containerCache.width = this.containers[i].element.outerWidth();
                this.containers[i].containerCache.height = this.containers[i].element.outerHeight();
            }
            return this;
        },
        _createPlaceholder: function(that) {
            that = that || this;
            var className, o = that.options;
            if (!o.placeholder || o.placeholder.constructor === String) {
                className = o.placeholder;
                o.placeholder = {
                    element: function() {
                        var nodeName = that.currentItem[0].nodeName.toLowerCase(), element = $("<" + nodeName + ">", that.document[0]);
                        that._addClass(element, "ui-sortable-placeholder", className || that.currentItem[0].className)._removeClass(element, "ui-sortable-helper");
                        if (nodeName === "tbody") that._createTrPlaceholder(that.currentItem.find("tr").eq(0), $("<tr>", that.document[0]).appendTo(element));
                        else if (nodeName === "tr") that._createTrPlaceholder(that.currentItem, element);
                        else if (nodeName === "img") element.attr("src", that.currentItem.attr("src"));
                        if (!className) element.css("visibility", "hidden");
                        return element;
                    },
                    update: function(container, p) {
                        // 1. If a className is set as 'placeholder option, we don't force sizes -
                        // the class is responsible for that
                        // 2. The option 'forcePlaceholderSize can be enabled to force it even if a
                        // class name is specified
                        if (className && !o.forcePlaceholderSize) return;
                        //If the element doesn't have a actual height by itself (without styles coming
                        // from a stylesheet), it receives the inline height from the dragged item
                        if (!p.height()) p.height(that.currentItem.innerHeight() - parseInt(that.currentItem.css("paddingTop") || 0, 10) - parseInt(that.currentItem.css("paddingBottom") || 0, 10));
                        if (!p.width()) p.width(that.currentItem.innerWidth() - parseInt(that.currentItem.css("paddingLeft") || 0, 10) - parseInt(that.currentItem.css("paddingRight") || 0, 10));
                    }
                };
            }
            //Create the placeholder
            that.placeholder = $(o.placeholder.element.call(that.element, that.currentItem));
            //Append it after the actual current item
            that.currentItem.after(that.placeholder);
            //Update the size of the placeholder (TODO: Logic to fuzzy, see line 316/317)
            o.placeholder.update(that, that.placeholder);
        },
        _createTrPlaceholder: function(sourceTr, targetTr) {
            var that = this;
            sourceTr.children().each(function() {
                $("<td>&#160;</td>", that.document[0]).attr("colspan", $(this).attr("colspan") || 1).appendTo(targetTr);
            });
        },
        _contactContainers: function(event) {
            var i, j, dist, itemWithLeastDistance, posProperty, sizeProperty, cur, nearBottom, floating, axis, innermostContainer = null, innermostIndex = null;
            // Get innermost container that intersects with item
            for(i = this.containers.length - 1; i >= 0; i--){
                // Never consider a container that's located within the item itself
                if ($.contains(this.currentItem[0], this.containers[i].element[0])) continue;
                if (this._intersectsWith(this.containers[i].containerCache)) {
                    // If we've already found a container and it's more "inner" than this, then continue
                    if (innermostContainer && $.contains(this.containers[i].element[0], innermostContainer.element[0])) continue;
                    innermostContainer = this.containers[i];
                    innermostIndex = i;
                } else // container doesn't intersect. trigger "out" event if necessary
                if (this.containers[i].containerCache.over) {
                    this.containers[i]._trigger("out", event, this._uiHash(this));
                    this.containers[i].containerCache.over = 0;
                }
            }
            // If no intersecting containers found, return
            if (!innermostContainer) return;
            // Move the item into the container if it's not there already
            if (this.containers.length === 1) {
                if (!this.containers[innermostIndex].containerCache.over) {
                    this.containers[innermostIndex]._trigger("over", event, this._uiHash(this));
                    this.containers[innermostIndex].containerCache.over = 1;
                }
            } else {
                // When entering a new container, we will find the item with the least distance and
                // append our item near it
                dist = 10000;
                itemWithLeastDistance = null;
                floating = innermostContainer.floating || this._isFloating(this.currentItem);
                posProperty = floating ? "left" : "top";
                sizeProperty = floating ? "width" : "height";
                axis = floating ? "pageX" : "pageY";
                for(j = this.items.length - 1; j >= 0; j--){
                    if (!$.contains(this.containers[innermostIndex].element[0], this.items[j].item[0])) continue;
                    if (this.items[j].item[0] === this.currentItem[0]) continue;
                    cur = this.items[j].item.offset()[posProperty];
                    nearBottom = false;
                    if (event[axis] - cur > this.items[j][sizeProperty] / 2) nearBottom = true;
                    if (Math.abs(event[axis] - cur) < dist) {
                        dist = Math.abs(event[axis] - cur);
                        itemWithLeastDistance = this.items[j];
                        this.direction = nearBottom ? "up" : "down";
                    }
                }
                //Check if dropOnEmpty is enabled
                if (!itemWithLeastDistance && !this.options.dropOnEmpty) return;
                if (this.currentContainer === this.containers[innermostIndex]) {
                    if (!this.currentContainer.containerCache.over) {
                        this.containers[innermostIndex]._trigger("over", event, this._uiHash());
                        this.currentContainer.containerCache.over = 1;
                    }
                    return;
                }
                itemWithLeastDistance ? this._rearrange(event, itemWithLeastDistance, null, true) : this._rearrange(event, null, this.containers[innermostIndex].element, true);
                this._trigger("change", event, this._uiHash());
                this.containers[innermostIndex]._trigger("change", event, this._uiHash(this));
                this.currentContainer = this.containers[innermostIndex];
                //Update the placeholder
                this.options.placeholder.update(this.currentContainer, this.placeholder);
                this.containers[innermostIndex]._trigger("over", event, this._uiHash(this));
                this.containers[innermostIndex].containerCache.over = 1;
            }
        },
        _createHelper: function(event) {
            var o = this.options, helper = $.isFunction(o.helper) ? $(o.helper.apply(this.element[0], [
                event,
                this.currentItem
            ])) : o.helper === "clone" ? this.currentItem.clone() : this.currentItem;
            //Add the helper to the DOM if that didn't happen already
            if (!helper.parents("body").length) $(o.appendTo !== "parent" ? o.appendTo : this.currentItem[0].parentNode)[0].appendChild(helper[0]);
            if (helper[0] === this.currentItem[0]) this._storedCSS = {
                width: this.currentItem[0].style.width,
                height: this.currentItem[0].style.height,
                position: this.currentItem.css("position"),
                top: this.currentItem.css("top"),
                left: this.currentItem.css("left")
            };
            if (!helper[0].style.width || o.forceHelperSize) helper.width(this.currentItem.width());
            if (!helper[0].style.height || o.forceHelperSize) helper.height(this.currentItem.height());
            return helper;
        },
        _adjustOffsetFromHelper: function(obj) {
            if (typeof obj === "string") obj = obj.split(" ");
            if ($.isArray(obj)) obj = {
                left: +obj[0],
                top: +obj[1] || 0
            };
            if ("left" in obj) this.offset.click.left = obj.left + this.margins.left;
            if ("right" in obj) this.offset.click.left = this.helperProportions.width - obj.right + this.margins.left;
            if ("top" in obj) this.offset.click.top = obj.top + this.margins.top;
            if ("bottom" in obj) this.offset.click.top = this.helperProportions.height - obj.bottom + this.margins.top;
        },
        _getParentOffset: function() {
            //Get the offsetParent and cache its position
            this.offsetParent = this.helper.offsetParent();
            var po = this.offsetParent.offset();
            // This is a special case where we need to modify a offset calculated on start, since the
            // following happened:
            // 1. The position of the helper is absolute, so it's position is calculated based on the
            // next positioned parent
            // 2. The actual offset parent is a child of the scroll parent, and the scroll parent isn't
            // the document, which means that the scroll is included in the initial calculation of the
            // offset of the parent, and never recalculated upon drag
            if (this.cssPosition === "absolute" && this.scrollParent[0] !== this.document[0] && $.contains(this.scrollParent[0], this.offsetParent[0])) {
                po.left += this.scrollParent.scrollLeft();
                po.top += this.scrollParent.scrollTop();
            }
            // This needs to be actually done for all browsers, since pageX/pageY includes this
            // information with an ugly IE fix
            if (this.offsetParent[0] === this.document[0].body || this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() === "html" && $.ui.ie) po = {
                top: 0,
                left: 0
            };
            return {
                top: po.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: po.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            };
        },
        _getRelativeOffset: function() {
            if (this.cssPosition === "relative") {
                var p = this.currentItem.position();
                return {
                    top: p.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
                    left: p.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
                };
            } else return {
                top: 0,
                left: 0
            };
        },
        _cacheMargins: function() {
            this.margins = {
                left: parseInt(this.currentItem.css("marginLeft"), 10) || 0,
                top: parseInt(this.currentItem.css("marginTop"), 10) || 0
            };
        },
        _cacheHelperProportions: function() {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            };
        },
        _setContainment: function() {
            var ce, co, over, o = this.options;
            if (o.containment === "parent") o.containment = this.helper[0].parentNode;
            if (o.containment === "document" || o.containment === "window") this.containment = [
                0 - this.offset.relative.left - this.offset.parent.left,
                0 - this.offset.relative.top - this.offset.parent.top,
                o.containment === "document" ? this.document.width() : this.window.width() - this.helperProportions.width - this.margins.left,
                (o.containment === "document" ? this.document.height() || document.body.parentNode.scrollHeight : this.window.height() || this.document[0].body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top
            ];
            if (!/^(document|window|parent)$/.test(o.containment)) {
                ce = $(o.containment)[0];
                co = $(o.containment).offset();
                over = $(ce).css("overflow") !== "hidden";
                this.containment = [
                    co.left + (parseInt($(ce).css("borderLeftWidth"), 10) || 0) + (parseInt($(ce).css("paddingLeft"), 10) || 0) - this.margins.left,
                    co.top + (parseInt($(ce).css("borderTopWidth"), 10) || 0) + (parseInt($(ce).css("paddingTop"), 10) || 0) - this.margins.top,
                    co.left + (over ? Math.max(ce.scrollWidth, ce.offsetWidth) : ce.offsetWidth) - (parseInt($(ce).css("borderLeftWidth"), 10) || 0) - (parseInt($(ce).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left,
                    co.top + (over ? Math.max(ce.scrollHeight, ce.offsetHeight) : ce.offsetHeight) - (parseInt($(ce).css("borderTopWidth"), 10) || 0) - (parseInt($(ce).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top
                ];
            }
        },
        _convertPositionTo: function(d, pos) {
            if (!pos) pos = this.position;
            var mod = d === "absolute" ? 1 : -1, scroll = this.cssPosition === "absolute" && !(this.scrollParent[0] !== this.document[0] && $.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent, scrollIsRootNode = /(html|body)/i.test(scroll[0].tagName);
            return {
                top: // The absolute mouse position
                pos.top + // Only for relative positioned nodes: Relative offset from element to offset parent
                this.offset.relative.top * mod + // The offsetParent's offset without borders (offset + border)
                this.offset.parent.top * mod - (this.cssPosition === "fixed" ? -this.scrollParent.scrollTop() : scrollIsRootNode ? 0 : scroll.scrollTop()) * mod,
                left: // The absolute mouse position
                pos.left + // Only for relative positioned nodes: Relative offset from element to offset parent
                this.offset.relative.left * mod + // The offsetParent's offset without borders (offset + border)
                this.offset.parent.left * mod - (this.cssPosition === "fixed" ? -this.scrollParent.scrollLeft() : scrollIsRootNode ? 0 : scroll.scrollLeft()) * mod
            };
        },
        _generatePosition: function(event) {
            var top, left, o = this.options, pageX = event.pageX, pageY = event.pageY, scroll = this.cssPosition === "absolute" && !(this.scrollParent[0] !== this.document[0] && $.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent, scrollIsRootNode = /(html|body)/i.test(scroll[0].tagName);
            // This is another very weird special case that only happens for relative elements:
            // 1. If the css position is relative
            // 2. and the scroll parent is the document or similar to the offset parent
            // we have to refresh the relative offset during the scroll so there are no jumps
            if (this.cssPosition === "relative" && !(this.scrollParent[0] !== this.document[0] && this.scrollParent[0] !== this.offsetParent[0])) this.offset.relative = this._getRelativeOffset();
            /*
		 * - Position constraining -
		 * Constrain the position to a mix of grid, containment.
		 */ if (this.originalPosition) {
                if (this.containment) {
                    if (event.pageX - this.offset.click.left < this.containment[0]) pageX = this.containment[0] + this.offset.click.left;
                    if (event.pageY - this.offset.click.top < this.containment[1]) pageY = this.containment[1] + this.offset.click.top;
                    if (event.pageX - this.offset.click.left > this.containment[2]) pageX = this.containment[2] + this.offset.click.left;
                    if (event.pageY - this.offset.click.top > this.containment[3]) pageY = this.containment[3] + this.offset.click.top;
                }
                if (o.grid) {
                    top = this.originalPageY + Math.round((pageY - this.originalPageY) / o.grid[1]) * o.grid[1];
                    pageY = this.containment ? top - this.offset.click.top >= this.containment[1] && top - this.offset.click.top <= this.containment[3] ? top : top - this.offset.click.top >= this.containment[1] ? top - o.grid[1] : top + o.grid[1] : top;
                    left = this.originalPageX + Math.round((pageX - this.originalPageX) / o.grid[0]) * o.grid[0];
                    pageX = this.containment ? left - this.offset.click.left >= this.containment[0] && left - this.offset.click.left <= this.containment[2] ? left : left - this.offset.click.left >= this.containment[0] ? left - o.grid[0] : left + o.grid[0] : left;
                }
            }
            return {
                top: // The absolute mouse position
                pageY - // Click offset (relative to the element)
                this.offset.click.top - // Only for relative positioned nodes: Relative offset from element to offset parent
                this.offset.relative.top - // The offsetParent's offset without borders (offset + border)
                this.offset.parent.top + (this.cssPosition === "fixed" ? -this.scrollParent.scrollTop() : scrollIsRootNode ? 0 : scroll.scrollTop()),
                left: // The absolute mouse position
                pageX - // Click offset (relative to the element)
                this.offset.click.left - // Only for relative positioned nodes: Relative offset from element to offset parent
                this.offset.relative.left - // The offsetParent's offset without borders (offset + border)
                this.offset.parent.left + (this.cssPosition === "fixed" ? -this.scrollParent.scrollLeft() : scrollIsRootNode ? 0 : scroll.scrollLeft())
            };
        },
        _rearrange: function(event, i, a, hardRefresh) {
            a ? a[0].appendChild(this.placeholder[0]) : i.item[0].parentNode.insertBefore(this.placeholder[0], this.direction === "down" ? i.item[0] : i.item[0].nextSibling);
            //Various things done here to improve the performance:
            // 1. we create a setTimeout, that calls refreshPositions
            // 2. on the instance, we have a counter variable, that get's higher after every append
            // 3. on the local scope, we copy the counter variable, and check in the timeout,
            // if it's still the same
            // 4. this lets only the last addition to the timeout stack through
            this.counter = this.counter ? ++this.counter : 1;
            var counter = this.counter;
            this._delay(function() {
                if (counter === this.counter) //Precompute after each DOM insertion, NOT on mousemove
                this.refreshPositions(!hardRefresh);
            });
        },
        _clear: function(event, noPropagation) {
            this.reverting = false;
            // We delay all events that have to be triggered to after the point where the placeholder
            // has been removed and everything else normalized again
            var i, delayedTriggers = [];
            // We first have to update the dom position of the actual currentItem
            // Note: don't do it if the current item is already removed (by a user), or it gets
            // reappended (see #4088)
            if (!this._noFinalSort && this.currentItem.parent().length) this.placeholder.before(this.currentItem);
            this._noFinalSort = null;
            if (this.helper[0] === this.currentItem[0]) {
                for(i in this._storedCSS)if (this._storedCSS[i] === "auto" || this._storedCSS[i] === "static") this._storedCSS[i] = "";
                this.currentItem.css(this._storedCSS);
                this._removeClass(this.currentItem, "ui-sortable-helper");
            } else this.currentItem.show();
            if (this.fromOutside && !noPropagation) delayedTriggers.push(function(event) {
                this._trigger("receive", event, this._uiHash(this.fromOutside));
            });
            if ((this.fromOutside || this.domPosition.prev !== this.currentItem.prev().not(".ui-sortable-helper")[0] || this.domPosition.parent !== this.currentItem.parent()[0]) && !noPropagation) // Trigger update callback if the DOM position has changed
            delayedTriggers.push(function(event) {
                this._trigger("update", event, this._uiHash());
            });
            // Check if the items Container has Changed and trigger appropriate
            // events.
            if (this !== this.currentContainer) {
                if (!noPropagation) {
                    delayedTriggers.push(function(event) {
                        this._trigger("remove", event, this._uiHash());
                    });
                    delayedTriggers.push((function(c) {
                        return function(event) {
                            c._trigger("receive", event, this._uiHash(this));
                        };
                    }).call(this, this.currentContainer));
                    delayedTriggers.push((function(c) {
                        return function(event) {
                            c._trigger("update", event, this._uiHash(this));
                        };
                    }).call(this, this.currentContainer));
                }
            }
            //Post events to containers
            function delayEvent(type, instance, container) {
                return function(event) {
                    container._trigger(type, event, instance._uiHash(instance));
                };
            }
            for(i = this.containers.length - 1; i >= 0; i--){
                if (!noPropagation) delayedTriggers.push(delayEvent("deactivate", this, this.containers[i]));
                if (this.containers[i].containerCache.over) {
                    delayedTriggers.push(delayEvent("out", this, this.containers[i]));
                    this.containers[i].containerCache.over = 0;
                }
            }
            //Do what was originally in plugins
            if (this.storedCursor) {
                this.document.find("body").css("cursor", this.storedCursor);
                this.storedStylesheet.remove();
            }
            if (this._storedOpacity) this.helper.css("opacity", this._storedOpacity);
            if (this._storedZIndex) this.helper.css("zIndex", this._storedZIndex === "auto" ? "" : this._storedZIndex);
            this.dragging = false;
            if (!noPropagation) this._trigger("beforeStop", event, this._uiHash());
            //$(this.placeholder[0]).remove(); would have been the jQuery way - unfortunately,
            // it unbinds ALL events from the original node!
            this.placeholder[0].parentNode.removeChild(this.placeholder[0]);
            if (!this.cancelHelperRemoval) {
                if (this.helper[0] !== this.currentItem[0]) this.helper.remove();
                this.helper = null;
            }
            if (!noPropagation) {
                for(i = 0; i < delayedTriggers.length; i++)// Trigger all delayed events
                delayedTriggers[i].call(this, event);
                this._trigger("stop", event, this._uiHash());
            }
            this.fromOutside = false;
            return !this.cancelHelperRemoval;
        },
        _trigger: function() {
            if ($.Widget.prototype._trigger.apply(this, arguments) === false) this.cancel();
        },
        _uiHash: function(_inst) {
            var inst = _inst || this;
            return {
                helper: inst.helper,
                placeholder: inst.placeholder || $([]),
                position: inst.position,
                originalPosition: inst.originalPosition,
                offset: inst.positionAbs,
                item: inst.currentItem,
                sender: _inst ? _inst.element : null
            };
        }
    });
    /*!
 * jQuery UI Spinner 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Spinner
    //>>group: Widgets
    //>>description: Displays buttons to easily input numbers via the keyboard or mouse.
    //>>docs: http://api.jqueryui.com/spinner/
    //>>demos: http://jqueryui.com/spinner/
    //>>css.structure: ../../themes/base/core.css
    //>>css.structure: ../../themes/base/spinner.css
    //>>css.theme: ../../themes/base/theme.css
    function spinnerModifer(fn) {
        return function() {
            var previous = this.element.val();
            fn.apply(this, arguments);
            this._refresh();
            if (previous !== this.element.val()) this._trigger("change");
        };
    }
    $.widget("ui.spinner", {
        version: "1.12.1",
        defaultElement: "<input>",
        widgetEventPrefix: "spin",
        options: {
            classes: {
                "ui-spinner": "ui-corner-all",
                "ui-spinner-down": "ui-corner-br",
                "ui-spinner-up": "ui-corner-tr"
            },
            culture: null,
            icons: {
                down: "ui-icon-triangle-1-s",
                up: "ui-icon-triangle-1-n"
            },
            incremental: true,
            max: null,
            min: null,
            numberFormat: null,
            page: 10,
            step: 1,
            change: null,
            spin: null,
            start: null,
            stop: null
        },
        _create: function() {
            // handle string values that need to be parsed
            this._setOption("max", this.options.max);
            this._setOption("min", this.options.min);
            this._setOption("step", this.options.step);
            // Only format if there is a value, prevents the field from being marked
            // as invalid in Firefox, see #9573.
            if (this.value() !== "") // Format the value, but don't constrain.
            this._value(this.element.val(), true);
            this._draw();
            this._on(this._events);
            this._refresh();
            // Turning off autocomplete prevents the browser from remembering the
            // value when navigating through history, so we re-enable autocomplete
            // if the page is unloaded before the widget is destroyed. #7790
            this._on(this.window, {
                beforeunload: function() {
                    this.element.removeAttr("autocomplete");
                }
            });
        },
        _getCreateOptions: function() {
            var options = this._super();
            var element = this.element;
            $.each([
                "min",
                "max",
                "step"
            ], function(i, option) {
                var value = element.attr(option);
                if (value != null && value.length) options[option] = value;
            });
            return options;
        },
        _events: {
            keydown: function(event) {
                if (this._start(event) && this._keydown(event)) event.preventDefault();
            },
            keyup: "_stop",
            focus: function() {
                this.previous = this.element.val();
            },
            blur: function(event) {
                if (this.cancelBlur) {
                    delete this.cancelBlur;
                    return;
                }
                this._stop();
                this._refresh();
                if (this.previous !== this.element.val()) this._trigger("change", event);
            },
            mousewheel: function(event, delta) {
                if (!delta) return;
                if (!this.spinning && !this._start(event)) return false;
                this._spin((delta > 0 ? 1 : -1) * this.options.step, event);
                clearTimeout(this.mousewheelTimer);
                this.mousewheelTimer = this._delay(function() {
                    if (this.spinning) this._stop(event);
                }, 100);
                event.preventDefault();
            },
            "mousedown .ui-spinner-button": function(event) {
                var previous;
                // We never want the buttons to have focus; whenever the user is
                // interacting with the spinner, the focus should be on the input.
                // If the input is focused then this.previous is properly set from
                // when the input first received focus. If the input is not focused
                // then we need to set this.previous based on the value before spinning.
                previous = this.element[0] === $.ui.safeActiveElement(this.document[0]) ? this.previous : this.element.val();
                function checkFocus() {
                    var isActive = this.element[0] === $.ui.safeActiveElement(this.document[0]);
                    if (!isActive) {
                        this.element.trigger("focus");
                        this.previous = previous;
                        // support: IE
                        // IE sets focus asynchronously, so we need to check if focus
                        // moved off of the input because the user clicked on the button.
                        this._delay(function() {
                            this.previous = previous;
                        });
                    }
                }
                // Ensure focus is on (or stays on) the text field
                event.preventDefault();
                checkFocus.call(this);
                // Support: IE
                // IE doesn't prevent moving focus even with event.preventDefault()
                // so we set a flag to know when we should ignore the blur event
                // and check (again) if focus moved off of the input.
                this.cancelBlur = true;
                this._delay(function() {
                    delete this.cancelBlur;
                    checkFocus.call(this);
                });
                if (this._start(event) === false) return;
                this._repeat(null, $(event.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, event);
            },
            "mouseup .ui-spinner-button": "_stop",
            "mouseenter .ui-spinner-button": function(event) {
                // button will add ui-state-active if mouse was down while mouseleave and kept down
                if (!$(event.currentTarget).hasClass("ui-state-active")) return;
                if (this._start(event) === false) return false;
                this._repeat(null, $(event.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, event);
            },
            // TODO: do we really want to consider this a stop?
            // shouldn't we just stop the repeater and wait until mouseup before
            // we trigger the stop event?
            "mouseleave .ui-spinner-button": "_stop"
        },
        // Support mobile enhanced option and make backcompat more sane
        _enhance: function() {
            this.uiSpinner = this.element.attr("autocomplete", "off").wrap("<span>").parent()// Add buttons
            .append("<a></a><a></a>");
        },
        _draw: function() {
            this._enhance();
            this._addClass(this.uiSpinner, "ui-spinner", "ui-widget ui-widget-content");
            this._addClass("ui-spinner-input");
            this.element.attr("role", "spinbutton");
            // Button bindings
            this.buttons = this.uiSpinner.children("a").attr("tabIndex", -1).attr("aria-hidden", true).button({
                classes: {
                    "ui-button": ""
                }
            });
            // TODO: Right now button does not support classes this is already updated in button PR
            this._removeClass(this.buttons, "ui-corner-all");
            this._addClass(this.buttons.first(), "ui-spinner-button ui-spinner-up");
            this._addClass(this.buttons.last(), "ui-spinner-button ui-spinner-down");
            this.buttons.first().button({
                "icon": this.options.icons.up,
                "showLabel": false
            });
            this.buttons.last().button({
                "icon": this.options.icons.down,
                "showLabel": false
            });
            // IE 6 doesn't understand height: 50% for the buttons
            // unless the wrapper has an explicit height
            if (this.buttons.height() > Math.ceil(this.uiSpinner.height() * 0.5) && this.uiSpinner.height() > 0) this.uiSpinner.height(this.uiSpinner.height());
        },
        _keydown: function(event) {
            var options = this.options, keyCode = $.ui.keyCode;
            switch(event.keyCode){
                case keyCode.UP:
                    this._repeat(null, 1, event);
                    return true;
                case keyCode.DOWN:
                    this._repeat(null, -1, event);
                    return true;
                case keyCode.PAGE_UP:
                    this._repeat(null, options.page, event);
                    return true;
                case keyCode.PAGE_DOWN:
                    this._repeat(null, -options.page, event);
                    return true;
            }
            return false;
        },
        _start: function(event) {
            if (!this.spinning && this._trigger("start", event) === false) return false;
            if (!this.counter) this.counter = 1;
            this.spinning = true;
            return true;
        },
        _repeat: function(i, steps, event) {
            i = i || 500;
            clearTimeout(this.timer);
            this.timer = this._delay(function() {
                this._repeat(40, steps, event);
            }, i);
            this._spin(steps * this.options.step, event);
        },
        _spin: function(step, event) {
            var value = this.value() || 0;
            if (!this.counter) this.counter = 1;
            value = this._adjustValue(value + step * this._increment(this.counter));
            if (!this.spinning || this._trigger("spin", event, {
                value: value
            }) !== false) {
                this._value(value);
                this.counter++;
            }
        },
        _increment: function(i) {
            var incremental = this.options.incremental;
            if (incremental) return $.isFunction(incremental) ? incremental(i) : Math.floor(i * i * i / 50000 - i * i / 500 + 17 * i / 200 + 1);
            return 1;
        },
        _precision: function() {
            var precision = this._precisionOf(this.options.step);
            if (this.options.min !== null) precision = Math.max(precision, this._precisionOf(this.options.min));
            return precision;
        },
        _precisionOf: function(num) {
            var str = num.toString(), decimal = str.indexOf(".");
            return decimal === -1 ? 0 : str.length - decimal - 1;
        },
        _adjustValue: function(value) {
            var base, aboveMin, options = this.options;
            // Make sure we're at a valid step
            // - find out where we are relative to the base (min or 0)
            base = options.min !== null ? options.min : 0;
            aboveMin = value - base;
            // - round to the nearest step
            aboveMin = Math.round(aboveMin / options.step) * options.step;
            // - rounding is based on 0, so adjust back to our base
            value = base + aboveMin;
            // Fix precision from bad JS floating point math
            value = parseFloat(value.toFixed(this._precision()));
            // Clamp the value
            if (options.max !== null && value > options.max) return options.max;
            if (options.min !== null && value < options.min) return options.min;
            return value;
        },
        _stop: function(event) {
            if (!this.spinning) return;
            clearTimeout(this.timer);
            clearTimeout(this.mousewheelTimer);
            this.counter = 0;
            this.spinning = false;
            this._trigger("stop", event);
        },
        _setOption: function(key, value) {
            var prevValue, first, last;
            if (key === "culture" || key === "numberFormat") {
                prevValue = this._parse(this.element.val());
                this.options[key] = value;
                this.element.val(this._format(prevValue));
                return;
            }
            if (key === "max" || key === "min" || key === "step") {
                if (typeof value === "string") value = this._parse(value);
            }
            if (key === "icons") {
                first = this.buttons.first().find(".ui-icon");
                this._removeClass(first, null, this.options.icons.up);
                this._addClass(first, null, value.up);
                last = this.buttons.last().find(".ui-icon");
                this._removeClass(last, null, this.options.icons.down);
                this._addClass(last, null, value.down);
            }
            this._super(key, value);
        },
        _setOptionDisabled: function(value) {
            this._super(value);
            this._toggleClass(this.uiSpinner, null, "ui-state-disabled", !!value);
            this.element.prop("disabled", !!value);
            this.buttons.button(value ? "disable" : "enable");
        },
        _setOptions: spinnerModifer(function(options) {
            this._super(options);
        }),
        _parse: function(val) {
            if (typeof val === "string" && val !== "") val = window.Globalize && this.options.numberFormat ? Globalize.parseFloat(val, 10, this.options.culture) : +val;
            return val === "" || isNaN(val) ? null : val;
        },
        _format: function(value) {
            if (value === "") return "";
            return window.Globalize && this.options.numberFormat ? Globalize.format(value, this.options.numberFormat, this.options.culture) : value;
        },
        _refresh: function() {
            this.element.attr({
                "aria-valuemin": this.options.min,
                "aria-valuemax": this.options.max,
                // TODO: what should we do with values that can't be parsed?
                "aria-valuenow": this._parse(this.element.val())
            });
        },
        isValid: function() {
            var value = this.value();
            // Null is invalid
            if (value === null) return false;
            // If value gets adjusted, it's invalid
            return value === this._adjustValue(value);
        },
        // Update the value without triggering change
        _value: function(value, allowAny) {
            var parsed;
            if (value !== "") {
                parsed = this._parse(value);
                if (parsed !== null) {
                    if (!allowAny) parsed = this._adjustValue(parsed);
                    value = this._format(parsed);
                }
            }
            this.element.val(value);
            this._refresh();
        },
        _destroy: function() {
            this.element.prop("disabled", false).removeAttr("autocomplete role aria-valuemin aria-valuemax aria-valuenow");
            this.uiSpinner.replaceWith(this.element);
        },
        stepUp: spinnerModifer(function(steps) {
            this._stepUp(steps);
        }),
        _stepUp: function(steps) {
            if (this._start()) {
                this._spin((steps || 1) * this.options.step);
                this._stop();
            }
        },
        stepDown: spinnerModifer(function(steps) {
            this._stepDown(steps);
        }),
        _stepDown: function(steps) {
            if (this._start()) {
                this._spin((steps || 1) * -this.options.step);
                this._stop();
            }
        },
        pageUp: spinnerModifer(function(pages) {
            this._stepUp((pages || 1) * this.options.page);
        }),
        pageDown: spinnerModifer(function(pages) {
            this._stepDown((pages || 1) * this.options.page);
        }),
        value: function(newVal) {
            if (!arguments.length) return this._parse(this.element.val());
            spinnerModifer(this._value).call(this, newVal);
        },
        widget: function() {
            return this.uiSpinner;
        }
    });
    // DEPRECATED
    // TODO: switch return back to widget declaration at top of file when this is removed
    if ($.uiBackCompat !== false) // Backcompat for spinner html extension points
    $.widget("ui.spinner", $.ui.spinner, {
        _enhance: function() {
            this.uiSpinner = this.element.attr("autocomplete", "off").wrap(this._uiSpinnerHtml()).parent()// Add buttons
            .append(this._buttonHtml());
        },
        _uiSpinnerHtml: function() {
            return "<span>";
        },
        _buttonHtml: function() {
            return "<a></a><a></a>";
        }
    });
    var widgetsSpinner = $.ui.spinner;
    /*!
 * jQuery UI Tabs 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Tabs
    //>>group: Widgets
    //>>description: Transforms a set of container elements into a tab structure.
    //>>docs: http://api.jqueryui.com/tabs/
    //>>demos: http://jqueryui.com/tabs/
    //>>css.structure: ../../themes/base/core.css
    //>>css.structure: ../../themes/base/tabs.css
    //>>css.theme: ../../themes/base/theme.css
    $.widget("ui.tabs", {
        version: "1.12.1",
        delay: 300,
        options: {
            active: null,
            classes: {
                "ui-tabs": "ui-corner-all",
                "ui-tabs-nav": "ui-corner-all",
                "ui-tabs-panel": "ui-corner-bottom",
                "ui-tabs-tab": "ui-corner-top"
            },
            collapsible: false,
            event: "click",
            heightStyle: "content",
            hide: null,
            show: null,
            // Callbacks
            activate: null,
            beforeActivate: null,
            beforeLoad: null,
            load: null
        },
        _isLocal: function() {
            var rhash = /#.*$/;
            return function(anchor) {
                var anchorUrl, locationUrl;
                anchorUrl = anchor.href.replace(rhash, "");
                locationUrl = location.href.replace(rhash, "");
                // Decoding may throw an error if the URL isn't UTF-8 (#9518)
                try {
                    anchorUrl = decodeURIComponent(anchorUrl);
                } catch (error) {}
                try {
                    locationUrl = decodeURIComponent(locationUrl);
                } catch (error1) {}
                return anchor.hash.length > 1 && anchorUrl === locationUrl;
            };
        }(),
        _create: function() {
            var that = this, options = this.options;
            this.running = false;
            this._addClass("ui-tabs", "ui-widget ui-widget-content");
            this._toggleClass("ui-tabs-collapsible", null, options.collapsible);
            this._processTabs();
            options.active = this._initialActive();
            // Take disabling tabs via class attribute from HTML
            // into account and update option properly.
            if ($.isArray(options.disabled)) options.disabled = $.unique(options.disabled.concat($.map(this.tabs.filter(".ui-state-disabled"), function(li) {
                return that.tabs.index(li);
            }))).sort();
            // Check for length avoids error when initializing empty list
            if (this.options.active !== false && this.anchors.length) this.active = this._findActive(options.active);
            else this.active = $();
            this._refresh();
            if (this.active.length) this.load(options.active);
        },
        _initialActive: function() {
            var active = this.options.active, collapsible = this.options.collapsible, locationHash = location.hash.substring(1);
            if (active === null) {
                // check the fragment identifier in the URL
                if (locationHash) this.tabs.each(function(i, tab) {
                    if ($(tab).attr("aria-controls") === locationHash) {
                        active = i;
                        return false;
                    }
                });
                // Check for a tab marked active via a class
                if (active === null) active = this.tabs.index(this.tabs.filter(".ui-tabs-active"));
                // No active tab, set to false
                if (active === null || active === -1) active = this.tabs.length ? 0 : false;
            }
            // Handle numbers: negative, out of range
            if (active !== false) {
                active = this.tabs.index(this.tabs.eq(active));
                if (active === -1) active = collapsible ? false : 0;
            }
            // Don't allow collapsible: false and active: false
            if (!collapsible && active === false && this.anchors.length) active = 0;
            return active;
        },
        _getCreateEventData: function() {
            return {
                tab: this.active,
                panel: !this.active.length ? $() : this._getPanelForTab(this.active)
            };
        },
        _tabKeydown: function(event) {
            var focusedTab = $($.ui.safeActiveElement(this.document[0])).closest("li"), selectedIndex = this.tabs.index(focusedTab), goingForward = true;
            if (this._handlePageNav(event)) return;
            switch(event.keyCode){
                case $.ui.keyCode.RIGHT:
                case $.ui.keyCode.DOWN:
                    selectedIndex++;
                    break;
                case $.ui.keyCode.UP:
                case $.ui.keyCode.LEFT:
                    goingForward = false;
                    selectedIndex--;
                    break;
                case $.ui.keyCode.END:
                    selectedIndex = this.anchors.length - 1;
                    break;
                case $.ui.keyCode.HOME:
                    selectedIndex = 0;
                    break;
                case $.ui.keyCode.SPACE:
                    // Activate only, no collapsing
                    event.preventDefault();
                    clearTimeout(this.activating);
                    this._activate(selectedIndex);
                    return;
                case $.ui.keyCode.ENTER:
                    // Toggle (cancel delayed activation, allow collapsing)
                    event.preventDefault();
                    clearTimeout(this.activating);
                    // Determine if we should collapse or activate
                    this._activate(selectedIndex === this.options.active ? false : selectedIndex);
                    return;
                default:
                    return;
            }
            // Focus the appropriate tab, based on which key was pressed
            event.preventDefault();
            clearTimeout(this.activating);
            selectedIndex = this._focusNextTab(selectedIndex, goingForward);
            // Navigating with control/command key will prevent automatic activation
            if (!event.ctrlKey && !event.metaKey) {
                // Update aria-selected immediately so that AT think the tab is already selected.
                // Otherwise AT may confuse the user by stating that they need to activate the tab,
                // but the tab will already be activated by the time the announcement finishes.
                focusedTab.attr("aria-selected", "false");
                this.tabs.eq(selectedIndex).attr("aria-selected", "true");
                this.activating = this._delay(function() {
                    this.option("active", selectedIndex);
                }, this.delay);
            }
        },
        _panelKeydown: function(event) {
            if (this._handlePageNav(event)) return;
            // Ctrl+up moves focus to the current tab
            if (event.ctrlKey && event.keyCode === $.ui.keyCode.UP) {
                event.preventDefault();
                this.active.trigger("focus");
            }
        },
        // Alt+page up/down moves focus to the previous/next tab (and activates)
        _handlePageNav: function(event) {
            if (event.altKey && event.keyCode === $.ui.keyCode.PAGE_UP) {
                this._activate(this._focusNextTab(this.options.active - 1, false));
                return true;
            }
            if (event.altKey && event.keyCode === $.ui.keyCode.PAGE_DOWN) {
                this._activate(this._focusNextTab(this.options.active + 1, true));
                return true;
            }
        },
        _findNextTab: function(index, goingForward) {
            var lastTabIndex = this.tabs.length - 1;
            function constrain() {
                if (index > lastTabIndex) index = 0;
                if (index < 0) index = lastTabIndex;
                return index;
            }
            while($.inArray(constrain(), this.options.disabled) !== -1)index = goingForward ? index + 1 : index - 1;
            return index;
        },
        _focusNextTab: function(index, goingForward) {
            index = this._findNextTab(index, goingForward);
            this.tabs.eq(index).trigger("focus");
            return index;
        },
        _setOption: function(key, value) {
            if (key === "active") {
                // _activate() will handle invalid values and update this.options
                this._activate(value);
                return;
            }
            this._super(key, value);
            if (key === "collapsible") {
                this._toggleClass("ui-tabs-collapsible", null, value);
                // Setting collapsible: false while collapsed; open first panel
                if (!value && this.options.active === false) this._activate(0);
            }
            if (key === "event") this._setupEvents(value);
            if (key === "heightStyle") this._setupHeightStyle(value);
        },
        _sanitizeSelector: function(hash) {
            return hash ? hash.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, "\\$&") : "";
        },
        refresh: function() {
            var options = this.options, lis = this.tablist.children(":has(a[href])");
            // Get disabled tabs from class attribute from HTML
            // this will get converted to a boolean if needed in _refresh()
            options.disabled = $.map(lis.filter(".ui-state-disabled"), function(tab) {
                return lis.index(tab);
            });
            this._processTabs();
            // Was collapsed or no tabs
            if (options.active === false || !this.anchors.length) {
                options.active = false;
                this.active = $();
            // was active, but active tab is gone
            } else if (this.active.length && !$.contains(this.tablist[0], this.active[0])) {
                // all remaining tabs are disabled
                if (this.tabs.length === options.disabled.length) {
                    options.active = false;
                    this.active = $();
                // activate previous tab
                } else this._activate(this._findNextTab(Math.max(0, options.active - 1), false));
            } else // make sure active index is correct
            options.active = this.tabs.index(this.active);
            this._refresh();
        },
        _refresh: function() {
            this._setOptionDisabled(this.options.disabled);
            this._setupEvents(this.options.event);
            this._setupHeightStyle(this.options.heightStyle);
            this.tabs.not(this.active).attr({
                "aria-selected": "false",
                "aria-expanded": "false",
                tabIndex: -1
            });
            this.panels.not(this._getPanelForTab(this.active)).hide().attr({
                "aria-hidden": "true"
            });
            // Make sure one tab is in the tab order
            if (!this.active.length) this.tabs.eq(0).attr("tabIndex", 0);
            else {
                this.active.attr({
                    "aria-selected": "true",
                    "aria-expanded": "true",
                    tabIndex: 0
                });
                this._addClass(this.active, "ui-tabs-active", "ui-state-active");
                this._getPanelForTab(this.active).show().attr({
                    "aria-hidden": "false"
                });
            }
        },
        _processTabs: function() {
            var that = this, prevTabs = this.tabs, prevAnchors = this.anchors, prevPanels = this.panels;
            this.tablist = this._getList().attr("role", "tablist");
            this._addClass(this.tablist, "ui-tabs-nav", "ui-helper-reset ui-helper-clearfix ui-widget-header");
            // Prevent users from focusing disabled tabs via click
            this.tablist.on("mousedown" + this.eventNamespace, "> li", function(event) {
                if ($(this).is(".ui-state-disabled")) event.preventDefault();
            })// Support: IE <9
            // Preventing the default action in mousedown doesn't prevent IE
            // from focusing the element, so if the anchor gets focused, blur.
            // We don't have to worry about focusing the previously focused
            // element since clicking on a non-focusable element should focus
            // the body anyway.
            .on("focus" + this.eventNamespace, ".ui-tabs-anchor", function() {
                if ($(this).closest("li").is(".ui-state-disabled")) this.blur();
            });
            this.tabs = this.tablist.find("> li:has(a[href])").attr({
                role: "tab",
                tabIndex: -1
            });
            this._addClass(this.tabs, "ui-tabs-tab", "ui-state-default");
            this.anchors = this.tabs.map(function() {
                return $("a", this)[0];
            }).attr({
                role: "presentation",
                tabIndex: -1
            });
            this._addClass(this.anchors, "ui-tabs-anchor");
            this.panels = $();
            this.anchors.each(function(i, anchor) {
                var selector, panel, panelId, anchorId = $(anchor).uniqueId().attr("id"), tab = $(anchor).closest("li"), originalAriaControls = tab.attr("aria-controls");
                // Inline tab
                if (that._isLocal(anchor)) {
                    selector = anchor.hash;
                    panelId = selector.substring(1);
                    panel = that.element.find(that._sanitizeSelector(selector));
                // remote tab
                } else {
                    // If the tab doesn't already have aria-controls,
                    // generate an id by using a throw-away element
                    panelId = tab.attr("aria-controls") || $({}).uniqueId()[0].id;
                    selector = "#" + panelId;
                    panel = that.element.find(selector);
                    if (!panel.length) {
                        panel = that._createPanel(panelId);
                        panel.insertAfter(that.panels[i - 1] || that.tablist);
                    }
                    panel.attr("aria-live", "polite");
                }
                if (panel.length) that.panels = that.panels.add(panel);
                if (originalAriaControls) tab.data("ui-tabs-aria-controls", originalAriaControls);
                tab.attr({
                    "aria-controls": panelId,
                    "aria-labelledby": anchorId
                });
                panel.attr("aria-labelledby", anchorId);
            });
            this.panels.attr("role", "tabpanel");
            this._addClass(this.panels, "ui-tabs-panel", "ui-widget-content");
            // Avoid memory leaks (#10056)
            if (prevTabs) {
                this._off(prevTabs.not(this.tabs));
                this._off(prevAnchors.not(this.anchors));
                this._off(prevPanels.not(this.panels));
            }
        },
        // Allow overriding how to find the list for rare usage scenarios (#7715)
        _getList: function() {
            return this.tablist || this.element.find("ol, ul").eq(0);
        },
        _createPanel: function(id) {
            return $("<div>").attr("id", id).data("ui-tabs-destroy", true);
        },
        _setOptionDisabled: function(disabled) {
            var currentItem, li, i;
            if ($.isArray(disabled)) {
                if (!disabled.length) disabled = false;
                else if (disabled.length === this.anchors.length) disabled = true;
            }
            // Disable tabs
            for(i = 0; li = this.tabs[i]; i++){
                currentItem = $(li);
                if (disabled === true || $.inArray(i, disabled) !== -1) {
                    currentItem.attr("aria-disabled", "true");
                    this._addClass(currentItem, null, "ui-state-disabled");
                } else {
                    currentItem.removeAttr("aria-disabled");
                    this._removeClass(currentItem, null, "ui-state-disabled");
                }
            }
            this.options.disabled = disabled;
            this._toggleClass(this.widget(), this.widgetFullName + "-disabled", null, disabled === true);
        },
        _setupEvents: function(event) {
            var events = {};
            if (event) $.each(event.split(" "), function(index, eventName) {
                events[eventName] = "_eventHandler";
            });
            this._off(this.anchors.add(this.tabs).add(this.panels));
            // Always prevent the default action, even when disabled
            this._on(true, this.anchors, {
                click: function(event) {
                    event.preventDefault();
                }
            });
            this._on(this.anchors, events);
            this._on(this.tabs, {
                keydown: "_tabKeydown"
            });
            this._on(this.panels, {
                keydown: "_panelKeydown"
            });
            this._focusable(this.tabs);
            this._hoverable(this.tabs);
        },
        _setupHeightStyle: function(heightStyle) {
            var maxHeight, parent = this.element.parent();
            if (heightStyle === "fill") {
                maxHeight = parent.height();
                maxHeight -= this.element.outerHeight() - this.element.height();
                this.element.siblings(":visible").each(function() {
                    var elem = $(this), position = elem.css("position");
                    if (position === "absolute" || position === "fixed") return;
                    maxHeight -= elem.outerHeight(true);
                });
                this.element.children().not(this.panels).each(function() {
                    maxHeight -= $(this).outerHeight(true);
                });
                this.panels.each(function() {
                    $(this).height(Math.max(0, maxHeight - $(this).innerHeight() + $(this).height()));
                }).css("overflow", "auto");
            } else if (heightStyle === "auto") {
                maxHeight = 0;
                this.panels.each(function() {
                    maxHeight = Math.max(maxHeight, $(this).height("").height());
                }).height(maxHeight);
            }
        },
        _eventHandler: function(event) {
            var options = this.options, active = this.active, anchor = $(event.currentTarget), tab = anchor.closest("li"), clickedIsActive = tab[0] === active[0], collapsing = clickedIsActive && options.collapsible, toShow = collapsing ? $() : this._getPanelForTab(tab), toHide = !active.length ? $() : this._getPanelForTab(active), eventData = {
                oldTab: active,
                oldPanel: toHide,
                newTab: collapsing ? $() : tab,
                newPanel: toShow
            };
            event.preventDefault();
            if (tab.hasClass("ui-state-disabled") || // tab is already loading
            tab.hasClass("ui-tabs-loading") || // can't switch durning an animation
            this.running || clickedIsActive && !options.collapsible || this._trigger("beforeActivate", event, eventData) === false) return;
            options.active = collapsing ? false : this.tabs.index(tab);
            this.active = clickedIsActive ? $() : tab;
            if (this.xhr) this.xhr.abort();
            if (!toHide.length && !toShow.length) $.error("jQuery UI Tabs: Mismatching fragment identifier.");
            if (toShow.length) this.load(this.tabs.index(tab), event);
            this._toggle(event, eventData);
        },
        // Handles show/hide for selecting tabs
        _toggle: function(event, eventData) {
            var that = this, toShow = eventData.newPanel, toHide = eventData.oldPanel;
            this.running = true;
            function complete() {
                that.running = false;
                that._trigger("activate", event, eventData);
            }
            function show() {
                that._addClass(eventData.newTab.closest("li"), "ui-tabs-active", "ui-state-active");
                if (toShow.length && that.options.show) that._show(toShow, that.options.show, complete);
                else {
                    toShow.show();
                    complete();
                }
            }
            // Start out by hiding, then showing, then completing
            if (toHide.length && this.options.hide) this._hide(toHide, this.options.hide, function() {
                that._removeClass(eventData.oldTab.closest("li"), "ui-tabs-active", "ui-state-active");
                show();
            });
            else {
                this._removeClass(eventData.oldTab.closest("li"), "ui-tabs-active", "ui-state-active");
                toHide.hide();
                show();
            }
            toHide.attr("aria-hidden", "true");
            eventData.oldTab.attr({
                "aria-selected": "false",
                "aria-expanded": "false"
            });
            // If we're switching tabs, remove the old tab from the tab order.
            // If we're opening from collapsed state, remove the previous tab from the tab order.
            // If we're collapsing, then keep the collapsing tab in the tab order.
            if (toShow.length && toHide.length) eventData.oldTab.attr("tabIndex", -1);
            else if (toShow.length) this.tabs.filter(function() {
                return $(this).attr("tabIndex") === 0;
            }).attr("tabIndex", -1);
            toShow.attr("aria-hidden", "false");
            eventData.newTab.attr({
                "aria-selected": "true",
                "aria-expanded": "true",
                tabIndex: 0
            });
        },
        _activate: function(index) {
            var anchor, active = this._findActive(index);
            // Trying to activate the already active panel
            if (active[0] === this.active[0]) return;
            // Trying to collapse, simulate a click on the current active header
            if (!active.length) active = this.active;
            anchor = active.find(".ui-tabs-anchor")[0];
            this._eventHandler({
                target: anchor,
                currentTarget: anchor,
                preventDefault: $.noop
            });
        },
        _findActive: function(index) {
            return index === false ? $() : this.tabs.eq(index);
        },
        _getIndex: function(index) {
            // meta-function to give users option to provide a href string instead of a numerical index.
            if (typeof index === "string") index = this.anchors.index(this.anchors.filter("[href$='" + $.ui.escapeSelector(index) + "']"));
            return index;
        },
        _destroy: function() {
            if (this.xhr) this.xhr.abort();
            this.tablist.removeAttr("role").off(this.eventNamespace);
            this.anchors.removeAttr("role tabIndex").removeUniqueId();
            this.tabs.add(this.panels).each(function() {
                if ($.data(this, "ui-tabs-destroy")) $(this).remove();
                else $(this).removeAttr("role tabIndex aria-live aria-busy aria-selected aria-labelledby aria-hidden aria-expanded");
            });
            this.tabs.each(function() {
                var li = $(this), prev = li.data("ui-tabs-aria-controls");
                if (prev) li.attr("aria-controls", prev).removeData("ui-tabs-aria-controls");
                else li.removeAttr("aria-controls");
            });
            this.panels.show();
            if (this.options.heightStyle !== "content") this.panels.css("height", "");
        },
        enable: function(index) {
            var disabled = this.options.disabled;
            if (disabled === false) return;
            if (index === undefined) disabled = false;
            else {
                index = this._getIndex(index);
                if ($.isArray(disabled)) disabled = $.map(disabled, function(num) {
                    return num !== index ? num : null;
                });
                else disabled = $.map(this.tabs, function(li, num) {
                    return num !== index ? num : null;
                });
            }
            this._setOptionDisabled(disabled);
        },
        disable: function(index) {
            var disabled = this.options.disabled;
            if (disabled === true) return;
            if (index === undefined) disabled = true;
            else {
                index = this._getIndex(index);
                if ($.inArray(index, disabled) !== -1) return;
                if ($.isArray(disabled)) disabled = $.merge([
                    index
                ], disabled).sort();
                else disabled = [
                    index
                ];
            }
            this._setOptionDisabled(disabled);
        },
        load: function(index, event) {
            index = this._getIndex(index);
            var that = this, tab = this.tabs.eq(index), anchor = tab.find(".ui-tabs-anchor"), panel = this._getPanelForTab(tab), eventData = {
                tab: tab,
                panel: panel
            }, complete = function(jqXHR, status) {
                if (status === "abort") that.panels.stop(false, true);
                that._removeClass(tab, "ui-tabs-loading");
                panel.removeAttr("aria-busy");
                if (jqXHR === that.xhr) delete that.xhr;
            };
            // Not remote
            if (this._isLocal(anchor[0])) return;
            this.xhr = $.ajax(this._ajaxSettings(anchor, event, eventData));
            // Support: jQuery <1.8
            // jQuery <1.8 returns false if the request is canceled in beforeSend,
            // but as of 1.8, $.ajax() always returns a jqXHR object.
            if (this.xhr && this.xhr.statusText !== "canceled") {
                this._addClass(tab, "ui-tabs-loading");
                panel.attr("aria-busy", "true");
                this.xhr.done(function(response, status, jqXHR) {
                    // support: jQuery <1.8
                    // http://bugs.jquery.com/ticket/11778
                    setTimeout(function() {
                        panel.html(response);
                        that._trigger("load", event, eventData);
                        complete(jqXHR, status);
                    }, 1);
                }).fail(function(jqXHR, status) {
                    // support: jQuery <1.8
                    // http://bugs.jquery.com/ticket/11778
                    setTimeout(function() {
                        complete(jqXHR, status);
                    }, 1);
                });
            }
        },
        _ajaxSettings: function(anchor, event, eventData) {
            var that = this;
            return {
                // Support: IE <11 only
                // Strip any hash that exists to prevent errors with the Ajax request
                url: anchor.attr("href").replace(/#.*$/, ""),
                beforeSend: function(jqXHR, settings) {
                    return that._trigger("beforeLoad", event, $.extend({
                        jqXHR: jqXHR,
                        ajaxSettings: settings
                    }, eventData));
                }
            };
        },
        _getPanelForTab: function(tab) {
            var id = $(tab).attr("aria-controls");
            return this.element.find(this._sanitizeSelector("#" + id));
        }
    });
    // DEPRECATED
    // TODO: Switch return back to widget declaration at top of file when this is removed
    if ($.uiBackCompat !== false) // Backcompat for ui-tab class (now ui-tabs-tab)
    $.widget("ui.tabs", $.ui.tabs, {
        _processTabs: function() {
            this._superApply(arguments);
            this._addClass(this.tabs, "ui-tab");
        }
    });
    var widgetsTabs = $.ui.tabs;
    /*!
 * jQuery UI Tooltip 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */ //>>label: Tooltip
    //>>group: Widgets
    //>>description: Shows additional information for any element on hover or focus.
    //>>docs: http://api.jqueryui.com/tooltip/
    //>>demos: http://jqueryui.com/tooltip/
    //>>css.structure: ../../themes/base/core.css
    //>>css.structure: ../../themes/base/tooltip.css
    //>>css.theme: ../../themes/base/theme.css
    $.widget("ui.tooltip", {
        version: "1.12.1",
        options: {
            classes: {
                "ui-tooltip": "ui-corner-all ui-widget-shadow"
            },
            content: function() {
                // support: IE<9, Opera in jQuery <1.7
                // .text() can't accept undefined, so coerce to a string
                var title = $(this).attr("title") || "";
                // Escape title, since we're going from an attribute to raw HTML
                return $("<a>").text(title).html();
            },
            hide: true,
            // Disabled elements have inconsistent behavior across browsers (#8661)
            items: "[title]:not([disabled])",
            position: {
                my: "left top+15",
                at: "left bottom",
                collision: "flipfit flip"
            },
            show: true,
            track: false,
            // Callbacks
            close: null,
            open: null
        },
        _addDescribedBy: function(elem, id) {
            var describedby = (elem.attr("aria-describedby") || "").split(/\s+/);
            describedby.push(id);
            elem.data("ui-tooltip-id", id).attr("aria-describedby", $.trim(describedby.join(" ")));
        },
        _removeDescribedBy: function(elem) {
            var id = elem.data("ui-tooltip-id"), describedby = (elem.attr("aria-describedby") || "").split(/\s+/), index = $.inArray(id, describedby);
            if (index !== -1) describedby.splice(index, 1);
            elem.removeData("ui-tooltip-id");
            describedby = $.trim(describedby.join(" "));
            if (describedby) elem.attr("aria-describedby", describedby);
            else elem.removeAttr("aria-describedby");
        },
        _create: function() {
            this._on({
                mouseover: "open",
                focusin: "open"
            });
            // IDs of generated tooltips, needed for destroy
            this.tooltips = {};
            // IDs of parent tooltips where we removed the title attribute
            this.parents = {};
            // Append the aria-live region so tooltips announce correctly
            this.liveRegion = $("<div>").attr({
                role: "log",
                "aria-live": "assertive",
                "aria-relevant": "additions"
            }).appendTo(this.document[0].body);
            this._addClass(this.liveRegion, null, "ui-helper-hidden-accessible");
            this.disabledTitles = $([]);
        },
        _setOption: function(key, value) {
            var that = this;
            this._super(key, value);
            if (key === "content") $.each(this.tooltips, function(id, tooltipData) {
                that._updateContent(tooltipData.element);
            });
        },
        _setOptionDisabled: function(value) {
            this[value ? "_disable" : "_enable"]();
        },
        _disable: function() {
            var that = this;
            // Close open tooltips
            $.each(this.tooltips, function(id, tooltipData) {
                var event = $.Event("blur");
                event.target = event.currentTarget = tooltipData.element[0];
                that.close(event, true);
            });
            // Remove title attributes to prevent native tooltips
            this.disabledTitles = this.disabledTitles.add(this.element.find(this.options.items).addBack().filter(function() {
                var element = $(this);
                if (element.is("[title]")) return element.data("ui-tooltip-title", element.attr("title")).removeAttr("title");
            }));
        },
        _enable: function() {
            // restore title attributes
            this.disabledTitles.each(function() {
                var element = $(this);
                if (element.data("ui-tooltip-title")) element.attr("title", element.data("ui-tooltip-title"));
            });
            this.disabledTitles = $([]);
        },
        open: function(event) {
            var that = this, target = $(event ? event.target : this.element)// we need closest here due to mouseover bubbling,
            // but always pointing at the same event target
            .closest(this.options.items);
            // No element to show a tooltip for or the tooltip is already open
            if (!target.length || target.data("ui-tooltip-id")) return;
            if (target.attr("title")) target.data("ui-tooltip-title", target.attr("title"));
            target.data("ui-tooltip-open", true);
            // Kill parent tooltips, custom or native, for hover
            if (event && event.type === "mouseover") target.parents().each(function() {
                var parent = $(this), blurEvent;
                if (parent.data("ui-tooltip-open")) {
                    blurEvent = $.Event("blur");
                    blurEvent.target = blurEvent.currentTarget = this;
                    that.close(blurEvent, true);
                }
                if (parent.attr("title")) {
                    parent.uniqueId();
                    that.parents[this.id] = {
                        element: this,
                        title: parent.attr("title")
                    };
                    parent.attr("title", "");
                }
            });
            this._registerCloseHandlers(event, target);
            this._updateContent(target, event);
        },
        _updateContent: function(target, event) {
            var content, contentOption = this.options.content, that = this, eventType = event ? event.type : null;
            if (typeof contentOption === "string" || contentOption.nodeType || contentOption.jquery) return this._open(event, target, contentOption);
            content = contentOption.call(target[0], function(response) {
                // IE may instantly serve a cached response for ajax requests
                // delay this call to _open so the other call to _open runs first
                that._delay(function() {
                    // Ignore async response if tooltip was closed already
                    if (!target.data("ui-tooltip-open")) return;
                    // JQuery creates a special event for focusin when it doesn't
                    // exist natively. To improve performance, the native event
                    // object is reused and the type is changed. Therefore, we can't
                    // rely on the type being correct after the event finished
                    // bubbling, so we set it back to the previous value. (#8740)
                    if (event) event.type = eventType;
                    this._open(event, target, response);
                });
            });
            if (content) this._open(event, target, content);
        },
        _open: function(event, target, content) {
            var tooltipData, tooltip, delayedShow, a11yContent, positionOption = $.extend({}, this.options.position);
            if (!content) return;
            // Content can be updated multiple times. If the tooltip already
            // exists, then just update the content and bail.
            tooltipData = this._find(target);
            if (tooltipData) {
                tooltipData.tooltip.find(".ui-tooltip-content").html(content);
                return;
            }
            // If we have a title, clear it to prevent the native tooltip
            // we have to check first to avoid defining a title if none exists
            // (we don't want to cause an element to start matching [title])
            //
            // We use removeAttr only for key events, to allow IE to export the correct
            // accessible attributes. For mouse events, set to empty string to avoid
            // native tooltip showing up (happens only when removing inside mouseover).
            if (target.is("[title]")) {
                if (event && event.type === "mouseover") target.attr("title", "");
                else target.removeAttr("title");
            }
            tooltipData = this._tooltip(target);
            tooltip = tooltipData.tooltip;
            this._addDescribedBy(target, tooltip.attr("id"));
            tooltip.find(".ui-tooltip-content").html(content);
            // Support: Voiceover on OS X, JAWS on IE <= 9
            // JAWS announces deletions even when aria-relevant="additions"
            // Voiceover will sometimes re-read the entire log region's contents from the beginning
            this.liveRegion.children().hide();
            a11yContent = $("<div>").html(tooltip.find(".ui-tooltip-content").html());
            a11yContent.removeAttr("name").find("[name]").removeAttr("name");
            a11yContent.removeAttr("id").find("[id]").removeAttr("id");
            a11yContent.appendTo(this.liveRegion);
            function position(event) {
                positionOption.of = event;
                if (tooltip.is(":hidden")) return;
                tooltip.position(positionOption);
            }
            if (this.options.track && event && /^mouse/.test(event.type)) {
                this._on(this.document, {
                    mousemove: position
                });
                // trigger once to override element-relative positioning
                position(event);
            } else tooltip.position($.extend({
                of: target
            }, this.options.position));
            tooltip.hide();
            this._show(tooltip, this.options.show);
            // Handle tracking tooltips that are shown with a delay (#8644). As soon
            // as the tooltip is visible, position the tooltip using the most recent
            // event.
            // Adds the check to add the timers only when both delay and track options are set (#14682)
            if (this.options.track && this.options.show && this.options.show.delay) delayedShow = this.delayedShow = setInterval(function() {
                if (tooltip.is(":visible")) {
                    position(positionOption.of);
                    clearInterval(delayedShow);
                }
            }, $.fx.interval);
            this._trigger("open", event, {
                tooltip: tooltip
            });
        },
        _registerCloseHandlers: function(event, target) {
            var events = {
                keyup: function(event) {
                    if (event.keyCode === $.ui.keyCode.ESCAPE) {
                        var fakeEvent = $.Event(event);
                        fakeEvent.currentTarget = target[0];
                        this.close(fakeEvent, true);
                    }
                }
            };
            // Only bind remove handler for delegated targets. Non-delegated
            // tooltips will handle this in destroy.
            if (target[0] !== this.element[0]) events.remove = function() {
                this._removeTooltip(this._find(target).tooltip);
            };
            if (!event || event.type === "mouseover") events.mouseleave = "close";
            if (!event || event.type === "focusin") events.focusout = "close";
            this._on(true, target, events);
        },
        close: function(event) {
            var tooltip, that = this, target = $(event ? event.currentTarget : this.element), tooltipData = this._find(target);
            // The tooltip may already be closed
            if (!tooltipData) {
                // We set ui-tooltip-open immediately upon open (in open()), but only set the
                // additional data once there's actually content to show (in _open()). So even if the
                // tooltip doesn't have full data, we always remove ui-tooltip-open in case we're in
                // the period between open() and _open().
                target.removeData("ui-tooltip-open");
                return;
            }
            tooltip = tooltipData.tooltip;
            // Disabling closes the tooltip, so we need to track when we're closing
            // to avoid an infinite loop in case the tooltip becomes disabled on close
            if (tooltipData.closing) return;
            // Clear the interval for delayed tracking tooltips
            clearInterval(this.delayedShow);
            // Only set title if we had one before (see comment in _open())
            // If the title attribute has changed since open(), don't restore
            if (target.data("ui-tooltip-title") && !target.attr("title")) target.attr("title", target.data("ui-tooltip-title"));
            this._removeDescribedBy(target);
            tooltipData.hiding = true;
            tooltip.stop(true);
            this._hide(tooltip, this.options.hide, function() {
                that._removeTooltip($(this));
            });
            target.removeData("ui-tooltip-open");
            this._off(target, "mouseleave focusout keyup");
            // Remove 'remove' binding only on delegated targets
            if (target[0] !== this.element[0]) this._off(target, "remove");
            this._off(this.document, "mousemove");
            if (event && event.type === "mouseleave") $.each(this.parents, function(id, parent) {
                $(parent.element).attr("title", parent.title);
                delete that.parents[id];
            });
            tooltipData.closing = true;
            this._trigger("close", event, {
                tooltip: tooltip
            });
            if (!tooltipData.hiding) tooltipData.closing = false;
        },
        _tooltip: function(element) {
            var tooltip = $("<div>").attr("role", "tooltip"), content = $("<div>").appendTo(tooltip), id = tooltip.uniqueId().attr("id");
            this._addClass(content, "ui-tooltip-content");
            this._addClass(tooltip, "ui-tooltip", "ui-widget ui-widget-content");
            tooltip.appendTo(this._appendTo(element));
            return this.tooltips[id] = {
                element: element,
                tooltip: tooltip
            };
        },
        _find: function(target) {
            var id = target.data("ui-tooltip-id");
            return id ? this.tooltips[id] : null;
        },
        _removeTooltip: function(tooltip) {
            tooltip.remove();
            delete this.tooltips[tooltip.attr("id")];
        },
        _appendTo: function(target) {
            var element = target.closest(".ui-front, dialog");
            if (!element.length) element = this.document[0].body;
            return element;
        },
        _destroy: function() {
            var that = this;
            // Close open tooltips
            $.each(this.tooltips, function(id, tooltipData) {
                // Delegate to close method to handle common cleanup
                var event = $.Event("blur"), element = tooltipData.element;
                event.target = event.currentTarget = element[0];
                that.close(event, true);
                // Remove immediately; destroying an open tooltip doesn't use the
                // hide animation
                $("#" + id).remove();
                // Restore the title
                if (element.data("ui-tooltip-title")) {
                    // If the title attribute has changed since open(), don't restore
                    if (!element.attr("title")) element.attr("title", element.data("ui-tooltip-title"));
                    element.removeData("ui-tooltip-title");
                }
            });
            this.liveRegion.remove();
        }
    });
    // DEPRECATED
    // TODO: Switch return back to widget declaration at top of file when this is removed
    if ($.uiBackCompat !== false) // Backcompat for tooltipClass option
    $.widget("ui.tooltip", $.ui.tooltip, {
        options: {
            tooltipClass: null
        },
        _tooltip: function() {
            var tooltipData = this._superApply(arguments);
            if (this.options.tooltipClass) tooltipData.tooltip.addClass(this.options.tooltipClass);
            return tooltipData;
        }
    });
    var widgetsTooltip = $.ui.tooltip;
});


var $dd9da2a550b70d22$exports = {};
"use strict";
var $dd9da2a550b70d22$var$verbs = null;
var $761785402f8060ef$exports = {};
"use strict";
var $761785402f8060ef$var$defaultDiacriticsRemovalMap = [
    {
        base: "A",
        letters: "AⒶＡ\xc0\xc1\xc2ẦẤẪẨ\xc3ĀĂẰẮẴẲȦǠ\xc4ǞẢ\xc5ǺǍȀȂẠẬẶḀĄȺⱯ"
    },
    {
        base: "AA",
        letters: "Ꜳ"
    },
    {
        base: "AE",
        letters: "\xc6ǼǢ"
    },
    {
        base: "AO",
        letters: "Ꜵ"
    },
    {
        base: "AU",
        letters: "Ꜷ"
    },
    {
        base: "AV",
        letters: "ꜸꜺ"
    },
    {
        base: "AY",
        letters: "Ꜽ"
    },
    {
        base: "B",
        letters: "BⒷＢḂḄḆɃƂƁ"
    },
    {
        base: "C",
        letters: "CⒸＣĆĈĊČ\xc7ḈƇȻꜾ"
    },
    {
        base: "D",
        letters: "DⒹＤḊĎḌḐḒḎĐƋƊƉꝹ"
    },
    {
        base: "DZ",
        letters: "ǱǄ"
    },
    {
        base: "Dz",
        letters: "ǲǅ"
    },
    {
        base: "E",
        letters: "EⒺＥ\xc8\xc9\xcaỀẾỄỂẼĒḔḖĔĖ\xcbẺĚȄȆẸỆȨḜĘḘḚƐƎ"
    },
    {
        base: "F",
        letters: "FⒻＦḞƑꝻ"
    },
    {
        base: "G",
        letters: "GⒼＧǴĜḠĞĠǦĢǤƓꞠꝽꝾ"
    },
    {
        base: "H",
        letters: "HⒽＨĤḢḦȞḤḨḪĦⱧⱵꞍ"
    },
    {
        base: "I",
        letters: "IⒾＩ\xcc\xcd\xceĨĪĬİ\xcfḮỈǏȈȊỊĮḬƗ"
    },
    {
        base: "J",
        letters: "JⒿＪĴɈ"
    },
    {
        base: "K",
        letters: "KⓀＫḰǨḲĶḴƘⱩꝀꝂꝄꞢ"
    },
    {
        base: "L",
        letters: "LⓁＬĿĹĽḶḸĻḼḺŁȽⱢⱠꝈꝆꞀ"
    },
    {
        base: "LJ",
        letters: "Ǉ"
    },
    {
        base: "Lj",
        letters: "ǈ"
    },
    {
        base: "M",
        letters: "MⓂＭḾṀṂⱮƜ"
    },
    {
        base: "N",
        letters: "NⓃＮǸŃ\xd1ṄŇṆŅṊṈȠƝꞐꞤ"
    },
    {
        base: "NJ",
        letters: "Ǌ"
    },
    {
        base: "Nj",
        letters: "ǋ"
    },
    {
        base: "O",
        letters: "OⓄＯ\xd2\xd3\xd4ỒỐỖỔ\xd5ṌȬṎŌṐṒŎȮȰ\xd6ȪỎŐǑȌȎƠỜỚỠỞỢỌỘǪǬ\xd8ǾƆƟꝊꝌ"
    },
    {
        base: "OI",
        letters: "Ƣ"
    },
    {
        base: "OO",
        letters: "Ꝏ"
    },
    {
        base: "OU",
        letters: "Ȣ"
    },
    {
        base: "OE",
        letters: "\x8cŒ"
    },
    {
        base: "oe",
        letters: "\x9cœ"
    },
    {
        base: "P",
        letters: "PⓅＰṔṖƤⱣꝐꝒꝔ"
    },
    {
        base: "Q",
        letters: "QⓆＱꝖꝘɊ"
    },
    {
        base: "R",
        letters: "RⓇＲŔṘŘȐȒṚṜŖṞɌⱤꝚꞦꞂ"
    },
    {
        base: "S",
        letters: "SⓈＳẞŚṤŜṠŠṦṢṨȘŞⱾꞨꞄ"
    },
    {
        base: "T",
        letters: "TⓉＴṪŤṬȚŢṰṮŦƬƮȾꞆ"
    },
    {
        base: "TZ",
        letters: "Ꜩ"
    },
    {
        base: "U",
        letters: "UⓊＵ\xd9\xda\xdbŨṸŪṺŬ\xdcǛǗǕǙỦŮŰǓȔȖƯỪỨỮỬỰỤṲŲṶṴɄ"
    },
    {
        base: "V",
        letters: "VⓋＶṼṾƲꝞɅ"
    },
    {
        base: "VY",
        letters: "Ꝡ"
    },
    {
        base: "W",
        letters: "WⓌＷẀẂŴẆẄẈⱲ"
    },
    {
        base: "X",
        letters: "XⓍＸẊẌ"
    },
    {
        base: "Y",
        letters: "YⓎＹỲ\xddŶỸȲẎŸỶỴƳɎỾ"
    },
    {
        base: "Z",
        letters: "ZⓏＺŹẐŻŽẒẔƵȤⱿⱫꝢ"
    },
    {
        base: "a",
        letters: "aⓐａẚ\xe0\xe1\xe2ầấẫẩ\xe3āăằắẵẳȧǡ\xe4ǟả\xe5ǻǎȁȃạậặḁąⱥɐ"
    },
    {
        base: "aa",
        letters: "ꜳ"
    },
    {
        base: "ae",
        letters: "\xe6ǽǣ"
    },
    {
        base: "ao",
        letters: "ꜵ"
    },
    {
        base: "au",
        letters: "ꜷ"
    },
    {
        base: "av",
        letters: "ꜹꜻ"
    },
    {
        base: "ay",
        letters: "ꜽ"
    },
    {
        base: "b",
        letters: "bⓑｂḃḅḇƀƃɓ"
    },
    {
        base: "c",
        letters: "cⓒｃćĉċč\xe7ḉƈȼꜿↄ"
    },
    {
        base: "d",
        letters: "dⓓｄḋďḍḑḓḏđƌɖɗꝺ"
    },
    {
        base: "dz",
        letters: "ǳǆ"
    },
    {
        base: "e",
        letters: "eⓔｅ\xe8\xe9\xeaềếễểẽēḕḗĕė\xebẻěȅȇẹệȩḝęḙḛɇɛǝ"
    },
    {
        base: "f",
        letters: "fⓕｆḟƒꝼ"
    },
    {
        base: "g",
        letters: "gⓖｇǵĝḡğġǧģǥɠꞡᵹꝿ"
    },
    {
        base: "h",
        letters: "hⓗｈĥḣḧȟḥḩḫẖħⱨⱶɥ"
    },
    {
        base: "hv",
        letters: "ƕ"
    },
    {
        base: "i",
        letters: "iⓘｉ\xec\xed\xeeĩīĭ\xefḯỉǐȉȋịįḭɨı"
    },
    {
        base: "j",
        letters: "jⓙｊĵǰɉ"
    },
    {
        base: "k",
        letters: "kⓚｋḱǩḳķḵƙⱪꝁꝃꝅꞣ"
    },
    {
        base: "l",
        letters: "lⓛｌŀĺľḷḹļḽḻſłƚɫⱡꝉꞁꝇ"
    },
    {
        base: "lj",
        letters: "ǉ"
    },
    {
        base: "m",
        letters: "mⓜｍḿṁṃɱɯ"
    },
    {
        base: "n",
        letters: "nⓝｎǹń\xf1ṅňṇņṋṉƞɲŉꞑꞥ"
    },
    {
        base: "nj",
        letters: "ǌ"
    },
    {
        base: "o",
        letters: "oⓞｏ\xf2\xf3\xf4ồốỗổ\xf5ṍȭṏōṑṓŏȯȱ\xf6ȫỏőǒȍȏơờớỡởợọộǫǭ\xf8ǿɔꝋꝍɵ"
    },
    {
        base: "oi",
        letters: "ƣ"
    },
    {
        base: "ou",
        letters: "ȣ"
    },
    {
        base: "oo",
        letters: "ꝏ"
    },
    {
        base: "p",
        letters: "pⓟｐṕṗƥᵽꝑꝓꝕ"
    },
    {
        base: "q",
        letters: "qⓠｑɋꝗꝙ"
    },
    {
        base: "r",
        letters: "rⓡｒŕṙřȑȓṛṝŗṟɍɽꝛꞧꞃ"
    },
    {
        base: "s",
        letters: "sⓢｓ\xdfśṥŝṡšṧṣṩșşȿꞩꞅẛ"
    },
    {
        base: "t",
        letters: "tⓣｔṫẗťṭțţṱṯŧƭʈⱦꞇ"
    },
    {
        base: "tz",
        letters: "ꜩ"
    },
    {
        base: "u",
        letters: "uⓤｕ\xf9\xfa\xfbũṹūṻŭ\xfcǜǘǖǚủůűǔȕȗưừứữửựụṳųṷṵʉ"
    },
    {
        base: "v",
        letters: "vⓥｖṽṿʋꝟʌ"
    },
    {
        base: "vy",
        letters: "ꝡ"
    },
    {
        base: "w",
        letters: "wⓦｗẁẃŵẇẅẘẉⱳ"
    },
    {
        base: "x",
        letters: "xⓧｘẋẍ"
    },
    {
        base: "y",
        letters: "yⓨｙỳ\xfdŷỹȳẏ\xffỷẙỵƴɏỿ"
    },
    {
        base: "z",
        letters: "zⓩｚźẑżžẓẕƶȥɀⱬꝣ"
    }
];
var $761785402f8060ef$var$diacriticsMap = {};
for(var $761785402f8060ef$var$i = 0; $761785402f8060ef$var$i < $761785402f8060ef$var$defaultDiacriticsRemovalMap.length; $761785402f8060ef$var$i++){
    var $761785402f8060ef$var$letters = $761785402f8060ef$var$defaultDiacriticsRemovalMap[$761785402f8060ef$var$i].letters;
    for(var $761785402f8060ef$var$j = 0; $761785402f8060ef$var$j < $761785402f8060ef$var$letters.length; $761785402f8060ef$var$j++)$761785402f8060ef$var$diacriticsMap[$761785402f8060ef$var$letters[$761785402f8060ef$var$j]] = $761785402f8060ef$var$defaultDiacriticsRemovalMap[$761785402f8060ef$var$i].base;
} // "what?" version ... http://jsperf.com/diacritics/12
function $761785402f8060ef$var$removeDiacritics(str) {
    return str.replace(/[^\u0000-\u007E]/g, function(a) {
        return $761785402f8060ef$var$diacriticsMap[a] || a;
    });
}
$761785402f8060ef$exports = $761785402f8060ef$var$removeDiacritics;


var $0531dac77dcef2d4$exports = {};
"use strict";
function $0531dac77dcef2d4$var$ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function $0531dac77dcef2d4$var$_objectSpread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) $0531dac77dcef2d4$var$ownKeys(Object(source), true).forEach(function(key) {
            $0531dac77dcef2d4$var$_defineProperty(target, key, source[key]);
        });
        else if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        else $0531dac77dcef2d4$var$ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function $0531dac77dcef2d4$var$_defineProperty(obj, key, value) {
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function $0531dac77dcef2d4$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) resolve(value);
    else Promise.resolve(value).then(_next, _throw);
}
function $0531dac77dcef2d4$var$_asyncToGenerator(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                $0531dac77dcef2d4$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                $0531dac77dcef2d4$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
var $9fc21a7d52778428$exports = {};
"use strict";
function $9fc21a7d52778428$var$_slicedToArray(arr, i) {
    return $9fc21a7d52778428$var$_arrayWithHoles(arr) || $9fc21a7d52778428$var$_iterableToArrayLimit(arr, i) || $9fc21a7d52778428$var$_unsupportedIterableToArray(arr, i) || $9fc21a7d52778428$var$_nonIterableRest();
}
function $9fc21a7d52778428$var$_nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function $9fc21a7d52778428$var$_unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return $9fc21a7d52778428$var$_arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return $9fc21a7d52778428$var$_arrayLikeToArray(o, minLen);
}
function $9fc21a7d52778428$var$_arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function $9fc21a7d52778428$var$_iterableToArrayLimit(arr, i) {
    if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;
    try {
        for(var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function $9fc21a7d52778428$var$_arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
}
//FLEX
/*

"bot-a,y,ě,u"
"botník-,u,u"
"louč-,e,i"
*/ var $9fc21a7d52778428$var$flex = function flex(s) {
    var f = s.split(",");
    var first = f[0];
    var _first$split = first.split("-"), _first$split2 = $9fc21a7d52778428$var$_slicedToArray(_first$split, 2), core = _first$split2[0], postfix = _first$split2[1]; //console.log(core, postfix);
    var tvary = [];
    tvary[0] = core + postfix;
    tvary[1] = core + f[1];
    tvary[2] = core + f[2];
    if (f.length <= 4) //šestý pád
    tvary[4] = tvary[0];
    else tvary[4] = core + f[4];
    if (f.length <= 3) {
        tvary[3] = tvary[0];
        tvary[4] = tvary[0];
    } else tvary[3] = core + f[3];
     //console.log(tvary);
    return tvary;
};
$9fc21a7d52778428$exports = $9fc21a7d52778428$var$flex;



var $bBTq0 = parcelRequire("bBTq0");
var $0531dac77dcef2d4$var$game = {};
var $0531dac77dcef2d4$var$items;
var $0531dac77dcef2d4$var$rooms;
var $0531dac77dcef2d4$var$disp;
var $0531dac77dcef2d4$var$strings; //init
var $0531dac77dcef2d4$var$init = function init() {
    //inicializace hry
    $0531dac77dcef2d4$var$game.items = {};
    $0531dac77dcef2d4$var$game.itemAttrs = {};
    $0531dac77dcef2d4$var$game.rooms = {};
    $0531dac77dcef2d4$var$game.where = "";
};
var $0531dac77dcef2d4$var$initItems = function initItems(s) {
    var locations = s.reduce(function(prev, curr) {
        prev[curr.id] = curr.where;
        return prev;
    }, {});
    $0531dac77dcef2d4$var$game.items = locations;
    $0531dac77dcef2d4$var$game.itemAttrs = s.reduce(function(prev, curr) {
        prev[curr.id] = curr.attrs;
        prev[curr.id].push("shadow");
        return prev;
    }, {});
    $0531dac77dcef2d4$var$items = s.map(function(q) {
        q.names = $9fc21a7d52778428$exports(q.name);
        q.adjs = q.adj ? $9fc21a7d52778428$exports(q.adj) : [
            "",
            "",
            "",
            "",
            "",
            ""
        ];
        q.hasAttr = function(a) {
            return $0531dac77dcef2d4$var$game.itemAttrs[q.id].indexOf(a) < 0 ? false : true;
        };
        q.isHere = function() {
            return $0531dac77dcef2d4$var$game.items[q.id] === $0531dac77dcef2d4$var$game.where;
        };
        q.isMovable = function() {
            return $0531dac77dcef2d4$var$game.itemAttrs[q.id].indexOf("nonmovable") < 0;
        };
        q.isCrate = function() {
            return $0531dac77dcef2d4$var$game.itemAttrs[q.id].indexOf("crate") < 0 ? false : true;
        };
        q.carry = function() {
            return $0531dac77dcef2d4$var$game.items[q.id] === "*";
        };
        q.addAttr = function(att) {
            if (!q.hasAttr(att)) $0531dac77dcef2d4$var$game.itemAttrs[q.id].push(att);
        };
        q.removeAttr = function(att) {
            console.log("RATT", att, q.id);
            $0531dac77dcef2d4$var$game.itemAttrs[q.id] = $0531dac77dcef2d4$var$game.itemAttrs[q.id].filter(function(q) {
                return q !== att;
            });
        };
        q.fullName = function(flex) {
            return q.adjs[flex] ? q.adjs[flex] + " " + q.names[flex] : q.names[flex];
        };
        return q;
    });
}; //todo roomAttrs
var $0531dac77dcef2d4$var$initRooms = function initRooms(s) {
    $0531dac77dcef2d4$var$rooms = s.map(function(q) {
        q.hasAttr = function(a) {
            return q.attrs.indexOf(a) < 0 ? false : true;
        };
        return q;
    });
    var startRoom = $0531dac77dcef2d4$var$rooms.filter(function(q) {
        return q.hasAttr("start");
    });
    if (startRoom.length == 1) $0531dac77dcef2d4$var$game.where = startRoom[0].id;
    $0531dac77dcef2d4$var$game.rooms = s.reduce(function(prev, curr) {
        prev[curr.id] = {
            looked: false
        };
        return prev;
    }, {});
};
var $0531dac77dcef2d4$var$get = function get() {
    return $0531dac77dcef2d4$var$game;
};
var $0531dac77dcef2d4$var$getItem = function getItem(id) {
    var i = $0531dac77dcef2d4$var$items.filter(function(q) {
        return q.id === id;
    });
    if (i.length !== 1) return null;
    i = i[0];
    i.where = $0531dac77dcef2d4$var$game.items[id];
    return i;
};

var $0531dac77dcef2d4$var$getItemsBy = function getItemsBy(name, flex) {
    var pname = name.split(/\s+/); //console.log(pname);
    var names = $0531dac77dcef2d4$var$items.map(function(q) {
        return {
            name: q.names.map($761785402f8060ef$exports)[flex],
            adj: q.adjs.map($761785402f8060ef$exports)[flex],
            id: q.id
        };
    }).filter(function(q) {
        if (pname.length === 1) {
            if (q.name.indexOf(pname[0]) === 0) return true;
        }
        if (pname.length === 2) {
            if (q.adj.indexOf(pname[0]) === 0 && q.name.indexOf(pname[1]) === 0) return true;
        }
        return false;
    }); //console.log(names);
    return names;
};
var $0531dac77dcef2d4$var$getExactItem = function getExactItem(name, is) {
    var pname = name.split(/\s+/);
    var i = is.filter(function(q) {
        if (pname.length === 1) {
            if (!q.adj && q.name.indexOf(pname[0]) === 0) return true;
        }
        if (q.adj.indexOf(pname[0]) === 0) return true;
        if (pname.length === 2) {
            if (q.adj.indexOf(pname[0]) === 0 && q.name.indexOf(pname[1]) === 0) return true;
        }
        return false;
    });
    return i;
};
var $0531dac77dcef2d4$var$filterItemsBy = function filterItemsBy(is, flt) {
    var out = is.filter(function(q) {
        var id = q.id;
        var cratesHere = $0531dac77dcef2d4$var$items.filter(function(q) {
            return ($0531dac77dcef2d4$var$game.items[q.id] === "*" || $0531dac77dcef2d4$var$game.items[q.id] === $0531dac77dcef2d4$var$game.where) && q.isCrate();
        }).map(function(q) {
            return q.id;
        });
        if ($0531dac77dcef2d4$var$game.itemAttrs[id].indexOf("shadow") >= 0) return false;
        if (flt.player) {
            if ($0531dac77dcef2d4$var$game.items[id] !== "*") return false;
        }
        if (flt.here) {
            if ($0531dac77dcef2d4$var$game.items[id] !== $0531dac77dcef2d4$var$game.where) return false;
        }
        if (flt.near) {
            if ($0531dac77dcef2d4$var$game.items[id] !== $0531dac77dcef2d4$var$game.where && $0531dac77dcef2d4$var$game.items[id] !== "*") {
                if (!cratesHere || cratesHere.length === 0) return false;
                if (cratesHere.indexOf($0531dac77dcef2d4$var$game.items[id]) < 0) return false;
            }
        }
        if (flt.cratedHere) {
            if (!cratesHere || cratesHere.length === 0) return false; //console.log("CRATED HERE", q, cratesHere)
            if (cratesHere.indexOf($0531dac77dcef2d4$var$game.items[id]) < 0) return false; //if (game.items[id] !== game.where && game.items[id] !== "*") return false;
        }
        if (flt.hereOrCrated) {
            if ($0531dac77dcef2d4$var$game.items[id] !== $0531dac77dcef2d4$var$game.where) {
                if (!cratesHere || cratesHere.length === 0) return false;
                if (cratesHere.indexOf($0531dac77dcef2d4$var$game.items[id]) < 0) return false;
            }
        } //console.log("FLT1", q, flt);
        if (flt.movable) {
            //if (!getItem(id).hasAttr("nonmovable")) return false;
            if ($0531dac77dcef2d4$var$game.itemAttrs[id].indexOf("nonmovable") >= 0) return false;
        }
        if (flt.hasAttr) {
            if ($0531dac77dcef2d4$var$game.itemAttrs[id].indexOf(flt.hasAttr) < 0) return false;
        }
        if (flt.hasNotAttr) {
            if ($0531dac77dcef2d4$var$game.itemAttrs[id].indexOf(flt.hasNotAttr) >= 0) return false;
        } //console.log("FLT", q);
        return true;
    }); //console.log("QF", out);
    return out;
};
var $0531dac77dcef2d4$var$getFilteredItemsBy = function getFilteredItemsBy(name, flex, flt) {
    return $0531dac77dcef2d4$var$filterItemsBy($0531dac77dcef2d4$var$getItemsBy(name, flex), flt);
};
var $0531dac77dcef2d4$var$playerListItems = function playerListItems() {
    var l = $0531dac77dcef2d4$var$items.filter(function(q) {
        return $0531dac77dcef2d4$var$game.items[q.id] === "*";
    });
    return l;
};
var $0531dac77dcef2d4$var$roomListItems = function roomListItems() {
    var l = $0531dac77dcef2d4$var$items.filter(function(q) {
        return $0531dac77dcef2d4$var$game.items[q.id] === $0531dac77dcef2d4$var$game.where;
    });
    return l;
};
var $0531dac77dcef2d4$var$crateListItems = function crateListItems(crate) {
    var l = $0531dac77dcef2d4$var$items.filter(function(q) {
        return $0531dac77dcef2d4$var$game.items[q.id] === crate;
    });
    return l;
};
var $0531dac77dcef2d4$var$getRoom = function getRoom(id) {
    var i = $0531dac77dcef2d4$var$rooms.filter(function(q) {
        return q.id === id;
    });
    if (i.length !== 1) return null;
    i = i[0];
    return i;
};
var $0531dac77dcef2d4$var$exitList = function exitList() {
    var room = $0531dac77dcef2d4$var$getRoom($0531dac77dcef2d4$var$game.where);
    if (!room) return null;
    return room.exits;
};
var $0531dac77dcef2d4$var$getExit = function getExit(e) {
    var exit = $761785402f8060ef$exports(e);
    var xl = $0531dac77dcef2d4$var$exitList().filter(function(q) {
        return $761785402f8060ef$exports(q.to).indexOf(exit) >= 0;
    });
    console.log("XL", xl, e);
    return xl;
};
var $0531dac77dcef2d4$var$getExitById = function getExitById(e) {
    var xl = $0531dac77dcef2d4$var$exitList(); //console.log("GEID", xl, e);
    xl = xl.filter(function(q) {
        return q.room === e;
    }); //console.log(xl);
    return xl[0];
};
var $0531dac77dcef2d4$var$itemFullName = function itemFullName(item) {
    //console.log(item);
    return [
        (item.adjs[0] ? item.adjs[0] + " " : "") + item.names[0],
        (item.adjs[1] ? item.adjs[1] + " " : "") + item.names[1],
        (item.adjs[2] ? item.adjs[2] + " " : "") + item.names[2],
        (item.adjs[3] ? item.adjs[3] + " " : "") + item.names[3],
        (item.adjs[4] ? item.adjs[4] + " " : "") + item.names[4]
    ];
};
var $0531dac77dcef2d4$var$sysDecrate = function sysDecrate(p) {
    console.log("DECRATE", p);
    if (p.length === 0) return p; //todo: check
    return [
        p[0]
    ];
}; //
//step ticker
var $0531dac77dcef2d4$var$stepTickers = {};
var $0531dac77dcef2d4$var$stepTickAll = function stepTickAll() {
    console.log("Steptick");
    for(var tickerId in $0531dac77dcef2d4$var$stepTickers){
        var ticker = $0531dac77dcef2d4$var$stepTickers[tickerId];
        console.log("TIK", ticker);
        ticker.remain--;
        if (ticker.remain === 0) //ticker.fn(gameObject);
        {
            if (ticker.whereToGo) {
                $0531dac77dcef2d4$var$cEnter(ticker.whereToGo);
                continue;
            }
        }
    }
}; //nastaví stepTicker, pokud ještě není (!)
var $0531dac77dcef2d4$var$startStepTick = function startStepTick(id, tick) {
    if ($0531dac77dcef2d4$var$stepTickers[id]) return;
    $0531dac77dcef2d4$var$stepTickers[id] = {
        remain: tick
    };
}; //stepTickers, který někam jde
var $0531dac77dcef2d4$var$startStepTickToGo = function startStepTickToGo(id, go, tick) {
    $0531dac77dcef2d4$var$startStepTick(id, tick);
    $0531dac77dcef2d4$var$stepTickers[id].whereToGo = go;
}; //s tick end
var $0531dac77dcef2d4$var$cInventory = function cInventory() {
    var l = $0531dac77dcef2d4$var$playerListItems();
    if (l.length === 0) return $0531dac77dcef2d4$var$strings.NOCARRY; //console.log("INV", l);
    $0531dac77dcef2d4$var$items.filter(function(q) {
        return $0531dac77dcef2d4$var$game.items[q.id] === "*";
    }).map(function(q) {
        return q.removeAttr("shadow");
    });
    return $0531dac77dcef2d4$var$strings.HAVE + $bBTq0.listToText(l.map(function(q) {
        return $0531dac77dcef2d4$var$itemFullName(q)[3];
    }));
};
var $0531dac77dcef2d4$var$cSee = function cSee() {
    var l = $0531dac77dcef2d4$var$roomListItems();
    if (l.length === 0) return "";
    return $0531dac77dcef2d4$var$strings.SEE + $bBTq0.listToText(l.map(function(q) {
        return $0531dac77dcef2d4$var$itemFullName(q)[3];
    }));
};
var $0531dac77dcef2d4$var$cExits = function cExits() {
    var l = $0531dac77dcef2d4$var$exitList();
    if (!l || l.length === 0) return ""; // strings.NOGO;
    return $0531dac77dcef2d4$var$strings.CANGO + $bBTq0.listToText(l.map(function(q) {
        return q.to;
    }), ", nebo ");
};
var $0531dac77dcef2d4$var$cLook = function cLook(onlyFirst) {
    var room = $0531dac77dcef2d4$var$getRoom($0531dac77dcef2d4$var$game.where);
    if (!room) return "";
    console.log("CLOOK", $0531dac77dcef2d4$var$game.where, $0531dac77dcef2d4$var$game.rooms[$0531dac77dcef2d4$var$game.where], room);
    if (onlyFirst && $0531dac77dcef2d4$var$game.rooms[$0531dac77dcef2d4$var$game.where].looked) return "";
    console.log("SHOULD");
    $0531dac77dcef2d4$var$game.rooms[$0531dac77dcef2d4$var$game.where].looked = true;
    if (!room.ext) return "";
    console.log("MUST");
    return room.ext;
};
var $0531dac77dcef2d4$var$cOverlook = function cOverlook() {
    var room = $0531dac77dcef2d4$var$getRoom($0531dac77dcef2d4$var$game.where);
    if (!room) return "";
    return room.desc;
};
var $0531dac77dcef2d4$var$roomEnter = function roomEnter() {
    $0531dac77dcef2d4$var$game.room = $0531dac77dcef2d4$var$getRoom($0531dac77dcef2d4$var$game.where);
    var out = "";
    out += $0531dac77dcef2d4$var$cOverlook();
    var q = $0531dac77dcef2d4$var$cLook(true);
    if (q) out += "\n" + q;
    out += "\n" + $0531dac77dcef2d4$var$cExits();
    q = $0531dac77dcef2d4$var$cSee();
    if (q) out += "\n" + q;
     //atmosphere
    if ($0531dac77dcef2d4$var$game.room.atmosphere) {
        var as = $bBTq0.fixString($0531dac77dcef2d4$var$game.room.atmosphere);
        if (as) out += "\n" + as;
    } //deshadow
    $0531dac77dcef2d4$var$items.filter(function(q) {
        return $0531dac77dcef2d4$var$game.items[q.id] === $0531dac77dcef2d4$var$game.where;
    }).map(function(q) {
        return q.removeAttr("shadow");
    });
    return out;
};
var $0531dac77dcef2d4$var$roomAtmo = function roomAtmo() {
    $0531dac77dcef2d4$var$game.room = $0531dac77dcef2d4$var$getRoom($0531dac77dcef2d4$var$game.where);
    var out = ""; //atmosphere
    if ($0531dac77dcef2d4$var$game.room.atmosphere) {
        var as = $bBTq0.fixString($0531dac77dcef2d4$var$game.room.atmosphere);
        if (as) out += "\n" + as;
    }
    if (out) $0531dac77dcef2d4$var$disp(out);
};
var $0531dac77dcef2d4$var$cEnter = /*#__PURE__*/ function() {
    var _ref = $0531dac77dcef2d4$var$_asyncToGenerator(/*#__PURE__*/ regeneratorRuntime.mark(function _callee(nroom) {
        return regeneratorRuntime.wrap(function _callee$(_context) {
            while(true)switch(_context.prev = _context.next){
                case 0:
                    if (nroom) $0531dac77dcef2d4$var$game.where = nroom;
                    $0531dac77dcef2d4$var$game.room = $0531dac77dcef2d4$var$getRoom($0531dac77dcef2d4$var$game.where);
                    window.doOutput = false;
                    if (!$0531dac77dcef2d4$var$game.room._beforeEnter) {
                        _context.next = 6;
                        break;
                    }
                    _context.next = 6;
                    return $0531dac77dcef2d4$var$game.room._beforeEnter($0531dac77dcef2d4$var$gameObject);
                case 6:
                    _context.next = 8;
                    return $0531dac77dcef2d4$var$disp($0531dac77dcef2d4$var$roomEnter());
                case 8:
                    if (!$0531dac77dcef2d4$var$game.room._enter) {
                        _context.next = 11;
                        break;
                    }
                    _context.next = 11;
                    return $0531dac77dcef2d4$var$game.room._enter($0531dac77dcef2d4$var$gameObject);
                case 11:
                    window.doOutput = true;
                    window.needKey0 = true;
                case 13:
                case "end":
                    return _context.stop();
            }
        }, _callee);
    }));
    return function cEnter(_x) {
        return _ref.apply(this, arguments);
    };
}();

var $hYjWe = parcelRequire("hYjWe");
var $0531dac77dcef2d4$var$condMoveItem = function condMoveItem(itm, from, to) {
    if ($0531dac77dcef2d4$var$game.items[itm] == from) $0531dac77dcef2d4$var$game.items[itm] = to;
}; //todo
var $a6c25c77a05f4ccb$exports = {};
"use strict";
function $a6c25c77a05f4ccb$var$_toConsumableArray(arr) {
    return $a6c25c77a05f4ccb$var$_arrayWithoutHoles(arr) || $a6c25c77a05f4ccb$var$_iterableToArray(arr) || $a6c25c77a05f4ccb$var$_unsupportedIterableToArray(arr) || $a6c25c77a05f4ccb$var$_nonIterableSpread();
}
function $a6c25c77a05f4ccb$var$_nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function $a6c25c77a05f4ccb$var$_unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return $a6c25c77a05f4ccb$var$_arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return $a6c25c77a05f4ccb$var$_arrayLikeToArray(o, minLen);
}
function $a6c25c77a05f4ccb$var$_iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
}
function $a6c25c77a05f4ccb$var$_arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return $a6c25c77a05f4ccb$var$_arrayLikeToArray(arr);
}
function $a6c25c77a05f4ccb$var$_arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function $a6c25c77a05f4ccb$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) resolve(value);
    else Promise.resolve(value).then(_next, _throw);
}
function $a6c25c77a05f4ccb$var$_asyncToGenerator(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                $a6c25c77a05f4ccb$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                $a6c25c77a05f4ccb$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
//var mute = false;
var $a6c25c77a05f4ccb$var$_played = null;
var $a6c25c77a05f4ccb$var$nomusic;
$a6c25c77a05f4ccb$var$nomusic = false; //const nomusic = !true;
// (process.env.NODE_ENV === "development")
var $a6c25c77a05f4ccb$var$stop = function stop(id) {
    $("audio#" + id)[0].pause();
    $("audio#" + id).hide();
    $a6c25c77a05f4ccb$var$_played = null;
};
var $a6c25c77a05f4ccb$var$wait = /*#__PURE__*/ function() {
    var _ref = $a6c25c77a05f4ccb$var$_asyncToGenerator(/*#__PURE__*/ regeneratorRuntime.mark(function _callee(ms) {
        return regeneratorRuntime.wrap(function _callee$(_context) {
            while(true)switch(_context.prev = _context.next){
                case 0:
                    return _context.abrupt("return", new Promise(function(resolve) {
                        setTimeout(resolve, ms);
                    }));
                case 1:
                case "end":
                    return _context.stop();
            }
        }, _callee);
    }));
    return function wait(_x) {
        return _ref.apply(this, arguments);
    };
}();
var $a6c25c77a05f4ccb$var$fade = /*#__PURE__*/ function() {
    var _ref2 = $a6c25c77a05f4ccb$var$_asyncToGenerator(/*#__PURE__*/ regeneratorRuntime.mark(function _callee2() {
        var audio, newvol;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
            while(true)switch(_context2.prev = _context2.next){
                case 0:
                    audio = $("audio#" + $a6c25c77a05f4ccb$var$_played)[0];
                    newvol = audio.volume - 0.1;
                case 2:
                    if (!(newvol > 0)) {
                        _context2.next = 9;
                        break;
                    }
                    audio.volume = newvol;
                    newvol -= 0.1;
                    _context2.next = 7;
                    return $a6c25c77a05f4ccb$var$wait(400);
                case 7:
                    _context2.next = 2;
                    break;
                case 9:
                    audio.pause();
                    $("audio#" + $a6c25c77a05f4ccb$var$_played).hide();
                    $a6c25c77a05f4ccb$var$_played = null;
                    return _context2.abrupt("return");
                case 13:
                case "end":
                    return _context2.stop();
            }
        }, _callee2);
    }));
    return function fade() {
        return _ref2.apply(this, arguments);
    };
}();
var $a6c25c77a05f4ccb$var$doFadeTo = /*#__PURE__*/ function() {
    var _ref3 = $a6c25c77a05f4ccb$var$_asyncToGenerator(/*#__PURE__*/ regeneratorRuntime.mark(function _callee3(newTune) {
        var newAudio, audio, newvol;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
            while(true)switch(_context3.prev = _context3.next){
                case 0:
                    newAudio = $("audio#" + newTune)[0];
                    audio = $("audio#" + $a6c25c77a05f4ccb$var$_played)[0];
                    newAudio.volume = 0;
                    if (!$a6c25c77a05f4ccb$var$nomusic) newAudio.play();
                    newvol = audio.volume - 0.1;
                case 5:
                    if (!(newvol > 0)) {
                        _context3.next = 13;
                        break;
                    }
                    audio.volume = newvol;
                    newvol -= 0.1;
                    newAudio.volume += 0.1;
                    _context3.next = 11;
                    return $a6c25c77a05f4ccb$var$wait(400);
                case 11:
                    _context3.next = 5;
                    break;
                case 13:
                    audio.pause();
                    $("audio#" + $a6c25c77a05f4ccb$var$_played).hide();
                    $("audio#" + newTune).show();
                    $a6c25c77a05f4ccb$var$_played = newTune;
                    $("audio#" + newTune)[0].onended = function() {
                        console.log("ONEND", newTune, $a6c25c77a05f4ccb$var$_playlist);
                        $a6c25c77a05f4ccb$var$nextSong();
                    };
                    return _context3.abrupt("return");
                case 19:
                case "end":
                    return _context3.stop();
            }
        }, _callee3);
    }));
    return function doFadeTo(_x2) {
        return _ref3.apply(this, arguments);
    };
}();
var $a6c25c77a05f4ccb$var$play = function play(id) {
    if ($a6c25c77a05f4ccb$var$_played) $a6c25c77a05f4ccb$var$stop($a6c25c77a05f4ccb$var$_played);
    if (!$a6c25c77a05f4ccb$var$nomusic) $("audio#" + id)[0].play();
    $("audio#" + id)[0].volume = 0.5;
    /*
  $("audio#" + id)[0].onended = function() {
    alert("The audio has ended" + id);
  };
  */ $("audio#" + id).show();
    $a6c25c77a05f4ccb$var$_played = id;
};
var $a6c25c77a05f4ccb$var$_playlist = [];
var $a6c25c77a05f4ccb$var$nextSong = function nextSong() {
    var out = $a6c25c77a05f4ccb$var$_playlist.shift();
    $a6c25c77a05f4ccb$var$_playlist.push(out);
    $a6c25c77a05f4ccb$var$doFadeTo(out);
};
var $a6c25c77a05f4ccb$var$fadeToList = function fadeToList(list) {
    $a6c25c77a05f4ccb$var$_playlist = $a6c25c77a05f4ccb$var$_toConsumableArray(list);
    for(var i = 0; i < 50; i++)$a6c25c77a05f4ccb$var$_playlist = $a6c25c77a05f4ccb$var$_playlist.sort(function() {
        return Math.random() - 0.5;
    });
    console.log("PL", $a6c25c77a05f4ccb$var$_playlist);
    $a6c25c77a05f4ccb$var$nextSong();
};
var $a6c25c77a05f4ccb$var$fadeTo = function fadeTo(id) {
    return $a6c25c77a05f4ccb$var$fadeToList([
        id
    ]);
};
$a6c25c77a05f4ccb$exports = {
    play: $a6c25c77a05f4ccb$var$play,
    stop: $a6c25c77a05f4ccb$var$stop,
    fade: $a6c25c77a05f4ccb$var$fade,
    fadeTo: $a6c25c77a05f4ccb$var$fadeTo,
    fadeToList: $a6c25c77a05f4ccb$var$fadeToList,
    played: function played() {
        return $a6c25c77a05f4ccb$var$_played;
    },
    playlist: function playlist() {
        return $a6c25c77a05f4ccb$var$_playlist;
    }
};


var $e9b5b52babe5ec2d$exports = {};
"use strict";
var $e9b5b52babe5ec2d$var$played = null;
var $e9b5b52babe5ec2d$var$stop = function stop(id) {
    $("video#" + id)[0].pause();
    $("video#" + id).hide();
};
var $e9b5b52babe5ec2d$var$play = function play(id) {
    if ($e9b5b52babe5ec2d$var$played) $e9b5b52babe5ec2d$var$stop($e9b5b52babe5ec2d$var$played);
    $("video#" + id)[0].play();
    $("video#" + id).show();
    $e9b5b52babe5ec2d$var$played = id;
};
$e9b5b52babe5ec2d$exports = {
    play: $e9b5b52babe5ec2d$var$play,
    stop: $e9b5b52babe5ec2d$var$stop
};








var $0531dac77dcef2d4$var$gameObject = {
    init: $0531dac77dcef2d4$var$init,
    initItems: $0531dac77dcef2d4$var$initItems,
    initRooms: $0531dac77dcef2d4$var$initRooms,
    display: function display(f) {
        $0531dac77dcef2d4$var$disp = function disp(t) {
            return f($bBTq0.fixString(t));
        };
    },
    initStrings: function initStrings(f) {
        $0531dac77dcef2d4$var$strings = f;
    },
    get: $0531dac77dcef2d4$var$get,
    getItem: $0531dac77dcef2d4$var$getItem,
    getExactItem: $0531dac77dcef2d4$var$getExactItem,
    getItemsBy: $0531dac77dcef2d4$var$getItemsBy,
    getFilteredItemsBy: $0531dac77dcef2d4$var$getFilteredItemsBy,
    playerListItems: $0531dac77dcef2d4$var$playerListItems,
    itemFullName: $0531dac77dcef2d4$var$itemFullName,
    crateListItems: $0531dac77dcef2d4$var$crateListItems,
    getExit: $0531dac77dcef2d4$var$getExit,
    getExitById: $0531dac77dcef2d4$var$getExitById,
    cInventory: $0531dac77dcef2d4$var$cInventory,
    cSee: $0531dac77dcef2d4$var$cSee,
    cExits: $0531dac77dcef2d4$var$cExits,
    cLook: $0531dac77dcef2d4$var$cLook,
    cOverlook: $0531dac77dcef2d4$var$cOverlook,
    roomEnter: $0531dac77dcef2d4$var$roomEnter,
    roomAtmo: $0531dac77dcef2d4$var$roomAtmo,
    cEnter: $0531dac77dcef2d4$var$cEnter,
    sysDecrate: $0531dac77dcef2d4$var$sysDecrate,
    sysExamine: function sysExamine(pars, cmd) {
        (parcelRequire("4a4Mh"))($0531dac77dcef2d4$var$gameObject, pars, cmd);
    },
    sysGo: function sysGo(pars, cmd) {
        (parcelRequire("iyako"))($0531dac77dcef2d4$var$gameObject, pars, cmd);
    },
    sysItinerary: function sysItinerary(pars, cmd) {
        (parcelRequire("etWIK"))($0531dac77dcef2d4$var$gameObject, pars, cmd);
    },
    sysDrop: function sysDrop(pars, cmd) {
        (parcelRequire("1aR1O"))($0531dac77dcef2d4$var$gameObject, pars, cmd);
    },
    sysTake: function sysTake(pars, cmd) {
        (parcelRequire("hqXv2"))($0531dac77dcef2d4$var$gameObject, pars, cmd);
    },
    condMoveItem: $0531dac77dcef2d4$var$condMoveItem,
    sysRoomLook: function sysRoomLook() {
        return $0531dac77dcef2d4$var$_asyncToGenerator(/*#__PURE__*/ regeneratorRuntime.mark(function _callee2() {
            var out, q;
            return regeneratorRuntime.wrap(function _callee2$(_context2) {
                while(true)switch(_context2.prev = _context2.next){
                    case 0:
                        out = "";
                        out += $0531dac77dcef2d4$var$cOverlook();
                        q = $0531dac77dcef2d4$var$cLook(true);
                        if (q) out += "\n" + q;
                        out += "\n" + $0531dac77dcef2d4$var$cExits();
                        q = $0531dac77dcef2d4$var$cSee();
                        if (q) out += "\n" + q;
                        _context2.next = 9;
                        return $0531dac77dcef2d4$var$disp(out);
                    case 9:
                    case "end":
                        return _context2.stop();
                }
            }, _callee2);
        }))();
    },
    err: function err(s) {
        $hYjWe.printTextRed($bBTq0.fixString(s));
    },
    dropItem: function dropItem(i) {
        $0531dac77dcef2d4$var$game.items[i] = $0531dac77dcef2d4$var$game.where;
    },
    takeItem: function takeItem(i) {
        $0531dac77dcef2d4$var$game.items[i] = "*";
    },
    stepTickAll: $0531dac77dcef2d4$var$stepTickAll,
    startStepTickToGo: $0531dac77dcef2d4$var$startStepTickToGo,
    dispML: function() {
        var _dispML = $0531dac77dcef2d4$var$_asyncToGenerator(/*#__PURE__*/ regeneratorRuntime.mark(function _callee3(t) {
            var n;
            return regeneratorRuntime.wrap(function _callee3$(_context3) {
                while(true)switch(_context3.prev = _context3.next){
                    case 0:
                        t = $bBTq0.fixString(t, $0531dac77dcef2d4$var$gameObject);
                        _context3.next = 3;
                        return $hYjWe.printTextMultiline(t, true);
                    case 3:
                        n = _context3.sent;
                        return _context3.abrupt("return", n);
                    case 5:
                    case "end":
                        return _context3.stop();
                }
            }, _callee3);
        }));
        function dispML(_x2) {
            return _dispML.apply(this, arguments);
        }
        return dispML;
    }(),
    doDisp: function doDisp(s) {
        $0531dac77dcef2d4$var$disp(s);
    },
    cls: function cls() {
        $hYjWe.cls();
    },
    musicPlay: function musicPlay(id) {
        $a6c25c77a05f4ccb$exports.fadeTo(id);
    },
    musicPlayList: function musicPlayList(id) {
        $a6c25c77a05f4ccb$exports.fadeToList(id);
    },
    videoPlay: function videoPlay(id) {
        $e9b5b52babe5ec2d$exports.play(id);
    },
    waitForEnter: function waitForEnter() {
        return $0531dac77dcef2d4$var$_asyncToGenerator(/*#__PURE__*/ regeneratorRuntime.mark(function _callee4() {
            var ww;
            return regeneratorRuntime.wrap(function _callee4$(_context4) {
                while(true)switch(_context4.prev = _context4.next){
                    case 0:
                        $hYjWe.printSameLine("" + $0531dac77dcef2d4$var$strings.GENTER + "          ");
                        $hYjWe.noPrint(true);
                        ww = new Promise(function(r) {
                            window.setEnterWaiter(r);
                        }); //.then(() => console.log("WAIT2"))
                        _context4.next = 5;
                        return ww;
                    case 5:
                        $hYjWe.noPrint(false);
                    case 6:
                    case "end":
                        return _context4.stop();
                }
            }, _callee4);
        }))();
    },
    vars: (parcelRequire("g1Hrr"))
};
var $89faf5e4cd1e14fb$exports = {};
"use strict";
var $89faf5e4cd1e14fb$var$_timers = {};
var $89faf5e4cd1e14fb$var$timer = function timer(id, ticks) {
    var _this = this;
    this.remain = ticks;
    this.id = id; //_timerId++;
    $89faf5e4cd1e14fb$var$_timers[this.id] = {
        tick: function tick() {
            if (_this.remain) _this.remain--;
        },
        state: function state() {
            return _this.remain;
        },
        set: function set(v) {
            _this.remain = v;
        }
    };
    this.state = function() {
        return _this.remain;
    };
    this.remove = function() {
        delete $89faf5e4cd1e14fb$var$_timers[_this.id];
    };
    return this;
};
var $89faf5e4cd1e14fb$var$allTick = function allTick() {
    for(var timer in $89faf5e4cd1e14fb$var$_timers)$89faf5e4cd1e14fb$var$_timers[timer].tick();
};
var $89faf5e4cd1e14fb$var$save = function save() {
    var out = {};
    for(var t in $89faf5e4cd1e14fb$var$_timers)out[t] = $89faf5e4cd1e14fb$var$_timers[t].state();
    return out;
};
var $89faf5e4cd1e14fb$var$load = function load(n) {
    for(var t in n)if ($89faf5e4cd1e14fb$var$_timers[t]) $89faf5e4cd1e14fb$var$_timers[t].set(n[t]);
};
$89faf5e4cd1e14fb$exports = {
    timer: $89faf5e4cd1e14fb$var$timer,
    allTick: $89faf5e4cd1e14fb$var$allTick,
    save: $89faf5e4cd1e14fb$var$save,
    load: $89faf5e4cd1e14fb$var$load
};


var $0531dac77dcef2d4$var$gameSave = function gameSave() {
    var out = $0531dac77dcef2d4$var$_objectSpread({}, $0531dac77dcef2d4$var$game);
    delete out.room;
    out.vars = $0531dac77dcef2d4$var$gameObject.vars.save();
    out.timers = $89faf5e4cd1e14fb$exports.save(); //steptickers
    out.stepTickers = $0531dac77dcef2d4$var$_objectSpread({}, $0531dac77dcef2d4$var$stepTickers);
    out.music = $a6c25c77a05f4ccb$exports.playlist();
    out.timestamp = new Date().getTime();
    return out;
};
var $0531dac77dcef2d4$var$gameLoad = function gameLoad(d) {
    console.log(d);
    $a6c25c77a05f4ccb$exports.fadeToList(d.music);
    $0531dac77dcef2d4$var$game.items = d.items;
    $0531dac77dcef2d4$var$game.itemAttrs = d.itemAttrs;
    $0531dac77dcef2d4$var$game.rooms = d.rooms;
    $0531dac77dcef2d4$var$stepTickers = $0531dac77dcef2d4$var$_objectSpread({}, d.stepTickers);
    $0531dac77dcef2d4$var$gameObject.vars.load(d.vars);
    $89faf5e4cd1e14fb$exports.load(d.timers);
    $0531dac77dcef2d4$var$game.where = d.where;
};

var $3u4fe = parcelRequire("3u4fe");
window.gameSave = function(id, remark) {
    if (id < 1) return null;
    if (id > 9) return null;
    var gid = $0531dac77dcef2d4$var$strings.GID;
    var ls;
    if (!window.localStorage[gid]) ls = [];
    else ls = JSON.parse($3u4fe.decompressFromUTF16(window.localStorage.getItem(gid)));
    var out = $0531dac77dcef2d4$var$gameSave();
    out.remark = remark;
    ls[id - 1] = out;
    window.localStorage.setItem(gid, $3u4fe.compressToUTF16(JSON.stringify(ls)));
    return out;
};
window.gameLoad = function(id) {
    if (id < 1) return null;
    if (id > 9) return null;
    var gid = $0531dac77dcef2d4$var$strings.GID;
    if (!window.localStorage[gid]) return null;
    var ls = JSON.parse($3u4fe.decompressFromUTF16(window.localStorage.getItem(gid)));
    $0531dac77dcef2d4$var$gameLoad(ls[id - 1]);
};
window.gameList = function() {
    var gid = $0531dac77dcef2d4$var$strings.GID;
    if (!window.localStorage[gid]) return null;
    var ls = JSON.parse($3u4fe.decompressFromUTF16(window.localStorage.getItem(gid)));
    var list = ls.map(function(q, idx) {
        return !q ? idx + ". - - - P R \xc1 Z D N \xc9 - - -" : idx + ". " + new Date(q.timestamp).toLocaleString() + " " + q.remark;
    }); //console.log(list)
};
$0531dac77dcef2d4$exports = $0531dac77dcef2d4$var$gameObject;


var $dd9da2a550b70d22$var$verblist = function verblist() {
    return $dd9da2a550b70d22$var$verbs.map(function(q) {
        return q._cmd;
    }).flat();
};
var $dd9da2a550b70d22$var$isSpecial = function isSpecial(s) {
    return "^%$#@({&*".indexOf(s[0]) >= 0;
};
var $dd9da2a550b70d22$var$matchPattern = function matchPattern(pattern, set) {
    var patFix = $761785402f8060ef$exports(pattern).split(/\s+/).filter(function(q) {
        return q.length > 0;
    });
    var p = patFix.map(function(q) {
        return $dd9da2a550b70d22$var$isSpecial(q) ? "(.*?)" : q.substr(0, 3) + "\\S*?";
    }).join(" ");
    p = "^" + p + "$"; // console.log(pattern, set, p);
    var patt = new RegExp(p); //match set
    //console.log(p, set);
    var out = set.match(patt);
    if (!out) return null;
    out.unshift(patFix.filter(function(q) {
        return $dd9da2a550b70d22$var$isSpecial(q);
    }));
    out.unshift(pattern);
    return out;
};
var $dd9da2a550b70d22$var$findVerb = function findVerb(v) {
    return $dd9da2a550b70d22$var$verbs.filter(function(q) {
        return q._cmd.indexOf(v) >= 0;
    });
};
/*
^ - exit
% - item here, not nonmovable
@ - item here (even crated)
$ - item carry
# - here or carry
& - in crate, which is here
* - any string
*/ var $dd9da2a550b70d22$var$special = function special(s) {
    if (s[0] === "*") return [
        "string"
    ];
    if (s[0] === "^") return [
        "exit"
    ];
    if (s[0] === "%") return [
        "item",
        s.length === 1 ? 3 : s[1],
        {
            hereOrCrated: true,
            movable: true
        }
    ];
    if (s[0] === "@") return [
        "item",
        s.length === 1 ? 3 : s[1],
        {
            hereOrCrated: true
        }
    ];
    if (s[0] === "$") return [
        "item",
        s.length === 1 ? 3 : s[1],
        {
            player: true
        }
    ];
    if (s[0] === "&") return [
        "item",
        s.length === 1 ? 4 : s[1],
        {
            cratedHere: true
        }
    ];
    if (s[0] === "#") return [
        "item",
        s.length === 1 ? 3 : s[1],
        {
            near: true
        }
    ];
};
var $dd9da2a550b70d22$var$parse = function parse(text) {
    var s = text.split(/\s+/).filter(function(q) {
        return q.length > 0;
    });
    var v = $dd9da2a550b70d22$var$verblist();
    var setfix = s.map($761785402f8060ef$exports).join(" ");
    var m = v.map(function(q) {
        return $dd9da2a550b70d22$var$matchPattern(q, setfix);
    }).filter(function(q) {
        return q !== null;
    }).map(function(q) {
        var verbN = $dd9da2a550b70d22$var$findVerb(q.shift());
        if (!verbN) return null;
        verbN = verbN[0];
        var verb = {
            id: verbN.id
        };
        verb.pattern = q.shift();
        q.shift();
        verb.params = q;
        return verb;
    }).map(function(q) {
        //      console.log(q.id, q.params, q.pattern);
        for(var i = 0; i < q.pattern.length; i++){
            var test = $dd9da2a550b70d22$var$special(q.pattern[i]);
            var what = test.shift();
            console.log("what,test", what, test);
            switch(what){
                case "item":
                    q.params[i] = $0531dac77dcef2d4$exports.getFilteredItemsBy(q.params[i], parseInt(test[0]), test[1]);
                    break;
                case "exit":
                    q.params[i] = $0531dac77dcef2d4$exports.getExit(q.params[i]);
                    break;
                case "string":
                    q.params[i] = [
                        {
                            room: q.params[i],
                            type: "string"
                        }
                    ];
                    break;
            }
        }
        console.log("QMAP", q);
        return q; //console.log(game.getFilteredItemsBy(q.params[0], 3, { player: true }));
    });
    /*
    .filter(q => {
      var paramCount = q.params.map(q => q.length).reduce((p, c) => p + c, 0);
      console.log("FLT", paramCount, q.params.length)
      return (
          q.params.map(q => q.length).reduce((p, c) => p + c, 0) >=
        q.params.length
      );
    });
    */ //filter alias;
    var alias = [];
    m = m.filter(function(q) {
        var id = q.id;
        if (alias.indexOf(id) < 0) {
            alias.push(id);
            return true;
        }
        return false;
    }); //quick fix
    if (m.length > 1) m = [
        m[0]
    ];
    console.log("Parsed:", m);
    return m;
};
$dd9da2a550b70d22$exports = {
    parse: $dd9da2a550b70d22$var$parse,
    setVerbs: function setVerbs(vs) {
        $dd9da2a550b70d22$var$verbs = vs;
    },
    getVerbById: function getVerbById(vid) {
        var v = $dd9da2a550b70d22$var$verbs.filter(function(q) {
            return q.id == vid;
        });
        if (!v || v.length != 1) return null;
        return v[0];
    }
};


window.parser = $dd9da2a550b70d22$exports; //const texten = require("./bones.js");

var $hYjWe = parcelRequire("hYjWe");
var $b3a691be88096b59$exports = {};
"use strict";
/////editor
//var doCommand = null;
var $b3a691be88096b59$var$enterFlag = false;
window.doOutput = false;

var $hYjWe = parcelRequire("hYjWe");
var $b3a691be88096b59$var$eline = "> ";
var $b3a691be88096b59$var$lastWaiter = null;
var $b3a691be88096b59$var$key = function key(k) {
    //console.log("KK", k);
    if (k == 7) //recall last
    $b3a691be88096b59$var$eline += $b3a691be88096b59$var$lastWaiter;
    else if (k == 13) {
        //if (doOutput && eline.length > 2) display.clearSameLine(eline + " ");
        //if (doOutput) display.clearSameLine(eline + " ");
        $b3a691be88096b59$var$waiter = $b3a691be88096b59$var$eline.substr(2).trim();
        $b3a691be88096b59$var$enterFlag = true;
        if ($b3a691be88096b59$var$waiter) $b3a691be88096b59$var$lastWaiter = $b3a691be88096b59$var$eline.substr(2).trim(); //console.log("WA", waiter);
        //doCommand(eline.substr(2).trim());
        $b3a691be88096b59$var$eline = "> ";
        return;
    } else if (k == 8) {
        if ($b3a691be88096b59$var$eline.length > 2) {
            $b3a691be88096b59$var$eline = $b3a691be88096b59$var$eline.substr(0, $b3a691be88096b59$var$eline.length - 1);
            if (window.doOutput) $hYjWe.printSameLine($b3a691be88096b59$var$eline + "_ ");
        }
    } else if (!k) {
        $b3a691be88096b59$var$eline = "> "; //console.log("KEY 0", window.doOutput, eline);
        if (window.doOutput) $hYjWe.printSameLine($b3a691be88096b59$var$eline + "_ ");
    } else $b3a691be88096b59$var$eline += String.fromCharCode(k);
    if (window.doOutput) $hYjWe.printSameLine($b3a691be88096b59$var$eline + "_");
};
var $b3a691be88096b59$var$waiter = null;
var $b3a691be88096b59$var$waitForLine = function waitForLine() {
    var line = $b3a691be88096b59$var$waiter;
    $b3a691be88096b59$var$waiter = null;
    return line;
};
var $b3a691be88096b59$var$wasEnterPressed = function wasEnterPressed() {
    if ($b3a691be88096b59$var$enterFlag) {
        $b3a691be88096b59$var$enterFlag = false;
        return true;
    }
    return false;
};
$b3a691be88096b59$exports = {
    init: function init() {},
    key: $b3a691be88096b59$var$key,
    doOutput: function doOutput(d) {
        window.doOutput = d;
    },
    waitForLine: $b3a691be88096b59$var$waitForLine,
    wasEnterPressed: $b3a691be88096b59$var$wasEnterPressed
};



$0531dac77dcef2d4$exports.init();
var $b195a2b7559065e7$exports = {};
"use strict";




var $b195a2b7559065e7$var$items = [
    (parcelRequire("fPYfr")),
    (parcelRequire("9DP4p")),
    (parcelRequire("dfbp2")),
    (parcelRequire("fDmRV")),
    {
        id: "louc",
        name: "louč-,e,i",
        desc: "Riadn\xfd smoln\xfd klacek",
        attrs: [],
        where: "r1",
        handlers: []
    },
    {
        id: "bota-rozbita",
        name: "bot-a,y,ě,u",
        adj: "rozbit-\xe1,\xe9,\xe9,ou",
        desc: "Škrp\xe1l",
        attrs: [],
        where: "r1",
        handlers: {
            pick: [
                [
                    [],
                    [
                        [
                            ".",
                            "Smrd\xed"
                        ]
                    ]
                ]
            ]
        }
    },
    {
        id: "obalka",
        name: "ob\xe1l-ka,ky,ce,ku",
        desc: "Dopisn\xed ob\xe1lka. Odesilatel je pr\xe1vn\xed kancel\xe1ř Penn and Graw se s\xeddlem v Denveru, adres\xe1tem je pan William Stewart, 1150 Merridale Road, Denver. Takže to je dopis pro tebe! Ob\xe1lka je otevřen\xe1 a uvnitř - pr\xe1zdn\xe1! Asi tam nějak\xfd dopis byl, ale už nen\xed.",
        attrs: [
            "crate"
        ],
        where: "*",
        handlers: []
    },
    {
        id: "nuz",
        name: "n-ůž,ože,oži",
        desc: "Kudla jako cyp",
        attrs: [],
        where: "*",
        handlers: []
    },
    {
        id: "bota",
        name: "bot-a,y,ě,u",
        desc: "Ad\xfddaska",
        attrs: [],
        where: "r1",
        handlers: []
    },
    {
        id: "botnik",
        name: "botn\xedk-,u,u",
        desc: "Police na boty",
        attrs: [
            "crate",
            "nonmovable"
        ],
        where: "r1",
        _handlers: {
        }
    }
];
$b195a2b7559065e7$exports = $b195a2b7559065e7$var$items;


var $de8d51d87d4a2ebe$exports = {};
"use strict";








var $de8d51d87d4a2ebe$var$rooms = [
    (parcelRequire("wBNOe")),
    (parcelRequire("lkGae")),
    (parcelRequire("4INYI")),
    (parcelRequire("2dAOq")),
    (parcelRequire("1Sb6s")),
    (parcelRequire("jntTG")),
    (parcelRequire("fjCge")),
    (parcelRequire("iEBN6")),
    {
        id: "r2",
        title: "Room2",
        desc: "Stoj\xedš v chodbě",
        exits: [
            {
                to: "do pokoje",
                room: "r1"
            }
        ],
        attrs: [],
        handlers: []
    },
    {
        id: "r3",
        title: "Room3",
        desc: "Stoj\xedš na mal\xe9m balkonu nad rušnou ulic\xed. Z\xe1bradl\xed vypad\xe1 docela zpuchřel\xe9, tak bych se, b\xfdt tebou, neop\xedral...",
        exits: [
            {
                to: "do pokoje",
                room: "r1"
            }
        ],
        attrs: [],
        handlers: []
    }
];
$de8d51d87d4a2ebe$exports = $de8d51d87d4a2ebe$var$rooms;



var $bBTq0 = parcelRequire("bBTq0");
window.lang = $bBTq0;
var $a93fb025362dfda9$exports = {};
"use strict";
function $a93fb025362dfda9$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) resolve(value);
    else Promise.resolve(value).then(_next, _throw);
}
function $a93fb025362dfda9$var$_asyncToGenerator(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                $a93fb025362dfda9$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                $a93fb025362dfda9$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}

var $dI8Uu = parcelRequire("dI8Uu");
var $a93fb025362dfda9$var$commands = [
    {
        id: "csave",
        _cmd: [
            "save *",
            "ulož *"
        ],
        _run: function _run(p, g) {
            return $a93fb025362dfda9$var$_asyncToGenerator(/*#__PURE__*/ regeneratorRuntime.mark(function _callee() {
                var saveId;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while(true)switch(_context.prev = _context.next){
                        case 0:
                            //g.sysGo(p, n);
                            saveId = parseInt(p[0][0]);
                            if (!window.gameSave(saveId, p[0].substr(1).trim())) {
                                _context.next = 6;
                                break;
                            }
                            _context.next = 4;
                            return g.doDisp("Hra uložena na pozici " + saveId + ".");
                        case 4:
                            _context.next = 8;
                            break;
                        case 6:
                            _context.next = 8;
                            return g.doDisp("Mus\xedš zadat č\xedslo pozice (1-9), do jak\xe9 chceš hru uložit.");
                        case 8:
                        case "end":
                            return _context.stop();
                    }
                }, _callee);
            }))();
        },
        _noparam: "Mus\xedš zadat č\xedslo pozice (1-9), do jak\xe9 chceš hru uložit."
    },
    {
        id: "cload",
        _cmd: [
            "load *",
            "načti *"
        ],
        _run: function _run(p, g) {
            return $a93fb025362dfda9$var$_asyncToGenerator(/*#__PURE__*/ regeneratorRuntime.mark(function _callee2() {
                var saveId;
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                    while(true)switch(_context2.prev = _context2.next){
                        case 0:
                            //g.sysGo(p, n);
                            saveId = parseInt(p[0][0]);
                            window.gameLoad(saveId);
                            _context2.next = 4;
                            return g.doDisp("Načetl jsi hru z pozice " + saveId + ".");
                        case 4:
                            _context2.next = 6;
                            return g.waitForEnter();
                        case 6:
                            g.cls();
                            g.cEnter();
                        case 8:
                        case "end":
                            return _context2.stop();
                    }
                }, _callee2);
            }))();
        },
        _noparam: "Mus\xedš zadat č\xedslo pozice (1-9), z jak\xe9 chceš hru nač\xedst. Zkus př\xedkaz LIST, vyp\xedše se seznam uložen\xfdch her."
    },
    {
        id: "cgo",
        _cmd: [
            "jdi ^",
            "běž ^",
            "ut\xedkej ^",
            "j ^"
        ],
        _run: function _run(p, g, n) {
            g.sysGo(p, n);
        },
        _noparam: "[S[Nev\xedm přesně kam j\xedt][Asi nech\xe1pu, kam chceš j\xedt][Tam nemůžeš j\xedt]]."
    },
    {
        id: "chelp",
        _cmd: [
            "pomoc",
            "help",
            "h"
        ],
        _run: function _run(p, g) {
            return $a93fb025362dfda9$var$_asyncToGenerator(/*#__PURE__*/ regeneratorRuntime.mark(function _callee3() {
                return regeneratorRuntime.wrap(function _callee3$(_context3) {
                    while(true)switch(_context3.prev = _context3.next){
                        case 0:
                            _context3.next = 2;
                            return g.dispML($dI8Uu.HELP);
                        case 2:
                        case "end":
                            return _context3.stop();
                    }
                }, _callee3);
            }))();
        }
    },
    {
        id: "citinerary",
        _cmd: [
            "i"
        ],
        _run: function _run(p, g) {
            g.sysItinerary(p);
        }
    },
    {
        id: "croom",
        _cmd: [
            "rozhl\xe9dni",
            "r"
        ],
        _run: function _run(p, g) {
            g.sysRoomLook(p);
        }
    },
    {
        id: "ctake",
        _cmd: [
            "zvedni %3",
            "seber %3",
            "vezmi %3"
        ],
        _noparam: "[S[Nevid\xedš nic takov\xe9ho!][Nev\xedm, co chceš vz\xedt.][Vzal bych, ale kde nic nen\xed...]]",
        _nonmovable: "[S[^3 s sebou neponeseš.][^3 nemůžeš moc dobře vz\xedt.][Snaž\xedš se vz\xedt #3, ale nejde to.]]",
        /*
  _does:
    'C $: . "Vždyť máš $ u sebe!";B ###' +
    'NH $:. "V téhle místnosti nevidíš nic takového!";B###' +
    'AS $ nonmovable: . "Nemůžeš zvednout $";B###' +
    'AR $ nonmovable: P $; . "Zvedl jsi $."',
    */ _run: function _run(p, g, c) {
            g.sysTake(p, c);
        }
    },
    {
        id: "cinsert",
        _cmd: [
            "dej $3 do (crate1)"
        ] //_does: 'NC $: . "Nemůžeš položit $!";B###' + 'I $ #; . "Dal jsi $ do #G"'
    },
    {
        id: "cdrop",
        _cmd: [
            "polož $3"
        ],
        //_does: 'D $;. "Položil jsi $"',
        _noparam: "[S[Nem\xe1š nic takov\xe9ho u sebe!][Nev\xedm, co chceš položit.]]",
        _run: function _run(p, g) {
            g.sysDrop(p);
        }
    },
    {
        id: "cuseon",
        _cmd: [
            "použij #3 na #3"
        ]
    },
    {
        id: "cuse",
        _cmd: [
            "použij #3"
        ] //does: [[[], [[".", "Použil jsi $"], ["U", "$", "Nic se nestalo"]]]]
    },
    {
        id: "cwait",
        _cmd: [
            "čekej",
            "počkej",
            "nic nedělej"
        ],
        _run: function _run(p, g) {
            return $a93fb025362dfda9$var$_asyncToGenerator(/*#__PURE__*/ regeneratorRuntime.mark(function _callee4() {
                return regeneratorRuntime.wrap(function _callee4$(_context4) {
                    while(true)switch(_context4.prev = _context4.next){
                        case 0:
                            _context4.next = 2;
                            return g.doDisp("Ček\xe1š...");
                        case 2:
                        case "end":
                            return _context4.stop();
                    }
                }, _callee4);
            }))();
        } //does: [[[], [[".", "Použil jsi $"], ["U", "$", "Nic se nestalo"]]]]
    },
    {
        id: "cexamin",
        _cmd: [
            "prozkoumej &3 v #4"
        ],
        //_prerun(g) {},
        //_postrun(g) {},
        _run: function _run(p, g) {
            //console.log("cExamIn", this, p);
            p = g.sysDecrate(p);
            if (!p || p.length === 0) g.err("Jsi si jist, že to tam je?");
            else g.sysExamine(p);
        }
    },
    {
        id: "cexam",
        _cmd: [
            "prozkoumej #3",
            "prohl\xe9dni #"
        ],
        //_prerun(g) {},
        //_postrun(g) {},
        _run: function _run(p, g) {
            g.sysExamine(p);
        },
        _noparam: "[S[Nev\xedm přesně co zkoumat.][Asi nech\xe1pu, co chceš zkoumat.][Nerozum\xedm. Co chceš vykoumat?]]"
    },
    {
        id: "csitinto",
        _cmd: [
            "sedni si do #1",
            "sedni do #1",
            "vlez do #1"
        ],
        _nothing: "[S[Jsou věci, do kter\xfdch si nesedneš.][Nevejdeš se tam.][To nepůjde, je mi l\xedto]]",
        _noparam: "[S[Do čeho že chceš sedat?][Nem\xed mi jasn\xe9, kam si sednout.]]"
    }
];
$a93fb025362dfda9$exports = $a93fb025362dfda9$var$commands;


$dd9da2a550b70d22$exports.setVerbs($a93fb025362dfda9$exports);
$0531dac77dcef2d4$exports.initItems($b195a2b7559065e7$exports);
$0531dac77dcef2d4$exports.initRooms($de8d51d87d4a2ebe$exports); //game.initCommands(verbs);

$0531dac77dcef2d4$exports.initStrings((parcelRequire("dI8Uu")));
$0531dac77dcef2d4$exports.display(function(t) {
    console.log(t);
    $hYjWe.printTextMultiline(t);
});
var $56f13ab1b15a6a96$exports = {};
"use strict";
function $56f13ab1b15a6a96$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) resolve(value);
    else Promise.resolve(value).then(_next, _throw);
}
function $56f13ab1b15a6a96$var$_asyncToGenerator(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                $56f13ab1b15a6a96$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                $56f13ab1b15a6a96$var$asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}

var $hYjWe = parcelRequire("hYjWe");





var $56f13ab1b15a6a96$var$introTimer;


var $56f13ab1b15a6a96$var$FSM = {
    state: "begin",
    newState: function newState(ns) {
        $56f13ab1b15a6a96$var$FSM.state = ns;
        $56f13ab1b15a6a96$var$FSM.states[$56f13ab1b15a6a96$var$FSM.state].start();
    },
    states: {
        begin: {
            //state 0
            start: function start() {
                //if (!nomusic) $("#music1")[0].play();
                //$("#music1")[0].volume = 0.4;
                //$("#music2")[0].pause();
                $a6c25c77a05f4ccb$exports.play("music1");
                $e9b5b52babe5ec2d$exports.play("video1"); //$("#video1")[0].play();
                //$("#video2")[0].pause();
                //$("#video1").show();
                //$("#video2").hide();
                $("#maingame").hide();
                $56f13ab1b15a6a96$var$introTimer = new $89faf5e4cd1e14fb$exports.timer("intro", 300);
            },
            test: function test() {
                if ($56f13ab1b15a6a96$var$introTimer.state() === 0) {
                    $56f13ab1b15a6a96$var$introTimer.remove();
                    $56f13ab1b15a6a96$var$FSM.newState("titlescreen");
                }
            }
        },
        titlescreen: {
            start: function start() {
                $("#introscreen").show();
            },
            test: function test() {
                if ($b3a691be88096b59$exports.wasEnterPressed()) $56f13ab1b15a6a96$var$FSM.newState("intro0");
            }
        },
        intro0: {
            done: false,
            start: function start() {
                var _this = this;
                return $56f13ab1b15a6a96$var$_asyncToGenerator(/*#__PURE__*/ regeneratorRuntime.mark(function _callee() {
                    var intro0, intro1;
                    return regeneratorRuntime.wrap(function _callee$(_context) {
                        while(true)switch(_context.prev = _context.next){
                            case 0:
                                //console.log(this)
                                $("#introscreen").hide();
                                $("#maingame").show();
                                $b3a691be88096b59$exports.doOutput(true);
                                intro0 = (parcelRequire("9ce6j"));
                                intro1 = (parcelRequire("5iI5r"));
                                _context.next = 7;
                                return $hYjWe.printTextMultiline(intro0, true);
                            case 7:
                                $hYjWe.cls(); //n = await music.fade();
                                //music.play("openscore");
                                $e9b5b52babe5ec2d$exports.play("openscore");
                                _context.next = 11;
                                return $hYjWe.printTextMultiline(intro1, true);
                            case 11:
                                $a6c25c77a05f4ccb$exports.fadeTo("openscore"); //console.log("DONEPRINT")
                                _this.done = true;
                                $b3a691be88096b59$exports.wasEnterPressed();
                            case 14:
                            case "end":
                                return _context.stop();
                        }
                    }, _callee);
                }))();
            },
            test: function test() {
                if (this.done) {
                    $hYjWe.cls();
                    $56f13ab1b15a6a96$var$FSM.newState("game0");
                }
            }
        },
        game0: {
            start: function start() {
                $("#introscreen").hide();
                $("#maingame").show(); //if (!nomusic) $("#music2")[0].play();
                //$("#music2")[0].volume = 0.4
                //$("#music1")[0].pause();
                //$("#music2").show();
                //$("#music1").hide();
                //music.play("music2")
                //$("#video2").show();
                //$("#video1").hide();
                //$("#video2")[0].play();
                //$("#video1")[0].pause();
                //music.play("music2")
                //video.play("video2")
                $b3a691be88096b59$exports.doOutput(true);
                $0531dac77dcef2d4$exports.cEnter();
                $b3a691be88096b59$exports.key(0);
            },
            test: function test() {}
        }
    }
};
$56f13ab1b15a6a96$exports = $56f13ab1b15a6a96$var$FSM;



window.needKey0 = false;
var $604c126a1467fc28$var$doCommand = /*#__PURE__*/ function() {
    var _ref = $604c126a1467fc28$var$_asyncToGenerator(/*#__PURE__*/ regeneratorRuntime.mark(function _callee(command) {
        var i, par, il, ww, q, dir, iteml, wwq, itms, parnames, syscmd, didSomething, itm;
        return regeneratorRuntime.wrap(function _callee$(_context) {
            while(true)switch(_context.prev = _context.next){
                case 0:
                    if (!command.params) {
                        _context.next = 33;
                        break;
                    }
                    i = 0;
                case 2:
                    if (!(i < command.params.length)) {
                        _context.next = 33;
                        break;
                    }
                    par = command.params[i];
                    if (!(par.length > 1)) {
                        _context.next = 30;
                        break;
                    }
                    if (!(command.pattern[i] === "^")) {
                        _context.next = 19;
                        break;
                    }
                    il = par.map(function(q) {
                        return q.to;
                    });
                    $hYjWe.printText("M\xe1š na mysli " + $bBTq0.listToQuestion(il));
                    ww = new Promise(function(r) {
                        $604c126a1467fc28$var$lineWaiter = r;
                    });
                    /*
                                      lineWaiter = c => {
                                        console.log("Waiter", c);
                                      };
                                      */ _context.next = 11;
                    return ww;
                case 11:
                    q = _context.sent;
                    dir = $0531dac77dcef2d4$exports.getExit(q);
                    console.log("Směr", dir);
                    if (!(dir.length != 1)) {
                        _context.next = 17;
                        break;
                    }
                    $hYjWe.printTextRed("Mus\xedš b\xfdt asi ještě přesnějš\xed, st\xe1le nerozum\xedm.");
                    return _context.abrupt("return");
                case 17:
                    command.params[i] = dir;
                    return _context.abrupt("continue", 30);
                case 19:
                    //nejednoznačný předmět
                    iteml = par.map(function(i) {
                        var q = $0531dac77dcef2d4$exports.getItem(i.id);
                        return q.adjs[3] ? q.adjs[3] + " " + q.names[3] : q.names[3];
                    });
                    $hYjWe.printText("M\xe1š na mysli " + $bBTq0.listToQuestion(iteml));
                    wwq = new Promise(function(r) {
                        $604c126a1467fc28$var$lineWaiter = r;
                    });
                    _context.next = 24;
                    return wwq;
                case 24:
                    q = _context.sent;
                    itms = $0531dac77dcef2d4$exports.getExactItem(q, par);
                    if (!(itms.length != 1)) {
                        _context.next = 29;
                        break;
                    }
                    $hYjWe.printTextRed("Mus\xedš b\xfdt asi ještě přesnějš\xed, st\xe1le nerozum\xedm.");
                    return _context.abrupt("return");
                case 29:
                    command.params[i] = itms;
                case 30:
                    i++;
                    _context.next = 2;
                    break;
                case 33:
                    console.log("COMMAND", command.id, command.params);
                    parnames = [];
                    if (command.params.length && command.params[0].length) parnames = command.params.map(function(q) {
                        return q[0].id ? q[0].id : q[0].room;
                    });
                    syscmd = $dd9da2a550b70d22$exports.getVerbById(command.id); //už ho mám!
                    didSomething = false;
                    if (syscmd._prerun) syscmd._prerun(parnames, $0531dac77dcef2d4$exports, syscmd);
                    if (!(syscmd._noparam && parnames.length === 0)) {
                        _context.next = 43;
                        break;
                    }
                    $hYjWe.printTextRed($bBTq0.fixString(syscmd._noparam));
                    _context.next = 50;
                    break;
                case 43:
                    if (!syscmd._run) {
                        _context.next = 47;
                        break;
                    }
                    _context.next = 46;
                    return syscmd._run(parnames, $0531dac77dcef2d4$exports, syscmd);
                case 46:
                    didSomething = true;
                case 47:
                    //vypiš předmětově specifickou akci
                    if (command.params[0] && command.params[0].length === 1 && command.params[0][0].id) {
                        //console.log("Q1", command.params[0], parnames);
                        itm = $0531dac77dcef2d4$exports.getItem(command.params[0][0].id); //var itm = var itm = game.getItem(pars[0]);command.params[0][0];
                        //předmětově specifický string
                        if (itm.strings && itm.strings[command.id]) $hYjWe.printTextYellow(itm.strings[command.id]);
                        if (itm.actions && itm.actions[command.id]) {
                            itm.actions[command.id](itm, $0531dac77dcef2d4$exports, syscmd);
                            didSomething = true;
                        }
                    }
                    if (syscmd._postrun) syscmd._postrun(parnames, $0531dac77dcef2d4$exports, syscmd);
                    if (!didSomething && syscmd._nothing) $hYjWe.printTextRed($bBTq0.fixString(syscmd._nothing));
                case 50:
                    $0531dac77dcef2d4$exports.roomAtmo();
                    window.needKey0 = true; //keyboard.key(0);
                case 52:
                case "end":
                    return _context.stop();
            }
        }, _callee);
    }));
    return function doCommand(_x) {
        return _ref.apply(this, arguments);
    };
}(); //var tick = 0;
//var gameTime = 0;
//var enterFlag = false;
var $604c126a1467fc28$var$lineWaiter = null;
var $604c126a1467fc28$var$enterWaiter = null;
var $604c126a1467fc28$var$endless = function endless() {
    //command handling
    if (window.needKey0) {
        $b3a691be88096b59$exports.key(0);
        window.needKey0 = false;
    }
    var cmd;
    cmd = $b3a691be88096b59$exports.waitForLine();
    if (cmd !== null) {
        if ($604c126a1467fc28$var$enterWaiter) {
            var q = $604c126a1467fc28$var$enterWaiter;
            $604c126a1467fc28$var$enterWaiter = null;
            q(cmd);
        } else if (cmd) {
            console.log("RES", cmd);
            if ($604c126a1467fc28$var$lineWaiter) {
                var lw = $604c126a1467fc28$var$lineWaiter;
                $604c126a1467fc28$var$lineWaiter = null;
                lw(cmd);
            } else {
                var pc = $dd9da2a550b70d22$exports.parse(cmd);
                console.log(pc);
                if (pc.length > 1) $hYjWe.printTextRed("Nejsem si \xfaplně jist, co m\xe1m udělat");
                else if (pc.length < 1) $hYjWe.printTextRed("To nech\xe1pu, promiň");
                else {
                    //Máme command!
                    var command = pc[0];
                    $604c126a1467fc28$var$doCommand(command).then(function() {
                        console.log("THEN");
                        $0531dac77dcef2d4$exports.stepTickAll();
                    });
                }
            }
        }
        $b3a691be88096b59$exports.key(0);
    } //var kbd = keyboard.getInput();
    //console.log(kbd)
    //state machine handling
    $56f13ab1b15a6a96$exports.states[$56f13ab1b15a6a96$exports.state].test(); //timer handling
    /*
    tick++;
    gameTime++;
    if (tick > 60) {
        tick = 0;
        //console.log("TICK");
    }
    */ $89faf5e4cd1e14fb$exports.allTick();
    requestAnimationFrame(endless);
};
var $604c126a1467fc28$var$onLoad = function onLoad() {
    $hYjWe.init(); //FSM.newState("begin");
    //FSM.newState("titlescreen");
    //FSM.newState("intro0");
    //requestAnimationFrame(endless);
    $(".masthead div#btn a").click($604c126a1467fc28$var$onStartPressed);
    $(".masthead div#btn").show();
};
var $604c126a1467fc28$var$onStartPressed = function onStartPressed() {
    $("#video1").show();
    $(".masthead div#btn").hide();
    $56f13ab1b15a6a96$exports.newState("begin"); //FSM.newState("titlescreen");
    $56f13ab1b15a6a96$exports.newState("intro0");
    requestAnimationFrame($604c126a1467fc28$var$endless);
};
$(window).bind("load", function() {
    //changeRoom();
    $b3a691be88096b59$exports.key(0);
}); //-----
$("body").bind("keydown", function(e) {
    //console.log("KD", e.keyCode);
    if (e.keyCode == 8) {
        e.preventDefault();
        $b3a691be88096b59$exports.key(8);
        return e;
    } else if (e.keyCode == 38) {
        e.preventDefault();
        $b3a691be88096b59$exports.key(7);
        return e;
    }
    return e;
});
$("body").bind("keypress", function(e) {
    e.preventDefault();
    $b3a691be88096b59$exports.key(e.charCode);
    return false;
});
$(document).ready($604c126a1467fc28$var$onLoad);
window.setLineWaiter = function(lw) {
    return $604c126a1467fc28$var$lineWaiter = lw;
};
window.setEnterWaiter = function(lw) {
    return $604c126a1467fc28$var$enterWaiter = lw;
};


